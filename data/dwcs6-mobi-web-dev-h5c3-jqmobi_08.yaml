- en: Chapter 8. Enhancing Mobile Sites
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。增强移动站点
- en: In [Chapter 7](ch07.html "Chapter 7. Creating Mobile Pages with jQuery Mobile"),
    *Creating Mobile Pages with jQuery Mobile*, we walked through the basic steps
    required to build a jQuery Mobile site in Dreamweaver. In the process, we focused
    on adding page-elements to a jQuery Mobile HTML page, and building listviews which
    links to those pages.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第7章](ch07.html“第7章。使用jQuery Mobile创建移动页面”)中，*使用jQuery Mobile创建移动页面*，我们介绍了在Dreamweaver中构建jQuery
    Mobile站点所需的基本步骤。在这个过程中，我们专注于向jQuery Mobile HTML页面添加页面元素，并构建链接到这些页面的列表视图。
- en: 'In doing that, we covered the bulk of what is required to build a functional
    jQuery Mobile site. You can browse the Web with a mobile device and find many
    professional-level sites that rely simply on jQuery Mobile page elements and listviews.
    In fact, it might be worthwhile to whip out your closest mobile device and browse
    a bit. You''ll appreciate how essential basic listviews are to jQuery Mobile sites—similar
    to the one shown in the following screenshot for the San Francisco Chronicle:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，我们涵盖了构建功能性jQuery Mobile站点所需的大部分内容。您可以使用移动设备浏览网络，并找到许多仅依赖于jQuery Mobile页面元素和列表视图的专业级站点。事实上，拿出您最近的移动设备稍微浏览一下可能是值得的。您会欣赏到基本列表视图对于jQuery
    Mobile站点的重要性——类似于以下截图中为旧金山纪事报所示的内容：
- en: '![Enhancing Mobile Sites](img/4742_08_01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![增强移动站点](img/4742_08_01.jpg)'
- en: However, there's more to mobile page design than just listviews! There are alternate
    ways to provide page content in a mobile device. You can design pages with grids
    (columns). And you can employ expanding blocks that allow users to expand or contract
    vertically to present content.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，移动页面设计不仅仅是列表视图！还有其他方式可以在移动设备上提供页面内容。您可以设计带有网格（列）的页面。您还可以使用可扩展块，允许用户在垂直方向展开或收缩以呈现内容。
- en: If you do a bit more mobile browsing, you'll find sites that have some form
    of expandable/collapsible elements. For example, Google News uses expandable elements
    to show (or, by default, hide) **More sources** for news stories.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您进行更多的移动浏览，您会发现一些具有可展开/可折叠元素形式的站点。例如，Google新闻使用可展开元素来显示（或者默认情况下隐藏）新闻故事的**更多来源**。
- en: '![Enhancing Mobile Sites](img/4742_08_02.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![增强移动站点](img/4742_08_02.jpg)'
- en: Moreover, there is the challenge of building really inviting and accessible
    forms for mobile devices that do not drive the users nuts by forcing them to attempt
    to click on a tiny checkbox or radio button with their fingernails, but instead
    provide nice, big form elements that are easy to tap in a smart phone.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个挑战，即为移动设备构建真正具有吸引力和可访问性的表单，而不会让用户因为被迫尝试用指甲点击微小的复选框或单选按钮而感到烦恼，而是提供易于在智能手机上轻击的漂亮大表单元素。
- en: 'We''ll address and solve all these challenges in this chapter; the following
    are the topics covered in this chapter:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章中解决所有这些挑战；以下是本章涵盖的主题：
- en: Inserting layout grids
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插入布局网格
- en: Designing mobile pages with collapsible blocks
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用可折叠块设计移动页面
- en: Adding jQuery form objects
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加jQuery表单对象
- en: Building a web-friendly site with collapsible blocks and a form
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用可折叠块和表单构建一个网页友好的站点
- en: Inserting a layout grid
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 插入布局网格
- en: Columns play a diminished role in pages designed for mobile devices, compared
    to pages designed for full-sized viewports.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 与为全尺寸视口设计的页面相比，为移动设备设计的页面中，列的作用要小得多。
- en: If you allowed lines of text to flow across the entire width of a 960-pixel
    page in a full-sized browser, the text would be hard to read. For that reason,
    and others, two or three column layouts are generally the best way to make content
    inviting and accessible in a full-sized browsing environment.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您允许文本行横跨全尺寸浏览器中960像素页面的整个宽度，那么文本将很难阅读。因此，出于这个原因和其他原因，两列或三列布局通常是在全尺寸浏览环境中使内容具有吸引力和可访问性的最佳方式。
- en: 'However, mobile viewports are different: there isn''t much width in the viewport
    of a mobile phone, and even tablets have a narrower screen than laptops. Nevertheless,
    there are plenty of situations where it is useful to design page content in columns
    in mobile-friendly pages. When that is appropriate, the tool is jQuery grids.
    Grids allow you to easily build columns into jQuery Mobile page elements, as shown
    in the following menu:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，移动视口是不同的：移动电话的视口宽度不大，甚至平板电脑的屏幕也比笔记本电脑窄。尽管如此，在移动友好的页面中，设计页面内容以列的方式是非常有用的。在这种情况下，工具就是jQuery网格。网格允许您轻松地将列构建到jQuery
    Mobile页面元素中，如下菜单所示：
- en: '![Inserting a layout grid](img/4742_08_03.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![插入布局网格](img/4742_08_03.jpg)'
- en: Tables, div tags, and grids
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表格、div标签和网格
- en: For eons, or at least several years, tables were a staple of web design page
    layout technique. Creative designers adapted something that was intended to present
    rows and columns of data to lay out content on web pages.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 长久以来，或者至少有几年，表格是网页设计页面布局技术的主要内容。有创意的设计师改编了原本用于呈现数据行和列的东西，以在网页上布局内容。
- en: We are past that era now. Instead, full-sized web pages are designed with `div`
    tags, something we explored in the first chapter, particularly in the *Using ID
    and class div styles for Layout* section. Tables are still around; older websites
    that were designed with tables are still online. Today, tables have been superseded
    by ID and class `div` tag styles because the latter is a much more powerful and
    flexible way to design pages.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经过了那个时代。相反，全尺寸网页是使用`div`标签设计的，这是我们在第一章中探讨过的内容，特别是在*使用ID和类div样式进行布局*部分。表格仍然存在；使用表格设计的旧网站仍然在线。如今，表格已经被ID和类`div`标签样式取代，因为后者是设计页面的更强大和灵活的方式。
- en: 'But what about *using* tables for mobile page layout? Well, that technique
    is supported within jQuery Mobile. But we don''t use tables for page layout in
    jQuery pages for the same reasons we don''t use them in full-sized page design:
    tables are clunky, hard to apply global styles to, hard to update, and don''t
    support a lot of the attributes that `div` containers support. That said, table
    design enthusiasts take note: you *can* design page layouts with tables in jQuery
    Mobile pages.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 那么在移动页面布局中*使用*表格呢？嗯，这种技术在jQuery Mobile中得到支持。但我们在jQuery页面中不使用表格进行页面布局的原因与我们在全尺寸页面设计中不使用它们的原因相同：表格笨重，难以应用全局样式，难以更新，并且不支持许多`div`容器支持的属性。也就是说，表格设计爱好者请注意：您*可以*在jQuery
    Mobile页面中使用表格设计页面布局。
- en: Can we use the good ol' `<div>` tags that served us so well in HTML to lay out
    page content in columns? Yes. But we have to do that in a special way that enables
    the formatting, animation, and interactivity that is so valuable in jQuery Mobile.
    I'll walk you through how that works in a moment.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能否使用在HTML中为我们服务良好的老式`<div>`标签来布置页面内容的列？是的。但我们必须以一种特殊的方式来实现这一点，以便实现jQuery Mobile中如此宝贵的格式化、动画和交互。我将在一会儿向您介绍这是如何工作的。
- en: The most flexible, standard way to design column layouts within a jQuery Mobile
    page is grids. The standard jQuery Mobile CSS file comes with a set of defined
    class styles called `ui-block` and `ui-grid`. Moreover, there are two sets of
    these styles, one for two-column layouts, and one for three-column layouts.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在jQuery Mobile页面中设计列布局的最灵活、标准的方法是使用网格。标准的jQuery Mobile CSS文件带有一组定义的类样式，称为`ui-block`和`ui-grid`。此外，这些样式有两套，一套用于两列布局，另一套用于三列布局。
- en: Dreamweaver's jQuery Mobile widget for a layout grid does a very complete job
    of generating a wide variety of grids, with definable numbers of columns and rows.
    Remember, as you generate such grids, that you are designing for a relatively
    narrow viewport of one kind or another, and will want to be restrained in how
    many columns (and rows) you generate.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver的jQuery Mobile小部件为布局网格的生成做了非常完整的工作，可以生成各种各样的网格，包括可定义的列数和行数。请记住，当您生成这样的网格时，您是在为某种相对较窄的视口设计，并且希望在生成多少列（和行）时保持克制。
- en: But as you are vigilant from a design standpoint, you can relax on the technical
    front. The Layout Grid widget in Dreamweaver strings together fairly complex combinations
    of the 2-column and 3-column grids to create grids of four, five, six, and more
    columns if you choose to do that.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，从设计的角度来看，您可以在技术上放松。Dreamweaver中的布局网格小部件将相当复杂的2列和3列网格组合在一起，以创建四、五、六列甚至更多列的网格，如果您选择这样做的话。
- en: Generating grids in Dreamweaver
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Dreamweaver中生成网格
- en: To generate a layout grid in a jQuery Mobile page, make sure your insertion
    point is in the `content` div data-role. An easy way to do that is to select the
    text content in the code that is generated when you create a jQuery Mobile "page",
    and replace it with the layout grid, or, to place your cursor after the "content"
    placeholder text.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要在jQuery Mobile页面中生成布局网格，请确保插入点位于`content` div data-role中。一种简单的方法是选择在创建jQuery
    Mobile“页面”时生成的代码中的文本内容，并将其替换为布局网格，或者将光标放在“content”占位符文本之后。
- en: 'Then, navigate to **Insert** | **jQuery Mobile** | **Layout Grid**. The **jQuery
    Mobile Layout Grid** dialog opens. Select a value for **Rows** and **Columns**,
    and click on **OK** to generate the layout grid, as shown in the following screenshot:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，导航到**插入** | **jQuery Mobile** | **布局网格**。**jQuery Mobile布局网格**对话框将打开。选择**行**和**列**的值，然后单击**确定**生成布局网格，如下截图所示：
- en: '![Generating grids in Dreamweaver](img/4742_08_04.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![在Dreamweaver中生成网格](img/4742_08_04.jpg)'
- en: Defining styles for layout grids
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义布局网格的样式
- en: The jQuery Mobile layout grid uses two class styles—`.ui-grid-a` for two-column
    grids, and `.ui-grid-b` for three-column grids. Dreamweaver, as noted, will generate
    HTML from the **jQuery Mobile Layout Grid** dialog to string together combinations
    of these two grids to create grids of more than three columns. In addition, Dreamweaver
    generates `.ui-grid` class styles to define specific block formatting.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile布局网格使用两个类样式——`.ui-grid-a`用于两列网格，`.ui-grid-b`用于三列网格。如前所述，Dreamweaver将从**jQuery
    Mobile布局网格**对话框中生成HTML，以串联这两个网格的组合，以创建超过三列的网格。此外，Dreamweaver生成`.ui-grid`类样式来定义特定的块格式。
- en: The point? By editing the properties of `.ui-grid` and `.ui-block` class styles,
    you can define the appearance of elements of layout grids.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 重点是？通过编辑`.ui-grid`和`.ui-block`类样式的属性，您可以定义布局网格元素的外观。
- en: As you do that, avoid editing the widths of the grids or blocks, or the margins,
    padding or border dimensions. Changing those properties will destroy the generated
    layout. But you can edit background colors and images.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这样做时，避免编辑网格或块的宽度，或者边距、填充或边框尺寸。更改这些属性将破坏生成的布局。但您可以编辑背景颜色和图像。
- en: Let's walk through how this works.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这是如何工作的。
- en: The `.ui-grid-a` class style (that defines a two-column grid) can be overridden
    by a local grid class style. But that doesn't open up much formatting freedom
    since the grid itself only provides the frame that holds the two blocks.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`.ui-grid-a`类样式（定义了两列网格）可以被本地网格类样式覆盖。但这并不会带来太多的格式自由度，因为网格本身只提供了容纳两个块的框架。'
- en: 'To edit the look of the left block (`.ui-block-a`), follow the ensuing steps:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要编辑左侧块（`.ui-block-a`）的外观，请按以下步骤操作：
- en: Click on the **New CSS Styles Rule** icon at the bottom of the **CSS Styles**
    panel. The **New CSS Rule** dialog box opens.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**CSS样式**面板底部的**新CSS样式规则**图标。**新CSS规则**对话框将打开。
- en: In the **Selector Type** field, select **Class**.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择器类型**字段中，选择**类**。
- en: In the **Selector Name** field, enter `.ui-block-a`.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择器名称**字段中，输入`.ui-block-a`。
- en: In the **Rule Definition** box, select **This Document Only**.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**规则定义**框中，选择**仅限本文档**。
- en: Click **OK** to close the dialog and open the **CSS Rule Definition** dialog
    for `.ui-block-a`.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**确定**关闭对话框，并打开`.ui-block-a`的**CSS规则定义**对话框。
- en: In the **background-color** field, select a background color.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**背景颜色**字段中，选择一个背景颜色。
- en: In the box category, enter a height of `200px`.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在框类别中，输入高度为`200px`。
- en: Click **OK** to define this local style, and examine the effect in **Live**
    view, and examine the style rules in the **CSS Styles** panel.![Defining styles
    for layout grids](img/4742_08_05.jpg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**确定**以定义此本地样式，并在**实时**视图中检查效果，并在**CSS样式**面板中检查样式规则。![为布局网格定义样式](img/4742_08_05.jpg)
- en: Let's reflect on what happened and why. Many of the attributes of the `.ui-block-a`
    class style, that defines how left-side blocks within a grid appear, are fixed
    as part of the universal CSS style file that makes jQuery Mobile tick. We linked
    to that CSS file when we generated a new jQuery Mobile page in Dreamweaver.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们反思发生了什么以及为什么。`.ui-block-a`类样式的许多属性，定义了网格内左侧块的外观，作为使jQuery Mobile正常工作的通用CSS样式文件的一部分是固定的。在Dreamweaver中生成新的jQuery
    Mobile页面时，我们链接到了该CSS文件。
- en: But some of the attributes of a `.ui-block-a` class style are not fixed, and
    we can edit them in a local stylesheet that applies only to our HTML page. `background-color`
    and `height` are two attributes we can edit, and provide a way to customize the
    look of our grid.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，`.ui-block-a`类样式的一些属性是不固定的，我们可以在仅适用于我们的HTML页面的本地样式表中进行编辑。`background-color`和`height`是我们可以编辑的两个属性，并提供了一种自定义网格外观的方法。
- en: 'And, of course, we can apply the same technique to the `.ui-block-b` class
    style that defines how right-side blocks within a grid appear, as illustrated
    in the following screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们也可以将相同的技术应用于定义了网格内右侧块的`.ui-block-b`类样式，如下面的屏幕截图所示：
- en: '![Defining styles for layout grids](img/4742_08_06.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![为布局网格定义样式](img/4742_08_06.jpg)'
- en: How useful are formatted grids and blocks? They are increasingly useful because
    more and more mobile designers are using jQuery Mobile to create multicolumn layouts
    for larger and medium-sized tablets. Blocks and grids provide the most flexible,
    accessible tool for column layout in jQuery Mobile.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 格式化的网格和块有多大用处？它们越来越有用，因为越来越多的移动设计师正在使用jQuery Mobile为较大和中等尺寸的平板电脑创建多列布局。块和网格为jQuery
    Mobile中的列布局提供了最灵活、可访问的工具。
- en: Designing Mobile Pages with collapsible blocks
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用可折叠块设计移动页面
- en: jQuery Mobile Pages, as you saw in the previous chapter ([Chapter 7](ch07.html
    "Chapter 7. Creating Mobile Pages with jQuery Mobile"), *Creating Mobile Pages
    with jQuery Mobile*), essentially create the sense of navigating from page to
    page while relying on JavaScript to actually display and hide content. That is
    the technique used in the sample jQuery Mobile pages generated in Dreamweaver.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在上一章中看到的（[第7章](ch07.html "第7章。使用jQuery Mobile创建移动页面")，“使用jQuery Mobile创建移动页面”），jQuery
    Mobile页面本质上创建了从页面到页面的导航感觉，同时依靠JavaScript来实际显示和隐藏内容。这是在Dreamweaver中生成的示例jQuery
    Mobile页面中使用的技术。
- en: 'Expandable blocks operate on a similar principle—they show and hide content
    depending on a visitor''s actions. However, with expandable panels, this takes
    place through sections of the page appearing to expand or shrink, as shown in
    the following screenshot:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 可展开块的操作原理类似——根据访问者的操作来显示和隐藏内容。但是，对于可展开面板，这是通过页面的部分出现扩展或收缩来实现的，如下面的屏幕截图所示：
- en: '![Designing Mobile Pages with collapsible blocks](img/4742_08_07.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![使用可折叠块设计移动页面](img/4742_08_07.jpg)'
- en: Building a collapsible block
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建可折叠块
- en: Like other jQuery Mobile objects, collapsible panels require the framework of
    a jQuery Mobile page. So, the first step in implementing them is to create a jQuery
    Mobile page. This is done by navigating to **Insert** | **jQuery Mobile** | **Page**.
    We explored the options for generating jQuery Mobile pages in Dreamweaver a bit
    earlier in this chapter.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他jQuery Mobile对象一样，可折叠面板需要一个jQuery Mobile页面的框架。因此，实现它们的第一步是创建一个jQuery Mobile页面。这可以通过导航到**插入**
    | **jQuery Mobile** | **页面**来完成。我们在本章的前面已经探讨了在Dreamweaver中生成jQuery Mobile页面的选项。
- en: Once you have generated a jQuery Mobile page, with all the attendant CSS and
    JavaScript files that make that work, you can define collapsible panels. Do that
    by setting your insertion point (this is most easily done in the code side of
    **Split** view, with **Live** view turned on).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您生成了一个带有所有相关CSS和JavaScript文件的jQuery Mobile页面，您就可以定义可折叠面板。通过设置插入点来完成这一操作（在**分割**视图的代码侧上最容易完成，同时打开**实时**视图）。
- en: Navigate to **Insert** | **jQuery Mobile** | **Collapsible Block**. No dialog
    appears, Dreamweaver generates HTML code for a set of three collapsible sections
    within the block.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 导航到**插入** | **jQuery Mobile** | **可折叠块**。没有对话框出现，Dreamweaver会为块内的三个可折叠部分生成HTML代码。
- en: After our experience with starter pages in the previous chapter, and layout
    grids in this chapter, and with your background in HTML5 and CSS, you've already
    conceptualized how we will customize the look and content of the collapsible block.
    We can change the formatting through a combination of using the jQuery Mobile
    data-theme sets and customized CSS styles. Moreover, we can change the content
    by editing the HTML, including by copying and pasting collapsible blocks.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章的起始页面和本章的布局网格以及您在HTML5和CSS方面的背景知识的基础上，您已经构思了我们将如何自定义可折叠块的外观和内容。我们可以通过使用jQuery
    Mobile数据主题集和自定义CSS样式的组合来更改格式。此外，我们可以通过编辑HTML来更改内容，包括复制和粘贴可折叠块。
- en: Changing the initial block state
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改初始块状态
- en: 'The entire set of collapsible elements is defined by the following code:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 整个可折叠元素集由以下代码定义：
- en: '[PRE0]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In between the opening and closing `<div>` tags for a collapsible set are individual
    expandable blocks:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在可折叠集的开头和结尾的`<div>`标签之间是单独的可展开块：
- en: '[PRE1]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Or blocks that are expanded by default when the page opens, defined with this
    code:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 或者默认情况下在页面打开时展开的块，使用以下代码定义：
- en: '[PRE2]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: By default, the first of the three expandable sections is expanded when the
    page opens, and the other two are collapsed. Adding the `data-collapsed="true"`
    parameter to the initially opened panel changes it to collapsed when the page
    opens.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，打开页面时，三个可展开部分中的第一个部分会展开，其他两个部分会折叠。将`data-collapsed="true"`参数添加到最初打开的面板会在页面打开时将其更改为折叠状态。
- en: '![Changing the initial block state](img/4742_08_08.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![更改初始块状态](img/4742_08_08.jpg)'
- en: Moreover, conversely removing `data-collapsed="true"` from a panel changes it
    to display expanded when the page opens.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，从面板中相反地移除`data-collapsed="true"`会使其在页面打开时显示为展开状态。
- en: Changing block data-themes and styles
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改块数据主题和样式
- en: 'We can add a `data-theme` parameter to any data block. For example, changing
    `<div data-role="collapsible">` to `<div data-role="collapsible" data-theme="e">`
    applies data-theme `e` (a yellow and red color scheme) to that block, as shown
    in the following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以向任何数据块添加`data-theme`参数。例如，将`<div data-role="collapsible">`更改为`<div data-role="collapsible"
    data-theme="e">`会将数据主题`e`（黄色和红色配色方案）应用于该块，如下截图所示：
- en: '![Changing block data-themes and styles](img/4742_08_09.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![更改块数据主题和样式](img/4742_08_09.jpg)'
- en: Obviously, there are rather severe limits to what you can do with the default
    set of theme color schemes. Not to worry, in the next chapter, we'll explore customizing
    themes.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，对于默认的主题颜色方案，您可以做的事情有相当严格的限制。不用担心，在下一章中，我们将探索自定义主题。
- en: CSS styles associated with the collapsible panels can be customized in the **CSS
    Styles** panel. These styles generally start with `.ul-collapsible`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 与可折叠面板相关的CSS样式可以在**CSS样式**面板中进行自定义。这些样式通常以`.ul-collapsible`开头。
- en: 'The `.ui-collapsible-contain` style, for example, controls many of the properties
    of the content of an expanded block, as shown in the following screenshot:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`.ui-collapsible-contain`样式控制展开块的内容的许多属性，如下截图所示：
- en: '![Changing block data-themes and styles](img/4742_08_10.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![更改块数据主题和样式](img/4742_08_10.jpg)'
- en: Tip
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Be cautious in changing dimensions of the `.ul-collapsible` class styles. Avoid
    changing padding, margins, and borders, as messing with these parameters might
    wreck the collapsible columns. You can customize fonts, colors, font sizes, background
    colors, and other properties. And, again, we'll explore a whole world of themes
    customization in the next chapter.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改`.ul-collapsible`类样式的尺寸时要小心。避免更改填充、边距和边框，因为这些参数的混乱可能会破坏可折叠的列。您可以自定义字体、颜色、字体大小、背景颜色和其他属性。而且，我们将在下一章中探索主题自定义的整个世界。
- en: Editing collapsible block HTML
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑可折叠块HTML
- en: Depending on your inclinations, you can edit the content of collapsible blocks
    either in Design view, with Live view turned off, or in Live view, by editing
    the content on the Code side of Split view. In either case, you just add HTML
    tags (such as headings, paragraph tags, ordered or unordered lists, and so on),
    and text, images, and media.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的倾向，您可以在设计视图中编辑可折叠块的内容，关闭实时视图，或者在实时视图中，通过编辑分割视图的代码一侧来编辑内容。在任何情况下，您只需添加HTML标签（如标题、段落标签、有序或无序列表等），以及文本、图像和媒体。
- en: If you edit content in the **Code** side of **Split** view, click on the **Refresh**
    button in the **Document** toolbar periodically to update the **Design** side
    of the view.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在**分割**视图的**代码**一侧编辑内容，请定期单击**文档**工具栏中的**刷新**按钮以更新视图的**设计**一侧。
- en: '![Editing collapsible block HTML](img/4742_08_11.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![编辑可折叠块HTML](img/4742_08_11.jpg)'
- en: 'At this stage of the game, you''ve figured out on your own how to add a collapsible
    block to a set: just copy, paste, and edit an existing block.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏的这个阶段，您已经自己找出了如何向集合添加可折叠块的一部分解决方案：只需复制、粘贴和编辑现有块。
- en: '![Editing collapsible block HTML](img/4742_08_12.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![编辑可折叠块HTML](img/4742_08_12.jpg)'
- en: Tip
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Since you asked (I read your mind), yes, you can embed collapsible blocks within
    a collapsible block. But the point, remember, is to keep mobile page layouts fairly
    simple, so, as the saying goes, when organizing content for mobile, less is more.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 既然你问了（我读懂了你的心思），是的，您可以在可折叠块内嵌入可折叠块。但是，请记住，保持移动页面布局相当简单是重点，所以，俗话说，当为移动设备组织内容时，少即是多。
- en: Adding jQuery form objects
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加jQuery表单对象
- en: The experience of filling out a form in a mobile device environment is substantially
    different than filling out a form on a laptop or desktop. There is no mouse, or
    even (often) a *Tab* key to navigate between form fields. Big fingers and tiny
    options in pop-up menus make for a bad match.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动设备环境中填写表单的体验与在笔记本电脑或台式机上填写表单的体验大不相同。没有鼠标，甚至（通常）没有*Tab*键在表单字段之间导航。大手指和弹出菜单中的微小选项不搭配。
- en: 'A form that might work fine in a full-sized browser may well be terribly uninviting
    and inconvenient in a mobile device. Take Apple''s store locator (shown in the
    following screenshot) for example, it is poorly designed for mobile users, requiring
    mobile users to invoke their frustrating keyboards to enter a zip code into a
    tiny text field:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在全尺寸浏览器中可能正常工作的表单在移动设备上可能会非常不友好和不方便。以苹果的商店定位器（如下截图所示）为例，它对移动用户设计不佳，需要移动用户调用他们令人沮丧的键盘来输入邮政编码到一个小小的文本字段中：
- en: '![Adding jQuery form objects](img/4742_08_13.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![添加jQuery表单对象](img/4742_08_13.jpg)'
- en: Part of the solution to that challenge is that mobile devices often convert
    form fields to more accessible elements. For example, options in a select menu
    might display much larger when tapped, making it easier to make a selection. The
    same Apple form I just criticized has a better option for choosing a product—a
    drop-down menu that is easier to access with a mobile device and chubby fingers
    like mine.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个挑战的部分解决方案是，移动设备通常会将表单字段转换为更易访问的元素。例如，选择菜单中的选项在点击时可能会显示得更大，这样更容易进行选择。我刚才批评的同样是苹果表单，它有一个更好的选择产品的选项——一个下拉菜单，更容易在移动设备和像我这样的粗手指上访问。
- en: '![Adding jQuery form objects](img/4742_08_14.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![添加jQuery表单对象](img/4742_08_14.jpg)'
- en: The other part of the solution to making forms accessible and inviting in mobile
    devices is to implement new form fields, such as sliders (where visitors can select
    from a range of values by sliding a thumb on a bar) or flip toggle switches (with
    easy to use "on" and "off" switch options) to make filling out forms online more
    functional and more fun.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 解决在移动设备上使表单可访问和吸引人的另一部分是实现新的表单字段，例如滑块（访问者可以通过在条上滑动拇指来选择一系列值）或翻转切换开关（具有易于使用的“开”和“关”开关选项），以使在线填写表单更加功能齐全和有趣。
- en: 'The following form utilizes both a flip toggle (**On** switch and a value slider
    (0-100)):'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表单同时使用了翻转切换（**开**开关）和值滑块（0-100）：
- en: '![Adding jQuery form objects](img/4742_08_15.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![添加jQuery表单对象](img/4742_08_15.jpg)'
- en: Forms in Dreamweaver
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Dreamweaver中的表单
- en: Dreamweaver has historically provided three methods for creating forms. You
    can, of course, define forms and form fields using HTML in Code view. You can
    generate forms by navigating to **Insert** | **Form** and define a form, then
    within it insert form fields (such as a text field) and the requisite buttons
    (such as a **Submit** button to make the form do something).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver在历史上提供了三种创建表单的方法。当然，您可以在代码视图中使用HTML定义表单和表单字段。您可以通过导航到**插入** | **表单**并定义一个表单来生成表单，然后在其中插入表单字段（例如文本字段）和必需的按钮（例如**提交**按钮以使表单执行某些操作）。
- en: More recent versions of Dreamweaver, including Dreamweaver CS6, have added Spry
    Validation form fields that first test data (for example, to see if it looks like
    an e-mail address) before allowing a visitor to submit the form. I note this history
    because a) you can't get where you're going if you don't know where you've been,
    or whatever that saying is; and b) all these techniques still work in mobile devices,
    so if you know any or all of them, you can supplement the new jQuery Mobile form
    tools in Dreamweaver with those tools.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 包括Dreamweaver CS6在内的较新版本的Dreamweaver已经添加了Spry验证表单字段，首先测试数据（例如，查看它是否看起来像一个电子邮件地址），然后允许访问者提交表单。我提到这段历史是因为a）如果你不知道你曾经在哪里，你就无法到达目的地，或者无论那句话是什么；和b）所有这些技术在移动设备上仍然有效，所以如果您了解其中任何一种或全部技术，您可以用这些工具补充Dreamweaver中的新jQuery
    Mobile表单工具。
- en: Here, however, we'll focus on the jQuery Mobile form tools that are geared to
    creating mobile-friendly forms, and include form fields such as the slider, and
    the toggle switch, that until now have not been easily accessible in Dreamweaver.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在这里，我们将专注于旨在创建移动设备友好表单的jQuery Mobile表单工具，并包括到目前为止在Dreamweaver中不易访问的表单字段，如滑块和切换开关。
- en: 'Before diving into those tools, here''s the world''s most compressed course
    in creating forms in Dreamweaver (in general, not just using jQuery Mobile form
    tools):'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入研究这些工具之前，这里是在Dreamweaver中创建表单的世界上最紧缩的课程（通常情况下，不仅仅是使用jQuery Mobile表单工具）：
- en: All form fields (such as a text field, or a **Submit** button) have to be enclosed
    within a single set of `<form>` tags.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有表单字段（如文本字段或**提交**按钮）都必须包含在一组`<form>`标签中。
- en: In order to work, forms must have a defined action. For forms that connect to
    server-side scripts (scripts written in programming languages such as PHP or Perl,
    and reside on a server), the action is a link to post the data to the location
    of that script at a server. There are many free, fairly intuitive online resources
    for generating such scripts, with directions on how to upload them to your server
    and connect them to a form. One such resource is [TheSiteWizard.com](http://TheSiteWizard.com).
    A very simple, but functional action is to simply e-mail form content to an e-mail
    address using the action `mailto:xxx@xxx.xxx`, where `xxx@xxx.xxx` is an e-mail
    address. This simple solution then launches an e-mail client (program) and prompts
    the user to e-mail the form content to the provided e-mail address.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使其工作，表单必须有一个定义的操作。对于连接到服务器端脚本（使用PHP或Perl等编程语言编写的脚本，并驻留在服务器上）的表单，操作是将数据发布到服务器上该脚本的位置的链接。有许多免费的，相当直观的在线资源可用于生成此类脚本，并提供有关如何将它们上传到您的服务器并将它们连接到表单的说明。其中一个资源是[TheSiteWizard.com](http://TheSiteWizard.com)。一个非常简单但功能齐全的操作是简单地使用操作`mailto:xxx@xxx.xxx`将表单内容发送到电子邮件地址，其中`xxx@xxx.xxx`是电子邮件地址。然后，这个简单的解决方案启动一个电子邮件客户端（程序）并提示用户将表单内容发送到提供的电子邮件地址。
- en: With those two basic rules in mind, let's examine tools in Dreamweaver for creating
    forms with particularly mobile-friendly form fields.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 牢记这两条基本规则，让我们来看看Dreamweaver中用于创建特别适合移动设备的表单字段的工具。
- en: Creating a jQuery Mobile form
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建jQuery Mobile表单
- en: 'Like the other jQuery Mobile objects we''ve examined in this chapter, jQuery
    Mobile form elements can only be inserted into an already generated jQuery Mobile
    page. But beyond that, it is also necessary to create both a form and a **Submit**
    button using more traditional form features in Dreamweaver. So, the process of
    setting up a form that will enclose jQuery Mobile form elements is as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 与本章中我们已经检查过的其他jQuery Mobile对象一样，jQuery Mobile表单元素只能插入到已经生成的jQuery Mobile页面中。但除此之外，还需要使用Dreamweaver中更传统的表单功能来创建表单和**提交**按钮。因此，设置将包含jQuery
    Mobile表单元素的表单的过程如下：
- en: Create a jQuery Mobile page.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个jQuery Mobile页面。
- en: Insert a form inside that jQuery Mobile page with a **Submit** (button).
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在该jQuery Mobile页面中插入一个带有**提交**（按钮）的表单。
- en: Then you can add specifically mobile-friend jQuery Mobile form fields to that
    form.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您可以向该表单添加特定的移动设备友好的jQuery Mobile表单字段。
- en: That three-step process isn't the only way to create jQuery Mobile forms, and
    it doesn't incorporate every possible option for such forms. But it is a basic
    foundation for making it possible to implement jQuery Mobile form elements.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这个三步过程并不是创建jQuery Mobile表单的唯一方法，也没有涵盖所有可能的选项。但这是一个基本的基础，使得实现jQuery Mobile表单元素成为可能。
- en: 'Let''s work through an example, creating a basic form that, when submitted,
    will send content to an e-mail address through an e-mail client. These steps assume,
    of course, that you are working in a defined Dreamweaver site, and that you have
    created an HTML5 page with a jQuery Mobile page. With those pieces in place, the
    following steps flesh out the "three-step process" outlined in rougher strokes
    previously:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个例子来工作，创建一个基本表单，当提交时，将通过电子邮件客户端将内容发送到一个电子邮件地址。当然，这些步骤假设您正在一个定义好的Dreamweaver网站中工作，并且已经创建了一个带有jQuery移动页面的HTML5页面。有了这些部分，以下步骤将更详细地阐述之前粗略概述的“三步流程”：
- en: Inside the jQuery Mobile page (you can select the placeholder "content" text
    in either the **Code** view or **Design** view to make sure you're doing this
    right), navigate to **Insert** | **Form** | **Form**. The **Tag Editor – form**
    dialog appears. Only the options in the **General** tab are essential for creating
    a form.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在jQuery移动页面内（您可以在**代码**视图或**设计**视图中选择占位符“内容”文本，以确保您操作正确），导航到**插入** | **表单**
    | **表单**。**标签编辑器-表单**对话框出现。只有**常规**选项卡中的选项对于创建表单是必不可少的。
- en: In the **Action** field, enter `mailto:[an email address]` using, of course,
    a real e-mail address. If you were working with a form linked to a server-side
    script, you would enter the URL of that script here.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**动作**字段中，输入`mailto:[电子邮件地址]`，当然，使用真实的电子邮件地址。如果您正在使用与服务器端脚本链接的表单，您将在此处输入该脚本的URL。
- en: Select **post** from the **Method** pop-up, this is the method almost always
    used to send form data to a location.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**方法**弹出窗口中选择**post**，这是几乎总是用来将表单数据发送到一个位置的方法。
- en: The **Encoding type** parameters are defined by the script that is managing
    the data. If you are uploading via e-mail, enter `text/plain`.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**编码类型**参数由管理数据的脚本定义。如果您通过电子邮件上传，输入`text/plain`。'
- en: Enter a name for your form in the **Name** box.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**名称**框中输入表单名称。
- en: The **Target** pop-up allows you to select `_blank` if you want to open the
    linked form script in a new browser window (generally this is not necessary).
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**目标**弹出窗口允许您选择`_blank`，如果您希望在新的浏览器窗口中打开链接的表单脚本（通常这是不必要的）。'
- en: After completing the **Tag Editor – form** dialog, click **OK** to generate
    the form.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成**标签编辑器-表单**对话框后，单击**确定**生成表单。
- en: '![Creating a jQuery Mobile form](img/4742_08_16.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![创建jQuery移动表单](img/4742_08_16.jpg)'
- en: This set of steps simply defines a form. There are no form fields in that form
    yet, so nothing in **Live** view indicates there even is a form. You can see the
    form code in **Code** view of course, and you can see the form itself, indicated
    by a red outline, in the **Design** view with **Live** view turned off.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这一系列步骤只是定义了一个表单。目前表单中还没有表单字段，所以**实时**视图中没有任何表单字段。当然，您可以在**代码**视图中看到表单代码，并且在**设计**视图中关闭**实时**视图后，可以看到表单本身，用红色轮廓表示。
- en: 'Remember rule #1 from earlier in this section: in order to be acted on by a
    form action, *all form fields have to be inside a form*. So make sure you are
    clear on where your form is on your page, even though it has no content as yet.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 记住前面这一节的规则#1：为了被表单动作执行，*所有表单字段都必须在表单内*。因此，请确保您清楚您的表单在页面上的位置，即使它目前还没有内容。
- en: With your cursor *inside your form*, navigate to **Insert** | **Form** | **Button**.
    We are not (quite) yet at the stage of integrating special jQuery Mobile form
    fields, so this option will be available by simply navigating to **Insert** |
    **Form**. When the **Input Form Accessibility Attributes** dialog appears, you
    do not need to enter anything in any of the fields, simply click on **OK** to
    generate a **Submit** button.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 将光标放在*表单内*，导航到**插入** | **表单** | **按钮**。我们还没有完全集成特殊的jQuery移动表单字段，所以通过导航到**插入**
    | **表单** 就可以使用这个选项。当**输入表单可访问属性**对话框出现时，您不需要在任何字段中输入任何内容，只需单击**确定**生成一个**提交**按钮。
- en: 'We now have the basic elements of a form: the form itself with a defined action,
    and a **Submit** button. Next, it is time to add the jQuery Mobile form fields.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个表单的基本元素：具有定义动作的表单和一个**提交**按钮。接下来，是时候添加jQuery移动表单字段了。
- en: '![Creating a jQuery Mobile form](img/4742_08_17.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![创建jQuery移动表单](img/4742_08_17.jpg)'
- en: Special mobile form fields
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 特殊的移动表单字段
- en: As noted earlier, mobile devices often have built-in interface tools to make
    form content more accessible. So does jQuery Mobile. When you place standard HTML
    form fields, such as textboxes, checkboxes, and buttons, jQuery Mobile substitutes
    custom form fields that are more accessible in mobile devices. Checkboxes are
    made larger, select menus pop up lists of large buttons, form field labels and
    field names are resized to maximize screen real-estate.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面提到的，移动设备通常具有内置的界面工具，使表单内容更易访问。jQuery移动也是如此。当您放置标准的HTML表单字段，如文本框、复选框和按钮时，jQuery移动会替换为在移动设备上更易访问的自定义表单字段。复选框变大，选择菜单弹出大按钮的列表，表单字段标签和字段名称被调整大小以最大化屏幕空间利用率。
- en: So, some of the "special" form fields available from the jQuery Mobile submenu
    are simply adaptations of standard HTML form fields. Others are new to the HTML
    form field set. In either case, the jQuery Mobile form fields include, as noted,
    special formatting that makes them more mobile-friendly.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，jQuery移动子菜单中提供的一些“特殊”表单字段只是标准HTML表单字段的适应。其他的是HTML表单字段集中的新内容。无论哪种情况，jQuery移动表单字段都包括特殊的格式，使它们更适合移动设备。
- en: Let's examine three of these form fields, and based on those examples, you'll
    be able to work with additional form fields in the jQuery Mobile set. In each
    of these examples, *be sure that you are inserting the jQuery Mobile form fields
    within the set of* `<form>` *tags*.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看其中三个表单字段的例子，根据这些例子，您将能够使用jQuery移动设置中的其他表单字段。在这些例子中，*确保您在*`<form>`*标签集内插入jQuery移动表单字段*。
- en: Inserting a text input field
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 插入文本输入字段
- en: Text fields are the most flexible way of collecting data in forms. They are
    used to collect usernames, passwords, e-mail addresses, shipping addresses, and
    more.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 文本字段是在表单中收集数据的最灵活的方式。它们用于收集用户名、密码、电子邮件地址、送货地址等。
- en: To insert a jQuery Mobile text input field in a form, navigate to **Insert**
    | **jQuery Mobile** | **Text Input** (if you want to allow multiple-line input,
    select **Text Area** instead). The jQuery Mobile text input field is automatically
    sized, but you have to replace the label placeholder text (**Text Input**) with
    your own text. You can do this in Design view (with Live View off) or in Split
    view.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要在表单中插入jQuery Mobile文本输入字段，请导航至**插入** | **jQuery Mobile** | **文本输入**（如果要允许多行输入，请选择**文本区域**）。jQuery
    Mobile文本输入字段会自动调整大小，但您必须用自己的文本替换标签占位符文本（**Text Input**）。您可以在设计视图（关闭实时视图）或分割视图中进行此操作。
- en: You can also replace the input name by changing the default field name for the
    text field by editing the code `name="textinput"` with another field name inside
    the quotes. But avoid spaces and special characters (stick to letters and numbers).
    So, for example, to rename a text input field named `email`, you would change
    this code to `name="email"`.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过编辑代码`name="textinput"`来更改文本字段的默认字段名称，以替换输入名称。但是避免使用空格和特殊字符（只使用字母和数字）。例如，要重命名名为`email`的文本输入字段，您需要将此代码更改为`name="email"`。
- en: '![Inserting a text input field](img/4742_08_18.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![插入文本输入字段](img/4742_08_18.jpg)'
- en: Inserting a slider
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 插入滑块
- en: Everybody's rating everything these days. You might not have read much physics,
    but how would you rate Bosonic string theory on a scale of 1-100? Well, ok… there
    *are* valid reasons to include rating options in a mobile form. And, if you're
    going to include a "rate this … (whatever)" in your form, you should make it easy
    for people to do that.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这些天每个人都在评价一切。也许你没有读过太多物理学，但你会如何在1-100的范围内评价玻色弦理论？好吧，也许……确实有*有效的理由在移动表单中包含评分选项。而且，如果你要在表单中包含“评价这个……（什么的）”，你应该让人们很容易地做到这一点。
- en: Enter the *slider*, a particularly handy way to input values in a mobile form.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 输入*滑块*，这是在移动表单中输入值的一个特别方便的方式。
- en: 'To insert a slider in a jQuery Mobile form, navigate to **Insert** | **jQuery
    Mobile** | **Slider**. Customize the slider as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要在jQuery Mobile表单中插入滑块，请导航至**插入** | **jQuery Mobile** | **滑块**。自定义滑块如下：
- en: Replace the **Slider** label text with your own text.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你自己的文本替换**Slider**标签文本。
- en: Replace the `value="0"` code with a value that will display by default.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用默认值替换`value="0"`代码。
- en: Replace the `min="0"` code with any value you select that will be the minimum
    value.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你选择的任何值替换`min="0"`代码，这将是最小值。
- en: Replace the `max="0"` code with any value you select that will be the maximum
    value.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你选择的任何值替换`max="0"`代码，这将是最大值。
- en: '![Inserting a slider](img/4742_08_19.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![插入滑块](img/4742_08_19.jpg)'
- en: Inserting a toggle switch
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 插入切换开关
- en: Toggle switches provide a handy way for large fingers to easily select "yes"
    or "no"; "in" or "out"; or make some other two-option choice in a mobile device.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 切换开关为大手指提供了一个方便的方式来轻松选择“是”或“否”；“内”或“外”；或在移动设备上做出其他两个选择。
- en: To insert a toggle switch in a jQuery Mobile form, navigate to **Insert** |
    **jQuery Mobile** | **Flip Toggle Switch**.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 要在jQuery Mobile表单中插入一个切换开关，请导航至**插入** | **jQuery Mobile** | **翻转切换开关**。
- en: 'Customize the toggle switch as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义切换开关如下：
- en: Replace the **Option** label text with your own text.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你自己的文本替换**Option**标签文本。
- en: Replace `Off` (not in quotes) in the code `<option value="off">Off</option>`
    with your own text.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你自己的文本替换代码`<option value="off">Off</option>`中的`Off`（不带引号）。
- en: Replace `On` (not in quotes) in the code `<option value="on">On</option>` with
    your own text.![Inserting a toggle switch](img/4742_08_20.jpg)
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用你自己的文本替换代码`<option value="on">On</option>`中的`On`（不带引号）。
- en: Building a page with collapsible blocks and a mobile-friendly form
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建一个带有可折叠块和移动友好表单的页面
- en: Let's walk through a specific example to summarize, review, flesh out, and provide
    a model of building jQuery Mobile collapsible blocks in Dreamweaver, and mix in
    a mobile-friendly form.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个具体的例子来总结、审查、充实，并提供一个在Dreamweaver中构建jQuery Mobile可折叠块的模型，并混入一个移动友好表单。
- en: Surveys tell us that a huge percentage of people looking to grab a taco somewhere
    search online for a place to get one—on their mobile devices. So let's use my
    non-existent taco stand at Coney Island as a model for this recipe, and you can
    easily adapt it to your own needs.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 调查告诉我们，寻找某个地方吃塔可的人中有很大比例会在移动设备上在线搜索。因此，让我们以我在康尼岛上不存在的塔可摊作为这个配方的模型，你可以很容易地根据自己的需求进行调整。
- en: 'The mobile page we build will have four collapsible blocks: menu, location,
    place orders, and a bit about the taco shop. In the course of building it, we''ll
    walk through creating four collapsible blocks, and embedding a form within one
    of the blocks. Here we go:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们构建的移动页面将有四个可折叠块：菜单、位置、下订单和关于塔可店的一些信息。在构建过程中，我们将演示创建四个可折叠块，并在其中一个块中嵌入一个表单。我们开始吧：
- en: Of course, we're assuming you are working within a Dreamweaver site. If not,
    create a new one or open an existing one. Then navigate to **File** | **New**
    and in the **New Document** dialog, select **Blank Page** in the **Category**
    column, **HTML** in the **Page Type** column, **<none>** in the **Layout** column,
    and **HTML5** from the **DocType** popup. Then click on **Create**.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当然，我们假设您正在Dreamweaver站点中工作。如果没有，请创建一个新站点或打开一个现有站点。然后导航至**文件** | **新建**，在**新建文档**对话框中，在**类别**列中选择**空白页**，在**页面类型**列中选择**HTML**，在**布局**列中选择**<none>**，并从**文档类型**弹出窗口中选择**HTML5**。然后点击**创建**。
- en: Navigate to **File** | **Save**, and save the file as `index.html`. As this
    is going to be a one-page site, the `index.html` filename will open the page when
    the site's URL is addressed in a browser. Assign a page title of "Mobile Tacos".
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航至**文件** | **保存**，并将文件保存为`index.html`。由于这将是一个单页面站点，当站点的URL在浏览器中被访问时，`index.html`文件名将打开页面。将页面标题设置为“移动塔可”。
- en: At this stage of the process, by default, your cursor is in between the set
    of `<body>` tags. That's right where it should be. Insert a jQuery Mobile page
    by navigating to **Insert** | **jQuery Mobile** | **Page**. As we are going to
    be keeping this project relatively simple and standard (but not *too* simple,
    or standard—don't worry), you can select the **Remote (CDN)** link type option,
    and we'll avail ourselves of the online version of the jQuery Mobile CSS file.
    With **Remote (CDN)** selected, click on **OK**.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此过程的这个阶段，默认情况下，您的光标位于一组 `<body>` 标签之间。这正是它应该在的地方。通过导航到 **插入** | **jQuery Mobile**
    | **页面** 来插入一个 jQuery Mobile 页面。由于我们将保持这个项目相对简单和标准（但不是*太*简单或标准 - 不用担心），您可以选择 **远程（CDN）**
    链接类型选项，我们将使用 jQuery Mobile CSS 文件的在线版本。选择 **远程（CDN）**，然后单击 **确定**。
- en: The **jQuery Mobile Page** dialog opens. Click on **OK** with the default settings.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**jQuery Mobile 页面** 对话框会打开。使用默认设置单击 **确定**。'
- en: Replace the original `Header` placeholder text with "Coney Island Tacos". Or,
    you can depart from my recipe right from the start, and freelance your own content
    from here on. Replace the footer text with the imaginary website of Coney Island
    Tacos – `www.coneyislandtacos.com`. Navigate to **Insert** | **Hyperlink** if
    you wish to define the hyperlink.![Building a page with collapsible blocks and
    a mobile-friendly form](img/4742_08_NEW.jpg)
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用 "Coney Island Tacos" 替换原始的 `Header` 占位文本。或者，您可以从一开始就偏离我的食谱，自由发挥您自己的内容。用 Coney
    Island Tacos 的虚构网站 - `www.coneyislandtacos.com` 替换页脚文本。如果您希望定义超链接，请导航到 **插入**
    | **超链接**。![使用可折叠块和移动友好表单构建页面](img/4742_08_NEW.jpg)
- en: 'Define a work environment: select **Split View** and then **480x800** from
    the **Window Size** popup at the bottom of the **Design** view. Turn on **Live
    View**.'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义工作环境：选择 **分割视图**，然后从 **设计** 视图底部的 **窗口大小** 弹出菜单中选择 **480x800**。打开 **实时视图**。
- en: Start with applying one of the jQuery Mobile themes for formatting. In the code
    side of **Split** view, enter the code `data-theme="e"` or experiment with other
    themes (try `a`, `b`, `c`, `d`, or `e`).![Building a page with collapsible blocks
    and a mobile-friendly form](img/4742_08_21.jpg)
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始应用一个 jQuery Mobile 主题进行格式化。在 **分割** 视图的代码侧面，输入代码 `data-theme="e"` 或尝试其他主题（尝试
    `a`、`b`、`c`、`d` 或 `e`）。![使用可折叠块和移动友好表单构建页面](img/4742_08_21.jpg)
- en: 'Now let''s walk through the process of adding four collapsible panels to our
    site:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们一起来添加四个可折叠面板到我们的网站上：
- en: 'Select the placeholder `content` text, and navigate to **Insert** | **jQuery
    Mobile** | **Collapsible Block**. Copy and paste one of the sets of collapsible
    block code to create a forth block. The code is:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择占位符 `content` 文本，然后导航到 **插入** | **jQuery Mobile** | **可折叠块**。复制并粘贴一组可折叠块代码以创建第四个块。这段代码是：
- en: '[PRE3]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Customize the headers for all four blocks. You''ll find the headers enclosed
    in `<h3>` codes. I''m going with: **Menu**, **Email Order**, **Find / Call Us**,
    and **About Coney Island Tacos** as headers, but feel free to improvise.'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自定义四个块的标题。您会发现标题被包含在 `<h3>` 代码中。我选择：**菜单**，**电子邮件订单**，**寻找/联系我们** 和 **关于 Coney
    Island Tacos** 作为标题，但请随意发挥创意。
- en: Customize the content of all the collapsible blocks *except* the **Email Order**
    block—we'll create a form for that next.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自定义所有可折叠块的内容*除了* **Email Order** 块 - 我们将为下一个创建一个表单。
- en: In the **Email Order** block (or whichever block you are using in a custom project
    for an input form), select the placeholder `content` text and navigate to **Insert**
    | **Form** | **Form**. In the **Tag Editor – form** dialog, make the action `mailto:youremail@youremail.xxx`
    (substituting your own e-mail address). Change the method to **POST**. Enter `text/plain`
    in the **Encoding Type** field and click on **OK**. Here, it might be helpful
    to pop out of live view to create the input form. Enter `Order Form` inside the
    form and press *Return* or *Enter* to create a new line.![Building a page with
    collapsible blocks and a mobile-friendly form](img/4742_08_22.jpg)
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Email Order** 块（或您在自定义项目中用于输入表单的任何块）中，选择占位符 `content` 文本，导航到 **插入** | **表单**
    | **表单**。在 **标签编辑器 - 表单** 对话框中，将操作设置为 `mailto:youremail@youremail.xxx`（替换为您自己的电子邮件地址）。将方法更改为
    **POST**。在 **编码类型** 字段中输入 `text/plain`，然后单击 **确定**。在这里，弹出实时视图可能会有所帮助，以创建输入表单。在表单内输入
    `Order Form`，然后按 *Return* 或 *Enter* 创建新行。![使用可折叠块和移动友好表单构建页面](img/4742_08_22.jpg)
- en: Making sure your insertion point is inside the form, navigate to **Insert**
    | **jQuery Mobile** | **Select Menu**. Change the label to **Taco**. Click on
    the **Select** menu itself, and use the **List Values** button in the **Properties**
    inspector to open the **List Values** dialog. Enter labels (which appear in the
    form) and values (which are sent via e-mail when the form is submitted), using
    the **+** button to add new rows, and the up and down arrows to reorder items
    as necessary.![Building a page with collapsible blocks and a mobile-friendly form](img/4742_08_23.jpg)
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保插入点在表单内，导航到 **插入** | **jQuery Mobile** | **选择菜单**。将标签更改为 **Taco**。单击 **选择**
    菜单本身，并使用 **属性** 检查器中的 **列表值** 按钮打开 **列表值** 对话框。使用 **+** 按钮添加新行，并使用上下箭头根据需要重新排序项目。![使用可折叠块和移动友好表单构建页面](img/4742_08_23.jpg)
- en: Add additional select menu to allow people to select a taco shell.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加额外的选择菜单，以允许人们选择玉米饼。
- en: Still within the form, navigate to **Insert** | **jQuery Mobile** | **Checkbox**.
    In the **jQuery Mobile Checkbox** dialog, enter `Sides` in the **Name** box, and
    select four checkboxes and a horizontal layout, and click on **OK**. Edit the
    labels right in **Design** view in the **Document** window, and use the **Properties**
    inspector to define values for each checkbox that match the labels.![Building
    a page with collapsible blocks and a mobile-friendly form](img/4742_08_24.jpg)
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表单内，导航到 **插入** | **jQuery Mobile** | **复选框**。在 **jQuery Mobile 复选框** 对话框中，在
    **名称** 框中输入 `Sides`，然后选择四个复选框和水平布局，最后单击 **确定**。在 **设计** 视图中的 **文档** 窗口中直接编辑标签，并使用
    **属性** 检查器为每个复选框定义与标签匹配的值。![使用可折叠块和移动友好表单构建页面](img/4742_08_24.jpg)
- en: Complete the form by inserting a **Submit** button. Again, *make sure your insertion
    point is inside the form*, and navigate to **Insert** | **Form** | **Button**.
    Click on **OK** without making any selection as a **Submit** button is the default.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过插入**提交**按钮完成表单。再次确保插入点位于表单内部，并导航到**插入** | **表单** | **按钮**。单击**确定**，而不进行任何选择，因为**提交**按钮是默认选项。
- en: To customize the look of the page, create a new class style. Use the **New CSS
    Rule** option at the bottom of the **CSS Styles** panel to create a new CSS rule.
    Name the class style `Format`. As we are using a remote version of the associated
    CSS file, and as this is a one-page site, we can break the rule of relying exclusively
    on linked, external stylesheets, so select **(This Document Only)** from the pop-up
    menu at the bottom of the **New CSS Rule** dialog, and click on **OK**.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要自定义页面的外观，创建一个新的类样式。使用**CSS样式**面板底部的**新CSS规则**选项创建新的CSS规则。将类样式命名为`Format`。由于我们使用的是相关CSS文件的远程版本，并且这是一个单页面站点，我们可以打破仅依赖链接的外部样式表的规则，因此从**新CSS规则**对话框底部的弹出菜单中选择**(仅限本文档)**，然后单击**确定**。
- en: Define some custom properties, such as font family, font size, and font color.
    Use the **Properties** inspector, as shown in the following screenshot, to apply
    the class style to selected elements on your page:![Building a page with collapsible
    blocks and a mobile-friendly form](img/4742_08_25.jpg)
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义一些自定义属性，例如字体系列，字体大小和字体颜色。使用**属性**检查器，如下截图所示，将类样式应用于页面上选择的元素：![使用可折叠块和移动友好表单构建页面](img/4742_08_25.jpg)
- en: You can further customize the project by creating additional class styles and
    applying them.
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过创建其他类样式并应用它们来进一步自定义项目。
- en: You can test the order form in a browser.![Building a page with collapsible
    blocks and a mobile-friendly form](img/4742_08_26.jpg)
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在浏览器中测试订单表格。![使用可折叠块和移动友好表单构建页面](img/4742_08_26.jpg)
- en: Summary
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: One page-design technique in jQuery Mobile is a layout grid. A layout grid,
    with blocks, is essentially `div` style columns, but with special properties that
    make the columns display effectively in mobile devices.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery Mobile中的一个页面设计技术是布局网格。布局网格与块一起，基本上是`div`样式的列，但具有使列在移动设备上有效显示的特殊属性。
- en: The two most important jQuery Mobile techniques we introduced in this chapter
    are collapsible blocks, and jQuery Mobile form objects. Collapsible blocks expand
    and collapse, and provide a very comfortable way to present content in a small
    viewport. Adding jQuery form objects creates more mobile-friendly versions of
    familiar input form objects (such as text boxes), but also enables new form fields
    such as sliders and toggle flip switches.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章介绍的两个最重要的jQuery Mobile技术是可折叠块和jQuery Mobile表单对象。可折叠块可以展开和折叠，并提供了一种在小视口中呈现内容的非常舒适的方式。添加jQuery表单对象可以创建更多移动友好版本的熟悉输入表单对象（例如文本框），还可以启用新的表单字段，如滑块和切换翻转开关。
- en: To customize the look and feel of jQuery Mobile-based pages, we can utilize
    the broad brush formatting of data-themes, supplemented with custom CSS. But to
    really uncork the power of themes, we need to create our own custom theme color
    swatches. We'll do that in the next chapter.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要自定义jQuery Mobile页面的外观和感觉，我们可以利用数据主题的广泛格式，辅以自定义CSS。但要真正发挥主题的力量，我们需要创建自己的自定义主题颜色样本。我们将在下一章中进行。
