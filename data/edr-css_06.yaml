- en: Chapter 6. Dealing with State Changes in ECSS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。在ECSS中处理状态变化
- en: In the last chapter we considered project organisation and how to understand
    and apply the ECSS class naming conventions. In this chapter we will move our
    focus to how ECSS deals with active interfaces and how we can facilitate style
    changes in a rationale and accessible manner.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们考虑了项目组织以及如何理解和应用ECSS类命名约定。在本章中，我们将把重点转移到ECSS如何处理活动界面以及如何以一种合理和可访问的方式促进样式变化。
- en: The majority of web applications need to deal with states.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Web应用程序需要处理状态。
- en: 'First let''s just crystallise what we mean by *states*. Consider some examples:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先让我们澄清一下我们所说的“状态”。考虑一些例子：
- en: A user clicks a button
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户点击按钮
- en: A value in an interface is updated
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 界面中的值已更新
- en: An area of an interface is disabled
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 界面的某个区域被禁用
- en: A widget in the interface is busy
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 界面中的小部件正在忙碌
- en: An entered value exceeds allowable values
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入的值超过了允许的值
- en: A section of the application starts containing live data
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序的某个部分开始包含实时数据
- en: All these eventualities can be defined as **state changes**. State changes that
    we typically need to communicate to the user. As such they are changes that need
    to be communicated to the DOM, and subsequently our style sheets need some sane
    way of catering to these needs.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些情况都可以定义为状态变化。我们通常需要向用户传达的状态变化。因此，这些是需要传达给DOM的变化，随后我们的样式表需要一些合理的方式来满足这些需求。
- en: How can we define these state changes in a consistent and considered manner?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何以一致和深思熟虑的方式定义这些状态变化？
- en: How ECSS used to handle state change
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ECSS以前如何处理状态变化
- en: 'Back in [Chapter 3](ch03.html "Chapter 3. Implementing Received Wisdom"), *Implementing
    Received Wisdom*, I related how much I liked the SMACSS approach of communicating
    state. For example:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第3章](ch03.html "第3章。实现接收到的智慧")中，我提到了我有多喜欢SMACSS方法来传达状态。例如：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Indicates that on, or somewhere below this node, the *mini cart* is active.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 表示在此节点上或下方的某处，*迷你购物车*处于活动状态。
- en: 'Another example:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This would communicate that the Component or one within it is showing some value
    (that was previously hidden).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这将传达组件或其中一个组件正在显示一些值（先前隐藏的）。
- en: 'Historically, that was how I communicated state when applying ECSS. I used
    a micro-namespaced class, in addition to any existing classes on the node to communicate
    this state. For example:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在历史上，这就是我在应用ECSS时传达状态的方式。我使用了微命名空间类，除了节点上的任何现有类来传达这个状态。例如：
- en: '![How ECSS used to handle state change](img/Warning-image-1.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![ECSS以前如何处理状态变化](img/Warning-image-1.jpg)'
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'A node using these classes in the DOM might look like this:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在DOM中使用这些类的节点可能如下所示：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Historically, changing a class in the DOM, especially near the root of the
    DOM has been discouraged. Doing so invalidates the render tree meaning the browser
    has to perform a whole bunch of re-calculation. However, things are improving.
    Recent work by Antii Koivisto in WebKit (which powers iOS and Safari browsers)
    means that such changes are now *near optimal*. Interested parties can read the
    WebKit Changeset for class changes here: [http://trac.webkit.org/changeset/196383](http://trac.webkit.org/changeset/196383)
    and attribute selectors, such as `aria-*` here: [http://trac.webkit.org/changeset/196629](http://trac.webkit.org/changeset/196629)'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，在DOM中更改类，特别是在DOM的根附近，是不鼓励的。这样做会使渲染树无效，这意味着浏览器必须执行大量的重新计算。然而，情况正在改善。WebKit（用于iOS和Safari浏览器）的Antii
    Koivisto最近的工作意味着这样的更改现在几乎是最佳的。有兴趣的人可以在这里阅读有关类更改的WebKit变更集：[http://trac.webkit.org/changeset/196383](http://trac.webkit.org/changeset/196383)，以及属性选择器，例如`aria-*`在这里：[http://trac.webkit.org/changeset/196629](http://trac.webkit.org/changeset/196629)
- en: Switching to WAI-ARIA
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转向WAI-ARIA
- en: However, having researched ARIA a little for another book, (*Responsive Web
    Design with HTML5 and CSS3* in case you are interested) it struck me that if this
    information has to go in the DOM purely for styling hooks, it may as well lift
    a little more weight while it's there.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，通过为另一本书研究ARIA一点（如果您感兴趣的话）,我发现如果这些信息纯粹是为了样式钩子而进入DOM，它可能会在那里承担更多的重量。
- en: 'These same styling hooks can actually be placed in the DOM as *WAI-ARIA* ([https://www.w3.org/TR/wai-aria/](https://www.w3.org/TR/wai-aria/))
    states. The [States and Properties](http://www.w3.org/TR/wai-aria/states_and_properties)
    section of WAI-ARIA describes the W3C''s standardised manner in which to communicate
    states and properties to assistive technology within an application. In the opening
    section of the abstract description for WAI-ARIA, it contains this:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些相同的样式钩子实际上可以放在DOM中作为WAI-ARIA（[https://www.w3.org/TR/wai-aria/](https://www.w3.org/TR/wai-aria/)）状态。WAI-ARIA的[状态和属性](http://www.w3.org/TR/wai-aria/states_and_properties)部分描述了W3C标准化的方式，用于在应用程序中向辅助技术传达状态和属性。在WAI-ARIA的摘要描述的开头部分中，包含了这样的内容：
- en: '*These semantics are designed to allow an author to properly convey user interface
    behaviors (sic) and structural information to assistive technologies in document-level
    markup*'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这些语义是为了让作者能够在文档级标记中正确传达用户界面行为和结构信息给辅助技术。
- en: 'While the specification is aimed at helping communicate state and properties
    to users with disability (via assistive technology) it serves the need of ECSS
    beautifully. What a great result! We get to improve the accessibility of our web
    application, while also gaining a clearly defined, well considered lexicon for
    communicating the states we need in our application logic. Here''s the prior example
    re-written with aria to communicate state:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然规范旨在帮助通过辅助技术向残障用户传达状态和属性，但它也很好地满足了ECSS的需求。这是一个很好的结果！我们可以提高Web应用程序的可访问性，同时还获得了一个清晰定义、深思熟虑的词汇表，用于传达我们在应用程序逻辑中需要的状态。以下是使用aria重新编写的先前示例来传达状态：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Class handles the aesthetics of the button. The `aria-*` attribute communicates
    the state (if any) of that node or its descendants.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 类处理按钮的美学。`aria-*`属性传达该节点或其后代的状态（如果有）。
- en: 'In JavaScript application land, the only change needed is shifting from `classList`
    amendments for state changes to `setAttribute` amendments. For example, to set
    our `button` attribute:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在JavaScript应用程序领域，唯一需要的更改是从`classList`修改为`setAttribute`修改。例如，设置我们的`button`属性：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Tip
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Be aware that separating concerns in this manner does require an additional
    *touchpoint* in your JavaScript. If you absolutely, positively want the fastest/easiest
    way to handle a state change, doing it once with a `classList` update will be
    faster.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，以这种方式分离关注点确实需要在JavaScript中添加一个*触点*。如果您绝对，绝对希望以最快/最简单的方式处理状态更改，那么使用`classList`更新一次将更快。
- en: ARIA attributes as CSS selectors
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ARIA属性作为CSS选择器
- en: 'In our preferred CSS syntax, writing that change within a single set of braces
    would look like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们首选的CSS语法中，将该更改写在一组大括号内将如下所示：
- en: '[PRE6]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We use the ampersand (`&`) as a parent selector and the attribute selector to
    leverage the enhanced specificity having the aria attribute on the node provides.
    Then we can just style the changes as needed.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用和符号（`&`）作为父选择器和属性选择器，以利用节点上的aria属性提供的增强特异性。然后我们可以根据需要对更改进行样式设置。
- en: The ability to nest state changes within a rule in this manner provides increased
    developer ergonomics. The intention is that a rule is only defined at root level
    once throughout the entire application styles. This provides a single source of
    truth to define all possible eventualities pertaining to that class. For more
    information, ensure you read [Chapter 8](ch08.html "Chapter 8. The Ten Commandments
    of Sane Style Sheets"), *The Ten Commandments of Sane Style Sheets*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式嵌套状态更改在规则中提供了更高的开发人员人体工程学。意图是规则仅在整个应用程序样式中的根级别定义一次。这提供了一个真理的来源，以定义与该类相关的所有可能的情况。有关更多信息，请确保阅读[第8章](ch08.html
    "第8章。理智样式表的十诫")，*理智样式表的十诫*。
- en: Tip
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'As a related note, the *CSS Selectors Level 4 specification* ([https://drafts.csswg.org/selectors-4/#attribute-case](https://drafts.csswg.org/selectors-4/#attribute-case))
    makes provision for case insensitivity by using a `i` flag before the closing
    square bracket. For example:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 作为相关说明，*CSS选择器级别4规范*（[https://drafts.csswg.org/selectors-4/#attribute-case](https://drafts.csswg.org/selectors-4/#attribute-case)）通过在右方括号之前使用`i`标志来提供不区分大小写。例如：
- en: '`css .co-Button { background-color: $color-button-passive; &[aria-selected="true"
    i] { background-color: $color-button-selected; } }` This allows any case value
    variant of the attribute to pass (by default it is case sensitive)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`css .co-Button { background-color: $color-button-passive; &[aria-selected="true"
    i] { background-color: $color-button-selected; } }` 这允许通过属性的任何情况值变体（默认情况下它区分大小写）'
- en: States and properties, redone with ARIA
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用ARIA重新设计状态和属性
- en: This section of the WAI-ARIA specification describes *Widget Attributes*, these
    contain many of the common states needed when working with a web application and
    rapidly changing data.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: WAI-ARIA规范的这一部分描述了*Widget Attributes*，这些属性包含了在处理Web应用程序和快速更改数据时所需的许多常见状态。
- en: 'Here are the examples given at the beginning of this chapter re-written using
    ARIA:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用ARIA重新编写的本章开头给出的示例：
- en: '`aria-disabled="true"` (used instead of `is-Suspended`)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aria-disabled="true"`（用于替代`is-Suspended`）'
- en: '`aria-live="polite"` (used instead of `.is-Live`, the polite value is one of
    *three possible values* ([https://www.w3.org/TR/wai-aria/states_and_properties#aria-live](https://www.w3.org/TR/wai-aria/states_and_properties#aria-live))
    to describe how updates should be communicated)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aria-live="polite"`（用于替代`.is-Live`，礼貌值是*三个可能值*之一（[https://www.w3.org/TR/wai-aria/states_and_properties#aria-live](https://www.w3.org/TR/wai-aria/states_and_properties#aria-live)）用于描述应如何传达更新）'
- en: '`aria-current="true"` (this one is currently proposed for WAI-ARIA 1.1 [http://www.w3.org/TR/wai-aria-1.1/#aria-current](http://www.w3.org/TR/wai-aria-1.1/#aria-current))'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aria-current="true"`（此版本目前提议用于WAI-ARIA 1.1 [http://www.w3.org/TR/wai-aria-1.1/#aria-current](http://www.w3.org/TR/wai-aria-1.1/#aria-current)）'
- en: '`aria-busy="true"` (used instead of `is-Busy`, to indicate the element and
    it''s subtree (if any) are busy'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`aria-busy="true"`（用于替代`is-Busy`，表示元素及其子树（如果有）正在忙碌）'
- en: There are plenty more and the specification is, by W3C specification standards,
    easy to understand.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 还有很多，根据W3C规范标准，规范很容易理解。
- en: If ARIA can't be used
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如果无法使用ARIA
- en: 'If, for whatever reason, you aren''t able to use `aria-*` attributes to communicate
    state in a site or application. I now tend to lean towards naming selectors without
    using the micro-namespace to designate state. For example, instead of:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于任何原因，您无法使用`aria-*`属性来在站点或应用程序中传达状态。我现在倾向于在不使用微命名空间来指定状态的情况下命名选择器。例如，而不是：
- en: '![If ARIA can''t be used](img/Warning-image-1.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![如果无法使用ARIA](img/Warning-image-1.jpg)'
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'I would instead recommend using a variant version of the selector like this:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议改用这样的选择器的变体版本：
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This keeps the context of the module in tact and merely indicates a variant
    of this same class is being applied.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这保持了模块的上下文，并仅指示正在应用此相同类的变体。
- en: Note
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'You should be aware that there is a *gotcha* when using attribute selectors
    to communicate state. Certain older versions of Android (Android 4.0.3 stock browser
    as an example) don''t force a re-calculation of styles when an attribute value
    is changed. The upshot of this is that any styles that rely on a attribute won''t
    work dynamically (for example when toggled with JavaScript). There are two possible
    workarounds. Firstly, you can toggle a class somewhere in the DOM at the same
    time you change the attribute. Alternatively, you can initiate the attribute selectors
    by listing empty rules for each somewhere in the CSS. Even chaining together works
    e.g. `[aria-thing][aria-thing2]{}`. Either option certainly adds an undesirable
    complication to proceedings. A bug report of this behaviour can be found for WebKit
    here: [https://bugs.webkit.org/show_bug.cgi?id=64372](https://bugs.webkit.org/show_bug.cgi?id=64372)
    and the workaround mentioned came courtesy of this Stack Overflow question: [http://stackoverflow.com/questions/6655364/css-attribute-selector-descendant-gives-a-bug-in-webkit/](http://stackoverflow.com/questions/6655364/css-attribute-selector-descendant-gives-a-bug-in-webkit/)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该知道使用属性选择器来传达状态时存在一个*陷阱*。某些较旧版本的Android（例如Android 4.0.3原生浏览器）在属性值更改时不会强制重新计算样式。这样做的结果是，依赖于属性的任何样式都不会动态工作（例如在JavaScript中切换时）。有两种可能的解决方法。首先，您可以在DOM的某个地方切换一个类，同时更改属性。或者，您可以通过在CSS中的某个地方列出每个空规则来启动属性选择器。甚至链接在一起也可以工作，例如`[aria-thing][aria-thing2]{}`。任何一种选择都会给程序添加一个不必要的复杂性。关于这种行为的错误报告可以在此处找到：[https://bugs.webkit.org/show_bug.cgi?id=64372](https://bugs.webkit.org/show_bug.cgi?id=64372)，提到的解决方法来自于这个Stack
    Overflow问题：[http://stackoverflow.com/questions/6655364/css-attribute-selector-descendant-gives-a-bug-in-webkit/](http://stackoverflow.com/questions/6655364/css-attribute-selector-descendant-gives-a-bug-in-webkit/)
- en: Summary
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Using WAI-ARIA states to communicate changes in the DOM provides styling hooks
    that are as useful and easy to use as standard HTML classes. Although purely preference,
    I'm also a fan of the fact that an entirely different selector is used to communicate
    state in the style sheets; it is simpler to spot within a rule.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用WAI-ARIA状态来传达DOM中的变化提供了与标准HTML类一样有用且易于使用的样式钩子。尽管这纯粹是个人偏好，但我也喜欢在样式表中使用完全不同的选择器来传达状态；这样在规则中更容易识别。
- en: None of those prior factors really get you anything new. What using WAI-ARIA
    states will do, virtually for free, is start to provide a better means of communicating
    your web application state to users of assistive technology. If money talks, consider
    also that by using WAI-ARIA you are widening your product up to a greater number
    of users (see the additional info below).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这些先前的因素都没有给你带来任何新东西。使用WAI-ARIA状态将几乎免费地开始为辅助技术用户提供更好的通信方式。如果金钱有话说，还要考虑，通过使用WAI-ARIA，您可以将产品扩展到更多的用户（请参见下面的附加信息）。
- en: As such, using WAI-ARIA states and properties, is the recommended means of communicating
    state in projects adopting a ECSS methodology.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，使用WAI-ARIA状态和属性是采用ECSS方法的项目中传达状态的推荐方式。
- en: Additional information and statistics from the Royal National Institute for
    the Blind (RNIB)
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 来自英国皇家国家盲人协会（RNIB）的附加信息和统计数据
- en: 'The *RNIB* ([http://rnib.org.uk/](http://rnib.org.uk/)) was kind enough to
    supply a little data regarding the number of blind people here in the UK. These
    may prove useful when arguing/considering a case for using ARIA states in your
    project:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*RNIB*（[http://rnib.org.uk/](http://rnib.org.uk/)）很友好地提供了一些关于英国盲人数量的数据。在为您的项目使用ARIA状态进行辩论/考虑时，这些数据可能会有所帮助。'
- en: There are just over 84,000 registered blind and partially sighted people of
    working age in the UK (out of an estimated population of around 64 million).
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在英国，有超过84,000名注册的盲人和部分视力受损的工作年龄人口（估计总人口约为6400万）。
- en: 'However, according to the government''s Labour Force Survey, around 185,000
    people of working age in the UK have a self-reported *seeing difficulty*. This
    includes people whose sight loss would not be eligible for registration, but which
    is still of sufficient severity to affect their everyday lives. It also includes
    those who do not consider themselves as disabled. Of the 185,000:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，根据政府的劳动力调查，英国有大约185,000名工作年龄人口自报有*视力困难*。这包括那些视力损失不符合注册条件但仍足以影响他们日常生活的人。也包括那些不认为自己是残疾人的人。在这185,000人中：
- en: 113,000 consider themselves as long-term disabled with a *seeing difficulty*
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 113,000人认为自己有*视力困难*并认为自己是长期残疾人
- en: 72,000 consider themselves as not disabled with a *seeing difficulty*
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 72,000人认为自己有*视力困难*但不认为自己是残疾人
- en: Estimated number of people in the UK living with sight loss in 2011 - 1,865,900
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2011年英国视力受损人口估计人数-1,865,900
- en: Estimated number of people in the UK predicted to be living with sight loss
    in 2020 - 2,269,700
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2020年英国预计患有视力受损的人数-2,269,700
- en: Estimated number of adults with diabetes, a major cause of visual impairments
    in 2012 - 3,866,980
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2012年英国成年糖尿病患者人数，这是视力受损的主要原因-3,866,980
