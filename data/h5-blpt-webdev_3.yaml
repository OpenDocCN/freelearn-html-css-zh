- en: Chapter 3. Creating Your Site
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。创建您的网站
- en: Now that we have done all the basic housekeeping with respect to our project,
    let us look at the actual task of building this site. We will first start with
    the markup, jump into the stylesheets, and finally add interactivity with scripts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了关于我们项目的所有基本工作，让我们来看看构建这个网站的实际任务。我们将首先从标记开始，然后转入样式表，最后添加脚本交互性。
- en: Working on the markup
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在标记上工作
- en: 'We have a simple design in mind for our Sun and Sand festival project. The
    design is shown in the following screenshot:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对Sun and Sand音乐节项目有一个简单的设计构想。设计如下截图所示：
- en: '![Working on the markup](img/8505_03_01.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![在标记上工作](img/8505_03_01.jpg)'
- en: 'Looking at how it is organized, the broad structure of the page is explained
    as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 从组织结构上看，页面的总体结构如下所述：
- en: '**Header**: A banner logo with a set of navigation links'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**页眉**：带有一组导航链接的横幅标志'
- en: '**Main content**: The meat of the page with sections that the navigation links
    will link to'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主要内容**：页面的主要部分，其中包含导航链接将链接到的部分'
- en: '**Left column**: This contains the main content'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**左列**：这包含了主要内容'
- en: '**Right column**: This contains the secondary information that would be interesting
    to the viewers, but not essential'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**右列**：这包含了对观众可能有趣但不是必要的次要信息'
- en: '**Footer**: Sponsor logos and an audio player with music of artists, who will
    be participating in the festival'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**页脚**：赞助商标志和带有音乐的音频播放器，这些音乐将参加音乐节'
- en: Creating the markup
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建标记
- en: The **HTML5 Doctor** has a list of all elements that you can use in a web page
    at `html5doctor.com/element-index/`. Comparing this to the list we made earlier,
    it looks like the `header` tag would be good to park our logo and navigation links
    in, while the sponsor logos and audio player can go inside the `footer` tag. That
    leaves us with the main content; it seems like the `div` tag with the role of
    main would be the best fit for it!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**HTML5 Doctor**在`html5doctor.com/element-index/`上列出了您可以在网页中使用的所有元素。将其与我们之前制作的列表进行比较，看起来`header`标记很适合放置我们的标志和导航链接，而赞助商标志和音频播放器可以放在`footer`标记中。这就留下了我们的主要内容；看起来带有主要角色的`div`标记是最适合它的！'
- en: 'Here is the markup we end up with. The `index.html` page in [Chapter 2](ch02.html
    "Chapter 2. Starting Your Project"), *Starting Your Project*, contains the following
    code as well:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们最终得到的标记。[第2章](ch02.html“第2章。开始您的项目”)中的`index.html`页面，*开始您的项目*，也包含以下代码：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.PacktPub.com](http://www.PacktPu). If you purchased
    this book elsewhere, you can visit [http://www.PacktPub.com/support](http://www.PacktPub.com/su)
    and register to have the files e-mailed directly to you.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.PacktPub.com](http://www.PacktPu)购买的所有Packt图书的帐户中下载示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.PacktPub.com/support](http://www.PacktPub.com/su)并注册，文件将直接通过电子邮件发送给您。
- en: Deciding which element to use
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 决定使用哪个元素
- en: With HTML5, we have a glut of elements to choose from, causing choice paralysis
    for some of us. If there is anything in the structure of your document that seems
    to very obviously fit any of the new elements, go ahead and mark them so. If they
    don't, continue using `div` or any other element that seems to obviously fit.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用HTML5，我们有大量元素可供选择，这可能会导致一些人选择困难。如果您的文档结构中有任何明显适合任何新元素的地方，请标记它们。如果没有，请继续使用`div`或任何其他明显适合的元素。
- en: In our code, we use the `section` element when we have primary content that
    is structurally different and the `article` element for which we have similar,
    but repeating sections of content. Your views on these choices may well be different;
    in which case, I recommend you choose what you are comfortable with.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的代码中，当我们有结构上不同的主要内容时，我们使用`section`元素，当我们有类似但重复的内容部分时，我们使用`article`元素。您对这些选择的看法可能会有所不同；在这种情况下，我建议您选择您感到舒适的内容。
- en: 'If you wish to know more about the new HTML5 elements, I recommend you check
    out the chapter on semantics in *HTML5: Up & Running, Mark Pilgrim, O''Reilly*,
    under the Google Press imprint, at `diveintohtml5.info/semantics.html`.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '如果您想了解更多关于新的HTML5元素的信息，我建议您查看*HTML5: Up & Running, Mark Pilgrim, O''Reilly*中关于语义的章节，该书由Google
    Press印刷，在`diveintohtml5.info/semantics.html`上可以找到。'
- en: Writing valid markup
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编写有效的标记
- en: Writing valid markup ensures your page behaves consistently across all browsers
    that render it. Valid markup refers to markup that adheres to the Web standards
    that browsers comply with. This way, you will prevent any unpredictable behavior.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 编写有效的标记可以确保您的页面在所有呈现它的浏览器中表现一致。有效的标记是指符合浏览器遵循的Web标准的标记。这样，您将防止任何不可预测的行为。
- en: The easiest way to write valid markup is to use tools that validate it instantly
    as and when you save your file.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 编写有效的标记的最简单方法是使用可以在保存文件时立即验证的工具。
- en: In [Chapter 2](ch02.html "Chapter 2. Starting Your Project"), *Starting Your
    Project*, I recommended using Sublime Text and Vim for Web development. Both of
    these tools have inline validation that you can use to write valid markup. Moreover,
    these tools also provide autocompletion of tags and elements that make writing
    valid markup trivial.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.html“第2章。开始您的项目”)中，*开始您的项目*，我建议在Web开发中使用Sublime Text和Vim。这两种工具都有内联验证，您可以使用它们来编写有效的标记。此外，这些工具还提供标签和元素的自动完成，使编写有效的标记变得微不足道。
- en: In the event of you not having access to these tools, I recommend using `validator.w3.org/`
    to validate your markup.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您无法访问这些工具，我建议使用`validator.w3.org/`来验证您的标记。
- en: It is essential to have these tools automated for you to make sure you reduce
    any issues with your site to the absolute minimum.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对于您来说，自动化这些工具非常重要，以确保将您网站上的任何问题减少到最低限度。
- en: Creating the styles
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建样式
- en: 'Now that we have the markup ready, let us look at how we should be styling
    it. HTML5 Boilerplate comes with a stylesheet that has the best default styles.
    If you open `main.css`, you will find the following section in between the `Chrome
    Frame prompt` style rules and the `Helper classes` section:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好了标记，让我们看看应该如何进行样式设置。HTML5样板带有最佳默认样式的样式表。如果您打开`main.css`，您会在`Chrome框架提示`样式规则和`辅助类`部分之间找到以下部分：
- en: '![Creating the styles](img/8505_03_02.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![创建样式](img/8505_03_02.jpg)'
- en: This is where we will compose our style rules. Later on, we will look at how
    you can use some of the style frameworks to make writing this easier with **Sass**
    ([http://sass-lang.com](http://sass-lang.com)) or **Less** ([http://lesscss.org/](http://lesscss.org/)).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们将撰写样式规则的地方。稍后，我们将看看如何使用**Sass** ([http://sass-lang.com](http://sass-lang.com))或**Less**
    ([http://lesscss.org/](http://lesscss.org/))来使用一些样式框架，以便更轻松地编写样式。
- en: 'Without even writing a line of CSS, you will note that our page looks like
    the website displayed in the following screenshot:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 即使不写一行CSS代码，您会注意到我们的页面看起来就像以下截图中显示的网站：
- en: '![Creating the styles](img/8505_03_03.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![创建样式](img/8505_03_03.jpg)'
- en: This default style is thanks to the normalize style rules that are available
    in HTML5 Boilerplate.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这个默认样式要归功于HTML5样板中可用的规范化样式规则。
- en: Why not reset.css?
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么不使用reset.css？
- en: For a very long time, the recommendation was to use `reset.css` , which is available
    at `html5doctor.com/html-5-reset-stylesheet/` and resets the margin and padding
    of every available element to `0`, in addition to making the font size of all
    headings the same as the body text and without a higher font weight.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 很长一段时间以来，建议使用`reset.css`，它可以在`html5doctor.com/html-5-reset-stylesheet/`上找到，并将每个可用元素的边距和填充重置为`0`，并使所有标题的字体大小与正文文本相同，而没有更高的字体重量。
- en: HTML5 Boilerplate recommends against this policy. Browsers provide useful browser
    defaults, which would make your stylesheets smaller as you don't have to redeclare
    those styles again.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5样板建议不要这样做。浏览器提供有用的浏览器默认值，这将使您的样式表更小，因为您不必重新声明这些样式。
- en: 'With `normalize.css` , you wouldn''t be seeing the following kind of clutter
    in your debugging tools:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`normalize.css`，您将不会在调试工具中看到以下类型的混乱：
- en: '![Why not reset.css?](img/8505_03_04.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![为什么不使用reset.css？](img/8505_03_04.jpg)'
- en: Nicolas Gallagher, one of the co-creators of `normalize.css`, has written in
    great detail about why it is better than `reset.css` at `nicolasgallagher.com/about-normalize-css/`,
    which is a good read for those still unconvinced about the merits of normalizing
    CSS.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`normalize.css`的联合创始人之一Nicolas Gallagher在[nicolasgallagher.com/about-normalize-css/](http://www.w3.org/community/webed/wiki/Inheritance_and_cascade#Specificity)上详细介绍了为什么它比`reset.css`更好，对于那些仍然不确定CSS规范化的优点的人来说，这是一篇很好的文章。'
- en: Helpful style classes we can use
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们可以使用的有用样式类
- en: In [Chapter 1](ch01.html "Chapter 1. Before We Begin"), *Before We Begin*, we
    briefly saw that HTML5 Boilerplate comes with a bunch of default classes that
    are useful to work with. You would have noticed that we are using some of these
    classes in our style rules.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第1章](ch01.html "第1章.开始之前")*开始之前*中，我们简要地看到HTML5样板带有一堆默认类，这些类对工作很有用。您可能已经注意到我们在样式规则中使用了其中一些类。
- en: All our helper classes are defined last, so they can override all your other
    styles when used. Make sure the properties they override are not over-specified
    elsewhere; you can read more about specificity at [www.w3.org/community/webed/wiki/Inheritance_and_cascade#Specificity](http://www.w3.org/community/webed/wiki/Inheritance_and_cascade#Specificity).
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所有的辅助类都是最后定义的，因此当使用时它们可以覆盖所有其他样式。确保它们覆盖的属性在其他地方没有过度指定；您可以在[www.w3.org/community/webed/wiki/Inheritance_and_cascade#Specificity](http://www.w3.org/community/webed/wiki/Inheritance_and_cascade#Specificity)上阅读更多关于特异性的信息。
- en: Image replacement
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图像替换
- en: 'In our project, we want to have a spiffy logo for the `Sun & Sand Festival
    2012` heading. HTML5 Boilerplate has a handy image replacement class that can
    be used for this. In the markup, we will simply add a class called `ir` to the
    `h1` tag, as shown in the following code:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的项目中，我们希望为`Sun & Sand Festival 2012`标题添加一个时髦的徽标。HTML5样板有一个方便的图像替换类可用于此目的。在标记中，我们只需向`h1`标签添加一个名为`ir`的类，如下面的代码所示：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'What this does is apply the styles specified in HTML5 Boilerplate''s image
    replacement class (`ir`) to hide the text. All you need to do then is add a background
    image to the `h1` element along with its width and height, so it displays as per
    your specification as shown in the following code:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的作用是将HTML5样板中图像替换类（`ir`）中指定的样式应用于隐藏文本。然后，您只需要向`h1`元素添加背景图像以及其宽度和高度，以便按照您的规范显示，如以下代码所示：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will result in the heading looking similar to the following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致标题看起来类似于以下截图：
- en: '![Image replacement](img/8505_03_05.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图像替换](img/8505_03_05.jpg)'
- en: Hiding elements
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 隐藏元素
- en: 'Our markup has content, which we want to show only when a user clicks. In our
    website, we want a Google Map to show, when the user clicks on the **Getting Here**
    link. It is very simple to do so by using an `iframe`, as shown in the following
    code snippet:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的标记中有内容，我们希望只有在用户点击时才显示。在我们的网站中，当用户点击**到这里**链接时，我们希望显示一个Google地图。通过使用`iframe`，这样做非常简单，如下面的代码片段所示：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'But this means, as soon as your page loads in a browser, the browser will attempt
    to show the map immediately and fetch assets from Google Maps. But we only want
    this map to show when the user clicks on the **Getting Here** link. HTML5 Boilerplate
    provides a class name that you can use for such purposes. We will apply a class
    called `hidden` to make sure these elements do not render until they are explicitly
    made to display. The `hidden` class is used in the following code snippet:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 但这意味着，一旦您的页面在浏览器中加载，浏览器将立即尝试显示地图并从Google地图获取资源。但我们只希望在用户点击**到这里**链接时才显示这张地图。HTML5样板提供了一个可以用于此类目的的类名。我们将应用一个名为`hidden`的类，以确保这些元素在明确设置为显示之前不会呈现。`hidden`类在以下代码片段中使用：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Do note that this makes the content disappear from screen readers and the browser
    displays.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这会使内容从屏幕阅读器和浏览器显示中消失。
- en: Note
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Screen readers are devices used to aid in reading a web page for those who are
    unable to view text on the screen. Victor Tsaran has a great introduction to screen
    readers in a video available at [www.yuiblog.com/blog/2007/05/14/video-intro-to-screenreaders/](http://www.yuiblog.com/blog/2007/05/14/video-intro-to-screenreaders/).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕阅读器是用于帮助那些无法在屏幕上查看文本的人阅读网页的设备。Victor Tsaran在[www.yuiblog.com/blog/2007/05/14/video-intro-to-screenreaders/](http://www.yuiblog.com/blog/2007/05/14/video-intro-to-screenreaders/)上有一个关于屏幕阅读器的很好的介绍视频。
- en: 'The rule that makes this happen is as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使这种情况发生的规则如下：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: This ensures all screen readers (**JAWS** and **Windows-Eyes** being the most
    popular ones) would hide all elements that have this class name applied to them.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这确保了所有屏幕阅读器（**JAWS**和**Windows-Eyes**是最流行的）都会隐藏所有具有此类名称的元素。
- en: If you want the content to be available to those who use screen readers, you
    should use the next class that we will be learning about the `visuallyhidden`
    class.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望内容对使用屏幕阅读器的用户可用，您应该使用我们将要学习的`visuallyhidden`类。
- en: Hiding elements visually
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在不影响布局的情况下隐藏元素
- en: 'Sometimes, you don''t want to render something to the screen, but have it available
    for screen readers using a **Skip Navigation** link. This would ensure that those
    who use screen readers can skip to the meat of the content immediately rather
    than listen to a list of navigation links. So, let''s add this class to our **Skip
    Navigation** link that we have in the header, as shown in the following code:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您不希望将某些内容呈现到屏幕上，但希望使用**跳转导航**链接使其对屏幕阅读器可用。这将确保那些使用屏幕阅读器的人可以立即跳转到内容的重点，而不必听一长串导航链接。因此，让我们将这个类添加到我们在页眉中的**跳转导航**链接中，如下面的代码所示：
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This makes the link disappear from our screen, but is it available to screen
    readers. The web page displayed in the following screenshot does not show the
    **Skip Navigation** link:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得链接从我们的屏幕上消失，但对于屏幕阅读器是可用的。下面的网页截图不显示**跳转导航**链接：
- en: '![Hiding elements visually](img/8505_03_07.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![在视觉上隐藏元素](img/8505_03_07.jpg)'
- en: 'The CSS rule that makes this happen is as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使这种情况发生的CSS规则如下：
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: A typical solution used to involve having them positioned absolutely with a
    `height` of `0px`, but this would prevent Apple's VoiceOver screen reader from
    reading the content.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 通常使用的解决方案涉及将它们绝对定位，并将高度设置为`0px`，但这会阻止苹果的VoiceOver屏幕阅读器读取内容。
- en: Another solution involves using the `text-indent` property to position the text
    off-screen, but then care needs to be taken when content is written in Right-To-Left
    language, where this solution would fail.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种解决方案涉及使用`text-indent`属性将文本定位到屏幕之外，但当内容用从右到左的语言书写时，需要小心，这种解决方案会失败。
- en: Using the `clip` property would avoid all of these problems, while having the
    content readable across all screen readers.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`clip`属性可以避免所有这些问题，同时使内容在所有屏幕阅读器上可读。
- en: Note
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Jonathan Snook writes about why the `clip` property is the best way to hide
    content visually, but still have it available for screen readers, at `snook.ca/archives/html_and_css/hiding-content-for-accessibility`.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 乔纳森·斯努克在`snook.ca/archives/html_and_css/hiding-content-for-accessibility`上写道，`clip`属性是在视觉上隐藏内容但仍然可供屏幕阅读器使用的最佳方式。
- en: Those who extensively use keyboard navigation would also want to skip navigation.
    But, because it is visually hidden, they would not know that this option exists.
    For this case, you want this to be available when this element is in focus. Let
    us add an additional class called `focusable` to make this available for our **Skip
    Navigation** link that would make this option visible when they make this link
    active via keyboard navigation.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 那些广泛使用键盘导航的人也希望跳过导航。但是，因为它在视觉上是隐藏的，他们不会知道这个选项存在。对于这种情况，您希望在此元素获得焦点时可用。让我们添加一个额外的类`focusable`，使我们的**跳转导航**链接在通过键盘导航激活此链接时可见。
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following screenshot shows how the **Skip Navigation** link is instantly
    visible when the user switches keyboard focus to it:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了当用户将键盘焦点切换到**跳转导航**链接时，它会立即可见：
- en: '![Hiding elements visually](img/8505_03_06.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![在视觉上隐藏元素](img/8505_03_06.jpg)'
- en: Hiding elements without impacting layout
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在不影响布局的情况下隐藏元素
- en: 'In our website, we want a tabbed display of line up over several days, as shown
    in the following screenshot:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的网站上，我们希望在几天内以选项卡形式显示阵容，如下截图所示：
- en: '![Hiding elements without impacting layout](img/8505_03_08.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![在不影响布局的情况下隐藏元素](img/8505_03_08.jpg)'
- en: 'The following is a simplified view of the markup:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是标记的简化视图：
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The simplest way to do this would be to show only **Day 1** and use the `hidden`
    class to hide the rest of the days, as shown in the following code snippet:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法是只显示**Day 1**，并使用`hidden`类隐藏其余的天数，如下面的代码片段所示：
- en: '[PRE10]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: By hiding the elements, we make the dimensions that they occupy vanish to 0\.
    This means the area previously occupied by that content collapses.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 通过隐藏元素，我们使其占用的尺寸消失为0。这意味着以前由该内容占用的区域会坍塌。
- en: 'As the user clicks on one or the other navigation links for each day''s line
    up, the content for each day will frequently be hidden and shown, which will look
    jarring, as shown in the following screenshot:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户点击每天阵容的导航链接时，每天的内容将经常被隐藏和显示，这看起来会很突兀，如下截图所示：
- en: '![Hiding elements without impacting layout](img/8505_03_09.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![在不影响布局的情况下隐藏元素](img/8505_03_09.jpg)'
- en: 'In such a case, we can use the helper class `invisible` to make the element
    not render, but maintain its dimensions; it will not be visible on the screen
    or be available to screen readers. As you can see in the following screenshot,
    the **TICKETS** section does not change its position depending on which tab is
    active:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们可以使用辅助类`invisible`来使元素不渲染，但保持其尺寸；它在屏幕上不可见，也不可供屏幕阅读器使用。如下截图所示，**TICKETS**部分不会根据哪个选项卡处于活动状态而改变位置：
- en: '![Hiding elements without impacting layout](img/8505_03_10.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![在不影响布局的情况下隐藏元素](img/8505_03_10.jpg)'
- en: Clearing floats
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 清除浮动
- en: 'We are positioning the image elements on the left-hand side of the artists''
    names. We do this by floating the images to the left. Luckily for us, we do not
    have any content that follows the container with floated elements. If we did,
    then that content would be overlaid on top of the floated element. You can prevent
    this from occurring by setting a class called `clearfix` on the parent container
    of the floated elements. In our case, to ensure our floated elements never trigger
    this behavior, we shall add the `clearfix` class to the parent element of the
    artist image element:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将图像元素定位在艺术家姓名的左侧。我们通过将图像浮动到左侧来实现这一点。幸运的是，我们没有任何跟随浮动元素的内容。如果有的话，那么该内容将覆盖在浮动元素上。您可以通过在浮动元素的父容器上设置一个名为`clearfix`的类来防止发生这种情况。在我们的情况下，为了确保我们的浮动元素永远不会触发这种行为，我们将在艺术家图像元素的父元素上添加`clearfix`类：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: To learn more about how the `clearfix` class works, read about it in [Appendix](apa.html
    "Appendix A. You Are an Expert,Now What?"), *You Are an Expert, Now What?*
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解`clearfix`类的工作原理，请阅读[附录](apa.html "附录 A. You Are an Expert,Now What?")中的相关内容，*You
    Are an Expert, Now What?*
- en: 'Now that we have taken care of the basic essentials, let us apply styles to
    spruce up the page itself to look more like the design we had in mind. The following
    code snippet shows how to add styles to our page:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经处理了基本要点，让我们将样式应用到页面上，使其看起来更像我们心目中的设计。以下代码片段显示了如何向我们的页面添加样式：
- en: '[PRE12]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Writing valid stylesheets
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写有效的样式表
- en: When we went through that, you might have noticed that the styles have no typos
    whatsoever. The kind copy editors have no doubt done a wonderful job, but I realize
    you have no such assistants when you write your stylesheets! An errant typo could
    cause us untold trauma as we hunt why a particular style does not get applied.
    This is why it is important to also automate validation of your styles and use
    autocompletion to automate as much of your style declarations as possible.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们浏览时，您可能已经注意到样式中没有任何拼写错误。编辑人员毫无疑问做得很好，但我意识到在编写样式表时您没有这样的助手！一个错误的拼写错误可能会给我们带来无法估量的创伤，因为我们要找出为什么某个特定的样式没有被应用。这就是为什么自动验证样式并尽可能自动完成样式声明也很重要。
- en: Sublime Text and Vim both have autocompletion of CSS properties available, and
    you can automate the insertion of the semicolon at the end too! If you have no
    access to these tools, you can use the online CSS validator at `jigsaw.w3.org/css-validator/`
    to test your CSS.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Sublime Text和Vim都提供CSS属性的自动补全，并且您还可以自动插入分号！如果您无法使用这些工具，您可以使用在线CSS验证器`jigsaw.w3.org/css-validator/`来测试您的CSS。
- en: There is another way to automate writing valid and productive style rules—by
    using an alternative style language that compiles into CSS. We shall be looking
    into some of these languages next.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 还有另一种自动编写有效和高效样式规则的方法——使用编译成CSS的替代样式语言。接下来我们将研究一些这样的语言。
- en: Style languages to write productive stylesheets
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用样式语言编写高效的样式表
- en: For a very long time, the only way to write stylesheets was to use the syntax
    that W3C provided for within the specifications that it produced. However, there
    are a lot of productivity benefits to be gained by using some programming logic
    to write stylesheets. But browsers could only understand syntaxes that are mandated
    by the W3C specifications. This means, any style language that uses additional
    programmable features should be converted to a browser-understandable typical
    stylesheet (this is called compilation).
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 很长一段时间以来，编写样式表的唯一方法是使用W3C在其规范中提供的语法。然而，通过使用一些编程逻辑来编写样式表，可以获得许多生产力上的好处。但是浏览器只能理解W3C规范规定的语法。这意味着任何使用额外可编程功能的样式语言都应该转换为浏览器可理解的典型样式表（这称为编译）。
- en: One of the earliest style languages designed for this is called Sass. Now, we
    have a few more, the most popular ones being Sass, Less, and Stylus. In both Sass
    and Less, valid CSS is automatically valid Sass and Less code. This makes it trivial
    to port it from CSS to these languages.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最早为此设计的样式语言之一称为Sass。现在，我们有了一些更多，最流行的是Sass、Less和Stylus。在Sass和Less中，有效的CSS自动成为有效的Sass和Less代码。这使得从CSS转换到这些语言变得微不足道。
- en: Typically, you would be writing your style rules in files named as `main.scss`
    (if you are using Sass), `main.less` (if you are using Less), or `main.styl` (if
    you are using Stylus). Using the compilers that come with each of these languages,
    these files will respectively be compiled to `styles.css`.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您会在名为`main.scss`（如果您使用Sass）、`main.less`（如果您使用Less）或`main.styl`（如果您使用Stylus）的文件中编写样式规则。使用每种语言自带的编译器，这些文件将分别编译为`styles.css`。
- en: Advantages
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 优点
- en: 'Using style languages has many merits, such as the following:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 使用样式语言有许多优点，例如以下：
- en: These languages enable you to always write syntactically valid stylesheets as
    they all throw an error if you use any invalid syntax.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些语言使您始终可以编写语法有效的样式表，因为如果使用任何无效的语法，它们都会抛出错误。
- en: All of these languages provide some of the sought-after features in CSS, such
    as variables, ability to re-use style rules in other classes without repeating
    yourself several times, arithmetic calculations, color functions, and more.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有这些语言都提供了一些在CSS中受欢迎的功能，例如变量、能够在其他类中重复使用样式规则而不必重复多次、算术计算、颜色函数等等。
- en: You can choose to output expanded readable styles when developing, and then
    output a compact performance-optimized, whitespace-stripped stylesheet when you
    are using it in production.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在开发时，您可以选择输出扩展可读的样式，然后在生产中使用时输出紧凑的性能优化、去除空白的样式表。
- en: Disadvantages
  id: totrans-109
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: 'However, using style languages also has some disadvantages, as explained in
    the following points:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，使用样式语言也有一些缺点，如下所述：
- en: While it is easy to convert to Sass or Less, it is not possible to make modifications
    in the resulting stylesheet and have those changes be ported over to their original
    Sass/Less/Style files. So, you need to be careful to make sure nobody edits the
    resulting CSS files.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虽然很容易转换为Sass或Less，但不可能对生成的样式表进行修改，并将这些更改传输到其原始的Sass/Less/Style文件中。因此，您需要小心确保没有人编辑生成的CSS文件。
- en: Working in a team requires the whole team to co-opt to use one of these languages.
    Without that, it is impossible to maintain two forks of the stylesheets and keep
    them in sync.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队合作需要整个团队共同使用其中一种语言。如果没有这样做，就不可能维护两个样式表的分支并使它们保持同步。
- en: When debugging, if you are inspecting an element, most debuggers only reveal
    the line numbers in a stylesheet and not in the original language files. This
    might make it difficult to find out where in your original files the particular
    rule would be found.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在调试时，如果您正在检查一个元素，大多数调试器只会显示样式表中的行号，而不是原始语言文件中的行号。这可能会使得难以找出在原始文件中特定规则的位置。
- en: Where to learn?
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习的地方？
- en: If you are interested in learning more about these languages, read on for some
    good places to get started.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对了解更多关于这些语言感兴趣，请继续阅读一些好的入门地点。
- en: Sass
  id: totrans-116
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Sass
- en: The official website is `sass-lang.com`. Chris Coyier has a good introduction
    video on Sass at `css-tricks.com/video-screencasts/88-intro-to-compass-sass/`.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 官方网站是`sass-lang.com`。Chris Coyier在`css-tricks.com/video-screencasts/88-intro-to-compass-sass/`上有一个关于Sass的很好的介绍视频。
- en: Less
  id: totrans-118
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Less
- en: The official website is `lesscss.org`. A video overview of Less is available
    at `net.tutsplus.com/tutorials/html-css-techniques/quick-tip-you-need-to-check-out-less-js/`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 官方网站是`lesscss.org`。有一个Less的视频概述可在`net.tutsplus.com/tutorials/html-css-techniques/quick-tip-you-need-to-check-out-less-js/`上找到。
- en: Stylus
  id: totrans-120
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Stylus
- en: The official official website is at `learnboost.github.com/stylus`. A video
    overview of Stylus is available at `thechangelog.com/post/3036532096/stylus-expressive-robust-feature-rich-css-language`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 官方官方网站在`learnboost.github.com/stylus`。有一个Stylus的视频概述可在`thechangelog.com/post/3036532096/stylus-expressive-robust-feature-rich-css-language`上找到。
- en: Using HTML5 Boilerplate with style languages
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用样式语言的HTML5 Boilerplate
- en: 'If you are fairly confident in navigating your way with any of these languages,
    then you could use any of the available ports that we will look at next, to start
    your projects:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对任何这些语言有相当自信的掌握，那么您可以使用我们接下来将要看的任何可用端口来启动您的项目：
- en: Sass
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Sass
- en: There is a fairly up-to-date port of HTML5 Boilerplate to Sass requiring **Compass**
    , which is a framework on top of Sass at `github.com/sporkd/compass-html5-boilerplate`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 Boilerplate的Sass版本相当更新，需要**Compass**，这是在`github.com/sporkd/compass-html5-boilerplate`上的Sass框架。
- en: Less
  id: totrans-126
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Less
- en: A less frequently updated port of HTML5 Boilerplate to Less exists at `github.com/m6tt/less-boilerplate`.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一个不太经常更新的HTML5 Boilerplate到Less的端口，位于`github.com/m6tt/less-boilerplate`。
- en: Stylus
  id: totrans-128
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Stylus
- en: There is no fully functional port of HTML5 Boilerplate available for Stylus,
    although using the command-line to convert it to stylus seems to be the easiest
    way. More information about using this method can be found at `learnboost.github.com/stylus/docs/executable.html`.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 目前没有针对Stylus的HTML5 Boilerplate的完全功能性端口，尽管使用命令行将其转换为stylus似乎是最简单的方法。有关使用此方法的更多信息，请访问`learnboost.github.com/stylus/docs/executable.html`。
- en: Summary
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Woah! That was an intense coding session. In this chapter, we almost created
    a whole site based on HTML5 Boilerplate. We looked at how to write markup, styles,
    and scripts. In addition, we explored some tools to make writing valid markup
    and styles easier.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 哇！那是一个紧张的编码会话。在本章中，我们几乎基于HTML5 Boilerplate创建了一个完整的网站。我们看了如何编写标记、样式和脚本。此外，我们还探索了一些工具，使编写有效的标记和样式更容易。
- en: All the changes that we have made so far to our example project are available
    at `nimbu.in/h5bp-book/chapter-3/`.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们对示例项目所做的所有更改都可以在`nimbu.in/h5bp-book/chapter-3/`上找到。
- en: In the next chapter, we will look at adding some interactivity to this pretty
    static page with jQuery and make it easier to navigate around the site.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看看如何使用jQuery为这个相当静态的页面添加一些交互性，并使其更容易在网站上进行导航。
