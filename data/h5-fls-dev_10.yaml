- en: Chapter 10. Preparing for Release
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章。准备发布
- en: Throughout the chapters of this book we have covered many different applications
    and tools for developing your HTML5 content. As with the Flash development cycle
    you have become accustomed to, you will usually need to spend some time optimizing
    your application for use on the web in the final stages of your HTML5 application
    development flow. Thankfully, just like the asset management and coding stages
    of our HTML5 development, there are a ton of great resources to aid in the preparation
    of moving your application onto a public-facing web server. When testing your
    HTML5 applications locally on the computer you are developing them on, your local
    network, unless specially configured, will not allow the content to be viewed
    on any other computer, either on your local network or on the Internet. If you
    were to install a web server on your computer and configure your networking to
    allow incoming connections, only then could you share your work with others on
    the Internet. To avoid any domain name or security issues, the common way to host
    your work on the Internet is to purchase a web hosting plan from a vendor online.
    This way your content is external from your working version and is placed on a
    server specifically dedicated to host your web content. This process isn't new
    for HTML5 by any means and is typical of what you would have done with your Flash
    **SWF** files, provided you had the same intentions. However, since HTML5 projects
    are not compiled into a single binary file such as Flash, we will need to take
    great care in making sure our project assets and code are properly set up to deliver
    a fast and secure experience to our end users. In this chapter, we will conclude
    the book by looking over many of the most optimal ways to prepare your project
    for the web.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的各章中，我们已经涵盖了许多不同的应用程序和工具，用于开发你的HTML5内容。与你习惯的Flash开发周期一样，你通常需要花一些时间来优化你的应用程序，以便在HTML5应用程序开发流程的最后阶段在网络上使用。值得庆幸的是，就像我们的HTML5开发的资产管理和编码阶段一样，有大量的优秀资源可以帮助你准备将你的应用程序移动到公共面向网络服务器上。在本地计算机上测试HTML5应用程序时，你正在开发它们的计算机上的本地网络，除非经过特殊配置，否则不允许在任何其他计算机上查看内容，无论是在你的本地网络上还是在互联网上。如果你在你的计算机上安装了一个Web服务器并配置了你的网络以允许传入连接，那么你才能与互联网上的其他人分享你的工作。为了避免任何域名或安全问题，将你的工作托管到互联网上的常见方法是从在线供应商那里购买Web托管计划。这样，你的内容就不再是你的工作版本，而是放置在专门用于托管你的Web内容的服务器上。这个过程对于HTML5来说并不新鲜，对于你的Flash
    **SWF**文件来说也是典型的，只要你有相同的意图。然而，由于HTML5项目不会被编译成Flash那样的单个二进制文件，我们需要非常小心地确保我们的项目资产和代码被正确设置，以向我们的最终用户提供快速和安全的体验。在本章中，我们将通过审视许多最佳的方式来为Web准备你的项目来结束本书。
- en: Targeting supported web browsers
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 针对支持的Web浏览器
- en: Many developers fail to constantly test their work in multiple web browsers
    during HTML5 development, either because they are too lazy to spend the time to
    do it, or they just all together forget. Easily one of the biggest issues you
    will encounter when testing and publishing your final application for public usage
    will be browser support. If you didn't manage to test your project in various
    browsers on different platforms, you may be surprised when a user complains that
    your application doesn't work for them. As HTML5 still is the new kid on the block,
    many browsers are still running to catch up with the feature support needed to
    display your HTML5 content properly.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 许多开发人员在HTML5开发过程中未能不断在多个Web浏览器中测试他们的工作，要么是因为他们懒得花时间去做，要么是因为他们完全忘记了。当你测试和发布最终应用程序供公众使用时，你将遇到的最大问题之一很可能是浏览器支持。如果你没有在不同平台的各种浏览器中测试你的项目，当用户抱怨你的应用程序对他们不起作用时，你可能会感到惊讶。由于HTML5仍然是新生力量，许多浏览器仍在努力赶上支持显示你的HTML5内容所需的功能。
- en: 'Keeping up-to-date with what current web browsers support in the realm of HTML5
    feature support can be an extremely important asset to gain as a developer. Keeping
    yourself and your project out of impending doom, because you were able to spot
    a lack of support on a specific device or platform early, cannot only save you
    tons of time, but money as well. A great "One Stop Shop" for web browser HTML5
    feature support checks is [http://caniuse.com](http://caniuse.com). After opening
    the site in a web browser you can easily select any of the specified HTML5 features
    and look into what browsers, and more importantly what browser versions support
    that specific feature:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 跟上当前Web浏览器在HTML5功能支持方面的支持是作为开发人员获得的一个极其重要的资产。让自己和你的项目远离即将到来的厄运，因为你能够早早地发现特定设备或平台上的支持不足，不仅可以节省大量的时间，还可以节省金钱。一个伟大的“一站式”Web浏览器HTML5功能支持检查的网站是[http://caniuse.com](http://caniuse.com)。在Web浏览器中打开该网站后，你可以轻松地选择任何指定的HTML5功能，并查看哪些浏览器，更重要的是哪些浏览器版本支持该特定功能：
- en: '![Targeting supported web browsers](img/3325OT_10_01.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![针对支持的Web浏览器](img/3325OT_10_01.jpg)'
- en: Taking a look at the preceding screenshot of the **Canvas** tag element support
    statistics (at the time of writing this book), we can see that the **Canvas**
    element is now supported by around 85 percent of browsers. This site is almost
    a must have when sitting down to create your initial technical outline for your
    project. With even a slight idea of some of the features in HTML5 you may use
    in your project, you can simply jump over to [http://caniuse.com](http://caniuse.com)
    and determine what your end users will be required to use to properly view your
    content.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，看一下前面的**Canvas**标签元素支持统计的屏幕截图，我们可以看到**Canvas**元素现在被大约85%的浏览器支持。这个网站几乎是在开始为项目创建初始技术大纲时必不可少的。只要稍微了解一些HTML5中可能在项目中使用的功能，你就可以简单地跳转到[http://caniuse.com](http://caniuse.com)并确定你的最终用户需要使用什么来正确查看你的内容。
- en: '[http://html5readiness.com](http://html5readiness.com) is a great example of
    a great HTML5 project in action as the site uses the data from [http://caniuse.com](http://caniuse.com)
    to display the HTML5 **Readiness** in an easy to view, single page, interactive
    graphic.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://html5readiness.com](http://html5readiness.com)是一个很好的HTML5项目的示例，因为该网站使用了来自[http://caniuse.com](http://caniuse.com)的数据，以便以易于查看的单页交互式图形显示HTML5的**准备情况**。'
- en: '![Targeting supported web browsers](img/3325OT_10_02.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![目标支持的Web浏览器](img/3325OT_10_02.jpg)'
- en: This can be a great resource just like [http://caniuse.com](http://caniuse.com),
    however your clients or designers may like it even more for its ease of use and
    feature support timeline visualizations.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以是一个很好的资源，就像[http://caniuse.com](http://caniuse.com)一样，但是你的客户或设计师可能更喜欢它，因为它易于使用，并且支持功能的时间线可视化。
- en: Having the overview of global browser support is a great resource, but if you
    are interested in digging into the specifications and statistics of the browser
    you use on your computer, head over to [http://html5test.com](http://html5test.com)
    and let the site score your browser.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 了解全球浏览器支持的概况是一个很好的资源，但是如果你对你的电脑上使用的浏览器的规范和统计数据感兴趣，可以前往[http://html5test.com](http://html5test.com)让该网站评估你的浏览器。
- en: '![Targeting supported web browsers](img/3325OT_10_03.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![目标支持的Web浏览器](img/3325OT_10_03.jpg)'
- en: The score generated by the site can be taken as a general overview of all of
    the HTML5 features that this site tests your browser for. Scrolling down the results
    page, you will find the complete outline of each of the tested features and if
    it passed the test or not.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 该网站生成的评分可以作为该网站测试你的浏览器的所有HTML5功能的概览。在结果页面向下滚动，你会找到每个被测试功能的完整概述，以及它是否通过了测试。
- en: '![Targeting supported web browsers](img/3325OT_10_04.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![目标支持的Web浏览器](img/3325OT_10_04.jpg)'
- en: With these easy to use tools that are all accessible online for free, you have
    all of the data at your fingertips to allow for proper planning and outlining
    of your HTML5 applications. Keep in mind that as new browsers are released and
    current versions are updated, this data will continue to evolve. You may even
    find that some of the data you referenced at the beginning of your project development
    has changed by the time you finish. Therefore, testing your project for browser
    compatibility during development is always worth the extra effort.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些易于使用的工具都可以免费在线访问，让你可以轻松获取所有数据，以便正确规划和概述你的HTML5应用。请记住，随着新浏览器的发布和当前版本的更新，这些数据将继续发展。你甚至可能会发现，在项目开发初期参考的一些数据在你完成时已经发生了变化。因此，在开发过程中测试项目的浏览器兼容性总是值得额外的努力。
- en: Tip
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Be sure to also checkout the HTML5 tests for mobile browsers as well at [http://html5test.com/results/mobile.html](http://html5test.com/results/mobile.html).
    There you can easily find out which current mobile devices best support not only
    the features your HTML5 application utilizes, but also the HTML5 specification
    as a whole. This resource can be of great help when also looking to purchase your
    next mobile phone or tablet.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一定要查看移动浏览器的HTML5测试，网址是[http://html5test.com/results/mobile.html](http://html5test.com/results/mobile.html)。在那里，你可以轻松找出当前哪些移动设备最好地支持你的HTML5应用所使用的功能，以及整个HTML5规范。这个资源在购买下一个手机或平板电脑时也会非常有帮助。
- en: Client-side tests
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端测试
- en: With the amount of mobile and desktop devices that have an HTML5-compliant browser,
    growing at an exponential rate, the requirement for developers to test applications
    or web content on a variety of different setups has become a requirement. Unfortunately,
    the amount of time required to set yourself up with testing environments on all
    of these devices can add up very quickly. To save yourself copious amounts of
    time during the testing phase, you may be interested in checking out [http://www.browserstack.com](http://www.browserstack.com).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 随着支持HTML5的移动和桌面设备数量呈指数增长，开发人员需要在各种不同的设置上测试应用程序或网络内容的需求也在增加。不幸的是，花费在所有这些设备上设置测试环境所需的时间可能会非常快速。为了在测试阶段节省大量时间，你可能会对查看[http://www.browserstack.com](http://www.browserstack.com)感兴趣。
- en: '![Client-side tests](img/3325OT_10_05.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![客户端测试](img/3325OT_10_05.jpg)'
- en: After signing up with BrowserStack, you can easily access all of the modern
    desktop and mobile browsers right from the service. Rather than having to configure
    each machine and browser independently, BrowserStack has done all of the hard
    work for you by only delivering access to the specific browser of your choice
    already preconfigured with development tools. BrowserStack is a paid service,
    but free trials are available if you are interested. Personally I still suggest
    doing this type of testing manually at least once, to see how much you can justify
    the cost of a service like this. If you are the type of person with 10 computers
    sitting in your basement, by all means set up your own testing environment. You
    can also always set up a number of virtual machines on your development computer
    to enable you to turn on and off your testing machines from a single computer.
    Regardless of how you do it, it will only usually be a matter of time before you
    are sick and tired of spending countless hours just maintaining your testing environment
    and a service such as BrowserStack may be the ultimate solution.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 注册BrowserStack后，你可以轻松地从该服务中访问所有现代桌面和移动浏览器。与必须独立配置每台机器和浏览器不同，BrowserStack已经为你做好了所有的艰苦工作，只需提供预先配置了开发工具的特定浏览器的访问权限。BrowserStack是一个付费服务，但如果你感兴趣，也可以获得免费试用。我个人建议至少手动进行一次这种类型的测试，以便看看你能否证明使用这样的服务的成本。如果你是那种在地下室有10台电脑的人，那么请设置自己的测试环境。你也可以在开发电脑上设置多个虚拟机，以便你可以从一台电脑上打开和关闭你的测试机器。无论你如何做，通常只是时间的问题，你会厌倦花费无数小时来维护你的测试环境，而BrowserStack等服务可能是最终的解决方案。
- en: Browser Nightly builds
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览器Nightly版本
- en: If you are really pushing the limits of what HTML5 can do, it may be a wise
    decision to test your content on the absolute latest version of all of the intended
    browsers that will be viewing your site. With privately developed browsers such
    as Internet Explorer, you will have to wait for Microsoft to release or prerelease
    the next version, but with open source browsers such as Google Chrome ([https://www.google.com/intl/en/chrome/browser/](https://www.google.com/intl/en/chrome/browser/))
    or Mozilla's Firefox ([http://www.mozilla.org/en-US/firefox/new/](http://www.mozilla.org/en-US/firefox/new/)),
    you can download the Nightly or actively developed version of the software to
    see what direction the next version is heading in.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您真的在挑战HTML5的极限，测试您的内容在将要查看您网站的所有预期浏览器的最新版本上可能是一个明智的决定。对于像Internet Explorer这样的私人开发的浏览器，您将不得不等待微软发布或预发布下一个版本，但对于像Google
    Chrome（[https://www.google.com/intl/en/chrome/browser/](https://www.google.com/intl/en/chrome/browser/)）或Mozilla的Firefox（[http://www.mozilla.org/en-US/firefox/new/](http://www.mozilla.org/en-US/firefox/new/)）这样的开源浏览器，您可以下载Nightly或积极开发的软件版本，以了解下一个版本的方向。
- en: '![Browser Nightly builds](img/3325OT_10_06.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![浏览器Nightly版本](img/3325OT_10_06.jpg)'
- en: Google Chrome browser's nightly build is referred to as the Canary build and
    can be found at [https://www.google.ca/intl/en/chrome/browser/canary.html](https://www.google.ca/intl/en/chrome/browser/canary.html).
    As you can see from the tagline in the preceding project website screenshot, this
    build of Chrome is absolute latest and comes with the warning of its possible
    instability right out front. It's worth keeping in mind that you can safely install
    the standard version of Google Chrome on your computer to continue to utilize
    for normal web usage. The Canary build can be opened at any time and is preset
    to continually update itself from the Google distribution server when a new version
    is posted for public usage.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Google Chrome浏览器的Nightly版本被称为Canary版本，可以在[https://www.google.ca/intl/en/chrome/browser/canary.html](https://www.google.ca/intl/en/chrome/browser/canary.html)找到。从前面项目网站截图的标语中可以看出，这个Chrome版本是绝对最新的，并且在前面明确警告了其可能的不稳定性。值得记住的是，您可以安全地在计算机上安装标准版本的Google
    Chrome以继续正常使用。Canary版本可以随时打开，并且预设为在Google发布新版本供公众使用时从其分发服务器上自动更新。
- en: Of course, as mentioned, Mozilla has their own nightly build of Firefox available
    for download as well at [http://nightly.mozilla.org](http://nightly.mozilla.org).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，正如前面提到的，Mozilla也有他们自己的Firefox Nightly版本可供下载，网址是[http://nightly.mozilla.org](http://nightly.mozilla.org)。
- en: '![Browser Nightly builds](img/3325OT_10_07.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![浏览器Nightly版本](img/3325OT_10_07.jpg)'
- en: The nightly builds of Firefox currently come in both the desktop and mobile
    versions of the web browser and again can easily be installed side-by-side with
    your preexisting version of Firefox stable on your computer. Using these development
    versions of popular web browsers not only allows you to test your code on software
    that will soon be available, but it also give you an inside look at some of the
    new and exciting features that the general public may not be able to use until
    the next stable release.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Firefox的Nightly版本目前提供了桌面和移动版本的网络浏览器，并且可以轻松地与您计算机上现有的稳定版本的Firefox并存。使用这些流行网络浏览器的开发版本不仅可以让您在即将推出的软件上测试您的代码，而且还可以让您深入了解一些新的令人兴奋的功能，这些功能一般公众可能要等到下一个稳定版本才能使用。
- en: So is it really worth the time to test on these browsers, that, in effect, no
    one is really using yet? Well, being preemptive with your development can really
    pay off for applications that may go untouched from updates or patches on the
    Internet. If you don't manage to catch the fact that your HTML5 web application
    isn't working in the browser that was released a couple months after you published
    your application, that could be a really bad thing. On top of that, spending time
    with these new web browsers will only make you more aware and savvy to what features
    you can utilize when developing your applications. You will begin to learn more
    about the inner workings of a specific browser's development and release cycles
    as well.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，真的值得在这些浏览器上进行测试吗？实际上，没有人真正使用这些浏览器吗？嗯，对于可能在互联网上不受更新或补丁影响的应用程序来说，提前进行开发确实可以带来回报。如果您没有注意到您的HTML5网络应用程序在您发布应用程序几个月后发布的浏览器中无法工作，那可能是一件非常糟糕的事情。此外，花时间与这些新的网络浏览器一起将使您更加了解和熟悉在开发应用程序时可以利用的功能。您将开始更多地了解特定浏览器的开发和发布周期的内部工作。
- en: WebRTC
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WebRTC
- en: The move to utilize media inputs, such as camera and microphones, within your
    HTML5 applications at an all-time high, WebRTC has come to provide a solution
    to this issue. The WebRTC project is currently supported by Google, Mozilla, and
    Opera, and the project website can be found at [http://www.webrtc.org](http://www.webrtc.org).
    From a Flash developers perspective, the concept of using web cameras and microphones
    without the need for third party plugins should get you even more excited about
    HTML5 development. The features that WebRTC has started to bring to the hands
    of HTML5 developers pushes the limits of what HTML5 can do even closer to that
    of Flash.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 利用媒体输入，如摄像头和麦克风，在您的HTML5应用程序中的使用达到了历史最高水平，WebRTC已经提供了解决这个问题的解决方案。WebRTC项目目前得到Google、Mozilla和Opera的支持，项目网站可以在[http://www.webrtc.org](http://www.webrtc.org)找到。从Flash开发者的角度来看，使用网络摄像头和麦克风而无需第三方插件的概念应该让您对HTML5开发更加兴奋。WebRTC已经开始为HTML5开发者带来的功能将HTML5的极限推向了与Flash更加接近的地步。
- en: Tip
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you have a friend online and you want to test a simple WebRTC web cam chat
    application, head over to [http://apprtc.appspot.com](http://apprtc.appspot.com)
    and connect to the server which will return an ID for your user. Send that ID
    to a friend along with the URL to the site and connect to each other online in
    a pure HTML5 audio and video chat.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有在线朋友，并且想测试一个简单的WebRTC网络摄像头聊天应用程序，请转到[http://apprtc.appspot.com](http://apprtc.appspot.com)并连接到将返回用户ID的服务器。将该ID与站点的URL一起发送给朋友，并在纯HTML5音频和视频聊天中在线连接到彼此。
- en: 'Since WebRTC is still a very new specification, only some of the modern browsers
    available right now support it and unfortunately for developers, the support methods
    are a little bit different for each browser. This initial step that any developer
    working with WebRTC should make is to check if the current browser even supports
    this feature. This can be done with some JavaScript function such as the following
    code snippet:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 由于WebRTC仍然是一个非常新的规范，目前仅有一些现代浏览器支持它，而且不幸的是，对于开发人员来说，每个浏览器的支持方法都有些不同。任何使用WebRTC的开发人员应该做的初始步骤是检查当前浏览器是否支持此功能。可以使用一些JavaScript函数来完成这个任务，比如以下代码片段：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As you can see, the methods for interacting with the User Media object element
    within JavaScript differ from `getUserMedia` all the way to `msGetUserMedia`,
    depending on the type of web browser attempting to load it. By conditioning all
    of the ways to lookup the user media object into a single return statement, this
    function will either return the user media object, if the browser supports it,
    or return a value of false if nothing was found. With this `hasGetUserMedia` function
    applied into an HTML5 project, we can easily incorporate the function call into
    further code, that applies the user's web cam feed onto the web page if available.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，与JavaScript中的用户媒体对象元素交互的方法从`getUserMedia`到`msGetUserMedia`都不同，具体取决于尝试加载它的Web浏览器的类型。通过将查找用户媒体对象的所有方法条件化为一个单一的返回语句，这个函数将返回用户媒体对象（如果浏览器支持），或者如果没有找到任何内容，则返回false。将这个`hasGetUserMedia`函数应用到HTML5项目中后，如果可用，我们可以轻松地将函数调用应用到进一步的代码中，将用户的网络摄像头视频流应用到网页上。
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The initial line of this code example applies the element with the ID of `camera`
    to the variable `video`. This element in the HTML document is actually a video
    tag element and looks like the following:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码示例的初始行将ID为`camera`的元素应用到变量`video`上。HTML文档中的这个元素实际上是一个视频标签元素，看起来像下面这样：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You may also recall that the video element can be styled by CSS3 properties,
    giving you a ton of design options for displaying the web camera video feed. So
    let's extend these WebRTC related code snippets into a working example with some
    CSS3 styles. We will start by creating our initial HTML page to be displayed in
    the web browser.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还记得，视频元素可以通过CSS3属性进行样式设置，为显示网络摄像头视频提供了大量的设计选项。因此，让我们将这些与WebRTC相关的代码片段扩展为一个带有一些CSS3样式的工作示例。我们将从创建初始的HTML页面开始，以在Web浏览器中显示。
- en: '[PRE3]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Within this HTML page we have also added some simple CSS3 filters with unique
    class names for each. Each of the different CSS styles appended into the HTML
    document also have an HTML button element to correspond with it, located within
    the body of the document. Finally we reference the external JavaScript file that
    will deal with the WebRTC functionality which we will create next.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个HTML页面中，我们还添加了一些简单的CSS3过滤器，为每个过滤器添加了唯一的类名。每个不同的CSS样式都附加到HTML文档中，并在文档的主体中有一个对应的HTML按钮元素。最后，我们引用将处理WebRTC功能的外部JavaScript文件，接下来我们将创建这个文件。
- en: With the HTML file saved and a new file open to write our JavaScript into, we
    can append the code snippets we have already looked at, as well as some code to
    append the CSS styles, to the video element, when the user clicks the buttons
    on the HTML page.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 保存了HTML文件并打开一个新文件来编写我们的JavaScript代码，我们可以将已经查看过的代码片段附加到视频元素上，以及一些代码来附加CSS样式，当用户点击HTML页面上的按钮时。
- en: '[PRE4]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As you can see, the bulk of this JavaScript is dealing with the CSS manipulation
    of the video element and not the setup of the web camera stream. Setting up a
    WebRTC connection to the end user, provided their browser supports it, is easily
    accomplished with a few lines of a JavaScript.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，这个JavaScript的大部分内容都在处理视频元素的CSS操作，而不是设置网络摄像头流。只要用户的浏览器支持，通过几行JavaScript代码就可以轻松地为最终用户建立WebRTC连接。
- en: '![WebRTC](img/3325OT_10_08.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![WebRTC](img/3325OT_10_08.jpg)'
- en: Thankfully, I was smart enough to add in the blur effect to hide myself using
    this example in the preceding screenshot. Keep in mind that just like camera and
    microphone connections in Flash, the stream is completely local to the user and
    not sent to any other server unless you have manually added that feature into
    the application. For applications such as multi-user chat and public streaming,
    you will require a server to send your audio or video stream to. Node.js would
    be a perfect place to begin if this type of HTML5 development sounds exciting
    to you. There is even a Node.js package dedicated to dealing with WebRTC ([https://npmjs.org/package/webrtc.io](https://npmjs.org/package/webrtc.io))
    to help get you started in the right direction.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，我足够聪明，添加了模糊效果来隐藏自己，就像在前面的截图中使用的例子一样。请记住，就像Flash中的摄像头和麦克风连接一样，流完全是用户本地的，除非您手动将该功能添加到应用程序中，否则不会发送到任何其他服务器。对于诸如多用户聊天和公共流媒体之类的应用程序，您将需要一个服务器来发送您的音频或视频流。如果您对这种HTML5开发感到兴奋，Node.js将是一个完美的开始。甚至有一个专门用于处理WebRTC的Node.js包（[https://npmjs.org/package/webrtc.io](https://npmjs.org/package/webrtc.io)）可以帮助您朝着正确的方向开始。
- en: Privacy can be a huge issue when it comes to gaining the ability to stream audio
    and video over the Internet without the use of third party plugins such as Flash
    Player. Therefore, web browsers will always prompt the end user for approval,
    when an attempt is made to connect to their media channels via WebRTC. If you
    are developing HTML5 applications that plan on utilizing features in WebRTC, this
    is an important fact to remember. If a user decides to opt out of enabling their
    microphone or web camera, the user experience of your application may break all
    together. Another step that some browsers such as Google Chrome are taking to
    keep you safe online is by applying a unique icon to any browser tab that has
    an active media stream attached to it. Regardless of whether the stream is delivering
    the content to a third party server or just using it locally, the icon will always
    be visible.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 隐私可能是一个巨大的问题，当涉及到在互联网上流式传输音频和视频而不使用Flash Player等第三方插件时。因此，当尝试通过WebRTC连接到其媒体通道时，Web浏览器将始终提示最终用户进行批准。如果您正在开发计划利用WebRTC功能的HTML5应用程序，这是一个重要的事实需要记住。如果用户决定不启用其麦克风或网络摄像头，您的应用程序的用户体验可能会完全中断。一些浏览器（如Google
    Chrome）正在采取的另一步骤是为任何具有活动媒体流的浏览器标签应用一个独特的图标，以保护您的在线安全。无论流是否将内容传送到第三方服务器或仅在本地使用，该图标始终可见。
- en: '![WebRTC](img/3325OT_10_09.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![WebRTC](img/3325OT_10_09.jpg)'
- en: As you can see in the preceding screenshot, when WebRTC has been activated in
    Google Chrome and the user is streaming audio or video to the website, the browser
    tab gains a glowing red recording icon to alert you that the feed is active.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在前面的截图中所看到的，当Google Chrome中激活了WebRTC并且用户正在向网站传送音频或视频时，浏览器标签会获得一个发光的红色录制图标，以提醒您流正在进行。
- en: Tip
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you are interested in learning more about not only the origins of the WebRTC
    project and its support on modern browsers, but also about how to properly utilize
    it in your projects, check out the great article on *Capturing Audio & Video in
    HTML* on [http://www.html5rocks.com/en/tutorials/getusermedia/intro/](http://www.html5rocks.com/en/tutorials/getusermedia/intro/).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对了解WebRTC项目的起源及其在现代浏览器上的支持感兴趣，以及如何在项目中正确利用它，可以查看[http://www.html5rocks.com/en/tutorials/getusermedia/intro/](http://www.html5rocks.com/en/tutorials/getusermedia/intro/)上关于*在HTML中捕获音频和视频*的精彩文章。
- en: What's even more exciting about WebRTC is the possible future for the technology.
    As you have seen in the overview of this technology so far, the aim is really
    to get audio and video working without dependencies on the web. However, there
    is also a goal to get a dedicated data channel working in WebRTC, which could
    enable a slew of amazing new web-based technology, as your computer could really
    act as its own server while using specific web applications.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 关于WebRTC更令人兴奋的是技术的可能未来。正如您迄今为止在本技术概述中所看到的，目标实际上是在没有对网络的依赖的情况下使音频和视频工作。然而，还有一个目标是在WebRTC中启用专用数据通道，这可能会使一系列令人惊叹的新基于Web的技术成为可能，因为您的计算机在使用特定Web应用程序时可以真正充当自己的服务器。
- en: WebGL support
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WebGL支持
- en: WebGL, like WebRTC, is one of the new and exciting features to start seeing
    high quality support on many modern web browsers on desktop and on mobile. Taking
    advantage of hardware-accelerated graphics on a client's computer or device can
    enable you to bring many of the fully-featured 2D and 3D animations and interactions
    you may have used while developing Flash projects in the past. When attempting
    to verify if the browser you are using supports WebGL, the easiest tool for verification
    can be found at [http://get.webgl.org](http://get.webgl.org).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: WebGL和WebRTC一样，是许多现代桌面和移动Web浏览器开始看到高质量支持的新功能之一。利用客户端计算机或设备上的硬件加速图形，可以使您在开发Flash项目时可能使用的许多完整功能的2D和3D动画和交互成为可能。在尝试验证您所使用的浏览器是否支持WebGL时，最简单的验证工具可以在[http://get.webgl.org](http://get.webgl.org)找到。
- en: '![WebGL support](img/3325OT_10_10.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![WebGL支持](img/3325OT_10_10.jpg)'
- en: If your browser passed the WebGL verification tests, the site will be displayed
    as shown in the previous screenshot, rendering a 3D wireframe rotating cube, and
    the text alerting you of the results. You can of course utilize [http://caniuse.com](http://caniuse.com)
    to check what browsers currently support WebGL as well as dig into the official
    WebGL public wiki found at [http://www.khronos.org/webgl/wiki/Main_Page](http://www.khronos.org/webgl/wiki/Main_Page).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的浏览器通过了WebGL验证测试，该网站将显示如前面的截图所示，呈现一个旋转的3D线框立方体，并显示结果的文本提示。当然，您可以使用[http://caniuse.com](http://caniuse.com)来检查当前支持WebGL的浏览器，以及查看[http://www.khronos.org/webgl/wiki/Main_Page](http://www.khronos.org/webgl/wiki/Main_Page)上的官方WebGL公共wiki。
- en: Tip
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you are interested in learning more about the exciting world of WebGL in
    HTML5, check out the *WebGL Beginner's Guide* found on the Packt Publishing website
    ([http://www.packtpub.com/webgl-javascript-beginners-guide/book](http://www.packtpub.com/webgl-javascript-beginners-guide/book)).
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对在HTML5中的令人兴奋的WebGL世界想了解更多，请查看Packt Publishing网站上的*WebGL初学者指南*（[http://www.packtpub.com/webgl-javascript-beginners-guide/book](http://www.packtpub.com/webgl-javascript-beginners-guide/book)）。
- en: WebGL on mobile browsers
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移动浏览器上的WebGL
- en: Depending on the intensity of the WebGL application you are viewing, you may
    notice extremely slow frame rates, as well as, applications that may become unresponsive.
    As WebGL has gained support on a small number of devices and browsers, the development
    community is slowly creating optimizations for mobile experiences utilizing this
    technology. Unfortunately, the processing power between most desktop and a mobile
    devices are still pretty far apart, therefore the requirement for developers to
    optimize their experiences if intending for mobile browsers to view them is critical.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您正在查看的WebGL应用程序的强度，您可能会注意到极慢的帧速率，以及可能变得无响应的应用程序。由于WebGL在少数设备和浏览器上得到支持，开发社区正在慢慢地为利用这项技术的移动体验创建优化。不幸的是，大多数桌面和移动设备之间的处理能力仍然相差甚远，因此，如果打算让移动浏览器查看它们，开发人员需要优化其体验是至关重要的。
- en: A great resource for checking out WebGL content on your mobile device is the
    Three.js project page found at [http://threejs.org](http://threejs.org). From
    the index of projects and examples on the main page, you can easily get a sense
    of how some of the coolest WebGL examples run on any device.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动设备上查看WebGL内容的一个很好的资源是Three.js项目页面，网址为[http://threejs.org](http://threejs.org)。从主页的项目和示例索引中，您可以轻松地了解一些最酷的WebGL示例是如何在任何设备上运行的。
- en: Tip
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you are interested in getting a more in depth look at any web browsers' WebGL
    capabilities, check out [http://webgl-bench.appspot.com](http://webgl-bench.appspot.com)
    for an online benchmarking tool to help examine and display your WebGL rendering
    statistics.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对任何网络浏览器的WebGL功能感兴趣，可以查看[http://webgl-bench.appspot.com](http://webgl-bench.appspot.com)，这是一个在线基准测试工具，可帮助检查和显示您的WebGL渲染统计信息。
- en: Allowing users to find your work
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 让用户找到您的作品
- en: Although search engine indexing is not directly related to HTML5, since you
    are coming from a Flash developer's perspective, it is definitely worth noting.
    Many search engines have become increasingly better at parsing Flash content for
    search engine results, but at the end of the day, creating a full Flash site will
    require you to perform some work around to have your content displayed properly,
    when someone attempts to search for it. Search engine bots will have a much easier
    time reading your HTML5 projects as they have a more direct approach to reading
    the important data about the pages on your website.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然搜索引擎索引与HTML5没有直接关系，但从Flash开发者的角度来看，这点绝对值得注意。许多搜索引擎在解析Flash内容以获取搜索结果方面已经变得越来越好，但归根结底，创建一个完整的Flash网站将需要您进行一些工作，以确保您的内容在搜索时能够正确显示。搜索引擎爬虫将更容易地读取您的HTML5项目，因为它们对于读取网站页面上的重要数据有更直接的方法。
- en: With the growth in what HTML element tags may now contain, the ability to tag
    specific elements on your site, specifically for search engines, is a new and
    exciting way to optimize your website's search engine optimization. One of the
    key aspects of web content the Google search engine is looking for in recent years
    is content related to authorship. For instance, if you have an article or piece
    written by a specific author on your site, you can easily integrate the author's
    information as meta data within the HTML page.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 随着HTML元素标签所能包含的内容的增长，特别是针对搜索引擎的网站上特定元素的标记，是优化您的网站搜索引擎优化的一种新颖而令人兴奋的方式。谷歌搜索引擎近年来寻找的网络内容的关键方面之一是与作者相关的内容。例如，如果您的网站上有一篇特定作者撰写的文章或作品，您可以轻松地将作者的信息作为HTML页面中的元数据集成进去。
- en: 'When tagged properly, this will not only allow the search engines, but also
    social websites, to easily parse those specific pages'' content with ease. For
    instance, consider some of these methods for defining specific elements in your
    HTML source:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当正确标记时，这不仅可以让搜索引擎轻松解析这些特定页面的内容，也可以让社交网站轻松解析。例如，考虑一些在HTML源代码中定义特定元素的方法：
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In these examples, we append the `rel` and `hreflang` tag elements to aid in
    describing a link's content preemptively.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些示例中，我们附加了`rel`和`hreflang`标签元素，以帮助预先描述链接的内容。
- en: '[PRE6]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Although none of these tags are technically required when developing your HTML
    documents, the effort to put meta data into your content, especially if it will
    be dynamically supplied, will more likely than not result in better traffic and
    search engine result ranking once your web site has been published online.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在开发HTML文档时，这些标签都不是技术上必需的，但是在您的内容中放入元数据的努力，特别是如果它将会被动态提供，很可能会导致更好的流量和搜索引擎结果排名，一旦您的网站已经发布在线。
- en: As mentioned, many social websites such as Google+ or Facebook will attempt
    to parse your web pages content to create a detailed link structure back to your
    site. The more viable content and meta data that you can supply to the websites
    and systems that attempt to read it, will result in better link structure and
    information output when users link back to your site.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面提到的，许多社交网站，如Google+或Facebook，将尝试解析您的网页内容，以创建详细的链接结构指向您的网站。您可以向这些尝试读取内容的网站和系统提供更多有价值的内容和元数据，这将导致更好的链接结构和信息输出，当用户链接回您的网站时。
- en: The HTML5 History API
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML5历史API
- en: If you happen to have built a website completely in Flash before, you may have
    had experience with using JavaScript libraries such as SWFAddress ([http://www.asual.com/swfaddress](http://www.asual.com/swfaddress))
    to emulate the URL update functionality typical to normal web page display. If
    you are unaware of this project, or the idea of URL updating, the concept is simply
    that when you load a new page on the Internet, the URL in the address bar changes
    according to the location of the page you are viewing. With typical HTML web content,
    each page is displayed in a new HTML document, therefore the URL could easily
    be defined for each section of the website. With a website built in Flash, all
    of the content will be compiled into a single SWF that will be embedded on a single
    HTML page. So when the content changes in the Flash, there will be no change in
    the address bar of the web browser as no new page was requested. By including
    SWFAddress into your Flash project for the web, you can easily send a command
    via the SWFAddress JavaScript API to append customized updates to the address
    bar of the web browsers. Most importantly, if a user was to hit one of the custom
    URLs that your application has utilized, you can easily skip the user experience
    directly to a section of your application that they originally intended to visit.
    With the rise in popularity of features such as the Canvas element and AJAX requests
    in HTML5, the need for many websites to physically reload the web page on every
    request is dropping. Therefore, a system similar to SWFAddress is needed to properly
    integrate your sites on the web.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您以前完全使用Flash构建过网站，可能已经使用过JavaScript库，如SWFAddress（[http://www.asual.com/swfaddress](http://www.asual.com/swfaddress)）来模拟正常网页显示中典型的URL更新功能。如果您不了解这个项目，或者URL更新的概念，那么简单来说，当您在互联网上加载新页面时，地址栏中的URL会根据您正在查看的页面的位置而更改。对于典型的HTML网页内容，每个页面都显示在一个新的HTML文档中，因此可以为网站的每个部分轻松定义URL。对于使用Flash构建的网站，所有内容将被编译到一个单独的SWF中，该SWF将嵌入到单个HTML页面中。因此，当Flash中的内容发生变化时，由于没有请求新页面，因此Web浏览器的地址栏不会发生变化。通过在Flash项目中包含SWFAddress，您可以轻松通过SWFAddress
    JavaScript API发送命令，以将自定义更新附加到Web浏览器的地址栏。最重要的是，如果用户要点击应用程序使用的自定义URL之一，您可以轻松地将用户体验直接跳转到他们最初打算访问的应用程序部分。随着HTML5中Canvas元素和AJAX请求等功能的日益流行，许多网站在每次请求时都需要重新加载网页的需求正在减少。因此，需要类似于SWFAddress的系统来正确地将您的网站集成到Web上。
- en: The HTML5 History API ([http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html](http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html))
    is your key to not only controlling the address bar of the clients web browser,
    but also to control many elements of their browsers history records to enable
    the browsers' back-and-forward functionality to continue to work. Although some
    of the older versions of popular modern browsers lack support for the HTML5 History
    API, the overwhelming majority of the latest versions of all browsers available
    now seem to support this feature ([http://caniuse.com/#feat=history](http://caniuse.com/#feat=history)).
    However, when attempting to use any feature where you are not 100 percent positive
    every use will have support, some initial checks are usually worth the effort.
    To check for history API support, we can attempt to lookup the type of the `history.pushState`
    object which is responsible for writing changes to the browsers page history.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5历史API（[http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html](http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html)）不仅可以控制客户端Web浏览器的地址栏，还可以控制许多浏览器历史记录的元素，以使浏览器的后退和前进功能继续工作。尽管一些较旧版本的流行现代浏览器不支持HTML5历史API，但目前可用的绝大多数最新版本的所有浏览器似乎都支持此功能（[http://caniuse.com/#feat=history](http://caniuse.com/#feat=history)）。然而，当尝试使用任何您不确定每个用户是否支持的功能时，通常值得进行一些初始检查。要检查历史API的支持情况，我们可以尝试查找`history.pushState`对象的类型，该对象负责将更改写入浏览器的页面历史记录。
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Provided everything passes, you are good to read and write data to the clients
    browser history. Mozilla has written a fantastic outline of the History API and
    its usage which can be found at [https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history](https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，您就可以读取和写入客户端浏览器的历史记录。Mozilla已经对历史API及其用法进行了出色的概述，可以在[https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history](https://developer.mozilla.org/en/docs/DOM/Manipulating_the_browser_history)找到。
- en: Tip
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: For a down to earth example of the HTML5 History API in action, check out the
    online demo and source code from HTML5 Demos ([http://html5demos.com/history](http://html5demos.com/history)).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解HTML5历史API的实际示例，请查看HTML5 Demos（[http://html5demos.com/history](http://html5demos.com/history)）的在线演示和源代码。
- en: The important factor to note in regards to the History API and search engine
    optimization is the freedom that your applications have when it comes to referencing
    application state in the URL displayed in the browser address bar. Setting unique
    URLs to specific locations and elements in your content will allow for easier
    debugging and generation of user statistics and analytics.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 关于历史API和搜索引擎优化，需要注意的重要因素是，当应用程序在浏览器地址栏中引用应用程序状态时，应用程序具有的自由度。为内容设置唯一的URL以指向特定位置和元素将有助于更容易地进行调试和生成用户统计和分析数据。
- en: Premade testing and benchmark solutions
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 预制测试和基准解决方案
- en: In previous chapters, we have covered and utilized features of many modern web
    browser developer tool sets, mainly utilizing the JavaScript console for easy
    output and code debugging during development. Many of these pre-installed developer
    tool sets within popular web browsers also include many tools that allow you to
    not only dig into your own websites structure to locate issues, but debug other
    websites on the Internet to get an idea of their inner workings as well.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我们已经介绍并利用了许多现代网页浏览器开发者工具集的功能，主要是利用JavaScript控制台在开发过程中进行简单的输出和代码调试。许多流行的网页浏览器中预装的开发者工具集还包括许多工具，不仅允许您深入了解自己网站的结构以查找问题，还可以调试互联网上的其他网站，以了解它们的内部运作。
- en: Google's web development toolset
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谷歌的Web开发工具集
- en: When it comes to tools for debugging and analyzing HTML5 content in the browser,
    Google has really stepped up to the plate by creating not only the Chrome Developer
    Tools ([https://developers.google.com/chrome-developer-tools/](https://developers.google.com/chrome-developer-tools/))
    but the Google Web Toolkit ([https://developers.google.com/web-toolkit/overview](https://developers.google.com/web-toolkit/overview))
    as well. All of these tools combined can be utilized to do a majority of the deep
    down application debugging that your application may require prior to public deployment.
    For instance, if you have managed to develop your own HTML5 game and need to dig
    into the game structure and flow to determine where optimizations are required,
    you can go through the process of writing tests for each and every element of
    the game, or you can use a tool like Google's Speed Tracer ([https://developers.google.com/web-toolkit/speedtracer/index](https://developers.google.com/web-toolkit/speedtracer/index)).
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 谈到在浏览器中调试和分析HTML5内容的工具时，谷歌确实通过创建Chrome开发者工具([https://developers.google.com/chrome-developer-tools/](https://developers.google.com/chrome-developer-tools/))和谷歌Web工具包([https://developers.google.com/web-toolkit/overview](https://developers.google.com/web-toolkit/overview))迈出了重要的一步。所有这些工具结合起来可以用来进行应用程序部署之前可能需要的大部分深度调试。例如，如果您已经成功开发了自己的HTML5游戏，并且需要深入了解游戏的结构和流程以确定需要优化的地方，您可以通过编写每个游戏元素的测试来完成这个过程，或者您可以使用谷歌的Speed
    Tracer([https://developers.google.com/web-toolkit/speedtracer/index](https://developers.google.com/web-toolkit/speedtracer/index))这样的工具。
- en: '![Google''s web development toolset](img/3325OT_10_11.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![谷歌的Web开发工具集](img/3325OT_10_11.jpg)'
- en: As you can see in the screenshot of Speed Tracer in action, the application
    manages to dig deep into the application runtime to display statistics on many
    aspects of how the active application is actually running on a given machine.
    Within the statistical output is the time to load, time to execute, time to display,
    and so much more. Simple websites that display content and video in a traditional
    manner may not find any benefit in using a tool that digs this deep. However,
    for anyone interested in building robust interactive Canvas, WebGL or any other
    heavy computation, or calculation applications that may require debugging of the
    runtime, this tool is defiantly worth looking into.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在Speed Tracer的截图中所看到的，该应用程序成功地深入到应用程序运行时，显示了有关活动应用程序在特定计算机上实际运行方式的许多方面的统计信息。统计输出中包括加载时间、执行时间、显示时间等等。以传统方式显示内容和视频的简单网站可能不会发现使用这种深度挖掘工具的任何好处。然而，对于任何有兴趣构建强大的交互式Canvas、WebGL或任何其他需要调试运行时的重型计算或计算应用程序的人来说，这个工具绝对值得一试。
- en: For the vast majority of HTML5 development, the Chrome Developer Tools is a
    browser feature that many web developers can't live without. With the entire toolset
    included in every installation of Chrome, you can easily open and start debugging
    any website with the tool in seconds. From inspecting the page elements and their
    associated styles with the Elements Inspector, displayed in the following screenshot,
    to displaying the load time of every internal and external request made by your
    page on load and during runtime with the Network Inspector, almost everything
    you need to debug your content is in one handy built in window.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 对于绝大多数HTML5开发者来说，Chrome开发者工具是一个许多网页开发者无法离开的浏览器功能。在每个Chrome安装中都包含了整个工具集，您可以轻松地打开并开始使用工具来调试任何网站。从使用元素检查器检查页面元素及其相关样式，如下截图所示，到使用网络检查器显示页面在加载和运行时所做的每个内部和外部请求的加载时间，几乎您需要调试内容的一切都在一个方便的内置窗口中。
- en: '![Google''s web development toolset](img/3325OT_10_12.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![谷歌的Web开发工具集](img/3325OT_10_12.jpg)'
- en: Since Google has been promoting this piece of software extremely well in the
    last couple years, I really don't need to go into great detail of its usage here.
    There are more than a couple of amazing video tutorials that can easily be found
    on the project website along with great documentation of every feature within
    the application feature set.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 由于谷歌在过去几年里一直在极大地推广这款软件，我在这里真的不需要详细介绍它的用法。在项目网站上可以找到多个令人惊叹的视频教程，以及对应用程序功能集中的每个功能的出色文档。
- en: Tip
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The Chrome Developer Tools project website contains a bunch of great resources
    both video and in text to aid in understanding everything the extension is capable
    of doing. Be sure to head over to [https://developers.google.com/chrome-developer-tools/docs/videos](https://developers.google.com/chrome-developer-tools/docs/videos)
    and check it out.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Chrome开发者工具项目网站包含了大量视频和文本资源，帮助理解扩展能够做到的一切。一定要前往[https://developers.google.com/chrome-developer-tools/docs/videos](https://developers.google.com/chrome-developer-tools/docs/videos)查看。
- en: As time passes, you will probably find yourself quickly opening and closing
    this extension as you browse the web. As a developer, one the great aspects of
    HTML5 development is that when the content is public, so is the code that run
    it. Digging into how someone managed to create web content that amazed you is
    a very easy way to get extremely knowledgeable about the HTML5 stack.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，你可能会发现自己在浏览网页时迅速打开和关闭这个扩展。作为开发者，HTML5开发的一个伟大方面是当内容是公开的时候，运行它的代码也是公开的。深入研究别人是如何创建让你惊叹的网页内容是一个非常简单的方法，让你对HTML5技术栈非常了解。
- en: YSlow website grading
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: YSlow网站评分
- en: Although many of us hated getting our grades in school, having someone grade
    your website can be an incredibly useful resource. The YSlow ([http://yslow.org](http://yslow.org))
    browser extension is an open source project that can be added to Chrome, Firefox,
    Opera, Safari, and many other forms of web-based content. Upon opening and activating
    the extension, you can run the system on the website you currently have opened
    in your web browser. Consider the YSlow extension window after we run the tests
    on [http://www.packtpub.com](http://www.packtpub.com).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们中的许多人讨厌在学校得到成绩，但让别人给你的网站打分可能是一个非常有用的资源。YSlow（[http://yslow.org](http://yslow.org)）浏览器扩展是一个开源项目，可以添加到Chrome、Firefox、Opera、Safari和许多其他形式的基于Web的内容中。打开并激活扩展后，你可以在网页浏览器中运行当前打开的网站上的系统。在我们对[http://www.packtpub.com](http://www.packtpub.com)运行测试后，考虑一下YSlow扩展窗口。
- en: '![YSlow website grading](img/3325OT_10_13.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![YSlow网站评分](img/3325OT_10_13.jpg)'
- en: In the top left corner of the extension window, you can see that the website
    was given a B grade. Now without any detail on what makes up the grade, that data
    is effectively useless. So to confirm the graded result, let's dig into why this
    site received the grade it did. Below the grade in a color coded list you will
    find the individual tests results from all of the areas that are examined by YSlow.
    For the vast majority of the tests, the Packt Publishing website scored very well.
    However, the test concluded that for one, the site can make fewer HTTP requests,
    meaning that too much of the code and assets that make up the page are referenced
    from a variety of external resources. Secondly, the test results also display
    bad results for the inclusion of expire headers.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在扩展窗口的左上角，你可以看到该网站得到了B级的评分。现在没有关于评分构成的详细信息，这些数据实际上是没有用的。因此，为了确认评分结果，让我们深入了解为什么这个网站得到了它的评分。在评分下面的一个颜色编码列表中，你将找到YSlow检查的所有领域的单独测试结果。对于绝大多数测试，Packt
    Publishing网站得分都非常好。然而，测试得出结论，首先，该网站可以减少HTTP请求，这意味着页面所包含的代码和资产过多地引用了各种外部资源。其次，测试结果还显示了过期头的不良结果。
- en: This means that there are many assets on the page with caching expire times
    very far in the future. Configurations like this could very well cause some users
    to see page content during page load that has actually been updated on the server.
    Because the cache time for some assets is set so far in the future, if the user
    has been to your site before, their web browser may not re-request the same asset,
    thinking that since the cache time is so far away, there is no possibility that
    the data could have changed.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着页面上有许多资产的缓存到期时间非常遥远。这样的配置很可能会导致一些用户在页面加载期间看到实际上已经在服务器上更新的页面内容。由于某些资产的缓存时间设置得非常遥远，如果用户之前访问过你的网站，他们的网页浏览器可能不会重新请求相同的资产，认为由于缓存时间如此遥远，数据不可能发生变化。
- en: Tip
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you are interested into how YSlow manages to do what it does, be sure to
    head over to the project GitHub page to learn more ([https://github.com/marcelduran/yslow](https://github.com/marcelduran/yslow)).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对YSlow是如何做到它所做的感兴趣，一定要前往项目的GitHub页面了解更多（[https://github.com/marcelduran/yslow](https://github.com/marcelduran/yslow)）。
- en: YSlow covers a lot more than just the short list of results you can see in the
    previous screenshot. Since the test literally only takes a couple seconds and
    the browser extension setup of the application allows you to install it in seconds,
    I highly recommend downloading this extension and testing it out; not only on
    your web content but others as well.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: YSlow涵盖的远不止你在上一张截图中看到的结果的简短列表。由于测试实际上只需要几秒钟，而浏览器扩展应用程序的设置允许你在几秒钟内安装它，我强烈建议下载这个扩展并测试它；不仅是在你的网页内容上，还有其他的网页内容上。
- en: Code minimizing and obfuscation
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码最小化和混淆
- en: After you have finished developing your HTML5 application, you may notice that
    the amount of referencing to external JavaScript and CSS files may have gotten
    a little out of hand. One of the easiest ways to begin the battle for faster page
    loads is to minimize your JavaScript and CSS source code into the smallest file
    size possible. This will allow for the client to retrieve the content over the
    Internet in a shorter time allowing the remainder of the page to finish loading.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发完HTML5应用程序后，你可能会注意到对外部JavaScript和CSS文件的引用量可能有点过多。开始争取更快页面加载的最简单方法之一是将你的JavaScript和CSS源代码最小化到尽可能小的文件大小。这将允许客户端在较短的时间内通过互联网检索内容，从而使页面的其余部分完成加载。
- en: 'Some CSS compilers such as LESS ([http://lesscss.org](http://lesscss.org))
    and SAS ([http://sass-lang.com](http://sass-lang.com)) contain the ability to
    minimize your CSS automatically, saving you the hassle of remembering to do it
    yourself after every update to your site. However, if you are not using a CSS
    compiler, there are still many great ways to accomplish the same task. One of
    my personal favorite online resources for CSS compression is [http://www.csscompressor.com](http://www.csscompressor.com).
    This easy to use CSS compressor gives you the ability to not only configure the
    actions performed to optimize your CSS, but also control the level of compression
    as well. To get a better idea of what this compression looks like, consider the
    following example CSS syntax:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一些CSS编译器，如LESS（[http://lesscss.org](http://lesscss.org)）和SAS（[http://sass-lang.com](http://sass-lang.com)）具有自动最小化CSS的能力，可以节省您在每次更新网站后都要自己记得去做这件事的麻烦。然而，如果你不使用CSS编译器，仍然有许多很好的方法来完成相同的任务。我个人最喜欢的在线CSS压缩资源之一是[http://www.csscompressor.com](http://www.csscompressor.com)。这个易于使用的CSS压缩器不仅可以配置执行优化CSS的操作，还可以控制压缩的级别。为了更好地了解这种压缩是什么样子，可以考虑以下示例CSS语法：
- en: '[PRE8]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: There is nothing really special about these CSS styles other than the fact that
    we are styling only the `#example` tag element and its inner content. This CSS
    example really will just serve as an example as to what you would probably be
    used to seeing all over your projects. Of course your final application will probably
    contain far more than four CSS properties, but the end result will be the same
    regardless of CSS source code size. To keep things simple and conserve space within
    the book, we will just use these styles.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这些CSS样式没有什么特别之处，除了我们只对`#example`标签元素及其内部内容进行样式设置。这个CSS示例只是作为一个示例，你可能会在项目中经常看到这样的样式。当然，你的最终应用程序可能包含的CSS属性远远多于四个，但无论CSS源代码的大小如何，最终结果都将是相同的。为了简化并节省书中的空间，我们将只使用这些样式。
- en: After opening up a web browser and heading over to [http://www.csscompressor.com](http://www.csscompressor.com),
    we can copy these styles into the large text area on the site.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 打开一个网络浏览器，然后转到[http://www.csscompressor.com](http://www.csscompressor.com)，我们可以将这些样式复制到网站上的大文本区域中。
- en: '![Code minimizing and obfuscation](img/3325OT_10_14.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![代码最小化和混淆](img/3325OT_10_14.jpg)'
- en: 'Before we begin our CSS compressor, take note of the options above the text
    input area. Although this specific CSS minimizing website is only one of many
    freely available on the Internet, the general configuration properties are the
    same. As you can see by the previous screenshot, you also have the option of selecting
    **Sort Properties** which will output your CSS styles sorted into minimalistic
    configurations effectively optimizing your code. Most important is the dropdown
    selector which allows you to choose the Compression Mode for the compressed output.
    For instance, selecting **High** and compressing our example CSS would output
    the following:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始CSS压缩之前，请注意文本输入区域上方的选项。尽管这个特定的CSS最小化网站只是互联网上众多免费可用的网站之一，但一般的配置属性是相同的。正如你在之前的截图中所看到的，你还可以选择**排序属性**，这将使你的CSS样式按照极简配置进行排序，有效地优化你的代码。最重要的是下拉选择器，它允许你选择压缩输出的压缩模式。例如，选择**高**并压缩我们的示例CSS将输出以下内容：
- en: '[PRE9]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Since our example CSS is simple to begin with, the amount of work done to compress
    our code in the configuration is pretty minimal. Effectively all the compressor
    needed to do was remove all extra whitespace from the supplied CSS and place all
    of the element properties on single lines. This may seem like a minimal amount
    of work and output, but the fact of the matter is that the compressed CSS source
    is now 14.8 percent smaller in file size than the originally supplied source.
    For only a couple minutes of work, that is a huge amount of optimization. We can
    take it even one step further by selecting the **Highest** option for the Compression
    Mode. With this option selected, the compressor will now put the entire compressed
    CSS source on a single line. With this setup, our file size drops another 2.2
    percent totaling 16 percent file size reduction.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的示例CSS本来就很简单，所以在配置中压缩我们的代码所做的工作量非常小。实际上，压缩器只需要删除所提供的CSS中的所有额外空格，并将所有元素属性放在单独的行上。这可能看起来是一种最小量的工作和输出，但事实是，压缩后的CSS源代码现在比最初提供的源代码小了14.8％。对于只需几分钟的工作来说，这是一个巨大的优化量。我们甚至可以进一步选择**最高**选项作为压缩模式。选择此选项后，压缩器将把整个压缩后的CSS源代码放在一行上。通过这种设置，我们的文件大小再减少了2.2％，总共减少了16％的文件大小。
- en: '[PRE10]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As mentioned, file compression like this is not only for your CSS source code.
    This technique is actually even more useful for JavaScript. As your JavaScript
    source is usually responsible for all of the client side actions, the size of
    your source code can grow extremely large. Not only can this external source code
    be large in file size, but it may also contain some semi-sensitive code that you
    would prefer the end user not to be aware of. Of course JavaScript is no place
    for hard coding user names and passwords, but if you were to write a game in JavaScript,
    you probably wouldn't want users to locate the method to progress to the next
    level. You can use JavaScript compression to aid in your fight for code privacy,
    but of course always remember that JavaScript is a client-side language. No matter
    how hard you try, the end user will always have access to your source code, so
    always keep that in mind while developing your applications.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，这种文件压缩不仅适用于你的CSS源代码。这种技术实际上对JavaScript更有用。因为你的JavaScript源代码通常负责所有客户端动作，所以你的源代码大小可能会变得非常大。这些外部源代码不仅可能在文件大小上很大，而且可能还包含一些半敏感的代码，你可能希望最终用户不要知道。当然，JavaScript不适合硬编码用户名和密码，但如果你要在JavaScript中编写一个游戏，你可能不希望用户找到进入下一级的方法。你可以使用JavaScript压缩来帮助保护你的代码隐私，但当然要记住JavaScript是一种客户端语言。无论你如何努力，最终用户始终可以访问你的源代码，所以在开发应用程序时要时刻记住这一点。
- en: JavaScript compression is common amongst many popular JavaScript libraries and
    frameworks, many of which we have already looked at in this book. The jQuery ([http://jquery.com](http://jquery.com))
    library comes in two different packages, Development and Production. The difference
    between the two being that the Production version is compressed, ready for use
    online, whereas the development version is the user friendly JavaScript source
    ready for further manipulation. Websites such as [http://www.minifyjavascript.com](http://www.minifyjavascript.com)
    are a great online resource for accomplishing this task with your own custom JavaScript
    that is included within your HTML5 projects.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript压缩在许多流行的JavaScript库和框架中很常见，其中许多我们在本书中已经看过。jQuery（[http://jquery.com](http://jquery.com)）库有两种不同的包，开发版和生产版。两者之间的区别在于生产版本已经压缩，准备在网上使用，而开发版本是用户友好的JavaScript源码，可以进一步操作。网站，比如[http://www.minifyjavascript.com](http://www.minifyjavascript.com)，是一个很好的在线资源，可以帮助你完成这个任务，包括在你的HTML5项目中包含的自定义JavaScript。
- en: External dependencies
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 外部依赖
- en: As your HTML5 projects become more and more feature rich, the requirement to
    include external dependencies such as jQuery or various jQuery plugins will probably
    increase just the same. By the end of your application development cycle you could
    possibly have over a dozen external JavaScript files referenced from a single
    HTML file. Although from a human standpoint, the segregation of all of your application's
    functionality in separate files may be optimal for ease of development, when it
    comes to publishing all of these files on the web you are effectively making your
    end users connection do more work when attempting to load your content. Since
    each piece of the JavaScript (or CSS) functionality may be broken in different
    files, the browser will need to individually request and receive each and every
    file referenced in the document before the document can finish loading. One solution
    to this issue is to combine all of the external third party JavaScript or CSS
    files into a single file for your HTML documents to request. This way only a single
    request will be made to the server, cutting down on page load times and bandwidth
    consumption. However, in most cases you will probably only want to combine JavaScript
    and CSS content that you do not plan on editing in the future. When all of your
    files are combined into one, the difficulty factor when the time comes to debug
    issues can be increased. Keeping your custom JavaScript and CSS in their own files
    can allow for far easier editing and republishing.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你的HTML5项目变得越来越丰富，包括jQuery或各种jQuery插件等外部依赖的需求可能会同样增加。在应用程序开发周期结束时，你可能会从单个HTML文件中引用超过十几个外部JavaScript文件。尽管从人类的角度来看，将所有应用程序功能分开放在不同的文件中可能是最有利于开发的，但当要在网上发布所有这些文件时，实际上是在让最终用户的连接在尝试加载内容时做更多的工作。由于JavaScript（或CSS）功能的每个部分可能在不同的文件中，浏览器需要单独请求并接收文档中引用的每个文件，然后文档才能完成加载。解决这个问题的一个方法是将所有外部第三方JavaScript或CSS文件合并到一个文件中，以便HTML文档请求。这样只会向服务器发出一个请求，减少页面加载时间和带宽消耗。然而，在大多数情况下，你可能只想合并那些未来不打算编辑的JavaScript和CSS内容。当所有文件合并成一个文件时，当需要调试问题时，难度因素可能会增加。将自定义JavaScript和CSS保存在它们自己的文件中可以更容易地进行编辑和重新发布。
- en: After your published site is live on the Internet for a while, regardless of
    whether you update it or not, there is a high likelihood of the dependencies that
    your application utilizes may fall out of date. Developers behind the projects
    your application uses may release small bug fixes to entire version updates to
    their libraries or frameworks without your knowledge. Although your application
    should live on without issue, provided it did before, you may be so inclined to
    update a specific plugin to gain the newest feature set or security fixes. If
    the updated version of, for example, a jQuery Plugin was published to a site where
    the utilized version of jQuery was either out of date or incompatible, you will
    probably encounter various issues when attempting to run your application.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的网站发布一段时间后，无论你是否更新它，你的应用程序使用的依赖可能会过时。你的应用程序使用的项目的开发人员可能会在没有你的知识的情况下发布小的错误修复或整个版本更新到他们的库或框架。尽管你的应用程序应该可以正常运行，前提是之前也是如此，你可能会倾向于更新特定的插件以获得最新的功能集或安全修复。例如，如果更新了一个jQuery插件的版本，而你使用的jQuery版本要么过时要么不兼容，当尝试运行你的应用程序时，你可能会遇到各种问题。
- en: The issue may be easily resolved by updating your site's utilized version of
    jQuery to the required version; however if the other plugins you are using are
    not compatible with the newest version of jQuery you appended, those may break
    as well.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题可能很容易通过更新您网站所使用的jQuery版本来解决；然而，如果您使用的其他插件与最新版本的jQuery不兼容，那么这些插件也可能会出现问题。
- en: It is because of this downward spiral that I stress two specific things all
    HTML5 developers should be aware of. Firstly, attempt to stay on top of the development
    progression of the external dependencies you utilize in your projects. Even if
    you are not interested in an expanded feature set, the developers of these projects
    often release security updates and code optimizations. Finally, attempt to spend
    the time to properly research and test if updating any of the dependencies your
    projects uses will directly affect any of the other dependencies that work alongside
    it.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 正是因为这种恶性循环，我强调所有HTML5开发人员应该注意两件事。首先，尝试跟上您项目中使用的外部依赖的开发进展。即使您对扩展功能不感兴趣，这些项目的开发人员通常会发布安全更新和代码优化。最后，尝试花时间进行适当的研究和测试，以确定更新项目使用的任何依赖项是否会直接影响与之一起工作的其他依赖项。
- en: Making deployment easy
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使部署变得简单
- en: If you are working on a HTML5 site or application that will require constant
    updates, you may be interested in finding ways to ease the pain of manual file
    updating when it comes to publishing updates to your web server. Manually updating
    specific files over a FTP or SFTP connection to your web server that may be in
    different directories can easily become a pain. Finding ways to automate any time
    wasting process is usually a point of interest for any developer. So for the sake
    of your sanity in future projects, let's cover a few of the interesting options
    available to web developer for automating many processes from compressing code
    to deploying a website.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在开发一个需要不断更新的HTML5网站或应用程序，您可能会有兴趣找到简化手动文件更新的方法，以便发布更新到您的Web服务器。手动更新特定文件到您的Web服务器上可能位于不同目录的FTP或SFTP连接可能会变得非常繁琐。寻找自动化任何浪费时间的过程通常是任何开发人员感兴趣的点。因此，为了您未来项目的健康，让我们来看看一些有趣的选项，可以帮助Web开发人员自动化从压缩代码到部署网站的许多过程。
- en: Creating tasks with Grunt
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Grunt创建任务
- en: Grunt ([http://gruntjs.com](http://gruntjs.com)) is a relatively new kid on
    the web development block but has seen extremely active development since its
    inception in 2011\. The concept behind the software is pretty simple—automation.
    The key to Grunt's success in the HTML5 web developer community is the fact that
    the scripts you write to perform your customized tasks automatically are entirely
    written in JavaScript. This allows anyone, with experience writing JavaScript,
    to create tasks that would normally be created with BASH scripts or some other
    command line deployed programming language.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Grunt ([http://gruntjs.com](http://gruntjs.com)) 是Web开发领域的一个相对较新的工具，但自2011年推出以来一直在进行非常活跃的开发。该软件背后的概念非常简单——自动化。Grunt在HTML5
    Web开发人员社区取得成功的关键在于，您编写的用于执行自定义任务的脚本完全是用JavaScript编写的。这使得任何有JavaScript编写经验的人都可以创建通常使用BASH脚本或其他命令行部署的编程语言创建的任务。
- en: '![Creating tasks with Grunt](img/3325OT_10_15.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![使用Grunt创建任务](img/3325OT_10_15.jpg)'
- en: Grunt is built on the Node.js ([http://nodejs.org/](http://nodejs.org/)) framework
    and requires Node.js to be installed on the machine utilizing it. Because of Grunt's
    relationship with Node.js, you can locate plugins to begin the foundation of your
    Grunt tasks and install them the same way you install the Node.js packages. In
    terms of automated deployment of your website source to a web server, you would
    probably need to start by figuring out how to establish a connection from your
    Grunt scripts code to a web server via FTP or SFTP. Fortunately, as mentioned,
    the Node.js Package Manager or NPM system can set you off on the right foot with
    a quick search for Grunt SFTP on [https://npmjs.org](https://npmjs.org). In the
    results you will locate the grunt-sftp-deploy ([https://npmjs.org/package/grunt-sftp-deploy](https://npmjs.org/package/grunt-sftp-deploy))
    plugin which will give your Grunt tasks the ability to easily connect and deploy
    your local website source to an external web server over a SFTP connection.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Grunt是建立在Node.js ([http://nodejs.org/](http://nodejs.org/)) 框架上的，并且需要在使用它的机器上安装Node.js。由于Grunt与Node.js的关系，您可以找到插件来开始构建Grunt任务的基础，并以与安装Node.js包相同的方式安装它们。在自动部署网站源代码到Web服务器方面，您可能需要首先弄清楚如何通过FTP或SFTP从Grunt脚本代码与Web服务器建立连接。幸运的是，正如前面提到的，Node.js包管理器或NPM系统可以通过在[https://npmjs.org](https://npmjs.org)上快速搜索Grunt
    SFTP来为您提供正确的方向。在结果中，您将找到grunt-sftp-deploy ([https://npmjs.org/package/grunt-sftp-deploy](https://npmjs.org/package/grunt-sftp-deploy))
    插件，它将使您的Grunt任务能够轻松连接并将本地网站源代码部署到外部Web服务器上的SFTP连接。
- en: Tip
  id: totrans-125
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you are interested in learning more about Grunt or want to install it on
    your computer, head over to the official Grunt documentation at [http://gruntjs.com/getting-started](http://gruntjs.com/getting-started)
    and follow the *Getting Started* tutorial.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对了解更多关于Grunt或者想在您的计算机上安装它感兴趣，请访问官方Grunt文档[http://gruntjs.com/getting-started](http://gruntjs.com/getting-started)
    并按照*入门*教程。
- en: In reality, when it comes to creating customized tasks with Grunt, your imagination
    is really the limit. If you ever find yourself doing the same task over and over
    and want to automate the repetition, regardless if the issue is a personal or
    global one, writing some code to perform the automation for you can be a really
    great learning experience and time saver. Head over to the Grunt Plugins page
    on the office project site ([http://gruntjs.com/plugins](http://gruntjs.com/plugins))
    to find more inspiration for great tasks that you can create or utilize.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，当涉及到使用Grunt创建定制任务时，你的想象力真的是无限的。如果你发现自己一遍又一遍地做同样的任务，并希望自动化重复，无论问题是个人的还是全局的，编写一些代码来执行自动化对你来说都是一个非常好的学习经验和时间节省器。前往官方项目网站的Grunt插件页面（[http://gruntjs.com/plugins](http://gruntjs.com/plugins)）寻找更多关于你可以创建或利用的出色任务的灵感。
- en: Deploying content with Git
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Git部署内容
- en: Another piece of software you will probably find yourself using if you haven't
    already is Git ([http://git-scm.com/](http://git-scm.com/)). Git is a free and
    open source version control system utilized by both large and small projects around
    the world. Most developers can't fathom a world where they didn't use version
    control software of some kind and most web developers who use it, use Git. The
    majority of Git's success in the world of web development is not only because
    it is such a great and reliable piece of software, but because websites such as
    Github ([https://github.com](https://github.com)) and BitBucket ([https://bitbucket.org](https://bitbucket.org))
    have been created to allow developer to store their code privately or share it
    publically. Rather than freely distributing code as an archived ZIP file, developers
    can download the entire repository of code which include all of the previous edit
    history made by other developers who have contributed. This also means that if
    you were to make a change to someone else's code, they can still retain the right
    to choose to integrate your edits into their release. The benefits of version
    control could fill an entire book, so if you are not using Git or some other form
    of version control yet, be sure to dig deeper into it.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有使用过的话，另一个你可能会发现自己在使用的软件是Git（[http://git-scm.com/](http://git-scm.com/)）。Git是一个被世界各地的大型和小型项目所使用的免费开源版本控制系统。大多数开发人员无法想象一个没有使用某种版本控制软件的世界，而大多数使用版本控制软件的Web开发人员使用的是Git。Git在Web开发领域的成功主要不仅仅是因为它是一款如此出色和可靠的软件，还因为诸如Github（[https://github.com](https://github.com)）和BitBucket（[https://bitbucket.org](https://bitbucket.org)）这样的网站已经被创建出来，允许开发人员将他们的代码存储在私人或公开的仓库中。开发人员可以下载包括其他开发人员所做的所有先前编辑历史的整个代码库，而不是将代码自由分发为存档的ZIP文件。这也意味着，如果你对别人的代码进行了更改，他们仍然有权选择将你的编辑集成到他们的发布中。版本控制的好处可以填满一整本书，所以如果你还没有使用Git或其他形式的版本控制，一定要深入了解一下。
- en: Using Git to automatically deploy your web content can be a little tricky to
    set up at first, but once configured, the setup can not only allow you to publish
    content to your web server easily, but any other developer that may be working
    on the same application as well. Git utilizes the idea of branches to allow developers
    to work in their own environment of the applications code without stepping on
    other developer's toes. When both developers have completed the updates to the
    application in each of their branches, Git can be utilized to merge the edits
    in the two branches back into a single file automatically. By utilizing the concepts
    of branches, developers can agree to make a specific branch (usually the Master
    branch) the working branch that is deployed on the applications web server. If
    you were to append the Git repository on the web server itself and call the Git
    pull command from a web based script, anyone from your development team could
    easily push the latest version of the website from the Git repository to the active
    web server without ever having to connect via FTP or SFTP and manually copy files
    over.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Git自动部署你的Web内容一开始可能有点棘手，但一旦配置好，这种设置不仅可以让你轻松地发布内容到你的Web服务器，还可以让任何其他可能正在开发同一应用程序的开发人员也能够这样做。Git利用分支的概念允许开发人员在应用程序代码的自己的环境中工作，而不会干扰其他开发人员。当两个开发人员都在各自的分支中完成了对应用程序的更新后，Git可以自动将两个分支中的编辑合并成一个文件。通过利用分支的概念，开发人员可以同意将一个特定的分支（通常是主分支）作为在应用程序Web服务器上部署的工作分支。如果你在Web服务器上附加了Git仓库，并从基于Web的脚本中调用Git
    pull命令，你的开发团队中的任何人都可以轻松地将Git仓库中的最新版本推送到活动Web服务器上，而无需通过FTP或SFTP连接并手动复制文件。
- en: Tip
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: If you are interested in learning more or curious as to how to go about setting
    this type of solution up for one of your web based HTML5 project, check out the
    git-deploy project on Github ([https://github.com/git-deploy/git-deploy](https://github.com/git-deploy/git-deploy)).
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对学习更多内容或者想知道如何为你的基于Web的HTML5项目设置这种类型的解决方案感兴趣，请查看Github上的git-deploy项目（[https://github.com/git-deploy/git-deploy](https://github.com/git-deploy/git-deploy)）。
- en: Summary
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we spent some time going over some of the common aspects for
    preparing your HTML5 application or website for deployment on a public web server.
    Although there is no common practice for project preparation for the web, there
    are many aspects like optimization of code and file structure that, when given
    the proper amount of time, will keep your content stable and keep delivery times
    from server requests to a minimum. Sometimes anticipating issues is not a reality
    until you have had valid user testing completed on your project. This form of
    user testing, unless you have a team at your disposal, usually comes in the initial
    launch of your application to the public. Making sure that your application is
    set up in a way to report errors or generate statistics will decrease the time
    it takes for you to locate and correct any issues that may arise. Even additions
    as simple as appending Google Analytics ([http://www.google.ca/analytics/](http://www.google.ca/analytics/))
    into your site will enable you to view where users may have hit a dead end or
    bad request.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们花了一些时间讨论了一些为在公共Web服务器上部署HTML5应用程序或网站做准备的常见方面。尽管没有Web项目的常见实践，但有许多方面，如代码和文件结构的优化，如果给予适当的时间，将使您的内容保持稳定，并将服务器请求的交付时间最小化。有时，除非您已经完成了对项目的有效用户测试，否则很难预料到问题。这种用户测试，除非您有一个团队可供使用，通常是在您的应用程序首次向公众发布时进行的。确保您的应用程序设置为报告错误或生成统计数据将减少您定位和纠正可能出现的任何问题所需的时间。甚至像将Google
    Analytics（[http://www.google.ca/analytics/](http://www.google.ca/analytics/)）添加到您的网站中这样简单的添加也将使您能够查看用户可能遇到死胡同或错误请求的位置。
- en: The road to learning HTML5 and what it has to offer the web development community
    is an endless commitment that will extremely benefit your career as a developer.
    Though still in its early stages, this latest version of the HTML specification
    has proved to be one of the most important aspects of moving the web into a more
    application-like infrastructure. The world of HTML5 development has opened its
    doors to developers coming from many development skillsets in other languages.
    As a developer with experience in Flash and ActionScript 3, not only do you already
    have a leg up in terms of the learning curve JavaScript has to offer, but the
    understanding every Flash developer has of multimedia and its integration in code
    will be an invaluable skill to constantly fall back on as you continue to learn.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 学习HTML5以及它为Web开发社区提供的内容是一项无止境的承诺，这将极大地有利于您作为开发人员的职业生涯。尽管仍处于早期阶段，但这个最新版本的HTML规范已被证明是将Web推向更类似应用程序基础设施的最重要方面之一。HTML5开发世界已向来自其他语言的开发人员敞开了大门。作为一名具有Flash和ActionScript
    3经验的开发人员，您不仅在学习曲线方面已经占据优势，而且每个Flash开发人员对多媒体及其在代码中的集成的理解将是一项宝贵的技能，您在学习过程中将不断依赖它。
- en: Finally, I would like to give you my full appreciation for taking the time to
    read through the pages of this book. It is my hope that your venture into HTML5
    development was as pleasant as my own. The amazing projects that have sprung up
    in the last couple years are a testament to the excitement surrounding HTML5 and
    the new features that have been added to the specification. Some new and exciting
    framework or library is put into the community spotlight every week it seems.
    As great as the variety of projects can be, the vast sea of great 3rd party content
    available to utilize in your project means to make valid decisions of what to
    use, you need to keep up to date with as much as you can. Hop on your favorite
    social network, find some other developers with similar interest to your own,
    and start a new project to push the limits of what you can accomplish with HTML5\.
    Who knows, maybe I will end up using a library you wrote in my next project!
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我想对您抽出时间阅读本书的页面表示衷心的感谢。我希望您进入HTML5开发的过程与我的一样愉快。过去几年涌现的令人惊叹的项目证明了围绕HTML5的兴奋情绪以及规范中新增的新功能。似乎每周都会有一个新的令人兴奋的框架或库出现在社区的聚光灯下。尽管项目的多样性可能很大，但可供在您的项目中利用的大量优秀的第三方内容意味着，为了做出有效的决策，您需要尽可能跟上最新动态。加入您喜欢的社交网络，找到一些与您兴趣相似的其他开发人员，并开始一个新项目，以推动您在HTML5中所能实现的极限。谁知道，也许我将在我的下一个项目中使用您编写的库！
