- en: Chapter 8. Playing with Google Charts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。使用Google图表玩耍
- en: 'In this chapter we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将涵盖：
- en: Getting started with a pie chart
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用饼图开始
- en: Creating charts using the ChartWrapper
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用ChartWrapper创建图表
- en: Changing data source to Google Spreadsheet
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将数据源更改为Google电子表格
- en: Customizing chart properties with an options object
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用选项对象自定义图表属性
- en: Adding a dashboard to charts
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向图表添加仪表板
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In this chapter, we will explore the Google visualization API task by task.
    We will look at the steps involved in creating a chart and integrating it with
    the charting API.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将逐个任务地探索Google可视化API。我们将看一下创建图表并将其与图表API集成的步骤。
- en: To work with the Google APIs, you must comply with the Google terms of use and
    policies that can be located at [https://google-developers.appspot.com/readme/terms](https://google-developers.appspot.com/readme/terms).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Google API，您必须遵守Google的使用条款和政策，可以在[https://google-developers.appspot.com/readme/terms](https://google-developers.appspot.com/readme/terms)找到。
- en: Getting started with a pie chart
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用饼图开始
- en: In this first recipe, we will start with Google Charts, covering the basic steps
    that you need to understand when working with Google Charts through an interactive
    dataset that is based on the CDC death rates in the USA (LCWK)—deaths, percent
    of total deaths, and death rates for the 15 leading causes of death in five-year
    age groups, by race and sex in the United States in 2008.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个第一个示例中，我们将从Google图表开始，涵盖您在使用Google图表时需要了解的基本步骤，通过基于美国CDC（LCWK）2008年美国15个主要死因的死亡率的交互式数据集——死亡人数、总死亡人数的百分比以及按种族和性别分组的五年龄段内的死亡率。
- en: Getting ready
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will start from scratch with an empty HTML file and an empty JavaScript file
    named `08.01.getting-started.html` and `08.01.getting-started.js`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从一个空的HTML文件和一个名为`08.01.getting-started.html`和`08.01.getting-started.js`的空JavaScript文件开始。
- en: How to do it...
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Let''s list the steps required to complete the task starting with the HTML
    file:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们列出完成任务所需的步骤，从HTML文件开始：
- en: 'Let''s start by creating a `head` and linking it to the Google `jsapi` and
    our local JavaScript file:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从创建一个`head`并将其链接到Google的`jsapi`和我们的本地JavaScript文件开始：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then create an empty `div` with `id chart`:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后创建一个空的`div`，带有`id chart`：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now, it's time to move into the `08.01.getting-started.js` file.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候进入`08.01.getting-started.js`文件了。
- en: 'Lets request the visualization API from the Google `jsapi`:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们从Google的`jsapi`请求可视化API：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We want to add a `callback` that will be triggered when the library is ready:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们想要添加一个`callback`，当库准备就绪时将被触发：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Create an `init` function as follows:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`init`函数如下：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'From now on we will break down the code added within the `init` function:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，我们将分解在`init`函数中添加的代码：
- en: 'Create a new Google data object and provide data sources as shown in the following
    code snippet:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的Google数据对象，并按以下代码片段中所示提供数据源：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Create an `options` object for the chart:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为图表创建一个`options`对象：
- en: '[PRE6]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create and draw the chart by using the following code snippet:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码片段创建并绘制图表：
- en: '[PRE7]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Load the HTML file. You will find a working, interactive chart as shown in
    the following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 加载HTML文件。您将会发现一个工作的交互式图表，如下截图所示：
- en: '![How to do it...](img/3707OT_08_01.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/3707OT_08_01.jpg)'
- en: How it works...
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Let''s explore the steps involved in working with Google Charts. The first
    step we establish when working with the Google API''s is adding Google''s API
    link into our HTML file:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索与Google图表一起工作的步骤。我们在使用Google API时首先要做的是将Google的API链接添加到我们的HTML文件中：
- en: '[PRE8]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now that the Google API is loaded into our application, we can request the
    library we wish to work with. In our case, we want to work with the visualization
    API and the `corechart` package:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Google API已加载到我们的应用程序中，我们可以请求我们希望使用的库。在我们的情况下，我们想要使用可视化API和`corechart`包：
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Notice that we are requesting version 1.0; this might be confusing but we are
    actually asking for the production chart, 1.0 is always the current production
    version. As such if you wanted to lock into a build, you would need to discover
    what its code version is and send it instead of the 1.0 stable build.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们正在请求版本1.0；这可能会让人困惑，但实际上我们正在请求生产图表，1.0始终是当前的生产版本。因此，如果您想要锁定一个版本，您需要发现它的代码版本并发送它，而不是1.0稳定版本。
- en: 'The `corechart` library in the example defines most basic charts. For charts
    that are not included, you would need to pass in the extra packages needed, such
    as the table chart:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，`corechart`库定义了大多数基本图表。对于未包含的图表，您需要传入所需的额外包，例如表格图表：
- en: '[PRE10]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This covers the basics of how to load the API. But before we can finish our
    loading process, we need a way to have a callback so that we can know when the
    library is available for us to manipulate:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这涵盖了如何加载API的基础知识。但在我们完成加载过程之前，我们需要一种方式来进行回调，以便我们知道库何时可供我们操作：
- en: '[PRE11]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We are asking the Google API to let us know when the package has loaded in a
    similar way to how we added a callback to our document. When the API is loaded,
    it is time for us to start interacting with the charting API.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在请求Google API让我们知道包何时加载，方式类似于我们向文档添加回调的方式。当API加载完成时，是时候让我们开始与图表API进行交互了。
- en: 'There are three components that you will probably want to explore in each Google
    Chart:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个Google图表中，您可能想要探索三个组件：
- en: Creating the data source
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建数据源
- en: Adding options to your chart
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向您的图表添加选项
- en: Creating the chart
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建图表
- en: Let's explore all these options.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索所有这些选项。
- en: 'All Google Charts need a data source. The data source format is based on an
    internal object created through the charting API:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所有Google图表都需要数据源。数据源格式是基于通过图表API创建的内部对象：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Data tables are 2D arrays (or tables). They have columns and rows just like
    databases. Our next step will be to define the data columns:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 数据表是2D数组（或表）。它们像数据库一样有列和行。我们的下一步将是定义数据列：
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In our case, as we are working with a pie chart, only two rows are needed—one
    to name our elements and the other to provide them with a value. There is only
    one mandatory parameter to the `addColumn` method to define the datatype . The
    datatype can be one of the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的情况下，由于我们正在使用饼图，只需要两行——一行用于命名我们的元素，另一行用于为它们提供值。`addColumn`方法只有一个强制参数来定义数据类型。数据类型可以是以下之一：
- en: '`string`'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`字符串`'
- en: '`number`'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`数字`'
- en: '`boolean`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`布尔`'
- en: '`date`'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`日期`'
- en: '`datetime`'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`日期时间`'
- en: '`timeofday`'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`timeofday`'
- en: The second parameter is an optional descriptor of the type of data and it is
    used for visualization such as in our case `10 Deaths`. There are other parameters
    too, but as long as we provide the elements in an ordered list, we do not need
    to explore them.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个参数是数据类型的可选描述，用于可视化，例如在我们的情况下是`10 Deaths`。还有其他参数，但只要我们按照顺序提供元素，我们就不需要探索它们。
- en: 'Last but not least, we will call the `addRows` method. We can call the `addRows`
    method and send a one-dimensional array (again in the same order of data as we
    set our `addColumn`). In our case, we are using the `addRows` method that expects
    a two-dimensional array:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但并非最不重要的，我们将调用`addRows`方法。我们可以调用`addRows`方法并发送一个一维数组（再次按照我们设置`addColumn`的数据顺序）。在我们的情况下，我们正在使用期望二维数组的`addRows`方法：
- en: '[PRE14]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This covers our datasets. As long as we set our columns in the order of our
    data and send our information via arrays, we are set and don't need to dig any
    deeper into the data API.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这涵盖了我们的数据集。只要我们按照我们的数据顺序设置列并通过数组发送我们的信息，我们就不需要深入研究数据API。
- en: The `options` object enables us to create and modify the elements of our chart.
    The elements we control in our application are width, height, and our title.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`options`对象使我们能够创建和修改图表的元素。我们在应用程序中控制的元素是宽度、高度和标题。'
- en: 'After creating the data sources and setting the options for our array, it''s
    time for the easy part. To create the chart our first step is to pick our chart
    type and define where it will be created. Then we render it with the data source
    and options:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 创建数据源并为我们的数组设置选项后，现在是简单的部分。创建图表的第一步是选择图表类型并定义它将被创建的位置。然后我们用数据源和选项来渲染它：
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: There's more...
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Let''s explore a few more tips, tricks, and advanced features of Google Charts.
    Using the option `Objectto create 3D chartsTo`, we can turn our chart into 3D.
    We can very quickly and simply add a new parameter into the options object:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索一些谷歌图表的技巧和高级功能。使用选项`Objectto创建3D图表`，我们可以将我们的图表转换为3D。我们可以非常快速简单地将一个新参数添加到选项对象中：
- en: '[PRE16]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The outcome would be a chart that is tilted in a 3D space.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 结果将是一个在3D空间中倾斜的图表。
- en: '![There''s more...](img/3707OT_08_02.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/3707OT_08_02.jpg)'
- en: Changing the chart type
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更改图表类型
- en: 'Changing a chart type isn''t something complicated. As long as the chart types
    share the same number of data entries the change is usually one word from the
    actual constructor object of the chart. For example, we can very quickly switch
    our chart type by changing the method in the visualization library that is called:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 更改图表类型并不复杂。只要图表类型共享相同数量的数据条目，更改通常只是从图表的实际构造对象中的一个单词。例如，我们可以通过更改调用可视化库中的方法来非常快速地切换图表类型：
- en: '[PRE17]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: That would take the same data only rendered into a line chart (the `LineChart`
    object).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使用相同的数据，只是呈现为线图（`LineChart`对象）。
- en: '![Changing the chart type](img/3707OT_08_03.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![更改图表类型](img/3707OT_08_03.jpg)'
- en: Creating charts using the ChartWrapper
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ChartWrapper创建图表
- en: There are two ways to create charts with Google Charts. One is the way we did
    it in the recipe *Getting started with a pie chart* and the second will be covered
    in this recipe. The goal of the ChartWrapper object is to enable you to cut down
    the amount of code needed to create a chart.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用谷歌图表创建图表有两种方法。一种是我们在*使用饼图入门*中所做的方式，另一种将在本教程中介绍。ChartWrapper对象的目标是使您能够减少创建图表所需的代码量。
- en: Its main advantages are less code and more flexibility of data sources. Its
    disadvantage is less control over the steps of graph creation.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 它的主要优点是代码更少，数据源的灵活性更大。它的缺点是对图形创建步骤的控制较少。
- en: Getting ready
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做好准备
- en: Grab the HTML file from the last recipe (*Getting started with pie charts*).
    We will only modify the file path of the external JavaScript file and the rest
    of the code will remain the same.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 从上一个教程（*使用饼图入门*）中获取HTML文件。我们只会修改外部JavaScript文件的文件路径，其余代码将保持不变。
- en: How to do it...
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'After changing the path of the HTML file source to the JavaScript file, it''s
    time to go into the JavaScript file and start over:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改HTML文件源路径为JavaScript文件之后，现在是时候进入JavaScript文件并重新开始了：
- en: 'Load Google API (you do not need to mention what you want to load any more)
    and add a callback:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载谷歌API（您不需要再提及您想要加载的内容），并添加一个回调：
- en: '[PRE18]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Create the `init` function:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`init`函数：
- en: '[PRE19]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Build a 2D array with the data source:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用数据源构建一个2D数组：
- en: '[PRE20]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Create the `options` object:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`options`对象：
- en: '[PRE21]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Build and render the chart:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建和渲染图表：
- en: '[PRE22]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You've completed the creation of this chart type. Refresh your screen and you
    will see the same chart as in the last example, only using less code.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经完成了创建这种图表类型。刷新您的屏幕，您将看到与上一个例子中相同的图表，只是使用了更少的代码。
- en: How it works...
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The nice thing about this example is you don't need to know much more about
    how it works. The `ChartWrapper` function itself deals with all the information
    that you've had to deal with in the last recipe. With that said, it doesn't mean
    this way is always the better way—if you need more control over the steps, the
    last example would work better.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子的好处是你不需要知道更多关于它是如何工作的。`ChartWrapper`函数本身处理了你在上一个教程中需要处理的所有信息。话虽如此，并不意味着这种方式总是更好的方式——如果你需要更多对步骤的控制，上一个例子会更好地工作。
- en: There's more...
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: As this recipe was very easy, let's add an extra pointer.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个教程非常简单，让我们添加一个额外的指针。
- en: Changing a chart in one line
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在一行中更改图表
- en: 'It''s really easy changing between the types of views of the Google Chart API.
    All you need to do is switch the type. Let''s change our chart to a `BarChart`:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google Chart API的不同视图类型之间切换非常容易。你只需要切换类型。让我们把我们的图表改成`BarChart`：
- en: '[PRE23]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Refresh your window and you will find a bar chart.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 刷新你的窗口，你会发现一个条形图。
- en: '![Changing a chart in one line](img/3707OT_08_04.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![一行代码改变图表](img/3707OT_08_04.jpg)'
- en: Changing data source to Google Spreadsheet
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据源更改为Google电子表格
- en: One of the powerful features of working with the Google API is the deep relationship
    between the product lines. In this recipe, based on the last recipe, we will create
    a Google Spreadsheet and then integrate it into our application.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 与Google API合作的一个强大功能是产品线之间的深层关系。在这个配方中，基于上一个配方，我们将创建一个Google电子表格，然后将其整合到我们的应用程序中。
- en: Getting ready
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Have a copy around you of the source files from the last recipe (*Creating charts
    using the ChartWrapper*).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在你周围备有上一个配方的源文件的副本（*使用ChartWrapper创建图表*）。
- en: How to do it...
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: The steps involved with creating a new Google document are simple, but are needed
    to be able to integrate our work; as such we will run through them quickly.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新的Google文档所涉及的步骤很简单，但需要能够整合我们的工作；因此我们将快速地运行一遍。
- en: Go to [http://drive.google.com/](http://drive.google.com/) (formally known as
    Google Docs) and register/login.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到[http://drive.google.com/](http://drive.google.com/)（以前称为Google Docs）并注册/登录。
- en: Create a new spreadsheet.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的电子表格。
- en: Add data to the spreadsheet.![How to do it...](img/3707OT_08_05.jpg)
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向电子表格添加数据。![操作步骤...](img/3707OT_08_05.jpg)
- en: Click on the **Share** button and set the view to public:![How to do it...](img/3707OT_08_06.jpg)
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**分享**按钮并将视图设置为公开：![操作步骤...](img/3707OT_08_06.jpg)
- en: 'Create an API URL based on the document ID:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据文档ID创建API URL：
- en: '**Document link**:'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档链接**：'
- en: '[https://docs.google.com/spreadsheet/ccc?key=0Aldzs55s0XbDdFJfUTNVSVltTS1ZQWQ0bWNsX2xSbVE](https://docs.google.com/spreadsheet/ccc?key=0Aldzs55s0XbDdFJfUTNVSVltTS1ZQWQ0bWNsX2xSbVE)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.google.com/spreadsheet/ccc?key=0Aldzs55s0XbDdFJfUTNVSVltTS1ZQWQ0bWNsX2xSbVE](https://docs.google.com/spreadsheet/ccc?key=0Aldzs55s0XbDdFJfUTNVSVltTS1ZQWQ0bWNsX2xSbVE)'
- en: '**API link**:'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API链接**：'
- en: '[https://spreadsheets.google.com/tq?key=0Aldzs55s0XbDdFJfUTNVSVltTS1ZQWQ0bWNsX2xSbVE](https://spreadsheets.google.com/tq?key=0Aldzs55s0XbDdFJfUTNVSVltTS1ZQWQ0bWNsX2xSbVE)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://spreadsheets.google.com/tq?key=0Aldzs55s0XbDdFJfUTNVSVltTS1ZQWQ0bWNsX2xSbVE](https://spreadsheets.google.com/tq?key=0Aldzs55s0XbDdFJfUTNVSVltTS1ZQWQ0bWNsX2xSbVE)'
- en: 'Now, it''s time to get into our JavaScript file, and delete the current data
    source and replace it with a URL feed:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，是时候进入我们的JavaScript文件，删除当前数据源，并用URL feed替换它：
- en: '[PRE24]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Amazing! See how little code we needed to create a rich and fully interactive
    chart:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！看看我们需要多少代码才能创建一个丰富而完全交互的图表：
- en: '![How to do it...](img/3707OT_08_07.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤...](img/3707OT_08_07.jpg)'
- en: How it works...
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This is really the amazing part about it. You just don't need to understand
    how it works, all you need to do is create your chart and use the steps provided
    in the preceding section, and you can convert any of your own spreadsheets into
    a Google Spreadsheet.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这真的是令人惊讶的部分。你不需要理解它是如何工作的，你只需要创建你的图表，并使用前一节提供的步骤，你就可以将你自己的任何电子表格转换成Google电子表格。
- en: The most important step in the preceding steps is step 4\. Notice that the URL
    that is generated through the Google Documents (Google Drive) is not the same
    as the URL that we need to hit when working in code. This is because the first
    URL is intended to be rendered as a visual page, while the second link generates
    a new Google data object. Don't forget that every page has its own unique ID.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的步骤中，最重要的一步是第4步。注意通过Google文档（Google Drive）生成的URL与在代码中工作时需要访问的URL不同。这是因为第一个URL旨在呈现为可视页面，而第二个链接生成一个新的Google数据对象。不要忘记每个页面都有自己独特的ID。
- en: There's more...
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If you have a bit of a background with working with databases, you can send
    simple SQL queries into the data source and only get the items that you want to
    view. Let''s say in our example we want to get the items in a different order,
    exclude column B, and sort based on column D (by age):'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一点关于使用数据库的背景，你可以将简单的SQL查询发送到数据源，只获取你想要查看的项目。比如在我们的例子中，我们想以不同的顺序获取项目，排除B列，并根据D列（按年龄）进行排序：
- en: '[PRE25]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Our `Select` statement is listing out what we want to select. The `ORDER BY`
    statement is self-explanatory. Let''s add it to our code:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`Select`语句列出了我们想要选择的内容。`ORDER BY`语句不言自明。让我们把它添加到我们的代码中：
- en: '[PRE26]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: When you refresh your code, column B will be missing and the data will be organized
    based on column D.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当你刷新你的代码时，B列将消失，数据将根据D列进行组织。
- en: 'Last but not least, add this to your code:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但并非最不重要的，将这添加到你的代码中：
- en: '[PRE27]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Now go back to the public chart and change the data in it. You will see that
    it will automatically update the chart.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在回到公共图表并更改其中的数据。你会发现它会自动更新图表。
- en: Customizing the chart properties with an options object
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用选项对象自定义图表属性
- en: In this recipe, we will create a new chart with Google Charts API—a candlestick
    chart—and we will incorporate a variety of configurations into it.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将使用Google Charts API创建一个新的图表——蜡烛图，并将各种配置整合到其中。
- en: Getting ready
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will start with a clean slate by creating a fresh new JavaScript and an HTML
    file.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过创建一个全新的JavaScript和HTML文件开始一个干净的板。
- en: How to do it...
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'Most of the steps will look almost identical to the past recipes in this chapter.
    Our main focus will be on our `options` parameters:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数步骤看起来几乎与本章中的过去的配方相同。我们的主要重点将放在我们的`options`参数上：
- en: 'Create an HTML file and link it to a JavaScript file (in our case `08.04.candlestick.js`):'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个HTML文件并将其链接到一个JavaScript文件（在我们的例子中是`08.04.candlestick.js`）：
- en: '[PRE28]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'In the `08.04.candlestick.js` file, add the API `load` and `callback` functions:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`08.04.candlestick.js`文件中，添加API的`load`和`callback`函数：
- en: '[PRE29]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'In the `init` function (from now until the end of this recipe we will remain
    in the `init` function), create a new `DataTable` object by using the `google.visualization.arrayToDataTable`
    method:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`init`函数中（从现在开始到本配方结束，我们将一直保持在`init`函数中），使用`google.visualization.arrayToDataTable`方法创建一个新的`DataTable`对象：
- en: '[PRE30]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Create an `options` object (a configuration object) for the chart:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为图表创建一个`options`对象（配置对象）：
- en: '[PRE31]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Draw the chart by using the following code snippet:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码片段绘制图表：
- en: '[PRE32]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'When you load the HTML file, you will discover a customized candlestick chart,
    as shown in the following screenshot:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 加载HTML文件后，您将发现一个定制的蜡烛图表，如下截图所示：
- en: '![How to do it...](img/3707OT_08_08.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤...](img/3707OT_08_08.jpg)'
- en: How it works...
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This is the first time that we have used the method `google.visualization.arrayToDataTable`.
    This method takes in an array and returns a data table. When the second parameter
    of this method is set to `true`, it will treat the first row in the array as part
    of the data; and otherwise it will be treated as header data.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '这是我们第一次使用`google.visualization.arrayToDataTable`方法。该方法接受一个数组并返回一个数据表。当此方法的第二个参数设置为`true`时，它将将数组中的第一行视为数据的一部分；否则，它将被视为标题数据。 '
- en: 'There are many options and for a full list of them, review Google Charts documentation.
    We will focus on the items that we have picked to modify our view. The Google
    charts enable you to send an object with parameters. Each chart type has a different
    set of options. In our case, we have many options that enable us to control the
    details of how our chart looks. Most of the options are style related:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多选项，有关完整列表，请参阅Google Charts文档。我们将专注于我们选择修改视图的项目。Google图表使您能够发送带有参数的对象。每种图表类型都有不同的选项集。在我们的情况下，我们有许多选项，使我们能够控制图表外观的细节。大多数选项与样式相关：
- en: '[PRE33]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Some options directly relate to the function such as disabling the legend:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 一些选项直接与功能相关，例如禁用图例：
- en: '[PRE34]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Or disabling interactive elements:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 或者禁用交互元素：
- en: '[PRE35]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: There's more...
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The main goal of highlighting this element is not because it's difficult, but
    because it's easy, and it is the main place where you would find yourself making
    changes to the charts. One point to note is that it is really important to check
    that you can do what you need by using Google Charts before working with them,
    as contrary to other chart systems, you can't go into their source files and change
    them, as we did in the recipes in [Chapter 7](ch07.html "Chapter 7. Depending
    on the Open Source Sphere"), *Depending on the Open Source Sphere*.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 突出显示这个元素的主要目的不是因为它很难，而是因为它很容易，这是您会发现自己对图表进行更改的主要地方。需要注意的一点是，在使用Google Charts之前，确保您可以通过使用Google
    Charts来做您需要的事情，因为与其他图表系统相反，您不能进入它们的源文件并对其进行更改，就像我们在[第7章](ch07.html "第7章。依赖于开源领域")的示例中所做的那样，*依赖于开源领域*。
- en: Adding a dashboard to charts
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向图表添加仪表板
- en: In this last recipe of this chapter we will add live controllers that will enable
    the users to change the filtering of data to see less or more information.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后一个示例中，我们将添加实时控制器，使用户可以更改数据的过滤，以查看更少或更多的信息。
- en: Getting ready
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: We will start from scratch so nothing to worry about.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从头开始，所以不用担心。
- en: How to do it...
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'The following are the steps needed to create a basic dashboard controller:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是创建基本仪表板控制器所需的步骤：
- en: 'Create an HTML file and link it to an external JavaScript file (in our case
    we will use the file `08.05.slider.js`):'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个HTML文件并将其链接到外部JavaScript文件（在我们的例子中，我们将使用文件`08.05.slider.js`）：
- en: '[PRE36]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now, it''s time to get into `08.05.slider.js` and to load the Google Visualization
    API. This time around we will load in the controller package:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，是时候进入`08.05.slider.js`并加载Google Visualization API了。这一次我们将加载控制器包：
- en: '[PRE37]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Now, it''s time to add a callback:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，是时候添加一个回调了：
- en: '[PRE38]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Let''s create our data source. We will base it on CDC death rates for 2008:'
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建我们的数据源。我们将以2008年CDC死亡率为基础：
- en: '[PRE39]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Then create a new dashboard:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后创建一个新的仪表板：
- en: '[PRE40]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Let''s create a slider and provide it with the information it needs to connect
    to the data source:'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个滑块并为其提供连接到数据源所需的信息：
- en: '[PRE41]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Create a chart:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个图表：
- en: '[PRE42]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Last but not least, it''s time to bind and draw our controller:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后但并非最不重要的，是时候绑定和绘制我们的控制器了：
- en: '[PRE43]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Load the HTML file and you will discover a scatter chart with a controller that
    enables you to select the age range that you want to dig deeper into.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 加载HTML文件，您将发现一个散点图，带有一个控制器，可以选择您想要深入了解的年龄范围。
- en: '![How to do it...](img/3707OT_08_09.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤...](img/3707OT_08_09.jpg)'
- en: How it works...
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This is probably one of the smoothest parts of working with the Google Charting
    API. So let's break down and figure out the steps involved in creating controllers
    for your chart. We will showcase one controller, but the same logic flow would
    work for all components.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是使用Google图表API中最顺畅的部分之一。因此，让我们分解并弄清楚创建图表控制器涉及的步骤。我们将展示一个控制器，但相同的逻辑流程适用于所有组件。
- en: 'First in our HTML file, we need to have a `div` layer with an ID associated
    for our dashboard and a `div` for each following controller. To add controllers
    we assign them to the dashboard. We start with creating a dashboard:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在我们的HTML文件中，我们需要有一个与我们的仪表板关联的`div`层和每个后续控制器的`div`。要添加控制器，我们将它们分配给仪表板。我们首先创建一个仪表板：
- en: '[PRE44]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'This dashboard is now going to be our hub where we connect all of our controllers
    (in our case, one controller). Then, we will create the next controller; in our
    case, we want to use a slider:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这个仪表板现在将成为我们连接所有控制器的中心（在我们的情况下，一个控制器）。然后，我们将创建下一个控制器；在我们的情况下，我们想使用一个滑块：
- en: '[PRE45]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Notice that we are adding a control type to get our range slider and we are
    linking it to a column by giving it the column ID (the label in the first row).
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们正在添加一个控件类型以获取我们的范围滑块，并通过给它列ID（第一行中的标签）来将其链接到列。
- en: 'We continue and create a chart in the same way as before. In this case we picked
    a scatter chart. The order here isn''t important, but the most important part
    left is to link between our controller and the chart. We do that by using the
    `dashboard.bind` method:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们继续以与之前相同的方式创建图表。在这种情况下，我们选择了散点图。这里的顺序并不重要，但最重要的部分是连接我们的控制器和图表。我们通过使用`dashboard.bind`方法来实现这一点：
- en: '[PRE46]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Then, we draw our element as our dashboard returns itself when a `bind` function
    is created:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，当创建一个`bind`函数时，我们将我们的元素绘制为我们的仪表板返回自身：
- en: '[PRE47]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'If we want, we can split this into separate lines as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想的话，我们可以将其拆分为如下的单独行：
- en: '[PRE48]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: And there you go! Now you know how to work with dashboards. These steps are
    critical, but you can now add any controller. The rest of the documentation for
    this product is self-explanatory.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道如何使用仪表板了。这些步骤很关键，但现在你可以添加任何控制器。这个产品的其余文档是不言自明的。
