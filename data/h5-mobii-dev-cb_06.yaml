- en: Chapter 6. Mobile Rich Media
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。移动丰富媒体
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Playing audio from a mobile browser
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从移动浏览器播放音频
- en: Streaming video on the go
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在移动设备上流式传输视频
- en: Using Appcache for offline viewing
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Appcache进行离线查看
- en: Using Web Storage for feed or e-mail applications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Web Storage进行Feed或电子邮件应用程序
- en: Using web workers for heavy computation work
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用web workers进行大量计算工作
- en: Creating Flash-like navigation with session and history API
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建类似Flash的导航，使用会话和历史API
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: With HTML5, you can build rich media applications to display for mobile devices.
    There are unlimited ways to use HTML5; the only limit is one's imagination.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用HTML5，您可以构建丰富的媒体应用程序以在移动设备上显示。使用HTML5的方式有无限种，唯一的限制是想象力。
- en: 'In the previous chapters, we have covered semantic naming, CSS3, and Device
    Access categories of HTML5\. In this chapter, we will go through three more categories:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的章节中，我们已经涵盖了HTML5的语义命名、CSS3和设备访问类别。在本章中，我们将介绍另外三个类别：
- en: '**Multimedia**—More and more people are playing video and audio on the go,
    we will see how to embed these elements on mobile devices.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多媒体**—越来越多的人在移动设备上播放视频和音频，我们将看到如何在移动设备上嵌入这些元素。'
- en: '**Offline and Storage**—Offline is an important feature for mobile as the connectivity
    isn''t consistent on a mobile device. Storage is useful for mobile to store data
    on the device to reduce fetching each time the user revisits the page.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**离线和存储**—离线是移动设备的重要功能，因为连接在移动设备上并不一直稳定。存储对于移动设备存储数据以减少用户每次访问页面时的获取是有用的。'
- en: '**Performance and Integration**—With support of web workers on iOS and Blackberry,
    we could achieve better performance on mobile browsers.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能和集成**—在iOS和Blackberry上支持web workers，我们可以在移动浏览器上获得更好的性能。'
- en: Playing audio on mobile
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在移动设备上播放音频
- en: 'Target browsers: iOS, Android, Blackberry, webOS, Opera Mobile, Firefox Mobile'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 目标浏览器：iOS、Android、Blackberry、webOS、Opera Mobile、Firefox Mobile
- en: Multimedia consists of audio and video. Playing audio on mobile can be tricky.
    There are a few supported audio formats on mobile browsers—Ogg Vorbis, MP3, and
    WAV. One issue with these formats is that all of them are not supported by all
    browsers.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 多媒体包括音频和视频。在移动设备上播放音频可能会有些棘手。在移动浏览器上有一些支持的音频格式—Ogg Vorbis、MP3和WAV。这些格式的问题之一是并非所有浏览器都支持它们。
- en: Getting ready
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create an HTML document and name it `ch06r01.html`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个HTML文档并将其命名为`ch06r01.html`。
- en: How to do it...
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Enter the following code in the document:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在文档中输入以下代码：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now when rendering it in the browser, you will see a music player displayed
    as follows, and when you press play, the music should stream:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在浏览器中渲染时，您将看到一个音乐播放器显示如下，当您按下播放时，音乐应该会流式传输：
- en: '![How to do it...](img/1963_06_05.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/1963_06_05.jpg)'
- en: How it works...
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Using the audio tag is fairly simple. The audio is enclosed in the`<audio></audio>`
    tags.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用音频标签非常简单。音频被包含在`<audio></audio>`标签中。
- en: '`controls` tells the audio element to show visual controls such as pause, play,
    and so on.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`controls` 告诉音频元素显示可视控件，如暂停、播放等。'
- en: '`autobuffer` lets the browser handle the buffering and streaming. The `autobuffer`
    attribute has Boolean value. If it is in audio tag; audio will buffer automatically.
    `preload=auto` makes the stream preload even before playing.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`autobuffer`让浏览器处理缓冲和流式传输。`autobuffer`属性具有布尔值。如果它在音频标签中；音频将自动缓冲。`preload=auto`使流式传输在播放之前甚至预加载。'
- en: 'A problem with audio streaming on mobile is the format support. Here is a table
    showing the support comparison:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动设备上音频流式传输的一个问题是格式支持。下表显示了支持比较：
- en: '| Browser | Ogg Vorbis | MP3 | WAV |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| 浏览器 | Ogg Vorbis | MP3 | WAV |'
- en: '| --- | --- | --- | --- |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| Android WebKit | Yes | Yes |   |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| Android WebKit | Yes | Yes |   |'
- en: '| Opera Mobile |   | Yes |   |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| Opera Mobile |   | Yes |   |'
- en: '| Firefox Mobile | Yes |   | Yes |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| Firefox Mobile | Yes |   | Yes |'
- en: '| iOS Safari |   | Yes | Yes |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| iOS Safari |   | Yes | Yes |'
- en: As shown in the table, the support has been largely inconsistent. This can be
    quite troublesome for cross-browser audio streaming. One way you can do it is
    to use multiple tracks. If a browser can't recognize a track in the first source
    tags, it will just try the next one. As we can see from the preceding table, the
    most widely supported format is MP3.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如表所示，支持一直不够一致。这对于跨浏览器音频流式传输可能会很麻烦。您可以使用多个轨道来解决这个问题。如果浏览器无法识别第一个源标签中的轨道，它将尝试下一个。正如我们从前面的表中所看到的，最广泛支持的格式是MP3。
- en: 'It is supported by most mobile browsers except Firefox. For Firefox, we can
    use Ogg, so the following code is more cross-mobile browser compatible:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 它在大多数移动浏览器中都受支持，除了Firefox。对于Firefox，我们可以使用Ogg，因此以下代码更适用于跨移动浏览器：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There's more...
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'You may ask, ''What about browsers that don''t support HTML5 audio tags?''
    There are audio polyfills, but generally, I don''t see the point of using polyfills
    for mobile audio. One reason is because these polyfills are made using Flash,
    and Flash Lite is only supported on limited mobile devices such as Symbian. One
    solution is to simply include a link within the audio tags. It won''t be rendered
    by browsers that support audio tags, but it will show on browsers that don''t
    support audio tags. You can do so by adding a download link inside just before
    the closing audio tags:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会问，'那些不支持HTML5音频标签的浏览器怎么办？' 有音频polyfills，但一般来说，我不认为在移动音频中使用polyfills有意义。一个原因是因为这些polyfills是使用Flash制作的，而Flash
    Lite只支持有限的移动设备，如塞班。一个解决方案是在音频标签之前简单地包含一个链接。它不会被支持音频标签的浏览器渲染，但会显示在不支持音频标签的浏览器上。您可以通过在音频标签关闭之前添加一个下载链接来实现：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now if you render this in Windows Phone, the following will be displayed:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您在Windows Phone上渲染此内容，将显示如下：
- en: '![There''s more...](img/1963_06_06.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/1963_06_06.jpg)'
- en: 'And if you click on the link, it will simply be opened by the system''s default
    music player:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您点击链接，它将简单地由系统的默认音乐播放器打开：
- en: '![There''s more...](img/1963_06_07.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/1963_06_07.jpg)'
- en: W3C Audio Working Group
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: W3C音频工作组
- en: 'The current audio element lacks a client-side API. W3C Audio Working Group
    ([http://www.w3.org/2011/audio/](http://www.w3.org/2011/audio/)) was set up to
    address this issue. The API will support the features required by advanced interactive
    applications including the ability to process and synthesize audio streams directly
    in script. You can subscribe to participate in the discussion at: `<[public-audio-request@w3.org](mailto:public-audio-request@w3.org)>`.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的音频元素缺乏客户端API。W3C音频工作组（[http://www.w3.org/2011/audio/](http://www.w3.org/2011/audio/)）成立以解决这个问题。该API将支持高级交互应用程序所需的功能，包括在脚本中直接处理和合成音频流的能力。您可以订阅参与讨论：`<[public-audio-request@w3.org](mailto:public-audio-request@w3.org)>`。
- en: Streaming video on your mobile
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在移动设备上流媒体视频
- en: 'Target browsers: iOS, Android, Blackberry, webOS, Opera Mobile, Firefox Mobile'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 目标浏览器：iOS、Android、Blackberry、webOS、Opera Mobile、Firefox Mobile
- en: Some of the most visited websites from desktop platforms are video sites such
    as [http://www.youtube.com](http://www.youtube.com) and [http://www.vimeo.com](http://www.vimeo.com).
    They have a version optimized for mobiles. Video streaming is an important part
    of mobile. People enjoy watching videos on the go, especially short videos such
    as those on YouTube. They take less time to buffer and it doesn't take much time
    to finish watching. So how does the video work on a mobile device? Let's first
    create an example.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 从桌面平台访问最多的网站之一是视频网站，如[http://www.youtube.com](http://www.youtube.com)和[http://www.vimeo.com](http://www.vimeo.com)。它们有为移动设备优化的版本。视频流是移动设备的重要组成部分。人们喜欢在移动设备上观看视频，尤其是YouTube上的短视频。它们需要更少的时间来缓冲，观看完也不需要花费太多时间。那么视频在移动设备上是如何工作的呢？让我们首先创建一个示例。
- en: Getting ready
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create an HTML document named `ch06r02.html`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`ch06r02.html`的HTML文档。
- en: How to do it...
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Enter the following code in to the HTML document:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码输入HTML文档中：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Now if you open it in a mobile browser, you should see the video player rendered.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您在移动浏览器中打开它，您应该看到视频播放器已呈现。
- en: '![How to do it...](img/1963_06_08.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/1963_06_08.jpg)'
- en: How it works...
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Part of the code is taken from *Mark Pilgrim's Dive into HTML5*. You must be
    thinking, that's a hell of a lot of work to get video working! Here let's see
    what each part does. Both iOS and Android support H.264 (`mp4`) format, `webm`
    and `ogv` versions are added to make sure it will also render in other desktop
    and mobile devices.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的一部分取自*Mark Pilgrim的Dive into HTML5*。您一定会想，这是一项非常艰巨的工作来让视频工作！在这里，让我们看看每个部分的作用。iOS和Android都支持H.264（`mp4`）格式，添加`webm`和`ogv`版本以确保它也可以在其他桌面和移动设备上呈现。
- en: If you have multiple`<source>` elements, iOS will only recognize the first one.
    Since iOS devices only support H.264+AAC+MP4, you have to always list your MP4
    first. This bug is fixed in iOS 4.0\. So in the example, we listed `test.mp4`
    as the first one.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有多个`<source>`元素，iOS只会识别第一个。由于iOS设备只支持H.264+AAC+MP4，您必须始终首先列出您的MP4。这个错误在iOS
    4.0中已经修复。因此，在这个例子中，我们将`test.mp4`列为第一个。
- en: '[PRE4]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following Flash fallback is added to make sure sites don''t support HTML5
    video could play the video:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是添加的Flash回退，以确保不支持HTML5视频的站点可以播放视频：
- en: '[PRE5]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: There's more...
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: '*Mark Pilgrim''s Dive into HTML5* has detailed information about issues that
    are faced while rendering a video on different browsers. You can have a read at:
    [http://diveintohtml5.info/video.html](http://diveintohtml5.info/video.html)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*Mark Pilgrim的Dive into HTML5*详细介绍了在不同浏览器上呈现视频时遇到的问题。您可以在以下网址阅读：[http://diveintohtml5.info/video.html](http://diveintohtml5.info/video.html)'
- en: Versions of Android before 2.3 had a couple of issues with HTML5 video. The
    type attribute on`<source>` elements confused earlier versions of Android greatly.
    The only way to get it to recognize a video source is, ironically, to omit the
    type attribute altogether and ensure that your H.264+AAC+MP4 video file's name
    ends with a `.mp4` extension. You can still include the type attribute on your
    other video sources, as H.264 is the only video format that Android 2.2 supports.
    This bug is fixed in Android 2.3.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Android 2.3之前的版本在HTML5视频方面存在一些问题。`<source>`元素上的type属性让早期版本的Android感到困惑。让它识别视频源的唯一方法是讽刺的是完全省略type属性，并确保您的H.264+AAC+MP4视频文件的名称以`.mp4`扩展名结尾。您仍然可以在其他视频源上包括type属性，因为H.264是Android
    2.2支持的唯一视频格式。这个错误在Android 2.3中已经修复。
- en: The `controls` attribute was not supported. There are no ill effects to including
    it, but Android will not display any user interface controls for a video. You
    will need to provide your own user interface controls. As a minimum, you should
    provide a script that starts playing the video when the user clicks it. This bug
    is also fixed in Android 2.3.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`controls`属性不受支持。包括它不会产生任何不良影响，但Android不会为视频显示任何用户界面控件。您需要提供自己的用户界面控件。至少，您应该提供一个脚本，当用户点击时开始播放视频。这个错误在Android
    2.3中也已经修复。'
- en: Using offline caching
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用离线缓存
- en: 'Target browsers: iOS, Android, Opera Mobile, webOS, Firefox Mobile'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 目标浏览器：iOS、Android、Opera Mobile、webOS、Firefox Mobile
- en: Apart from Device Access, offline caching is one of the most important features
    for mobile devices. One of the biggest differences between desktop browsing and
    mobile browsing is that mobile users are always on the go. Unlike desktop browsing,
    which typically uses a single stable connection, mobile browsing may take place
    in transit, switching between 3G and WiFi and going offline entirely in such places
    as tunnels. Offline caching can help with issues caused by disconnection from
    the Internet.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 除了设备访问之外，离线缓存是移动设备最重要的功能之一。桌面浏览和移动浏览之间最大的区别之一是移动用户总是在行动。与通常使用单一稳定连接的桌面浏览不同，移动浏览可能在移动中进行，在3G和WiFi之间切换，并在隧道等地方完全离线。离线缓存可以帮助解决因与互联网断开连接而引起的问题。
- en: '| Devices | Supported |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 设备 | 支持 |'
- en: '| --- | --- |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| iOS | Yes (3.2+) |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| iOS | 是的（3.2+）|'
- en: '| Android | Yes (2.1+) |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| Android | 是的（2.1+） |'
- en: '| Windows Mobile | No |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| Windows Mobile | 否 |'
- en: '| Blackberry v6.0 and above | No |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| Blackberry v6.0及以上 | 否 |'
- en: '| Symbian 60 | No |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| Symbian 60 | 否 |'
- en: '| Palm webOS | Yes |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| Palm webOS | 是的 |'
- en: '| Opera Mobile | Yes |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| Opera Mobile | 是的 |'
- en: '| Firefox Mobile | Yes |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| Firefox Mobile | 是的 |'
- en: Getting ready
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Let's create a text file and name it `default.appcache`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个文本文件并将其命名为`default.appcache`。
- en: How to do it...
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In the `default.appcache` file we''ve just created, type in the following content:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们刚刚创建的`default.appcache`文件中，输入以下内容：
- en: '[PRE6]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now create an HTML document and name it `ch06r03.html:`
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在创建一个HTML文档并将其命名为`ch06r03.html:`
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Now if you load the page, disable the Internet connection and load the page
    again. You can see the page still loads.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在如果你加载页面，禁用互联网连接并重新加载页面。你会发现页面仍然加载。
- en: How it works...
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Anything under the `CACHE MANIFEST` comprises the files that will be cached
    for offline viewing. The file that includes the cache manifest file will automatically
    be included and that means:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`CACHE MANIFEST`下的任何内容都包括了将被缓存以供离线查看的文件。包含缓存清单文件的文件将自动包含在内，这意味着：'
- en: '[PRE8]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The `NETWORK` section lists all the URLs you DON''T want to be cached. These
    are the files that should be loaded each time the page is reloaded. An example
    of such a file is API calls. You don''t want the browser to cache dynamic API
    returns. If all your API calls are from the same prefix, you don''t have to include
    them all. Instead, you only have to include the **prefix**. For example, if you
    have a list of URLs as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`NETWORK`部分列出了所有你不希望被缓存的URL。这些是每次重新加载页面时应该加载的文件。这类文件的一个例子是API调用。你不希望浏览器缓存动态API返回。如果你所有的API调用都来自同一个前缀，你不必把它们都包括进来。相反，你只需要包括**前缀**。例如，如果你有以下URL列表：'
- en: '[PRE9]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Instead of adding them one by one to the list, you can just add one:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 不要一次添加到列表中，你可以只添加一个：
- en: '[PRE10]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: The `FALLBACK` section is a place to list page URL replacements for network
    URLs to be used when the browser is offline or the remote server is not available.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`FALLBACK`部分是用于列出页面URL替换的网络URL，当浏览器离线或远程服务器不可用时使用。'
- en: There's more...
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: One question you might be asking is why do we use `.appcache` instead of `.manifest`
    as the extension? It is because `.appcache` is recommended by WHATWG. As it is
    a standard and there is no issue with browser support, it is best to use `.appcache`.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会问为什么我们使用`.appcache`而不是`.manifest`作为扩展名？这是因为`.appcache`是由WHATWG推荐的。由于它是一个标准，并且没有浏览器支持的问题，最好使用`.appcache`。
- en: 'Another thing you might be wondering is whether these extensions are recognized
    by the browsers. No worries, the following `AddType` will help both `.appcache`
    and `.manifest` render with the proper MIME type. Add the following to the `.htaccess`
    file:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还想知道的一件事是这些扩展是否被浏览器识别。不用担心，以下的`AddType`将帮助`.appcache`和`.manifest`以正确的MIME类型呈现。将以下内容添加到`.htaccess`文件中：
- en: '[PRE11]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Appcache facts
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Appcache facts
- en: 'To know more about Appcache, one can go over to the *Appcache Facts* site ([http://appcachefacts.info/](http://appcachefacts.info/)).
    It has much useful and valuable information about Appcache. It also maintains
    a list of links to sites exploring Appcache:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于Appcache的信息，可以访问*Appcache Facts*网站（[http://appcachefacts.info/](http://appcachefacts.info/)）。它有关于Appcache的许多有用和宝贵的信息。它还维护了一个链接列表，链接到探索Appcache的网站：
- en: 'Dive Into HTML5 Let''s Take This Offline: ([http://diveintohtml5.info/offline.html](http://diveintohtml5.info/offline.html))'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '深入了解HTML5 让我们离线: ([http://diveintohtml5.info/offline.html](http://diveintohtml5.info/offline.html))'
- en: 'Google Code blog Using AppCache to Launch Offline: ([http://googlecode.blogspot.com/2009/04/gmail-for-mobile-html5-series-using.html](http://googlecode.blogspot.com/2009/04/gmail-for-mobile-html5-series-using.html))'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Google Code博客 使用AppCache启动离线: ([http://googlecode.blogspot.com/2009/04/gmail-for-mobile-html5-series-using.html](http://googlecode.blogspot.com/2009/04/gmail-for-mobile-html5-series-using.html))'
- en: 'HTML5 Rocks A Beginner''s Guide to Using the Application Cache: ([http://www.html5rocks.com/tutorials/appcache/beginner/](http://www.html5rocks.com/tutorials/appcache/beginner/))'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'HTML5 Rocks 使用应用程序缓存的初学者指南: ([http://www.html5rocks.com/tutorials/appcache/beginner/](http://www.html5rocks.com/tutorials/appcache/beginner/))'
- en: 'MDN Doc Center Offline resources in Firefox: ([https://developer.mozilla.org/en/offline_resources_in_firefox](https://developer.mozilla.org/en/offline_resources_in_firefox))'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MDN文档中心 火狐浏览器中的离线资源: ([https://developer.mozilla.org/en/offline_resources_in_firefox](https://developer.mozilla.org/en/offline_resources_in_firefox))'
- en: 'Safari Developer Library Storing Data on the Client: ([http://developer.apple.com/library/safari/#documentation/appleapplications/reference/SafariWebContent/Client-SideStorage/Client-SideStorage.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/SafariWebContent/Client-SideStorage/Client-SideStorage.html))'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Safari开发者文库 在客户端存储数据: ([http://developer.apple.com/library/safari/#documentation/appleapplications/reference/SafariWebContent/Client-SideStorage/Client-SideStorage.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/SafariWebContent/Client-SideStorage/Client-SideStorage.html))'
- en: 'Cache Manifest Validator Online validator, JSON(P) validation API, and `TextMate`
    bundle: [(http://manifest-validator.com/)](http://(http://manifest-validator.com/))'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缓存清单验证器在线验证器，JSON(P)验证API和`TextMate`包：[(http://manifest-validator.com/)](http://(http://manifest-validator.com/))
- en: WHATWG's official description
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: WHATWG的官方描述
- en: 'If you want to dig deeper into specs, read the official description of the
    HTML Living Standard at:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想深入了解规范，可以阅读HTML Living Standard的官方描述：
- en: '[http://www.whatwg.org/specs/web-apps/current-work/multipage/ offline.html](http://www.whatwg.org/specs/web-apps/current-work/multipage/)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.whatwg.org/specs/web-apps/current-work/multipage/ offline.html](http://www.whatwg.org/specs/web-apps/current-work/multipage/)'
- en: Using Web Storage on mobile
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在移动设备上使用Web存储
- en: 'Target browsers: cross-browser'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 目标浏览器：跨浏览器
- en: Web Storage is very useful for offline applications, especially news feeds or
    e-mail web apps. When people talk about Web Storage, they usually mean the `localStorage`
    part. It is a key/value persistence system. Apart from web storage, there are
    two more HTML5 storage features; they are **Indexed Database API** and **Web SQL
    Database**.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Web存储对离线应用非常有用，特别是新闻订阅或电子邮件Web应用。当人们谈论Web存储时，他们通常指的是`localStorage`部分。它是一个键/值持久性系统。除了Web存储，还有两个HTML5存储功能；它们是**索引数据库API**和**Web
    SQL数据库**。
- en: So let's see the pros and cons of Web Storage, Indexed Database, and Web SQL
    Database.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看Web存储、索引数据库和Web SQL数据库的优缺点。
- en: '| Storage type | Pros | Cons |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| 存储类型 | 优点 | 缺点 |'
- en: '| --- | --- | --- |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| *Web Storage* | *Simple, easy to use API**Supported by major browsers* |
    *No data privacy* |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| *Web Storage* | *简单易用的API**受主要浏览器支持* | *没有数据隐私* |'
- en: '| *Indexed Database* | *No SQL-like structured storage* | *Not yet supported
    by most mobile browsers**No SQL (obviously)* |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| *索引数据库* | *没有类似SQL的结构化存储* | *大多数移动浏览器尚不支持**没有SQL（显然）* |'
- en: '| *Web SQL Database* | *Fast**Feature-rich SQL implementation**Supported by
    major new mobile browsers* | *W3C working group has put in on hold on the standard*
    |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| *Web SQL Database* | *快速**功能丰富的SQL实现**受主要新移动浏览器支持* | *W3C工作组已经将其暂停了标准* |'
- en: From a mobile browser support perspective, Web Storage is the most widely supported,
    followed by Web SQL Database.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 从移动浏览器支持的角度来看，Web Storage得到了最广泛的支持，其次是Web SQL数据库。
- en: Web SQL Database has a better feature set than Web Storage. So in this recipe,
    we will focus on Web Storage and Web SQL Database, and not on Indexed Database
    (at least for now).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Web SQL数据库具有比Web Storage更好的功能集。因此，在这个示例中，我们将专注于Web Storage和Web SQL数据库，而不是索引数据库（至少目前是这样）。
- en: Getting ready
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create an HTML document and name it `ch06r04.html`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个HTML文档并将其命名为`ch06r04.html`。
- en: How to do it...
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'First, enter the following code:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，输入以下代码：
- en: '[PRE12]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now we are adding in the JavaScript portion:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们要添加JavaScript部分：
- en: '[PRE13]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now at the end of the file, let''s close the HTML document:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在文件的末尾，让我们关闭HTML文档：
- en: '[PRE14]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '`localStorage` even works in Dolphin, a browser used by Samsung and that can
    be installed on any Android device. When rendering the page using the Dolphin
    browser, you can enter any words. For this case, if you enter "hullo world", once
    you hit refresh, it will display this information:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`localStorage`甚至可以在Dolphin中使用，这是三星使用的浏览器，可以安装在任何安卓设备上。在Dolphin浏览器中渲染页面时，您可以输入任何单词。在这种情况下，如果您输入"hullo
    world"，一旦您点击刷新，它将显示这些信息：'
- en: '![How to do it...](img/1963_06_03.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/1963_06_03.jpg)'
- en: How it works...
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: As mentioned, it is really as simple as value/key pair, and you can store data
    using `set` and `get` methods.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面提到的，它真的就是值/键对，您可以使用`set`和`get`方法存储数据。
- en: 'To set data, you use `setItem` method:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置数据，您可以使用`setItem`方法：
- en: '[PRE15]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To get data, you use:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取数据，您可以使用：
- en: '[PRE16]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Looking for a polyfill? jQuery Offline is a nice offline storage plugin. It
    uses the HTML5 `localStorage` API for persistence. You can use the same API for
    browsers that do not support `localStorage`. jQuery Offline will simply fall back
    to making a request to the server each time. You can learn more about it at [https://github.com/wycats/jquery-offline](http://github.com/wycats/jquery-offline).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找一个polyfill？jQuery Offline是一个不错的离线存储插件。它使用HTML5的`localStorage` API进行持久化。您可以在不支持`localStorage`的浏览器上使用相同的API。jQuery
    Offline将简单地回退到每次向服务器发出请求。您可以在[https://github.com/wycats/jquery-offline](http://github.com/wycats/jquery-offline)了解更多信息。
- en: There's more...
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Web SQL Database is an alternative to `localStorage`, and it''s loved by people
    who use SQL. *Remy Sharp* has a very good demo on github that shows how to use
    Web SQL Database. You can learn more about it at: [http://html5demos.com/database](http://html5demos.com/database).'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: Web SQL数据库是`localStorage`的替代方案，受到使用SQL的人的喜爱。*Remy Sharp*在github上有一个非常好的演示，展示了如何使用Web
    SQL数据库。您可以在[http://html5demos.com/database](http://html5demos.com/database)了解更多信息。
- en: Web Storage portability layer
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Web Storage可移植层
- en: The Web Storage Portability Layer library allows you to write offline storage
    code easily for browsers that support either HTML5 databases or Gears.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Web Storage可移植层库允许您轻松为支持HTML5数据库或Gears的浏览器编写离线存储代码。
- en: Gears is an earlier offline storage system developed by Google. It is supported
    on browsers like IE6 and IE Mobile 4.0.1, but it is no longer under development.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: Gears是由Google开发的早期离线存储系统。它在IE6和IE Mobile 4.0.1等浏览器上受到支持，但已不再开发。
- en: 'You can learn more about this library at: [http://google-opensource.blogspot.com/2009/05/web-storage-portability-layer-common.html](http://google-opensource.blogspot.com/2009/05/web-storage-portability-layer-common.html).'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下网址了解更多关于这个库的信息：[http://google-opensource.blogspot.com/2009/05/web-storage-portability-layer-common.html](http://google-opensource.blogspot.com/2009/05/web-storage-portability-layer-common.html)。
- en: HTML5 storage wars
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: HTML5存储之争
- en: 'You can read more about localStorage vs. IndexedDB vs. Web SQL at: [http://csimms.botonomy.com/2011/05/html5-storage-wars-localstorage-vs-indexeddb-vs-web-sql.html](http://csimms.botonomy.com/2011/05/html5-storage-wars-localstorage-vs-indexeddb-vs-web-sql.html).'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下网址了解更多关于localStorage vs. IndexedDB vs. Web SQL的信息：[http://csimms.botonomy.com/2011/05/html5-storage-wars-localstorage-vs-indexeddb-vs-web-sql.html](http://csimms.botonomy.com/2011/05/html5-storage-wars-localstorage-vs-indexeddb-vs-web-sql.html)。
- en: Using web workers
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Web Workers
- en: 'Target browsers: Opera Mobile, Firefox Mobile, iOS5, Blackberry'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 目标浏览器：Opera Mobile，Firefox Mobile，iOS5，黑莓
- en: Most programmers with Java/Python/.NET backgrounds should be familiar with multi-threaded
    or concurrent programming. JavaScript was once laughed at for its lack of high-level
    threading, but with the advent of HTML5 its API has been expanded to allow concurrency,
    substantially increasing its effective power! JavaScript is no longer just a scripting
    language. With more and more sophisticated tasks created using JavaScript, it
    has to perform more while dealing with heavy frontend computing.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数具有Java/Python/.NET背景的程序员应该熟悉多线程或并发编程。曾经有人嘲笑JavaScript缺乏高级线程，但随着HTML5的出现，其API已经扩展以允许并发，大大增加了其有效能力！JavaScript不再只是一种脚本语言。随着越来越多使用JavaScript创建的复杂任务，它在处理繁重的前端计算时必须表现得更好。
- en: '| Devices | Supported |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| 设备 | 支持 |'
- en: '| --- | --- |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| iOS | Yes (5.0+) |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| iOS | 是（5.0+） |'
- en: '| Android | No |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| 安卓 | 否 |'
- en: '| Windows Mobile | No |'
  id: totrans-155
  prefs: []
  type: TYPE_TB
  zh: '| Windows Mobile | 否 |'
- en: '| Blackberry | Yes (6.0+) |'
  id: totrans-156
  prefs: []
  type: TYPE_TB
  zh: '| 黑莓 | 是（6.0+） |'
- en: '| Symbian | No |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| 塞班 | 否 |'
- en: '| Palm webOS | No |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| Palm webOS | 否 |'
- en: '| Opera Mobile | Yes |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| Opera Mobile | 是 |'
- en: '| Firefox Mobile | Yes |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| Firefox Mobile | 是 |'
- en: Getting ready
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Let's create a JavaScript file and name it `math.js`.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个JavaScript文件并将其命名为`math.js`。
- en: How to do it...
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Enter the following code into the document:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下代码输入到文档中：
- en: '[PRE17]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now, let''s create an HTML document and name it `ch06r05.html`. Enter the following
    code into the HTML file:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个HTML文档并将其命名为`ch06r05.html`。将以下代码输入到HTML文件中：
- en: '[PRE18]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'While rendering this page in a mobile browser, we can see three fields and
    two buttons for calculation. In the following example screenshot, I entered 6
    and 3 and pressed the **Add** button to see 9 shown as the result:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动浏览器中呈现此页面时，我们可以看到三个字段和两个用于计算的按钮。在以下示例截图中，我输入了6和3，然后按下**添加**按钮，看到9显示为结果：
- en: '![How to do it...](img/1963_06_01.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/1963_06_01.jpg)'
- en: How it works...
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'We can break `math.js` into three parts:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将`math.js`分为三个部分：
- en: The actual math functions
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际的数学函数
- en: '`get` event from master (HTML document)'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从主文件（HTML文档）获取事件
- en: '`post` event to master (HTML document)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将信息发送到主文件（HTML文档）
- en: 'The actual math functions are fairly easy to understand, `addNumbers` is a
    function to add numbers and `minNumbers` is for deduction:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的数学函数相当容易理解，`addNumbers`是一个用于加法的函数，`minNumbers`用于减法：
- en: '[PRE19]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The next is the `onmessage`. This is the information the `math.js` gets from
    the HTML document:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是`onmessage`。这是`math.js`从HTML文档获取的信息：
- en: '[PRE20]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Once the `math.js` worker gets the information from the master (HTML document),
    it will start to do the math and post back to the master by using `postMessage:`
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦`math.js`工作程序从主文件（HTML文档）获取信息，它将开始进行数学计算，并通过使用`postMessage`将结果发送回主文件：
- en: '[PRE21]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In the HTML document also, there are three parts as follows:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML文档中也有三个部分，如下所示：
- en: Create a worker
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建工作程序
- en: '`post` information to worker to do the math'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将信息发送到工作程序进行数学计算
- en: '`get` the math done by worker'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过工作程序完成数学计算
- en: It is fairly easy to create a worker. It's created by calling `new Worker("math.js"):`
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 创建工作程序相当容易。通过调用`new Worker("math.js")`来创建：
- en: '[PRE22]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'For posting information to the worker, you can use the same `postMessage` method
    as explained in `math.js`. The message itself can be an object with name/value
    pairs:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 要向工作程序发送信息，可以使用与`math.js`中解释的相同的`postMessage`方法。消息本身可以是具有名称/值对的对象：
- en: '[PRE23]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: For getting the information back once the math is done by the worker, we use
    the same `onmessage` method explained in `math.js:`
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 完成工作程序完成数学计算后，我们使用与`math.js`中解释的相同的`onmessage`方法获取信息：
- en: '[PRE24]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Creating Flash-like navigation with session and history API
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用会话和历史API创建类似Flash的导航
- en: 'Target browsers: cross-browser'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 目标浏览器：跨浏览器
- en: In the past, people had to use hash-tag to fake URL as a compromise between
    SEO and smooth page transition. Now, with the history API, that hack is no longer
    needed. With the history API together with Ajax calls, one can dynamically update
    a URL.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，人们不得不使用哈希标签来伪造URL，以在SEO和平滑的页面转换之间进行妥协。现在，有了历史API，就不再需要这种黑客行为。使用历史API和Ajax调用，可以动态更新URL。
- en: '| Device platform | Supported |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| 设备平台 | 支持 |'
- en: '| --- | --- |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| iOS | Yes (4.2+) |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| iOS | 是（4.2+） |'
- en: '| Android | Yes (2.2+) |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| Android | 是（2.2+） |'
- en: '| Windows Mobile | No |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| Windows Mobile | 否 |'
- en: '| Blackberry | No |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| Blackberry | 否 |'
- en: '| Symbian | Yes (5.2+) |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| Symbian | 是（5.2+） |'
- en: '| Palm webOS | No |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| Palm webOS | 否 |'
- en: '| Opera Mobile | No |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| Opera Mobile | 否 |'
- en: '| Firefox Mobile | Yes |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| Firefox Mobile | 是 |'
- en: Getting ready
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: Let's create an HTML document and name it `ch06r06.html`.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个HTML文档并将其命名为`ch06r06.html`。
- en: How to do it...
  id: totrans-206
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Enter the following code in the HTML document:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML文档中输入以下代码：
- en: '[PRE25]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Now let''s create another document and name it `ch06r06_a.html`. Enter the
    following code into it:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建另一个文档并将其命名为`ch06r06_a.html`。将以下代码输入其中：
- en: '[PRE26]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Now let''s create yet another document and name it `ch06r06_b.html`. Enter
    the following code to the document:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建另一个文档并将其命名为`ch06r06_b.html`。将以下代码输入文档：
- en: '[PRE27]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now let''s create a JavaScript file and enter the following code. Replace the
    URL in the following code with your own URL:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们创建一个JavaScript文件并输入以下代码。将以下代码中的URL替换为您自己的URL：
- en: '[PRE28]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Now let''s render the page in a mobile browser. When you click on the **Previous**
    or **Next** buttons, the pages will not refresh. But if you take a look at the
    URLs, they are updated:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在移动浏览器中呈现页面。当您单击**上一页**或**下一页**按钮时，页面不会刷新。但是，如果您查看URL，它们已更新：
- en: '![How to do it...](img/1963_06_04.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/1963_06_04.jpg)'
- en: How it works...
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`history.pushState` is used to push the new URL to the browser address bar:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '`history.pushState`用于将新的URL推送到浏览器地址栏：'
- en: '[PRE29]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The actual page navigation is an Ajax request to the server, so the page never
    reloads. But the URL is updated with the following function:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的页面导航是对服务器的Ajax请求，因此页面永远不会重新加载。但是URL将使用以下函数进行更新：
- en: '[PRE30]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: There's more...
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'To learn more about history API, you can dig into the specification at: [http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html](http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关历史API的更多信息，您可以深入研究规范：[http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html](http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html)
- en: '*Mark Pilgrim* has a great detailed explanation at *Dive into HTML5:*[http://diveintohtml5.info/history.html](http://diveintohtml5.info/history.html)'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '*Mark Pilgrim*在*Dive into HTML5*中有一个很好的详细解释：[http://diveintohtml5.info/history.html](http://diveintohtml5.info/history.html)'
- en: You can also learn more at *Mozilla's MDC Docs:*[https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history](https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history)
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在*Mozilla's MDC Docs*中了解更多信息：[https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history](https://developer.mozilla.org/en/DOM/Manipulating_the_browser_history)
- en: Place Kitten
  id: totrans-226
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 放置小猫
- en: Wondering where the kitten pictures have come from? It's from a site called
    [http://placekitten.com/](http://placekitten.com/). A quick and simple service
    for getting pictures of kittens for using them as placeholders in your designs
    or code.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 想知道小猫图片来自哪里吗？它来自一个名为[http://placekitten.com/](http://placekitten.com/)的网站。这是一个快速简单的服务，用于获取小猫图片，以便在设计或代码中使用它们作为占位符。
