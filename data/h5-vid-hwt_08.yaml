- en: Chapter 8. Embracing Audio and Video
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。拥抱音频和视频
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将涵盖：
- en: Saying no to Flash
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对Flash说不
- en: Understanding `audio` and `video` file formats
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解“音频”和“视频”文件格式
- en: Displaying `video` for everybody
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为每个人显示“视频”
- en: Creating accessible `audio` and `video`
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建可访问的“音频”和“视频”
- en: Crafting a slick `audio` player
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打造时髦的“音频”播放器
- en: Embedding `audio` and `video` for mobile devices
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为移动设备嵌入“音频”和“视频”
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '"Flash was created during the PC era - for PCs and mice. Flash is a successful
    business for Adobe, and we can understand why they want to push it beyond PCs.
    But the mobile era is about low power devices, touch interfaces and open web standards
    all areas where Flash falls short. The avalanche of media outlets offering their
    content for Apple''s mobile devices demonstrates that Flash is no longer necessary
    to watch video or consume any kind of web content." - Steve Jobs'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “Flash是在PC时代创建的-为PC和鼠标。Flash对Adobe来说是一个成功的业务，我们可以理解他们为什么想要将其推广到PC之外。但移动时代是关于低功耗设备，触摸界面和开放的网络标准，这些都是Flash的短板。提供其内容给苹果移动设备的媒体机构的大量增加表明Flash不再是观看视频或消费任何类型的网络内容的必要条件。”-
    史蒂夫·乔布斯
- en: Like many of the other new technologies we've looked at already, in the open
    source HTML5 standard, the new `audio` and `video` elements are more mature and
    usable than ever before. That's a good thing, because users' expectations for
    multimedia are much higher than ever before. Back in the day we used 300-baud
    modems that took 10 minutes to download one photo. Later, we used Napster to illegally
    download MP3 `audio` files. Now, we stream television and pornography on our mobile
    devices. Since the bandwidth pipe has gotten fatter and fatter, our demand for
    interactive entertainment has become virtually insatiable. It's time for the money
    shot.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们已经看过的许多其他新技术一样，在开源HTML5标准中，新的“音频”和“视频”元素比以往任何时候都更加成熟和可用。这是一件好事，因为用户对多媒体的期望比以往任何时候都要高。在过去，我们使用300比特每秒的调制解调器下载一张照片需要10分钟。后来，我们使用Napster非法下载MP3“音频”文件。现在，我们在移动设备上播放电视和色情内容。由于带宽管道变得越来越宽，我们对互动娱乐的需求几乎是无法满足的。现在是金钱的时刻。
- en: For years the battle was between QuickTime, RealPlayer, and Flash for video
    playback dominance on the web. These browser plugins were easy to install and
    *usually* produced expected results.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，QuickTime、RealPlayer和Flash之间的战斗是为了在网络上播放视频的统治地位。这些浏览器插件很容易安装，*通常*能产生预期的结果。
- en: Over time, QuickTime and RealPlayer continued as playback platforms but the
    makers of the proprietary Flash tool also created a robust development environment,
    allowing not just designers but also developers to see it as a viable platform.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，QuickTime和RealPlayer继续作为播放平台，但专有Flash工具的制造商也创建了一个强大的开发环境，不仅让设计师，还让开发人员将其视为一个可行的平台。
- en: While QuickTime and RealPlayer still exist, Flash has won the war. For animations
    and cartoons, Flash is the ideal tool. But is it the best to serve up `audio`
    and `video` anymore? Steve Jobs sure didn't think so.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然QuickTime和RealPlayer仍然存在，但Flash已经赢得了这场战争。对于动画和卡通来说，Flash是理想的工具。但它是否仍然是最好的“音频”和“视频”播放工具呢？史蒂夫·乔布斯肯定不这么认为。
- en: In 2010, Jobs, head of Apple Computer, drew a line in the sand and said Flash
    would never appear on his best selling iPhones and iPads. Instead, he came out
    strongly in favor of the open HTML5 standard and ignited an online holy war.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 2010年，苹果电脑的负责人乔布斯划定了界限，并表示Flash永远不会出现在他最畅销的iPhone和iPad上。相反，他强烈支持开放的HTML5标准，并引发了一场在线圣战。
- en: Soon, pronouncements of "The Death of Flash" made headlines in the media and
    throughout the blogosphere. Some wrote with such bile it was as if a dam had burst
    and all the accumulated filth and scum was allowed to flood our collective multimedia
    conversations.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 很快，“Flash的死亡”宣言成为媒体和整个博客圈的头条新闻。有些人写得如此恶毒，好像一座大坝决堤，所有积累的污秽和淤泥都被允许淹没我们的集体多媒体对话。
- en: 'Quickly, even non-web designers and developers took notice, like when C.C.
    Chapman, noted author of the book "Content *Rules"* expressed his dissatisfaction
    with The Today Show not being available on his iPad:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 很快，即使非网页设计师和开发人员也开始注意到，比如C.C.查普曼，著名书籍《内容*规则》的作者，表达了他对《今日秀》在iPad上不可用的不满：
- en: '![Introduction](img/1048_08_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![介绍](img/1048_08_01.jpg)'
- en: The issue has quickly permeated our online entertainment discussions. You no
    longer have to be a web designer or developer to know there's a real issue here.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题迅速渗透到我们的在线娱乐讨论中。你不再需要成为网页设计师或开发人员才知道这里有一个真正的问题。
- en: C.C. spoke simply and to the point, but the author knows he's managed to put
    his foot in his mouth when talking about the Flash/HTML5 `video` war that Steve
    created. Sometimes he's argued his point with too much gusto and bravado, but
    the truth is those with clearer heads like web designer Jessica Bonn are right
    when they remind us that Flash and HTML5 `video` can peacefully coexist.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: C.C.简单而直接地说话，但作者知道当谈到史蒂夫创造的Flash/HTML5“视频”战争时，他已经说错了话。有时他争论自己的观点时过于热情和勇气，但事实是像网页设计师杰西卡·邦恩这样头脑清晰的人在提醒我们时是正确的，Flash和HTML5“视频”可以和平共存。
- en: In less than a year since Steve made his pronouncement, sites like ABC, CBS,
    CNN, ESPN, Facebook, Fox News, MSNBC, National Geographic, Netflix, The New York
    Times, NPR, People, Sports Illustrated, Time, Vimeo, The Wall Street Journal,
    YouTube, and more have adopted the new HTML5 `audio` and `video` elements. As
    of this writing, more than 60 percent of all web `video` is now HTML5 ready. It's
    safe to say that the new HTML5 `audio` and `video` capabilities are some of the
    most exciting and anticipated new developments!
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 自史蒂夫发表声明以来不到一年的时间，像ABC、CBS、CNN、ESPN、Facebook、Fox News、MSNBC、国家地理、Netflix、《纽约时报》、NPR、《人物》、《体育画报》、《时代》、Vimeo、《华尔街日报》、YouTube等网站都采用了新的HTML5“音频”和“视频”元素。截至目前，超过60%的网络视频现在都支持HTML5。可以说，新的HTML5“音频”和“视频”功能是一些最令人兴奋和期待的新发展！
- en: 'Browsers that support the new HTML5 `audio` and `video` elements include:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 支持新HTML5“音频”和“视频”元素的浏览器包括：
- en: '![Introduction](img/1048_08_02.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![介绍](img/1048_08_02.jpg)'
- en: In this chapter, we'll look at real-life examples of saying no to Flash, understanding
    the new `video` and `audio` file formats, displaying `video` for everybody, creating
    accessible `audio` and `video`, crafting a slick `audio` player, and embedding
    `audio` and `video` for mobile devices.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看一些现实生活中的例子，拒绝Flash，了解新的“视频”和“音频”文件格式，为所有人显示“视频”，创建可访问的“音频”和“视频”，打造时尚的“音频”播放器，以及为移动设备嵌入“音频”和“视频”。
- en: Now, let's get cooking!
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们开始吧！
- en: Saying no to Flash
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对Flash说不
- en: The author's mom used to say there's a time and place for everything, and we
    believe there's a time and place for Flash. It's just that now with more mature
    technology, there's less time and less place for Flash in this author's opinion.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 作者的妈妈过去常说，万事都有其时机和地点，我们相信Flash也有其时机和地点。只是现在，随着技术的成熟，这位作者认为Flash的时间和地点越来越少。
- en: '![Saying no to Flash](img/1048_08_03.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![对Flash说不](img/1048_08_03.jpg)'
- en: 'In the bad old days, if we wanted to use a YouTube video like "Neutraface",
    the typography world''s answer to Lady Gaga''s "Pokerface", in a web page, we''d
    have to work with some ugly code like this:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去的坏日子里，如果我们想在网页中使用YouTube视频，比如“Neutraface”，这是排版世界对Lady Gaga的“Pokerface”的回应，我们必须使用一些丑陋的代码，如下所示：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: That's long, ugly, convoluted, and won't pass a validation test. It also relies
    on a third-party plugin. Ugh.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 那段代码又长又丑陋，复杂，而且无法通过验证测试。它还依赖于第三方插件。呃。
- en: For years, we suffered with that junk, but no more. Now we can rebuild it —
    we have the technology.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我们忍受了那些垃圾，但不再了。现在我们可以重建它——我们有技术。
- en: How to do it...
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Instead of that bloated `object` code, now we can use something much more elegant:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用更加优雅的东西，而不是臃肿的“object”代码：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: That's all that's required. It's short, pretty, and it validates. And best of
    all, it doesn't require a plugin. Tell me again why we thought Flash was a good
    idea.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是所需的全部。它很简短，漂亮，而且验证通过。最重要的是，它不需要插件。再告诉我，为什么我们认为Flash是个好主意。
- en: To add a bit more style and functionality, let's include just a little more
    code.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了增加一些样式和功能，让我们再加入一点代码。
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How it works...
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: That code should be pretty straightforward. As you might guess, `src` refers
    to the source `video` file, `controls` indicate the `video` should play with standard
    playback and volume controls, and `height` and `width` are self explanatory.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 那段代码应该很简单。您可能会猜到，“src”是指源“视频”文件，“controls”表示“视频”应该使用标准的播放和音量控件播放，“height”和“width”是不言自明的。
- en: 'Modern browsers now have their own native HTML5 `audio` and `video` playback
    controls. Let''s take a look at each one, starting with Apple Safari:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现代浏览器现在具有自己的本机HTML5“音频”和“视频”播放控件。让我们来看看每一个，从苹果Safari开始：
- en: '![How it works...](img/1048_08_04.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/1048_08_04.jpg)'
- en: 'This is how Google Chrome displays the playback controls:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Google Chrome显示播放控件的方式：
- en: '![How it works...](img/1048_08_05.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/1048_08_05.jpg)'
- en: 'Microsoft Internet Explorer 9 displays it differently:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 微软Internet Explorer 9显示方式不同：
- en: '![How it works...](img/1048_08_06.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/1048_08_06.jpg)'
- en: 'Then, Mozilla Firefox does it differently still:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，Mozilla Firefox以不同的方式显示：
- en: '![How it works...](img/1048_08_07.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/1048_08_07.jpg)'
- en: 'It should come as no surprise that Opera displays the playback controls in
    yet another way:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 毫无疑问，Opera以另一种方式显示播放控件：
- en: '![How it works...](img/1048_08_08.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/1048_08_08.jpg)'
- en: Every single one of those looks different. If each of those different appearances
    are sufficient for your needs, great! If not, that will definitely require more
    work to get those to act and appear similar.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 每一个看起来都不同。如果每一个不同的外观都满足您的需求，那太好了！如果不是，那肯定需要更多的工作来使它们行为和外观相似。
- en: There's more...
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'There are a few optional attributes we could include, too. They are:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些可选属性我们可以包括。它们是：
- en: '`autobuffer` - This Boolean attribute tells the browser to start downloading
    the song or movie even before the user clicks the play button.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “autobuffer” - 这个布尔属性告诉浏览器在用户点击播放按钮之前就开始下载歌曲或电影。
- en: '`autoplay` - As you might guess, this tells the browser to start playing the
    HTML5 `audio` or `video` automatically.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “autoplay” - 可以猜到，这告诉浏览器自动播放HTML5“音频”或“视频”。
- en: '`loop` - Also a Boolean attribute, it plays the HTML5 `audio` or `video` file
    over and over.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “loop” - 也是一个布尔属性，它会一遍又一遍地播放HTML5“音频”或“视频”文件。
- en: preload - The preload attribute starts loading the file before it's even played.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: preload - preload属性在播放之前开始加载文件。
- en: '`poster` - The `poster` attribute is a static placeholder image displayed while
    the new HTML5 `video` loads. This attribute wouldn''t apply to an HTML5 `audio`
    file, obviously.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “poster” - “poster”属性是在新的HTML5“视频”加载时显示的静态占位图像。显然，这个属性不适用于HTML5“音频”文件。
- en: Whether you add none or all of these optional attributes, you'll still end up
    with a prettier, more semantic, more accessible method of displaying `audio` and
    `video` than relying upon Flash to serve it up for you.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您添加了这些可选属性中的哪些，最终您都将得到一种更漂亮、更语义化、更可访问的显示“音频”和“视频”的方法，而不是依赖Flash为您提供它。
- en: Some good news
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一些好消息
- en: Unlike the `canvas` chapter, the good news about the new HTML5 `audio` and `video`
    elements is that they are accessible. Right out of the box, the new HTML5 `audio`
    and `video` elements feature keyboard accessibility. Since the browser now handles
    the new HTML5 `audio` and `video` elements natively, it can support your keyboard
    just as if it had buttons instead of keys. This alone could go a long way toward
    acceptance of this new technology.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 与“canvas”章节不同，关于新的HTML5“音频”和“视频”元素的好消息是它们是可访问的。新的HTML5“音频”和“视频”元素具有键盘可访问性。由于浏览器现在本地处理新的HTML5“音频”和“视频”元素，它可以像有按钮而不是键一样支持您的键盘。这一点本身就可能大大促进对这项新技术的接受。
- en: Video with style
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 带有样式的视频
- en: The new HTML5 `audio` and `video` elements are visually stylable with CSS. We
    can use CSS to not only control the size of the player but also add `:hover` and
    `:transform` effects. In addition, we can use JavaScript to control the new HTML5
    `audio` and `video` behavior. Cool!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 新的HTML5 `音频`和`视频`元素可以使用CSS进行视觉样式设置。我们可以使用CSS不仅控制播放器的大小，还可以添加`:hover`和`:transform`效果。此外，我们可以使用JavaScript来控制新的HTML5
    `音频`和`视频`的行为。酷！
- en: Cover your assets
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Cover your assets
- en: One area where Flash does provide an advantage is in protecting your `audio`
    and `video` content. Remember that by nature, the new HTML5 `audio` and `video`
    elements are open source and feature no digital rights management. If protecting
    your `audio` or `video` file from being downloaded is a deal breaker for you,
    the new HTML5 `audio` and `video` elements are not the tools for you — Flash probably
    still is. That's not to say that Flash offers ultimate protection against thievery
    — it's simply to say that out of the box, Flash obscures the ability to find the
    media track, where the new HTML5 `<audio>` and `<video>` elements by default leave
    those files right out in the open to anyone. Flash Media Server, however, does
    allow you to completely protect your assets.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Flash确实提供优势的一个领域是保护您的`音频`和`视频`内容。请记住，根据性质，新的HTML5 `音频`和`视频`元素是开源的，没有数字版权管理。如果保护您的`音频`或`视频`文件不被下载对您来说是一个不可接受的条件，那么新的HTML5
    `音频`和`视频`元素不适合您 - Flash可能仍然适合。这并不是说Flash提供了绝对的防盗保护 - 只是说，Flash默认隐藏了查找媒体轨道的能力，而新的HTML5
    `<audio>`和`<video>`元素则将这些文件留在了公开的地方供任何人查看。然而，Flash Media Server可以完全保护您的资产。
- en: Still not sure whether to choose HTML5 audio and video or Flash? Try this list
    of handy tips.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 还不确定是选择HTML5音频和视频还是Flash？试试这个实用提示列表。
- en: 'The benefits of HTML5 include:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5的好处包括：
- en: '**Accessibility:** If accessibility matters to you (and it should) then the
    new HTML5 `audio` and `video` elements are your best options.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可访问性：** 如果可访问性对您很重要（而且应该重要），那么新的HTML5 `音频`和`视频`元素是您最好的选择。'
- en: '**iOS:** If you want your `audio` and `video` to display on the iPhone or iPad,
    HTML5 is your only choice.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iOS：** 如果您希望您的`音频`和`视频`能在iPhone或iPad上显示，那么HTML5是您唯一的选择。'
- en: '**Mobile:** Mobile devices other than Apple''s have great support for the new
    HTML5 `audio` and `video` elements.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**移动设备：** 除了苹果之外的移动设备对新的HTML5 `音频`和`视频`元素有很好的支持。'
- en: '`Video/Audio` **Streaming:** If the content you''re streaming isn''t proprietary
    and doesn''t require rights management, HTML5 is the perfect option for you.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`视频/音频` **流媒体：** 如果您正在流媒体的内容不是专有的，并且不需要版权管理，那么HTML5是您的完美选择。'
- en: 'The benefits of Flash include:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Flash的好处包括：
- en: '**Accessibility:** If you don''t care about the blind or deaf, don''t support
    them. Who cares if you get sued, right?'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可访问性：** 如果您不关心盲人或聋人，就不要支持他们。谁在乎你是否被起诉呢？'
- en: '**Animation:** Without a doubt, the best reason to use Flash is if you have
    intensive animation on your site. Sites like [http://jibjab.com](http://jibjab.com)
    couldn''t exist without it.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动画：** 毫无疑问，使用Flash的最好理由是如果您的网站上有复杂的动画。像[http://jibjab.com](http://jibjab.com)这样的网站如果没有Flash就无法存在。'
- en: '**Desktop-only development:** If you don''t need to support mobile users. That''s
    just a fad anyway.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅桌面开发：** 如果您不需要支持移动用户。那只是一个时尚而已。'
- en: '`Video/Audio` **Streaming:** If you don''t like to share and must lock your
    `audio` or `video` down so it''s not easy for people to download, stick with Flash.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`视频/音频` **流媒体：** 如果您不想分享并且必须锁定您的`音频`或`视频`，使其不容易被人们下载，那就坚持使用Flash。'
- en: '**Webcams:** If you use webcams (and other than [http://chatroulette.com](http://chatroulette.com),
    who does that anymore?), then Flash is the way to go.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络摄像头：** 如果您使用网络摄像头（除了[http://chatroulette.com](http://chatroulette.com)之外，还有谁这样做？），那么Flash是最好的选择。'
- en: Is this *really* the most compelling reason to use Flash?
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这*真的*是使用Flash的最具说服力的理由吗？
- en: '![Cover your assets](img/1048_08_09.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![Cover your assets](img/1048_08_09.jpg)'
- en: See also
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Want to be able to play the new HTML5 `audio` and `video` elements in all major
    browsers, including all the way back to Internet Explorer 6? Who doesn't? If that's
    the case, check out the free, open-source Projekktor project at [http://projekktor.com](http://projekktor.com).
    The brain child of Sascha Kluger, Projekktor uses JavaScript to ensure the various
    supported browsers each see the specific HTML5 `video` file format they can correctly
    interpret and display.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 想要在所有主要浏览器中播放新的HTML5 `音频`和`视频`元素，包括一直到Internet Explorer 6？谁不想呢？如果是这种情况，请查看免费的开源Projekktor项目，网址为[http://projekktor.com](http://projekktor.com)。Projekktor是Sascha
    Kluger的创意，使用JavaScript来确保各种支持的浏览器都能正确解释和显示特定的HTML5 `视频`文件格式。
- en: Understanding audio and video file formats
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解音频和视频文件格式
- en: 'There are plenty of different `audio` and `video` file formats. These files
    may include not just `video` but also `audio` and metadata — all in one file.
    These file types include:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多不同的`音频`和`视频`文件格式。这些文件不仅可以包括`视频`，还可以包括`音频`和元数据 - 都在一个文件中。这些文件类型包括：
- en: '`.avi` - A blast from the past, the Audio Video Interleave file format was
    invented by Microsoft. Does not support most modern `audio` and `video` codecs
    in use today.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.avi` - 这是一个过去的文件格式，音频视频交错文件格式是由微软发明的。不支持今天大多数现代的`音频`和`视频`编解码器。'
- en: '`.flv` - Flash `video`. This used to be the only `video` file format Flash
    fully supported. Now it also includes support for `.mp4`.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.flv` - Flash `视频`。这曾经是Flash完全支持的唯一`视频`文件格式。现在它还包括对`.mp4`的支持。'
- en: '`.mp4` or `.mpv` - MPEG4 is based on Apple''s QuickTime player and requires
    that software for playback.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.mp4`或`.mpv` - MPEG4基于苹果的QuickTime播放器，并需要该软件进行播放。'
- en: How it works...
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Each of the previously mentioned `video` file formats require a browser plugin
    or some sort of standalone software for playback. Next, we'll look at new open-source
    `audio` and `video` file formats that don't require plugins or special software
    and the browsers that support them.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 之前提到的每种`视频`文件格式都需要浏览器插件或某种独立软件进行播放。接下来，我们将看看不需要插件或特殊软件以及支持它们的浏览器的新开源`音频`和`视频`文件格式。
- en: '**H.264** has become of the most commonly used high definition `video` formats.
    Used on Blu-ray Discs as well as many Internet `video` streaming sites including
    Flash, iTunes Music Store, Silverlight, Vimeo, YouTube, cable television broadcasts,
    and real-time videoconferencing. In addition, there is a patent on H.264 is therefore,
    by definition, not open source. Browsers that support H.264 `video` file format
    include:![How it works...](img/1048_08_10.jpg)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H.264已经成为最常用的高清视频格式之一。它被用于蓝光光盘以及许多互联网视频流媒体网站，包括Flash、iTunes音乐商店、Silverlight、Vimeo、YouTube、有线电视广播和实时视频会议。此外，H.264有专利，因此从定义上来说，它不是开源的。支持H.264视频文件格式的浏览器包括：![它是如何工作的...](img/1048_08_10.jpg)
- en: Tip
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Google has now partially rejected the H.264 format and is leaning more toward
    its support of the new WebM `video` file format instead.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌现在部分拒绝了H.264格式，更倾向于支持新的WebM视频文件格式。
- en: '**Ogg** might be a funny sounding name, but its potential is very serious,
    I assure you. Ogg is really two things: Ogg Theora, which is a `video` file format;
    and Ogg Vorbis, which is an `audio` file format. Theora is really much more of
    a `video` file compression format than it is a playback file format, though it
    can be used that way also. It has no patents and is therefore considered open
    source. We''ll discuss Ogg Vorbis in the next section.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ogg可能听起来很滑稽，但我向你保证，它的潜力是非常严肃的。Ogg实际上是两个东西：Ogg Theora，这是一个视频文件格式；和Ogg Vorbis，这是一个音频文件格式。Theora实际上更多地是一个视频文件压缩格式，而不是一个播放文件格式，尽管它也可以用于播放。它没有专利，因此被认为是开源的。我们将在下一节讨论Ogg
    Vorbis。
- en: Tip
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Fun fact: According to Wikipedia, "Theora is named after Theora Jones, Edison
    Carter''s controller on the Max Headroom television program."'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的事实：根据维基百科，“Theora是以Max Headroom电视节目中Edison Carter的控制器Theora Jones命名的。”
- en: 'Browsers that support the Ogg `video` file format include:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 支持Ogg视频文件格式的浏览器包括：
- en: '![How it works...](img/1048_08_11.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/1048_08_11.jpg)'
- en: '**WebM** is the newest entrant in the online `video` file format race. This
    open source `audio/video` file format development is sponsored by Google. A WebM
    file contains both an Ogg Vorbis `audio` stream as well as a VP8 `video` stream.
    It is fairly well supported by media players including Miro, Moovidia, VLC, Winamp,
    and more, including preliminary support by YouTube. The makers of Flash say it
    will support WebM in the future, as will Internet Explorer 9\. Browsers that currently
    support WebM include:![How it works...](img/1048_08_12.jpg)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WebM是在线视频文件格式竞赛中最新的参与者。这种开源的音频/视频文件格式开发是由谷歌赞助的。WebM文件包含了Ogg Vorbis音频流和VP8视频流。它得到了许多媒体播放器的支持，包括Miro、Moovidia、VLC、Winamp等，包括YouTube的初步支持。Flash的制造商表示未来将支持WebM，Internet
    Explorer 9也将支持。目前支持WebM的浏览器包括：![它是如何工作的...](img/1048_08_12.jpg)
- en: There's more...
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: So far this may seem like a laundry list of `audio` and `video` file formats
    with spotty browser support at best. If you're starting to feel that way, you'd
    be right.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，这似乎是一个音频和视频文件格式的清单，最多只有零星的浏览器支持。如果你开始有这种感觉，那么你是对的。
- en: The truth is no one `audio` or `video` file format has emerged as the one true
    format to rule them all. Instead, we developers will often have to serve up the
    new `audio` and `video` files in multiple formats while letting the browser decide
    whichever one it's most comfortable and able to play. That's a drag for now but
    here's hoping in the future we settle on fewer formats with more consistent results.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，没有一个音频或视频文件格式被确定为统治所有的真正格式。相反，我们开发人员经常不得不以多种格式提供新的音频和视频文件，让浏览器决定它最舒适和能够播放的格式。目前这是一个麻烦，但希望未来我们能够确定更少的格式，获得更一致的结果。
- en: Audio file formats
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 音频文件格式
- en: There are a number of `audio` file formats as well. Let's take a look at those.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多音频文件格式。让我们来看看那些。
- en: '**AAC** - Advanced Audio Coding files are better known as AACs. This `audio`
    file format was created by design to sound better than MP3s using the same bitrate.
    Apple uses this `audio` file format for its iTunes Music Store. Since the AAC
    `audio` file format supports DRM, Apple offers files in both protected and unprotected
    formats. There is an AAC patent, so by definition we can''t exactly call this
    `audio` file format open source. All Apple hardware products, including their
    mobile iPhone and iPad devices as well as Flash, support the AAC `audio` file
    format. Browsers that support AAC include:![Audio file formats](img/1048_08_13.jpg)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AAC - 高级音频编码文件更为人所知为AAC。这种音频文件格式是为了在相同比特率下比MP3更好地发声而设计的。苹果使用这种音频文件格式来销售iTunes音乐商店的音乐。由于AAC音频文件格式支持数字版权管理，苹果提供受保护和未受保护格式的文件。由于AAC有专利，因此从定义上来说，我们不能完全称其为开源的音频文件格式。所有苹果硬件产品，包括他们的移动iPhone和iPad设备以及Flash，都支持AAC音频文件格式。支持AAC的浏览器包括：![音频文件格式](img/1048_08_13.jpg)
- en: '**MP3** - MPEG-1 Audio Layer 3 files are better known as MP3s. Unless you''ve
    been hiding under a rock, you know MP3s are the most ubiquitous `audio` file format
    in use today. Capable of playing two channels of sound, these files can be encoded
    using a variety of bitrates up to 320\. Generally, the higher the bitrate, the
    better the `audio` file sounds. That also means larger file sizes and therefore
    slower downloads. There is an MP3 patent, so by definition we can''t exactly call
    this `audio` file format open source either. Browsers that support MP3 include:![Audio
    file formats](img/1048_08_14.jpg)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MP3 - MPEG-1音频层3文件更为人所知为MP3。除非你一直躲在石头下，你知道MP3是今天最普遍使用的音频文件格式。这些文件可以播放两个声道的声音，并且可以使用多种比特率进行编码，最高可达320。一般来说，比特率越高，音频文件的声音就越好。这也意味着更大的文件大小，因此下载速度更慢。MP3有专利，因此从定义上来说，我们也不能完全称其为开源的音频文件格式。支持MP3的浏览器包括：![音频文件格式](img/1048_08_14.jpg)
- en: '**Ogg** - We previously discussed the Ogg Theora `video` file format. Now,
    let''s take a look at the Ogg Vorbis `audio` format. As mentioned before, there
    is no patent on Ogg files and are therefore considered open source.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ogg - 我们之前讨论过Ogg Theora视频文件格式。现在，让我们来看看Ogg Vorbis音频格式。如前所述，Ogg文件没有专利，因此被认为是开源的。
- en: Tip
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Another fun fact: According to Wikipedia, "Vorbis is named after a *Discworld*
    character, Exquisitor Vorbis in *Small Gods* by *Terry Pratchett."*'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的事实：根据维基百科，“Vorbis”是以《蓝色星球》中的角色Exquisitor Vorbis命名的，由特里·普拉切特的《小神灵》中的角色Exquisitor
    Vorbis命名的。
- en: '![Audio file formats](img/1048_08_15.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![音频文件格式](img/1048_08_15.jpg)'
- en: File format agnosticism
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文件格式不可知论
- en: 'We''ve spent a lot of time examining these various `video` and `audio` file
    formats. Each has its own plusses and minuses and are supported (or not) by various
    browsers. Some work better than others, some sound and look better than others.
    But here''s the good news: The new HTML5 `<video>` and `<audio>` elements themselves
    are file-format agnostic! Those new elements don''t care what kind of `video`
    or `audio` file you''re referencing. Instead, they serve up whatever you specify
    and let each browser do whatever it''s most comfortable doing.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们花了很多时间来研究这些不同的`video`和`audio`文件格式。每种格式都有其优点和缺点，并且受到各种浏览器的支持（或不支持）。有些比其他的更好，有些听起来和看起来比其他的更好。但好消息是：新的HTML5
    `<video>`和`<audio>`元素本身是文件格式不可知的！这些新元素不在乎您引用的是什么类型的`video`或`audio`文件。相反，它们提供您指定的任何内容，并让每个浏览器做它最擅长的事情。
- en: Can we stop the madness one day?
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们能不能有一天停止这种疯狂？
- en: The bottom line is that until one new HTML5 `audio` and one new HTML5 `video`
    file format emerges as the clear choice for all browsers and devices, `audio`
    and `video` files are going to have to be encoded more than once for playback.
    Don't hold your breath for this to change any time soon.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是，直到一个新的HTML5 `audio`和一个新的HTML5 `video`文件格式成为所有浏览器和设备的明确选择，`audio`和`video`文件将不得不被编码多次进行播放。不要指望这种情况很快会改变。
- en: Displaying video for everybody
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为所有人显示视频
- en: 'According to author Mark Pilgrim, your HTML5 web `video` work flow will look
    something like this:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 根据作者马克·皮尔格里姆的说法，您的HTML5网络`video`工作流程将如下所示：
- en: Make one version that uses WebM (VP8 and Vorbis).
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作一个使用WebM（VP8和Vorbis）的版本。
- en: Make another version that uses H.264 baseline `video` and AAC "low complexity"
    `audio` in an MP4 container.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作另一个版本，使用H.264基准`video`和AAC“低复杂度”`audio`在MP4容器中。
- en: Make another version that uses Theora `video` and Vorbis `audio` in an Ogg container.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 制作另一个版本，使用Theora `video`和Vorbis `audio`在Ogg容器中。
- en: Link to all three `video` files from a single `<video>` element, and fall back
    to a Flash-based `video` player.
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从单个`<video>`元素链接到所有三个`video`文件，并回退到基于Flash的`video`播放器。
- en: Kroc Camen did exactly that when he created "Video for Everybody", a chunk of
    HTML code that displays the new HTML5 `video` element if the user's browser can
    handle it and a Flash movie if it can't — all without JavaScript. Let's look at
    how Kroc did it at [http://camendesign.com/code/video_for_everybody](http://camendesign.com/code/video_for_everybody).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: Kroc Camen在创建“面向所有人的视频”时确实做到了这一点，这是一段HTML代码，如果用户的浏览器可以处理它，就会显示新的HTML5 `video`元素，如果不能，就会显示Flash电影
    —— 这一切都不需要JavaScript。让我们看看Kroc是如何做到的：[http://camendesign.com/code/video_for_everybody](http://camendesign.com/code/video_for_everybody)。
- en: '![Displaying video for everybody](img/1048_08_16.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![为所有人显示视频](img/1048_08_16.jpg)'
- en: How to do it...
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: '[PRE3]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Looking closely, it's easy to see what Kroc did. First, he called the browser-native
    playback `controls`, as well as the new HTML5 `video` element's associated `height`
    and `width`.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细看，很容易看出Kroc做了什么。首先，他调用了浏览器本地播放的`controls`，以及新的HTML5 `video`元素关联的`height`和`width`。
- en: '[PRE4]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Next, one by one, Kroc calls each of the new HTML5 `video` sources in order,
    beginning with an MP4 file. Desktop browsers won't care much which order the HTML5
    `video` files are included in, but the iPad is picky about wanting an MP4 file
    specified first, so fine. You win again, Steve Jobs.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，Kroc依次调用每个新的HTML5 `video`源，从MP4文件开始。桌面浏览器不太在乎HTML5 `video`文件的包含顺序，但iPad对于想要首先指定MP4文件很挑剔，所以好吧。又是你赢了，史蒂夫·乔布斯。
- en: '[PRE5]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Kroc then hedges his bets by calling a Flash `video` version of the same file
    for wimpy browsers that can't handle the new HTML5 `video` element.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，Kroc通过调用相同文件的Flash `video`版本来为无法处理新的HTML5 `video`元素的软弱浏览器打赌。
- en: '[PRE6]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Finally, Kroc adds a nice extra touch by prompting the user to optionally download
    the new HTML5 `video` file itself in both closed (MP4) as well as open (Ogg) formats.
    Sharing is caring.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Kroc通过提示用户选择下载新的HTML5 `video`文件本身，无论是封闭的（MP4）还是开放的（Ogg）格式，增加了一个不错的额外功能。分享就是关怀。
- en: '[PRE7]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Tip
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Of course you'd replace things like "_VIDEO_.MP4" with the path to your own
    files.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您会用自己文件的路径替换诸如“_VIDEO_.MP4”之类的东西。
- en: This approach is so full of win because no matter what web browser you use,
    you get to see *something* — all without requiring JavaScript or downloading Flash.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法非常成功，因为无论您使用什么网络浏览器，您都可以看到*某些东西* —— 而无需使用JavaScript或下载Flash。
- en: How it works...
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The concept is really quite simple: If your browser is capable of playing a
    new HTML5 `video` element file, that''s exactly what you''ll see. If it''s not
    capable of that, a Flash movie is also included in the code stack, so you should
    see that instead. If, for some reason, your browser won''t natively support the
    new HTML5 `video` element and the Flash player crashes or isn''t available, you''ll
    see a static image in its place. Everybody''s covered.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这个概念实际上非常简单：如果您的浏览器能够播放新的HTML5 `video`元素文件，那么您将会看到它。如果它不能支持，代码堆栈中还包括了Flash电影，所以您应该会看到它。如果由于某种原因，您的浏览器无法原生支持新的HTML5
    `video`元素，Flash播放器崩溃或不可用，您将会看到一个静态图像。每个人都有所涵盖。
- en: 'Browsers that will display the new HTML5 `video` element using this approach
    include:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法显示新的HTML5 `video`元素的浏览器包括：
- en: '![How it works...](img/1048_08_17.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/1048_08_17.jpg)'
- en: 'Browsers that will display Flash `video` using this approach include:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法显示Flash `video`的浏览器包括：
- en: '![How it works...](img/1048_08_18.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![它是如何工作的...](img/1048_08_18.jpg)'
- en: There's more...
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'All other Flash `video` embedding methods prompt the user to download Flash
    if it isn''t already installed. "Video for Everybody" is unique in that it doesn''t
    do that. Author Kroc Camen did that by design, saying:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 所有其他Flash `video`嵌入方法都会提示用户下载Flash（如果尚未安装）。而“面向所有人的视频”独特之处在于它不会这样做。作者Kroc Camen出于设计目的这样做，他说：
- en: '"Users have enough problems with security already without random websites prompting
    them to install things — and it''s even more annoying for people who don''t want
    or cannot use Flash anyway."'
  id: totrans-141
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “用户已经有足够的安全问题了，而不需要随机的网站提示他们安装东西-对于那些不想要或不能使用Flash的人来说，这更加恼人。”
- en: A mime is a terrible thing to waste
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 浪费一个艺术家是一件可怕的事情
- en: 'Kroc reminds us to ensure our servers are using the correct `mime-types` and
    suggests placing these lines in your `.htaccess` file:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Kroc提醒我们确保我们的服务器使用正确的`mime-types`，并建议将这些行放在你的`.htaccess`文件中：
- en: '[PRE8]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: External "Video for Everybody"
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 外部“Video for Everybody”
- en: There's now a "Video for Everybody" plugin for WordPress at [http://wordpress.org/extend/plugins/external-video-for-everybody](http://wordpress.org/extend/plugins/external-video-for-everybody).
    Now you can easily use Kroc's approach on your blog too.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在WordPress有一个“Video for Everybody”插件，网址是[http://wordpress.org/extend/plugins/external-video-for-everybody](http://wordpress.org/extend/plugins/external-video-for-everybody)。现在你也可以在你的博客上轻松使用Kroc的方法。
- en: Be flexible with your approach
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 灵活处理你的方法
- en: 'Later we''ll look at an approach that accomplishes much the same thing as Kroc''s
    approach does, but this time with JavaScript. Remember: Do what makes the most
    sense for you, your project, and most importantly, your customers.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后，我们将研究一种方法，该方法与Kroc的方法实现了几乎相同的效果，但这次是使用JavaScript。记住：做对你、你的项目和最重要的是你的客户最有意义的事情。
- en: See also
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Humanstxt.org is a project to make the developers behind websites more known.
    The site encourages developers to include a small text file that contains information
    about each of the team members that contributed to creating and building the site.
    Check it out at: [http://humanstxt.org](http://humanstxt.org).'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: Humanstxt.org是一个项目，旨在让网站背后的开发人员更加知名。该网站鼓励开发人员包含一个小文本文件，其中包含有关为创建和构建网站做出贡献的每个团队成员的信息。请访问：[http://humanstxt.org](http://humanstxt.org)。
- en: Creating accessible audio and video
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建可访问的音频和视频
- en: We've looked quite extensively at how to serve online HTML5 `video` to people
    regardless of their browser but haven't paid much attention to those who rely
    on assistive technologies. That ends now.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经非常广泛地研究了如何向人们提供在线HTML5`video`，而不管他们的浏览器是什么，但是对依赖辅助技术的人却没有给予太多关注。现在结束了。
- en: How to do it...
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到…
- en: 'First, we''ll start with Kroc Camen''s "Video for Everybody" code chunk and
    examine how to make it accessibility friendly to ultimately look like this:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将从Kroc Camen的“Video for Everybody”代码块开始，并研究如何使其具有可访问性，最终看起来像这样：
- en: '[PRE9]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: How it works...
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The first thing you'll notice is we've wrapped the new HTML5 `video` element
    in a wrapper `div`. While this is not strictly necessary semantically, it will
    give a nice "hook" to tie our CSS into.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到的第一件事是，我们将新的HTML5`video`元素包装在一个包装器`div`中。虽然从语义上讲这并不是严格必要的，但它将为我们的CSS提供一个很好的“钩子”。
- en: '[PRE10]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Much of the next chunk should be recognizable from the previous section. Nothing
    has changed here:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 下一部分的大部分内容应该是从前一部分中可以识别的。这里没有改变：
- en: '[PRE11]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'So far, we''re still using the approach of serving the new HTML5 `video` element
    to those browsers capable of handling it and using Flash as our first fallback
    option. But what happens next if Flash isn''t an option gets interesting:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们仍在使用向能够处理它的浏览器提供新的HTML5`video`元素的方法，并将Flash作为我们的第一个备用选项。但是，如果Flash不是一个选择，接下来会发生什么很有趣：
- en: '[PRE12]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: What the heck is that, you might be wondering.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '你可能会想，那是什么鬼。 '
- en: '"The `track` element allows authors to specify explicit external timed text
    tracks for media elements. It does not represent anything on its own." - W3C HTML5
    specification'
  id: totrans-164
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “`track`元素允许作者为媒体元素指定显式的外部定时文本轨道。它本身不代表任何东西。”- W3C HTML5规范
- en: 'Here''s our chance to use another new part of the HTML5 spec: the new `<track>`
    element. Now, we can reference the type of external file specified in the `kind="captions"`.
    As you can guess, `kind="captions"` is for a caption file, whereas `kind="descriptions"`
    is for an `audio` description. Of course the `src` calls the specific file and
    `srclang` sets the source language for the new HTML5 `track` element. In this
    case, `en` represents English. Unfortunately, no browsers currently support the
    new `track` element.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有机会使用HTML5规范的另一个新部分：新的`<track>`元素。现在，我们可以引用`kind="captions"`中指定的外部文件类型。你可以猜到，`kind="captions"`是用于字幕文件，而`kind="descriptions"`是用于`audio`描述。当然，`src`调用特定文件，`srclang`设置新的HTML5`track`元素的源语言。在这种情况下，`en`代表英语。不幸的是，目前没有浏览器支持新的`track`元素。
- en: Lastly, we allow one last bit of fallback content in case the user can't use
    the new HTML5 `video` element or Flash when we give them something purely text
    based.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们允许最后一点备用内容，以防用户无法使用新的HTML5`video`元素或Flash时，我们给他们一些纯文本内容。
- en: '[PRE13]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Now, even if the user can't see an image, they'll at least have some descriptive
    content served to them.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，即使用户看不到图像，他们至少会得到一些描述性内容。
- en: 'Next, we''ll create a container `div` to house our text-based captions. So
    no browser currently supports closed captioning for the new HTML5 `audio` or `video`
    element, we''ll have to leave room to include our own:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个容器`div`来容纳我们基于文本的字幕。因此，目前没有浏览器支持新的HTML5`audio`或`video`元素的闭合字幕，我们必须留出空间来包含我们自己的：
- en: '[PRE14]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Lastly, we''ll include Kroc''s text prompts to download the HTML5 `video` in
    closed or open file formats:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将包括Kroc的文本提示，以下载HTML5`video`的封闭或开放文件格式：
- en: '[PRE15]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: There's more...
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'In addition to the optional `controls` attribute for the new HTML5 `audio`
    and `video` elements, there''s also the optional `loop` attribute. As you might
    guess, this example would allow the HTML5 `video` to keep playing over and over:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 除了新的HTML5`audio`和`video`元素的可选`controls`属性之外，还有可选的`loop`属性。你可能会猜到，这个例子将允许HTML5`video`一直播放：
- en: '[PRE16]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Always consider accessibility
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 始终考虑可访问性
- en: That final descriptive content we're defaulting to could be an alternate place
    to serve downloadable links to those using accessibility technologies. It would
    obfuscate the download ability from those who can see or hear, so you should determine
    if that approach works for you.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我们默认的最终描述性内容可能是为使用辅助技术的人提供可下载链接的替代位置。这将使能够看到或听到的人无法下载，因此您应确定这种方法是否适合您。
- en: Browser support
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 浏览器支持
- en: 'The web browsers that have the best accessibility support for the new HTML5
    `audio` and `video` elements include:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 对于新的HTML5“音频”和“视频”元素，具有最佳辅助功能支持的网络浏览器包括：
- en: '![Browser support](img/1048_08_19.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![浏览器支持](img/1048_08_19.jpg)'
- en: See more
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查看更多
- en: You can keep track of HTML5 accessibility at [http://html5accessibility.com](http://html5accessibility.com).
    The site tracks what new HTML5 features like `audio` and `video` are available
    and in which browsers. You might be surprised to discover that as of this writing,
    Opera is the least accessibility friendly web browser, rating even below Microsoft
    Internet Explorer 9\. Surprise, surprise.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[http://html5accessibility.com](http://html5accessibility.com)上跟踪HTML5的可访问性。该网站跟踪新的HTML5功能，如“音频”和“视频”，以及在哪些浏览器中可用。您可能会惊讶地发现，截至目前，Opera是最不友好的可访问性网络浏览器，甚至低于微软Internet
    Explorer 9。令人惊讶。
- en: See also
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Video.Js is another free, open-source HTML5 video player. It's lightweight,
    using no images, but remains fully skinnable via CSS. It looks great and supports
    Apple Safari, Google Chrome, Microsoft Internet Explorer 9, Mozilla Firefox, and
    Opera with fallback support for IE 6-8\. It even works for mobile devices like
    the iPhone, iPad, and Android. Check it out at [http://videojs.com](http://videojs.com).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: Video.Js是另一个免费的开源HTML5视频播放器。它轻巧，不使用图像，但仍然可以通过CSS完全定制。它看起来很棒，并支持苹果Safari，谷歌Chrome，微软Internet
    Explorer 9，Mozilla Firefox和Opera，同时还支持IE 6-8的回退。它甚至适用于iPhone，iPad和Android等移动设备。在[http://videojs.com](http://videojs.com)上查看。
- en: Crafting a slick audio player
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打造时尚的音频播放器
- en: Neutron Creations Principal and Co-Founder and front-end developer Ben Bodien
    created a customized HTML5 `audio` player for Tim Van Damme's The Box podcast
    at [http://thebox.maxvoltar.com](http://thebox.maxvoltar.com). Ben's creation
    is fast, intuitive, and slick. Let's take a deeper look at how he did it.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Neutron Creations的负责人兼联合创始人兼前端开发人员Ben Bodien为Tim Van Damme的The Box播客创建了定制的HTML5“音频”播放器，网址为[http://thebox.maxvoltar.com](http://thebox.maxvoltar.com)。Ben的创作快速，直观且时尚。让我们更深入地了解他是如何做到的。
- en: '![Crafting a slick audio player](img/1048_08_20.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![打造时尚的音频播放器](img/1048_08_20.jpg)'
- en: Ben's custom HTML5 `audio` player features an attractive photo of the person
    being interviewed (Shaun Inman, in this case), a play/pause button, a track indicating
    playback progress, and the ability to pop the HTML5 `audio` player itself out
    into a separate window if you so choose. That's it. Nothing more is needed. As
    an added touch, notice the detail of the slight transparency of the HTML5 `audio`
    player bar. Smooooth.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: Ben的自定义HTML5“音频”播放器具有被采访者（在这种情况下是Shaun Inman）的吸引人照片，播放/暂停按钮，显示播放进度的轨道，以及如果您选择的话，将HTML5“音频”播放器弹出到单独的窗口的能力。就是这样。没有更多的需要。作为一个额外的触摸，注意HTML5“音频”播放器栏的轻微透明度的细节。平滑。
- en: How to do it...
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'At first, Ben''s markup seems deceptively simple:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 起初，Ben的标记似乎看起来简单欺骗人：
- en: '[PRE17]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Wait a minute, I hear you thinking, "Where's the HTML5 `audio` tag?!" Never
    fear. Ben's a clever guy and has a plan for this. But first let's examine what
    he's done so far.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 等一下，我听到你在想，“HTML5`音频`标签在哪里？！”别担心。Ben是个聪明人，对此有计划。但首先让我们看看他到目前为止做了什么。
- en: '[PRE18]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This one's simple so far. Ben creates a wrapping element (a `<p>` in this case)
    to put his player in. Could he have used a `<div>` instead? Perhaps. Do what makes
    the most sense for you and your project.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，这很简单。Ben创建了一个包装元素（在这种情况下是`<p>`）来放置他的播放器。他可以使用`<div>`代替吗？也许。做对你和你的项目最有意义的事情。
- en: '[PRE19]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Ben then uses this self-closing (notice the trailing slash at the end) `span`
    for the play/pause toggle button.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，Ben使用这个自闭合的（注意末尾的斜杠）`span`来进行播放/暂停切换按钮。
- en: '[PRE20]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Now, it gets interesting. Ben's "gutter" `span` houses the timeline track with
    a bar indicating the loading or buffering progress of the HTML5 `audio` file and
    the circular element indicating the playback head, which you can "scrub" back
    and forth if you choose.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，事情变得有趣起来。Ben的“gutter”“span”容纳了时间轴跟踪，其中有一个指示HTML5“音频”文件加载或缓冲进度的条形元素，以及指示播放头的圆形元素，如果您选择，可以来回“擦洗”。
- en: '[PRE21]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Finally, Ben uses another self-closing `span` to display the remaining time,
    in minutes and seconds.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，Ben使用另一个自闭合的“span”来显示剩余时间，以分钟和秒为单位。
- en: Tip
  id: totrans-201
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The `<span>` element does the job, but it isn't very semantic, is it? Patrick
    H. Lauke was quick to point out that using focusable elements would go a long
    way toward making this approach accessible to those who rely on assistive technologies.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`<span>`元素可以胜任，但它并不是非常语义化，是吗？Patrick H. Lauke迅速指出，使用可聚焦元素将大大提高这种方法对依赖辅助技术的人的可访问性。'
- en: How it works...
  id: totrans-203
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Ben uses jQuery to detect support for HTML5 `audio`.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: Ben使用jQuery来检测对HTML5“音频”的支持。
- en: '[PRE22]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: In that chunk of code, we can see how if the browser supports HTML5 `audio`,
    it gets served the full HTML5 `<audio>` tag, complete with fallbacks to `.ogg,
    .mp3`, and `.wav`, a file format we haven't worked with yet. Since the new HTML5
    `<audio>` and `<video>` elements are file format agnostic, a `.wav` file should
    work just fine too.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们可以看到，如果浏览器支持HTML5“音频”，它将提供完整的HTML5`<audio>`标签，包括对`.ogg，.mp3`和`.wav`的回退，这是我们尚未使用过的文件格式。由于新的HTML5`<audio>`和`<video>`元素是文件格式不可知的，因此`.wav`文件也应该可以正常工作。
- en: Ben has created a simple bit of JavaScript to allow browsers to do what they
    feel most comfortable doing. Consider this approach if it makes sense for you
    and your project, but remember that you're relying on JavaScript to do the heavy
    lifting, as opposed to other approaches we've looked at that don't rely on it.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Ben创建了一个简单的JavaScript代码，允许浏览器做他们感觉最舒适的事情。如果这种方法对您和您的项目有意义，请考虑这种方法，但请记住，您依赖JavaScript来完成繁重的工作，而不是我们已经看过的其他不依赖它的方法。
- en: Tip
  id: totrans-208
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that if you use a `<div>` to contain the HTML5 `video` player, that JavaScript
    would have to be adjusted as well. Simply put, the `<p class="player">` … `</p>`
    would be changed to `<div class="player">` … `</div>`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果您使用`<div>`来包含HTML5的`video`播放器，那么JavaScript也必须进行调整。简单地说，`<p class="player">`
    … `</p>`将被更改为`<div class="player">` … `</div>`。
- en: There's more...
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: So far, we've set the markup for the player and "sniffed" to see which file
    format any particular browser wants. Now, we need to add some functionality.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经为播放器设置了标记，并“嗅探”了任何特定浏览器想要的文件格式。现在，我们需要添加一些功能。
- en: '[PRE23]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: And then add a function to calculate the position of the playback head to determine
    the time remaining, being careful to include a leading zero if the time remaining
    calls for it.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 然后添加一个函数来计算播放头的位置，以确定剩余时间，注意如果剩余时间需要，要包括前导零。
- en: '[PRE24]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The only thing left to invoke is the play/pause button functionality.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一剩下的就是调用播放/暂停按钮的功能。
- en: '[PRE25]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Style and substance
  id: totrans-217
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 风格和内容
- en: 'After the simple markup and detailed JavaScript to create Ben''s customized
    HTML5 `audio` player, the only thing left is to style it:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在简单的标记和详细的JavaScript之后，创建本的定制HTML5 `audio`播放器，唯一剩下的就是对其进行样式设置：
- en: '[PRE26]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: It's a lot easier and more rewarding to spend the time to create something interesting
    when the content it's wrapping is compelling. The Box audio interviews are always
    a good listen — it's just too bad the author Tim Van Damme doesn't publish them
    more often. Here's hoping that changes in the future. Check it out at [http://thebox.maxvoltar.com](http://thebox.maxvoltar.com).
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 当包裹的内容引人入胜时，花时间创造有趣的东西会更容易且更有意义。Box音频采访总是很有趣——只是遗憾的是作者Tim Van Damme并不经常发布它们。希望将来会有所改变。请访问[http://thebox.maxvoltar.com](http://thebox.maxvoltar.com)查看。
- en: Being careful with details
  id: totrans-221
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意细节
- en: This approach works beautifully when there's one new HTML5 `audio` or `video`
    element on a page at a time to deliver. If you require more than one, you're going
    to have to modify the JavaScript to tie into multiple "hooks" in the markup.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 当页面上一次只有一个新的HTML5 `audio`或`video`元素时，这种方法效果很好。如果您需要多个，您将需要修改JavaScript以连接到标记中的多个“挂钩”。
- en: See also
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'SublimeVideo takes a different approach to HTML5 online `video` playback: In
    this case, the player is not created or hosted by you, but by the makers of the
    player itself in the cloud. The benefit is that you always have the latest, freshest
    version of the player possible. That way when new features are available or bugs
    are fixed, there''s nothing for you to do. You automatically have the freshest
    features. Check it out at [http://sublimevideo.net](http://sublimevideo.net).'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: SublimeVideo采用了一种不同的方法来进行HTML5在线`video`播放：在这种情况下，播放器不是由您创建或托管的，而是由播放器制造商自己在云中创建的。好处是您始终拥有可能的最新、最新鲜的播放器版本。这样，当新功能可用或错误修复时，您无需做任何操作。您自动拥有最新的功能。请访问[http://sublimevideo.net](http://sublimevideo.net)查看。
- en: Embedding audio and video for mobile devices
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为移动设备嵌入音频和视频
- en: We've really only touched on the mobile experience thus far but as development
    increases for ever-smarter mobile units, we need to turn our attention to getting
    our new HTML5 `audio` and `video` to display on those devices. Here's how.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只是简单地涉及了移动体验，但随着对越来越智能的移动设备的开发增加，我们需要把注意力转向如何在这些设备上显示我们的新HTML5 `audio`和`video`。以下是方法。
- en: How to do it...
  id: totrans-227
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Now that we know how to choose a HTML5 `audio` or `video` file format for our
    intended audience, we can now turn our attention to making sure they can hear
    or view it not just on their desktop computers and laptops, but also on their
    mobile devices.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们知道如何为目标受众选择HTML5 `audio`或`video`文件格式，现在我们可以把注意力转向确保他们不仅可以在台式电脑和笔记本电脑上听到或观看，还可以在移动设备上听到或观看。
- en: 'We''ll start by creating a free account with [http://vimeo.com](http://vimeo.com).
    Once your registration is complete, choose the Upload | Video ability in the main
    menu. You''ll choose the file you want to upload, add optional metadata, and let
    the Vimeo servers do their work setting up your file. Next is when the real excitement
    begins: Embedding the `video`. Choose **Tools** | **Embed This Video** from the
    Vimeo main menu.'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从[http://vimeo.com](http://vimeo.com)创建一个免费账户。注册完成后，在主菜单中选择上传|视频功能。您将选择要上传的文件，添加可选的元数据，然后让Vimeo服务器设置您的文件。接下来就是真正的激动人心的时刻：嵌入`video`。从Vimeo主菜单中选择**工具**|**嵌入此视频**。
- en: '![How to do it...](img/1048_08_21.jpg)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/1048_08_21.jpg)'
- en: How it works...
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Vimeo used to use the now old-fashioned Flash embedding method we looked at
    earlier. Now it uses an iFrame-based method that will allow the HTML5 `video`
    to be played on the iPhone, iPad, and other mobile devices. Here''s a sample,
    based on a `video` the author uploaded:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: Vimeo以前使用的是我们之前看过的老式Flash嵌入方法。现在它使用基于iFrame的方法，可以让HTML5 `video`在iPhone、iPad和其他移动设备上播放。以下是一个示例，基于作者上传的`video`：
- en: '[PRE27]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: There's more...
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Once you copy and paste that iFrame-based code snippet onto a web page and
    view it on an iPhone or iPad, you should have a mobile-friendly HTML5 `video`
    that you can make full size just like this one:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您将基于iFrame的代码片段复制并粘贴到网页上，并在iPhone或iPad上查看它，您应该会看到一个移动友好的HTML5 `video`，您可以像这样使其全屏：
- en: '![There''s more...](img/1048_08_22.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/1048_08_22.jpg)'
- en: Vimeo offers much more
  id: totrans-237
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Vimeo提供了更多
- en: Vimeo also allows you to add friends from your e-mail contact list, create `video`
    subscriptions, make widgets, and much more. They now even offer Video School to
    help educate users on the most effective ways of capturing, editing, and sharing
    your `videos`.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: Vimeo还允许您从电子邮件联系人列表中添加朋友，创建`video`订阅，制作小部件等等。他们现在甚至提供视频学校，帮助用户了解捕捉、编辑和分享`video`的最有效方法。
- en: Coming full circle
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 全方位的
- en: YouTube, the world's most popular online `video-viewing` site, also now uses
    an iFrame-based approach to embedding `videos` now too. We can take the same "Neutraface"
    `video` we started with at the beginning of this chapter, use the new iFrame-based
    embedding approach, and end up with something much more semantic and friendly.
    It also passes validation!
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: YouTube，世界上最受欢迎的在线视频观看网站，现在也使用基于iFrame的嵌入视频的方法。我们可以采用本章开头使用的“Neutraface”视频，使用新的基于iFrame的嵌入方法，最终得到更具语义和友好性的结果。它也通过了验证！
- en: '[PRE28]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Look at how much prettier that is!
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 看看这样多漂亮！
- en: We've come full circle and fully transformed our `video` capturing, editing,
    and playback abilities to work in modern browsers while supporting both those
    who rely on assistive technologies and those on mobile devices. And that's one
    to grow on.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了一整个循环，并完全改变了我们在现代浏览器中捕捉、编辑和播放视频的能力，同时支持那些依赖辅助技术和移动设备的人。这是一个可以发展的方向。
- en: See also
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: Is Adobe cutting its own throat? Hardly. In early 2011, Adobe introduced a free
    Flash-to-HTML5 converter, codenamed "Wallaby". Unfortunately, many designers and
    developers felt Adobe over-promised when it claimed Wallaby could export Flash
    to HTML5 using web standards. The truth is all it does is convert the simplest
    animation created in Flash CS5 or later to simple markup and style. There's no
    ability to convert ActionScript to JavaScript, an ability that would truly make
    the tool valuable. Check out the Wallaby announcement over at John Nack's blog
    at [http://blogs.adobe.com/jnack/2011/03/wallaby-flash-to-html5-conversion-tool-now-available.html](http://blogs.adobe.com/jnack/2011/03/wallaby-flash-to-html5-conversion-tool-now-available.html).
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: Adobe是否在自掘坟墓？几乎没有。2011年初，Adobe推出了一个名为“Wallaby”的免费Flash到HTML5转换器。不幸的是，许多设计师和开发人员认为Adobe在声称Wallaby可以使用Web标准将Flash导出到HTML5时过于夸大其词。事实上，它所做的只是将在Flash
    CS5或更高版本中创建的最简单的动画转换为简单的标记和样式。它没有能力将ActionScript转换为JavaScript，这种能力才会真正使该工具有价值。在John
    Nack的博客上查看有关Wallaby公告的信息[http://blogs.adobe.com/jnack/2011/03/wallaby-flash-to-html5-conversion-tool-now-available.html](http://blogs.adobe.com/jnack/2011/03/wallaby-flash-to-html5-conversion-tool-now-available.html)。
