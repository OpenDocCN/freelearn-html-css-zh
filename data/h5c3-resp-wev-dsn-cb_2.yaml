- en: Chapter 2. Responsive Typography
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。响应式排版
- en: 'In this chapter, you will learn about:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习以下内容：
- en: Creating fluid, responsive typography
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建流畅、响应式的排版
- en: Making a text shadow with canvas
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用canvas制作文本阴影
- en: Making an inner and outer shadow with canvas
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用canvas制作内部和外部阴影
- en: Rotating your text with canvas
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用canvas旋转您的文本
- en: Rotating your text with CSS3
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用CSS3旋转您的文本
- en: Making 3D text with CSS3
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用CSS3制作3D文本
- en: Adding texture to your text with CSS3 text masking
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用CSS3文本遮罩为您的文本添加纹理
- en: Styling alternating rows with the nth positional pseudo class
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用nth位置伪类为交替行添加样式
- en: Adding characters before and after pseudo elements
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在伪元素之前和之后添加字符
- en: Making a button with a relative font size
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用相对字体大小制作按钮
- en: Adding a shadow to your font
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为您的字体添加阴影
- en: Curving a corner with border radius
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用边框半径弯曲一个角
- en: Introduction
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: This chapter deals mostly with how to make responsive typography. You will learn
    recipes for optimizing your text for various types of device, as well as methods
    to embellish your typography. The technologies involved are simply CSS3 and HTML5's
    `canvas` element with JavaScript. With responsive typography, you can apply a
    number of exciting effects to your text.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这一章主要讨论如何制作响应式排版。您将学习为各种类型的设备优化文本的配方，以及装饰文本的方法。涉及的技术只是CSS3和HTML5的`canvas`元素与JavaScript。通过响应式排版，您可以为文本应用许多令人兴奋的效果。
- en: When finished with this chapter, you should be armed with a number of techniques
    that will get you started on the road to making amazing responsive websites. These
    recipes cover the basics, but when combined together with some creativity, they
    will enable you to do some fantastic production.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本章后，您将掌握一些技术，可以让您开始制作令人惊叹的响应式网站。这些配方涵盖了基础知识，但结合一些创造力，它们将使您能够做一些出色的作品。
- en: Creating fluid, responsive typography
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建流畅、响应式的排版
- en: This recipe is a simple example of responsive typography. It will demonstrate
    the use of the new size unit `REM`. `REM` means Root EM. This simply means that
    the size of the font is relative to the root's font size, not the parent, as with
    the `EM` unit.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方是响应式排版的一个简单示例。它将演示新的尺寸单位`REM`的使用。`REM`表示根EM。这意味着字体的大小是相对于根字体大小而不是父元素的大小，就像`EM`单位一样。
- en: Getting ready
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Without any further discussion, let's jump into this recipe. Go get some filler
    text from my favorite Ipsum generator ([http://ipsum.com](http://ipsum.com)).
    Generate at least one paragraph and copy the text into your clipboard.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 没有更多讨论，让我们开始这个配方。从我最喜欢的Ipsum生成器([http://ipsum.com](http://ipsum.com))获取一些填充文本。生成至少一个段落，并将文本复制到剪贴板中。
- en: How to do it...
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Now, paste the filler text into your HTML document and wrap it in a paragraph
    tag. Give the paragraph element `class= "a"`, then make a copy and assign the
    new paragraph `class="b"`, as shown in the following code snippet:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，将填充文本粘贴到您的HTML文档中，并将其包装在一个段落标记中。给段落元素`class="a"`，然后复制并分配新段落`class="b"`，如下面的代码片段所示：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, create a style for the base HTML `font-size` property, and then one for
    the static sized paragraph to compare the font size changes—similar to an experiment''s
    control group:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为基本HTML的`font-size`属性创建一个样式，然后为静态大小的段落创建一个样式，以便比较字体大小的变化——类似于实验的对照组：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next create two `@media` queries, one for `orientation:portrait`, and the second
    one for `orientation:landscape`. In the `orientation:portrait` media query, style
    the `"a"` class paragraph element with a `font-size` value of `3rem`. And in the
    `orientation:landscape` media query, style the `"a"` class paragraph with the
    `font-size` value of `1rem`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来创建两个`@media`查询，一个用于`orientation:portrait`，另一个用于`orientation:landscape`。在`orientation:portrait`媒体查询中，使用`font-size`值为`3rem`为`"a"`类段落元素添加样式。在`orientation:landscape`媒体查询中，使用`font-size`值为`1rem`为`"a"`类段落添加样式。
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now when you resize your browser window from landscape to portrait mode, you
    will see the font size of the first paragraph goes from a ratio of 1:1 to the
    base size, to 3:1 of the base size. While this seems very simple, this recipe
    can be varied and built on to create a number of impressive responsive typography
    tricks.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当您将浏览器窗口从横向模式调整为纵向模式时，您会看到第一个段落的字体大小从1:1的比例变为基本大小，再到基本大小的3:1。虽然这看起来非常简单，但这个配方可以变化并构建，以创建许多令人印象深刻的响应式排版技巧。
- en: How it works...
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: When your browser makes a request, the CSS3 `@media` query returns some conditional
    styles based on viewport's width. It loads or builds (rebuilds) on the fly for
    changes to the viewport's size. While not many in your audience are going to spend
    much time resizing your website in their browser, it is easy to spend too much
    time worrying about how your website shifts from one size to the next.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当您的浏览器发出请求时，CSS3的`@media`查询根据视口的宽度返回一些条件样式。它会根据视口大小的变化实时加载或构建（重建）。虽然您的受众中不会有很多人在浏览器中花费大量时间调整您的网站大小，但很容易花费过多时间担心您的网站从一个大小变化到另一个大小。
- en: See also
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Making a button with a relative font size* recipe
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用相对字体大小制作按钮*配方'
- en: Making a text shadow with canvas
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用canvas制作文本阴影
- en: HTML5 brings a new element to web design, the `<canvas>` element. This is used
    to create graphics on a web page on the fly using JavaScript.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5为网页设计带来了一个新元素，即`<canvas>`元素。这是用JavaScript在网页上实时创建图形的。
- en: Getting ready
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The `<canvas>` element creates a rectangular area on your page. It dimensions
    default to 300px by 150px. You can specify different settings inside the JavaScript.
    The code in this recipe grows quickly, so you can get the whole code online at
    the Packt Publishing's website.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`<canvas>`元素在您的页面上创建一个矩形区域。它的默认尺寸为300px x 150px。您可以在JavaScript中指定不同的设置。这个配方中的代码增长很快，所以您可以在Packt
    Publishing的网站上找到整个代码。'
- en: How to do it...
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'To begin, create a simple HTML page with a <`canvas>` element:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个带有`<canvas>`元素的简单HTML页面：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The JavaScript gets the `canvas` element from the DOM.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript从DOM中获取`canvas`元素。
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: It then calls the `getContext()` method. The `getContext('2d')` method is the
    built-in HTML5 object. It has a number of methods to draw text, shapes, images,
    and more.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 然后调用`getContext()`方法。`getContext('2d')`方法是内置的HTML5对象。它有许多方法可以绘制文本、形状、图像等。
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Next, start drawing the text within the JavaScript. Here, we create a code to
    draw the horizontal and vertical shadow offsets, the blur, and the color of the
    shadow.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，开始在JavaScript中绘制文本。在这里，我们创建一个代码来绘制水平和垂直阴影偏移、模糊和阴影的颜色。
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The text and its properties is written in the JavaScript here, but can be passed
    in as a variable from the DOM:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 文本及其属性是在JavaScript中编写的，但可以作为变量从DOM中传递：
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Back in the HTML, add the `onload="drawCanvas();"` script command to the `body`
    element. When the page loads, the JavaScript fires and draws the text and its
    shadow onto the canvas. This is illustrated in the following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 回到HTML，在`body`元素中添加`onload="drawCanvas();"`脚本命令。当页面加载时，JavaScript会触发并将文本及其阴影绘制到画布上。如下截图所示：
- en: '![How to do it...](img/5442OT_02_01.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](img/5442OT_02_01.jpg)'
- en: How it works…
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: Without getting too deep into the gears of JavaScript, the `canvas` element
    provides a place for the designer to script some content directly to the page
    on page load. The `body` element's `onload="drawCanvas();"` command fires the
    JavaScript, which draws the content onto the canvas.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 不要深入JavaScript的细节，`canvas`元素提供了一个地方，让设计者可以在页面加载时直接向页面上添加一些内容。`body`元素的`onload="drawCanvas();"`命令触发JavaScript，将内容绘制到画布上。
- en: See also
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Rotate your text with canvas* recipe
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用画布旋转文本*食谱'
- en: Making an inner and outer shadow with canvas
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用画布制作内部和外部阴影
- en: This recipe also uses `canvas` and JavaScript to draw the text and the effects
    in your browser. There is no direct method to make an inner-glow or inset-shadow
    effect using `canvas`, however, using the stroke method, you can simulate an inner
    shadow in your text.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱还使用`canvas`和JavaScript在浏览器中绘制文本和效果。使用`canvas`没有直接的方法来制作内发光或内阴影效果，但是使用描边方法，你可以在文本中模拟内部阴影。
- en: Getting ready
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe starts with some already-written code. You can download this from
    Packt Publishing's website. It is also the same code you created in the recipe,
    *Making a text shadow with canvas*. This code should be run on your local computer
    without any special web server. You can get the whole code online at the book's
    website.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱从一些已经写好的代码开始。你可以从Packt Publishing的网站上下载。这也是你在食谱中创建的相同代码，*使用画布制作文本阴影*。这段代码应该在你的本地计算机上运行，不需要任何特殊的Web服务器。你可以在书的网站上在线获取整个代码。
- en: How to do it…
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: To begin, create a simple HTML page with a `<canvas>` element.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个带有`<canvas>`元素的简单HTML页面。
- en: '[PRE8]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The JavaScript gets the `canvas` element from the DOM.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript从DOM中获取`canvas`元素。
- en: '[PRE9]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: It then calls the `getContext()` method. The `getContext('2d')` method is the
    built-in HTML5 object. It has a number of methods to draw text, shapes, images,
    and more.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 然后调用`getContext()`方法。`getContext('2d')`方法是内置的HTML5对象。它有许多方法可以绘制文本、形状、图像等。
- en: '[PRE10]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This script uses multiple effects combined to make an inner and outer shadow.
    You add a drop shadow and two different outlines. First, add a drop shadow to
    the top-left part and make it black with a `context.shadowBlur` value of `2`.
    Building on that, after `context.fillText`, add `context.strokeStyle` and `context.strokeText`
    to the canvas context.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本使用多种效果组合来制作内部和外部阴影。首先，在左上角添加一个投影，并将其设为黑色，`context.shadowBlur`值为`2`。在此基础上，在`context.fillText`之后，将`context.strokeStyle`和`context.strokeText`添加到画布上下文。
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Instead of a raised look, the text appears to be beveled in and has an inner
    glow or shadow effect. The effect is displayed in the following screenshot:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 文本看起来不是凸起的，而是内凹的，并具有内部发光或阴影效果。该效果显示在下面的截图中：
- en: '![How to do it…](img/5442OT_02_03.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](img/5442OT_02_03.jpg)'
- en: How it works…
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: As stated in the beginning of this recipe, there is no true direct method to
    make an inner shadow in canvas, but there are ways to use the `context.fillText`
    and `context.strokeStyle` methods together that will create something that sufficiently
    looks like an inner shadow.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本食谱开头所述，画布中没有真正的直接方法来制作内部阴影，但有办法使用`context.fillText`和`context.strokeStyle`方法一起使用，可以创建出看起来足够像内部阴影的东西。
- en: Rotating your text with canvas
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用画布旋转文本
- en: The HTML5 canvas methods can do more than just coloring the text or adding drop
    shadows. You can also use it to move or manipulate the objects in the canvas area.
    In this recipe, we will rotate the objects in the canvas.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5画布方法不仅可以给文本上色或添加阴影，还可以用来移动或操纵画布区域中的对象。在这个食谱中，我们将旋转画布中的对象。
- en: Getting ready
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe builds on top of the previous recipes. If you skipped them, that's
    okay, you can go back to the previous recipe to refer to the complete code.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱是在之前的食谱基础上构建的。如果你跳过了它们，没关系，你可以回到之前的食谱参考完整的代码。
- en: How to do it…
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Once you have your previous recipe''s canvas set up, the basic steps for rotation
    are easy. Add a `rotate` method to the beginning of the function:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你设置好了之前食谱的画布，旋转的基本步骤就很容易了。在函数的开头添加一个`rotate`方法：
- en: '[PRE12]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You will probably notice that the text rotated right off of the canvas. What
    happened? The `rotate` method rotates the entire canvas and is not aware of what
    is in it.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到文本已经旋转出了画布。发生了什么？`rotate`方法旋转整个画布，并不知道其中有什么。
- en: 'The canvas has a small default size of 300px by 150px. Changing the element''s
    size attributes will not affect the canvas size, but distorts the objects drawn
    on it. To change the size of the canvas and the objects drawn, add the `canvas.width`
    and `canvas.height` properties in the JavaScript:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 画布的默认大小是300px x 150px。更改元素的大小属性不会影响画布的大小，但会扭曲在其上绘制的对象。要改变画布和绘制的对象的大小，可以在JavaScript中添加`canvas.width`和`canvas.height`属性：
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In addition, because the canvas rotates entirely itself, and not the text rotating
    about an origin, the text location will need to be repositioned to desired location.
    In this case, change the object offset of the fill and the stroke:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于`canvas`完全旋转自身，而不是文本围绕一个原点旋转，因此文本位置需要重新定位到所需的位置。在这种情况下，更改填充和描边的对象偏移量：
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This is depicted in the following screenshot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示：
- en: '![How to do it…](img/5442OT_02_04.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤…](img/5442OT_02_04.jpg)'
- en: How it works…
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: The JavaScript uses the `rotate` method to rotate the whole `canvas` element
    and everything drawn inside it. It requires a small amount of forethought when
    using the `rotate` method in the canvas. It is complex, but is the perfect tool
    to use in large responsive web projects.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript使用`rotate`方法来旋转整个`canvas`元素以及其中绘制的所有内容。在使用`canvas`的`rotate`方法时需要一些事先考虑。它很复杂，但是在大型响应式Web项目中使用是完美的工具。
- en: See also
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Rotate your text with CSS3* recipe
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用CSS3旋转文本* 配方'
- en: Rotating your text with CSS3
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用CSS3旋转文本
- en: CSS3 provides an easy way to rotate your text. The `transform:rotate` property
    is easy to implement and provides a simple solution when the project does not
    require the complexity of the canvas.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3提供了一种简单的方法来旋转文本。`transform:rotate`属性易于实现，并且在项目不需要`canvas`的复杂性时提供了一个简单的解决方案。
- en: Getting ready
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Write a line of text in your HTML document. Brace yourself; you are about to
    rotate it with CSS3.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的HTML文档中写一行文本。做好准备，您将要用CSS3旋转它。
- en: How to do it…
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'Wrap the text in a paragraph tag element:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 将文本放在段落标签元素中：
- en: '[PRE15]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Then, add the CSS `transform` property to rotate the text. Each browser renders
    this differently, so each will need its own unique `transform` property. However,
    each will use the `transform` property''s subproperty `rotate`, followed by the
    degrees of rotation, as shown in the following code snippet:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，添加CSS `transform`属性来旋转文本。每个浏览器呈现方式都不同，因此每个浏览器都需要自己独特的`transform`属性。但是，每个浏览器都将使用`transform`属性的子属性`rotate`，后跟旋转的度数，如下面的代码片段所示：
- en: '[PRE16]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: How it works…
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The `transform` property applies a 2D or 3D transformation to an element. Other
    property changes available are `move`, `skew`, and `perspective`.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`transform` 属性将2D或3D变换应用于元素。其他可用的属性更改包括 `move`、`skew` 和 `perspective`。'
- en: See also
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Rotate your text with canvas* recipe
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用canvas旋转文本* 配方'
- en: Making 3D text with CSS3
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用CSS3制作3D文本
- en: In previous recipes, we created a drop shadow, bevel, and an inner shadow, using
    the `canvas` element. With CSS3, we can do this to make your text really stand
    out. Using the CSS3 `text-shadow` property, we can make your text look as if it
    is jutting out of the screen towards your viewer.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在以前的示例中，我们使用`canvas`元素创建了投影阴影、斜角和内部阴影。使用CSS3，我们可以做到让您的文本真正脱颖而出。使用CSS3的`text-shadow`属性，我们可以让您的文本看起来好像是从屏幕上朝向观众突出。
- en: Getting ready
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: If you would like to skip ahead, you can get the code online at Packt Publishing's
    website. Otherwise, if you are the learning-by-doing type, let's make our 3D text.
    We create the 3D effect by using a combination of CSS3 shadow effects.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要跳过，可以在Packt Publishing的网站上在线获取代码。否则，如果您是通过实践学习的类型，让我们制作我们的3D文本。我们通过使用CSS3阴影效果的组合来创建3D效果。
- en: How to do it…
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作步骤
- en: 'In your IDE, create a new HTML document with only a header in the body. Add
    a `style` section to the `head` tag and assign the header the property, `color:#f0f0f0;`,
    as shown in the following code snippet:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的IDE中，创建一个只有标题的新HTML文档。在`head`标签中添加一个`style`部分，并将标题分配为`color:#f0f0f0;`，如下面的代码片段所示：
- en: '[PRE17]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Now add to it a series of seven increasing-decreasing X- and Y- positioned
    `text-shadow` properties, from `0px 0px0px #666,` to `-6px -6px 0px #666;`.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '现在，为其添加一系列七个逐渐增加和减少的X和Y位置的`text-shadow`属性，从`0px 0px0px #666`到`-6px -6px 0px
    #666`。'
- en: '[PRE18]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Your header now leaps off the screen. Well, almost! To make sure it really pops
    off the screen, let's give it some more effect. When building any 3D objects on
    a screen, it is important to give consistent lighting and shadows. Since this
    text rises above, it needs a shadow.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 您的标题现在几乎跳出屏幕。好吧，几乎！为了确保它真的脱颖而出，让我们给它一些更多的效果。在屏幕上构建任何3D对象时，重要的是要给予一致的光照和阴影。由于这个文本上升，它需要一个阴影。
- en: Add another series of six X- and Y- positioned `text-shadow` properties, only
    this time give them positive values and a lighter color (`color:#ccc;`).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 再添加一系列六个X和Y位置的`text-shadow`属性，只是这一次给它们正值和一个较浅的颜色（`color:#ccc;`）。
- en: '[PRE19]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The drop shadow makes sense, but it still looks a bit fake, well let''s take
    it to another level; let''s blur and darken the elements on the background. The
    third number in your `text-shadow` property creates the blur, so add an increasing
    blur of 0, 0, 1, 1, 2, 3, and 5, as shown in the following code. Also, change
    the colors to grow darker as you go back: `#888`, `#777`, `#666`, `#555`, `#444`,
    `#333`, and `#000`.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 投影阴影是有道理的，但它看起来仍然有点假，好吧，让我们把它提升到另一个水平；让我们模糊和加深背景上的元素。在`text-shadow`属性中的第三个数字创建了模糊效果，因此按照以下代码中所示添加逐渐增加的模糊：0、0、1、1、2、3
    和 5。还要将颜色更改为越往后越暗：`#888`、`#777`、`#666`、`#555`、`#444`、`#333` 和 `#000`。
- en: '[PRE20]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now your header has a truly realistic 3D effect. The effect illustrated in
    the following screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的标题具有真正逼真的3D效果。如下截图所示：
- en: '![How to do it…](img/5442OT_02_06.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![操作步骤…](img/5442OT_02_06.jpg)'
- en: How it works…
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理
- en: Play around and experiment with variations of this recipe for some very exciting
    typographic effects. CSS3 brings a whole new level of excitement and depth to
    typographic design that has always been difficult to achieve, and does it well.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试并尝试这个配方的变化，以获得一些非常令人兴奋的排版效果。CSS3为排版设计带来了全新的兴奋和深度，这是以前很难实现的，而且做得很好。
- en: The `text-shadow` property can handle numerous shadow properties. Therefore,
    you can stack them on top of each other in an increasing distance away from your
    text. This creates the 3D effect on your text.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`text-shadow`属性可以处理多个阴影属性。因此，您可以将它们堆叠在一起，使它们离文本越来越远。这样可以为您的文本创建3D效果。'
- en: Adding texture to your text with text masking
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用文本遮罩为您的文本添加纹理
- en: CSS3 also gives you the awesome power of adding an image mask texture to your
    text with an image. This effect was previously only achievable by creating a static
    image of your text with an image-editing software.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3还为你提供了使用图像为文本添加图像蒙版纹理的强大功能。以前只能通过使用图像编辑软件创建文本的静态图像来实现这种效果。
- en: Getting ready
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You'll need an image to use as the texture mask. Using an image-editing software,
    create a new image with an alpha channel. If you do not have an image-editing
    software that can create a PNG with alpha channels, you can download an open source,
    free image-editing software GIMP at [http://www.gimp.org](http://www.gimp.org).
    To create a quick texture effect, use a scatter-type brush to create a textured
    area near the top of the image.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一张图像作为纹理蒙版。使用图像编辑软件创建一个带有alpha通道的新图像。如果你没有能够创建带有alpha通道的PNG图像的图像编辑软件，你可以在[http://www.gimp.org](http://www.gimp.org)下载一个开源的免费图像编辑软件GIMP。为了快速创建纹理效果，使用散射型刷子在图像顶部附近创建一个纹理区域。
- en: Save it as a PNG image type, preserving the alpha channel, in the `images` directory
    of webhost.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 将其保存为PNG图像类型，在web主机的`images`目录中保留alpha通道。
- en: How to do it…
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Create your HTML with a header element that will contain the text you want
    to apply your texture mask to. Then, add some text in it:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个包含要应用纹理蒙版的文本的标题元素的HTML。然后，在其中添加一些文本：
- en: '[PRE21]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Then, add your CSS markup. This will include a large font size (to show off
    your mask texture!), a white color font, padding and alignment, and then, of course
    the image mask property.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，添加你的CSS标记。这将包括一个大字体大小（展示你的蒙版纹理！），白色字体颜色，填充和对齐，当然还有图像蒙版属性。
- en: Tip
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Note that each browser requires its own prefix for the property.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，每个浏览器都需要为该属性添加自己的前缀。
- en: '[PRE22]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The CSS effect is displayed in the following screenshot:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: CSS效果显示在以下截图中：
- en: '![How to do it…](img/5442OT_02_07.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](img/5442OT_02_07.jpg)'
- en: How it works…
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: The mask image cuts out the visible portion of the element according to the
    mask image's alpha. When applied over the text in the CSS, it will cut out the
    masked portions. This works in a very similar way to the image-editing software's
    alpha channel layer.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 蒙版图像根据蒙版图像的alpha值剪切元素的可见部分。当在CSS中应用于文本时，它将剪切掉蒙版部分。这与图像编辑软件的alpha通道图层的工作方式非常相似。
- en: Styling alternating rows with the nth positional pseudo class
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用nth位置伪类样式交替行
- en: The positional-pseudo classes in CSS3 offers easy CSS solutions to problems
    that previously required annoyingly complicated solutions. Until very recently,
    to style alternating rows of a list or table, if you were fortunate enough to
    be able to work on a server with some sort of logic, you could at least iterate
    through a count in a list, or if unlucky, you had to manually numerate your rows.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3中的位置伪类提供了简单的CSS解决方案，解决了以前需要繁琐解决方案的问题。直到最近，要为列表或表的交替行设置样式，如果你有幸能够在具有某种逻辑的服务器上工作，你至少可以在列表中迭代计数，或者如果不幸的话，你必须手动编号你的行。
- en: Getting ready
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'The CSS3 solution is surprisingly simple. First, create your HTML list of values.
    This does not necessarily require a name-spaced class, as you might want this
    to be an universal style throughout your site:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3的解决方案非常简单。首先，创建你的HTML值列表。这不一定需要一个命名空间类，因为你可能希望这是你站点中的一个通用样式：
- en: '[PRE23]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: How to do it…
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: Add a CSS property for the list item, `<li>`, with the *n*th positional pseudo-class
    odd value. Give it a value of a background color and font color that is noticeably
    different than your default color scheme.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 为列表项`<li>`添加一个*n*th位置伪类奇数值的CSS属性。给它一个背景颜色和字体颜色的值，这些颜色与你的默认颜色方案明显不同。
- en: '[PRE24]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'This will auto magically style the odd numbered rows of your list! The following
    screenshot illustrates this effect:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这将自动地为你的列表的奇数行设置样式！以下截图说明了这种效果：
- en: '![How to do it…](img/5442OT_02_08.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![如何做…](img/5442OT_02_08.jpg)'
- en: Now take a breath; that was so easy!
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 现在深呼吸；那么容易！
- en: How it works…
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: According to [http://www.w3.org](http://www.w3.org), the `:nth-of-type(an+b)`
    pseudo-class notation represents an element that has *an+b-1* siblings with the
    same expanded element name before it, in the document tree for any zero or positive
    integer value of *n*, and has a parent element.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 根据[http://www.w3.org](http://www.w3.org)，`:nth-of-type(an+b)`伪类符号表示具有在其之前具有相同扩展元素名称的*an+b-1*个兄弟元素的元素，在文档树中，对于*n*的任何零或正整数值，并且具有父元素。
- en: What does that mean? It means that as long as it has similar siblings inside
    the same parent element, you can either enter in a formula like *(-n+2)* for the
    last two rows of the siblings, or keeping it simple, even or odd, and style those
    rows via CSS.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 那是什么意思？这意味着只要它在同一个父元素内具有类似的兄弟元素，你可以输入一个类似*(-n+2)*的公式来为兄弟元素的最后两行设置样式，或者保持简单，奇数或偶数，并通过CSS样式这些行。
- en: Adding characters before and after pseudo elements
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在伪元素之前和之后添加字符
- en: 'In what seems like a lost episode of *The Twilight Zone*, a new property of
    CSS gives you the ability to add pseudo markup to your content. As strange as
    it may sound, there are a surprising number of use cases for this sort of styling.
    You may want to wrap a section of your content in quotes, and not have to deal
    with the extra coding trouble to put quotes in your content or theme file, which
    of course is a sensible thing to do. Or perhaps you want to join in with the popularity
    of Twitter and its hash-tag and the `@` markups, you can precede your content
    with a `#` or `@` symbol, just by using CSS markup, as shown in the following
    code line:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS的一个新属性中，似乎失落了一集*The Twilight Zone*，它给了你在内容中添加伪标记的能力。尽管听起来很奇怪，但这种样式有令人惊讶的用例。你可能想在你的内容中加引号，而不必处理额外的编码麻烦来放置引号在你的内容或主题文件中，这当然是明智的做法。或者你可能想加入Twitter及其hash标签和`@`标记的流行，你可以在你的内容之前加上`#`或`@`符号，只需使用CSS标记，如下面的代码行所示：
- en: '[PRE25]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Getting ready
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This requires no server-side logic or fancy footwork of any kind. All you need
    is to be able to launch the page in your localhost to see it in action.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这不需要任何服务器端逻辑或任何花哨的动作。你只需要能够在本地主机上启动页面，看到它的运行情况。
- en: How to do it…
  id: totrans-156
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'This is accomplished with CSS only, therefore all you need to create in your
    HTML is a `class` or `id` property wrapped around the target content:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这只需要使用CSS就可以实现，因此你在HTML中需要创建的只是一个包裹目标内容的`class`或`id`属性：
- en: '[PRE26]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The CSS markup is only a bit complicated, in that the inserted symbol adheres
    to the margin and padding rules of the content. It uses the *n*th `class:before`
    and `class:after` pseudo classes. So, the CSS for `before` is `.class:before {content:"#";}`.
    Simply replace `#` with whatever symbol you want to use. And for `after`, replace
    `.class:before{}` with `.class:after{}`.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: CSS标记只是稍微复杂一点，插入的符号遵循内容的边距和填充规则。它使用了*n*th `class:before`和`class:after`伪类。因此，`before`的CSS是`.class:before
    {content:"#";}`。只需用你想要使用的符号替换`#`。对于`after`，用`.class:before{}`替换`.class:after{}`。
- en: '[PRE27]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: How it works…
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `before` and `after` pseudo elements in CSS generates content before or
    after the element's content. Be careful that they are not real content or elements,
    and cannot be used for markup or JavaScript event triggers.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: CSS中的`before`和`after`伪元素生成元素内容之前或之后的内容。请注意，它们不是真正的内容或元素，不能用于标记或JavaScript事件触发。
- en: Making a button with a relative font size
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用相对字体大小制作按钮
- en: There are several use cases for having a responsive button font size. A good
    example of a use case is for mobile versions of your site. When a regular button
    is viewed on your iPhone, it is tiny and difficult to press. The last thing we
    want to do is to create a bad experience for mobile device users through our negligence
    of mobile devices.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种情况可以使用响应式按钮字体大小。一个很好的例子是你网站的移动版本。当在iPhone上查看普通按钮时，它非常小，难以点击。我们最不希望做的就是通过我们对移动设备的忽视来给移动设备用户创造糟糕的体验。
- en: Getting ready
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The goal of this recipe is to use the new font measure of `REM` to make a responsive
    button font size that will grow larger when viewed on your mobile device.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方的目标是使用新的字体度量`REM`来制作一个响应式按钮字体大小，当在移动设备上查看时会变大。
- en: '`REM` is a new unit introduced in CSS3, it stands for Root `EM`, or relative
    to the root font size. This is different from `EM`, which was relative to the
    parent. One way to use it is to set the size of certain elements to the base size
    of the body font.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`REM`是CSS3中引入的一个新单位，它代表根`EM`，或者相对于根字体大小。这与相对于父元素的`EM`不同。一种使用它的方法是将某些元素的大小设置为body字体的基本大小。'
- en: How to do it…
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: It can be used with the `@media` query to build a responsive button for your
    desktop and mobile devices. Here's what to do.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以与`@media`查询一起使用，为你的桌面和移动设备构建一个响应式按钮。下面是具体操作。
- en: First, create a simple HTML page with some filler text ([http://lipsum.com](http://lipsum.com))
    and a `input` type of `submit`.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个简单的HTML页面，包含一些填充文本（[http://lipsum.com](http://lipsum.com)）和一个`input`类型为`submit`的元素。
- en: '[PRE28]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Next add CSS for the HTML''s base font size at `62.5%`, and a static font size
    for the paragraph, as an experimental control group:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在HTML的基本字体大小上添加CSS，设置为`62.5%`，并为段落添加静态字体大小，作为实验对照组：
- en: '[PRE29]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: The next step is to create your `@media` query for the mobile device, and two
    different desktop window sizes. I'm adding an additional `@media` query for desktop
    screens, so if you do not have access to a mobile device you can still see the
    responsiveness in action.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是为移动设备创建你的`@media`查询，以及两个不同的桌面窗口大小。我添加了一个额外的`@media`查询用于桌面屏幕，所以如果你没有移动设备，你仍然可以看到响应性的效果。
- en: Set up two `@media` queries for the desktop at `1024px` and `1280px` and two
    for mobile devices, both with `max-device-width:480px`, one with `orientation:landscape`,
    and other one with `orientation:portrait`.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 为桌面设备设置两个`@media`查询，分别为`1024px`和`1280px`，为移动设备设置两个，都是`max-device-width:480px`，一个是`orientation:landscape`，另一个是`orientation:portrait`。
- en: '[PRE30]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'In your desktop `@media` queries, add an `input` element to both; and a `font-size:1rem`
    value to the `min-width:1024px` query, and a `font-size:2rem` value to the `min-width:1280px`
    query. To both queries add the properties: `width:84px;` and `padding:2%;`.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的桌面`@media`查询中，为两者都添加一个`input`元素；并为`min-width:1024px`查询添加一个`font-size:1rem`值，为`min-width:1280px`查询添加一个`font-size:2rem`值。对于这两个查询，添加属性：`width:84px;`和`padding:2%;`。
- en: 'In the mobile `@media` queries, add the `input` element to both. In the `orientation:landscape`
    media query, assign the properties: `font-size:2rem;` and `width:25%;`. And in
    the `orientation:portrait` media query, assign the properties: `font-size:2.4rem;`
    and `width:30%;`.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动`@media`查询中，为两者都添加`input`元素。在`orientation:landscape`媒体查询中，分配属性：`font-size:2rem;`和`width:25%;`。在`orientation:portrait`媒体查询中，分配属性：`font-size:2.4rem;`和`width:30%;`。
- en: '[PRE31]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Now when you view this page from a mobile device you can see how the `REM` size
    unit creates a font, sized relative to the base font. The mobile device may render
    the font so small it is hardly readable, and the button too small to use without
    fumbling. Turn the device from portrait orientation to landscape and you will
    see the button and its font change sizes.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你从移动设备查看这个页面时，你可以看到`REM`大小单位创建了一个相对于基本字体大小的字体。移动设备可能会将字体渲染得非常小，几乎无法阅读，按钮也太小，难以使用。将设备从纵向方向旋转到横向方向，你会看到按钮及其字体大小发生变化。
- en: Compare the mobile device button to the desktop versions. You will see the button
    displays unique properties per device type. And, as you drag the desktop browser
    window between the `1024px` and `1280px` sizes the button font changes also.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 比较移动设备按钮和桌面版本。你会看到按钮会根据设备类型显示独特的属性。当你在`1024px`和`1280px`之间拖动桌面浏览器窗口时，按钮字体也会发生变化。
- en: How it works…
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `REM` font size unit creates a font size relative to the base font size
    declared in the `HTML` or `body` elements, or if undeclared relative to the built-in
    base size of the font. The `@media` query we wrote gives a new relative size for
    the different devices and orientations.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`REM`字体大小单位创建相对于在`HTML`或`body`元素中声明的基本字体大小的字体大小，或者如果未声明，则相对于字体的内置基本大小。我们编写的`@media`查询为不同的设备和方向提供了新的相对大小。'
- en: Adding a shadow to your font
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 给你的字体添加阴影
- en: With CSS3 you can easily add a shadow to your text. This effect can be used
    to either give a special element a highlighted effect, or used throughout your
    `body` text to enhance the look of your content. In addition, you can use it to
    highlight links within your text to help them stand out.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CSS3，你可以很容易地为你的文本添加阴影。这个效果可以用来给特殊元素添加突出效果，也可以用在你的`body`文本中，以增强你内容的外观。此外，你可以用它来突出你文本中的链接，帮助它们更加突出。
- en: Getting ready
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: CSS3 makes this easy, so there isn't a big setup. Open your development environment,
    or a Notepad program and get started. You can also go online to Packt Publishing's
    web page for this book and get the completed code and take a look inside.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3使这变得很容易，所以不需要太多设置。打开你的开发环境，或者一个记事本程序，然后开始。你也可以在线访问Packt Publishing的网页，获取完成的代码并查看其中的内容。
- en: How to do it…
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'First, create a paragraph element of text; recall that you can get this from
    our favorite filler text generator, [http://lipsum.com](http://lipsum.com). And
    give the text a title header:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个文本段落元素；记住你可以从我们喜欢的填充文本生成器[http://lipsum.com](http://lipsum.com)获取。并给文本一个标题头：
- en: '[PRE32]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'In your paragraph, insert some links, by wrapping a couple of words in an `href`
    tag:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的段落中，通过在`href`标签中包裹一些单词来插入一些链接：
- en: '[PRE33]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: First, let's give your paragraph text a drop shadow, this is a simple CSS3 `dropshadow`
    effect we can use on the text. Add the property `text-shadow` in your CSS. For
    Internet Explorer, add the `filter` property.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们给你的段落文本添加一个阴影，这是一个简单的CSS3 `dropshadow`效果，我们可以用在文本上。在你的CSS中添加`text-shadow`属性。对于Internet
    Explorer，添加`filter`属性。
- en: '[PRE34]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: This gives your text a slight shadow that makes it pop off the page. For body
    text, anything more than a slight shadow will be too much. Foryour links, to make
    them stand out more, we can add multiple levels of text shadow. Add a shadow similar
    to the previous example, and then following a comma, add another shadow effect.
    This example adds a light blue shadow to the link text.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这让你的文本有一个轻微的阴影，使它脱颖而出。对于正文文本，任何超过轻微阴影的效果都会太多。对于你的链接，为了让它们更加突出，我们可以添加多层文本阴影。添加一个类似于前面例子的阴影，然后在逗号后面添加另一个阴影效果。这个例子给链接文本添加了一个浅蓝色的阴影。
- en: '[PRE35]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Let''s add an old property to give the page some new shine. Let''s make your
    links flash on the pseudo-action hover (`:hover`):'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加一个旧属性，给页面带来新的光芒。让你的链接在伪动作悬停(`:hover`)时闪烁：
- en: '[PRE36]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'This property makes the links in the paragraph flash with a yellow glow, when
    you hover over them. This effect illustrated in the following screenshot:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 当你悬停在链接上时，这个属性会让段落中的链接闪烁着黄色的光芒。这个效果在下面的截图中有所体现：
- en: '![How to do it…](img/5442OT_02_09.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/5442OT_02_09.jpg)'
- en: How it works...
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: This recipe is a combination of shadow effects. You can combine multiple shadow
    effects to create realistic 3D effects for your type. The best way to learn is
    to experiment until you are extremely satisfied with your 3D effects.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱是阴影效果的组合。你可以组合多个阴影效果，为你的文本创建逼真的3D效果。学习的最佳方法是不断尝试，直到你对你的3D效果非常满意。
- en: Curving a corner with border radius
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用`border-radius`曲线化一个角
- en: Curved corners were at one time the Holy Grail of the web design world. It was
    always possible, but never simple. A designer had a limited number of bad choices
    to employ to make an element have a curved corner.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 曲线角曾经是网页设计世界的圣杯。它总是可能的，但从来不简单。设计师只能做出有限数量的糟糕选择，来使一个元素拥有曲线角。
- en: Getting ready
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This is now achieved without too much fuss with CSS3\. The `border-radius` property
    is a simple method of creating a rounded corner on an element.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 这现在是通过CSS3轻松实现的。`border-radius`属性是在元素上创建圆角的简单方法。
- en: How to do it…
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: First create your HTML element. This works on any element that can have a border.
    So let's make a paragraph block of text. You can get filler text at [http://lipsum.com](http://lipsum.com).
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 首先创建你的HTML元素。这适用于任何可以有边框的元素。所以让我们创建一个段落文本块。你可以在[http://lipsum.com](http://lipsum.com)获取填充文本。
- en: '[PRE37]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Next add CSS to fill out the paragraph element:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来添加CSS来填充段落元素：
- en: '[PRE38]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Then, to round the corners, add the CSS3 property, `border-radius`. In this
    example, I used a curve radius of `5px`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，为了使角变圆，添加CSS3属性`border-radius`。在这个例子中，我使用了`5px`的曲线半径。
- en: '[PRE39]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: This property gives you simple and easy-rounded corners. This is great for a
    floating element on a page. But what if you wanted to round only the top corners
    for a menu element? Still easy.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性为你提供了简单和容易的圆角。这对于页面上的浮动元素非常有用。但是如果你只想为菜单元素的顶部角创建圆角怎么办？仍然很容易。
- en: 'Let''s start with a simple inline list:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个简单的内联列表开始：
- en: '[PRE40]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Next add the CSS to make the list inline, with padding and margins:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来添加CSS使列表内联，带有填充和边距：
- en: '[PRE41]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The CSS in the previous example gives you rounded corners for all the corners.
    To have different rounded corners, specify a radius for each corner.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 前面例子中的CSS为所有角创建了圆角。要有不同的圆角，指定每个角的半径。
- en: '[PRE42]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'You can achieve the same results by specifying each corner as its own CSS property:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过指定每个角作为自己的CSS属性来实现相同的结果：
- en: '[PRE43]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'You can take this further by adding another level of curved radius:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过添加另一个曲线半径来进一步扩展这一点：
- en: '[PRE44]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'The new look is shown in the following screenshot:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 新的外观如下截图所示：
- en: '![How to do it…](img/5442OT_02_10.jpg)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/5442OT_02_10.jpg)'
- en: 'To add another level of responsiveness try replacing the curved radius entries
    with percentages. Go back to the first example in this recipe and change the CSS
    to have a percent radius curve:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 为了增加另一个响应级别，尝试用百分比替换曲线半径的条目。回到这个食谱中的第一个例子，将CSS更改为具有百分比半径曲线：
- en: '[PRE45]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: How it works…
  id: totrans-229
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The `border-radius` property provides a simple rendering of a curve on an element.
    This property takes four values, but can be written in the shorthand format with
    only one curve radius.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`border-radius` 属性提供了在元素上绘制曲线的简单方法。这个属性接受四个值，但也可以用只有一个曲线半径的简写格式来书写。'
