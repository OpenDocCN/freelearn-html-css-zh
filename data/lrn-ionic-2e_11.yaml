- en: Ionic 3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ionic 3
- en: 'In the final chapter of Learning Ionic, Second Edition, we will look at the
    latest changes to the Ionic framework -- Ionic 3\. We will also quickly touch
    upon Angular and its releases. In this chapter, we will look at the following
    topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在《学习Ionic，第二版》的最后一章中，我们将看一下Ionic框架的最新变化--Ionic 3。我们还将简要介绍Angular及其发布。在本章中，我们将讨论以下主题：
- en: Angular 4
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Angular 4
- en: Ionic 3
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic 3
- en: Ionic 3 updates
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic 3的更新
- en: Ionic 2 versus Ionic 3
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ionic 2与Ionic 3
- en: Angular 4
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Angular 4
- en: Since the launch of Angular 2, the Angular team has been working towards making
    Angular a stable and reliable framework for building applications. On 23 March,
    2017, the Angular team released Angular 4.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 自Angular 2发布以来，Angular团队一直致力于使Angular成为一个稳定可靠的应用程序框架。2017年3月23日，Angular团队发布了Angular
    4。
- en: What? Angular 4? What happened to Angular 3!!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 什么？Angular 4？Angular 3怎么了！！
- en: 'Simply put, the Angular team adopted Semantic Versioning ([http://semver.org/](http://semver.org/))
    to manage all the packages and dependences within the framework. In this process,
    one of the packages (`@angular/router`) has moved a complete major version ahead
    of the other packages, something like the following, due to the changes to the
    router package.:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，Angular团队采用了语义化版本控制（[http://semver.org/](http://semver.org/)）来管理框架内所有包和依赖关系。在这个过程中，其中一个包（`@angular/router`）已经完全升级了一个主要版本，类似于以下情况，由于路由包的更改。：
- en: '| **Frameworks** | **Versions** |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| **框架** | **版本** |'
- en: '| `@angular/core` | v2.3.0 |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `@angular/core` | v2.3.0 |'
- en: '| `@angular/compiler` | v2.3.0 |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `@angular/compiler` | v2.3.0 |'
- en: '| `@angular/compiler-cli` | v2.3.0 |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `@angular/compiler-cli` | v2.3.0 |'
- en: '| `@angular/http` | v2.3.0 |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `@angular/http` | v2.3.0 |'
- en: '| `@angular/router` | V3.3.0 |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `@angular/router` | V3.3.0 |'
- en: Due to this misalignment and to avoid future confusion, the Angular team went
    ahead with Angular 4 instead of Angular 3.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这种不一致性和为了避免未来的混淆，Angular团队选择了Angular 4而不是Angular 3。
- en: 'Also, the **tentative release schedule** for future versions of Angular will
    be as shown:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，未来Angular版本的**暂定发布时间表**如下所示：
- en: '| **Versions** | **Release dates** |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| **版本** | **发布日期** |'
- en: '| Angular 5 | September/October 2017 |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| Angular 5 | 2017年9月/10月 |'
- en: '| Angular 6 | March 2018 |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| Angular 6 | 2018年3月 |'
- en: '| Angular 7 | September/October 2018 |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| Angular 7 | 2018年9月/10月 |'
- en: You can read more about this at [http://angularjs.blogspot.in/2016/12/ok-let-me-explain-its-going-to-be.html](http://angularjs.blogspot.in/2016/12/ok-let-me-explain-its-going-to-be.html).
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[http://angularjs.blogspot.in/2016/12/ok-let-me-explain-its-going-to-be.html](http://angularjs.blogspot.in/2016/12/ok-let-me-explain-its-going-to-be.html)上了解更多信息。
- en: 'With Angular 4, there have been some significant under-the-hood changes. The
    following are the updates as part of Angular 4:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Angular 4的发布，一些重大的底层变化已经发生。以下是Angular 4的更新：
- en: Smaller and faster with a smaller generated code
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更小更快，生成的代码更小
- en: Updates to the `Animation` package
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Animation`包的更新'
- en: Updates to `*ngIf` and `*ngFor`
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`*ngIf`和`*ngFor`的更新'
- en: Upgrade to the latest TypeScript version
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级到最新的TypeScript版本
- en: To know more about this release, refer to [http://angularjs.blogspot.in/2017/03/angular-400-now-available.html](http://angularjs.blogspot.in/2017/03/angular-400-now-available.html).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于此版本的信息，请参阅[http://angularjs.blogspot.in/2017/03/angular-400-now-available.html](http://angularjs.blogspot.in/2017/03/angular-400-now-available.html)。
- en: Since Ionic follows Angular, they have upgraded the Ionic framework from version
    2 to version 3 to move their base Angular version from 2 to 4.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Ionic遵循Angular，他们已经将Ionic框架从版本2升级到版本3，以将其基本Angular版本从2升级到4。
- en: Ionic 3
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ionic 3
- en: With the release of Angular 4, Ionic has upgraded itself and moved to Ionic
    3.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Angular 4的发布，Ionic已经升级并转移到了Ionic 3。
- en: Ionic version 3 ([https://blog.ionic.io/ionic-3-0-has-arrived/](https://blog.ionic.io/ionic-3-0-has-arrived/))
    has added a couple of new features, such as IonicPage and LazyLoading. They have
    updated the base version of Angular to version 4 and pushed out some critical
    bug fixes as well. For more information, take a look at the change log for 3.0.0
    at [https://github.com/driftyco/ionic/compare/v2.3.0...v3.0.0](https://github.com/driftyco/ionic/compare/v2.3.0...v3.0.0).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic版本3（[https://blog.ionic.io/ionic-3-0-has-arrived/](https://blog.ionic.io/ionic-3-0-has-arrived/)）增加了一些新功能，如IonicPage和LazyLoading。他们还将基本版本的Angular更新到了版本4，并发布了一些关键的错误修复。有关更多信息，请参阅3.0.0的变更日志：[https://github.com/driftyco/ionic/compare/v2.3.0...v3.0.0](https://github.com/driftyco/ionic/compare/v2.3.0...v3.0.0)。
- en: Ionic 2 to Ionic 3 changes are not breaking as we have seen from Ionic 1 to
    Ionic 2\. Changes to Ionic 3 are more along the lines of enhancements and bug
    fixes, which are on top of Ionic 2.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic 2到Ionic 3的变化并不像我们从Ionic 1到Ionic 2看到的那样是破坏性的。Ionic 3的变化更多地是增强和错误修复，这是在Ionic
    2的基础上进行的。
- en: Ionic 3 updates
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ionic 3的更新
- en: Now, we will take a look at a few key updates to Ionic 3.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看一下Ionic 3的一些关键更新。
- en: TypeScript update
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: TypeScript更新
- en: For the Ionic 3 release, the Ionic team has updated the version of TypeScript
    to the latest version. The latest version of TypeScript has enhanced build times
    and type checking among other things. For a complete list of TypeScript updates,
    refer to the TypeScript 2.2 release notes at: [https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ionic 3的发布，Ionic团队已经将TypeScript的版本更新到了最新版本。最新版本的TypeScript在构建时间和类型检查等方面有所增强。有关TypeScript更新的完整列表，请参阅TypeScript
    2.2发布说明：[https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html)。
- en: Ionic Page decorator
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ionic页面装饰器
- en: Ionic Page decorator helps implement deep linking better. If you remember our
    navigation example from [Chapter 4](part0079.html#2BASE0-9757c8e51afd47e0a7a9ced32db749b8),
    *Ionic Decorators and Services*, we have referred to actual class names while
    pushing and popping pages using the Nav Controller.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Ionic页面装饰器有助于更好地实现深度链接。如果你还记得我们在[第4章](part0079.html#2BASE0-9757c8e51afd47e0a7a9ced32db749b8)中的导航示例，*Ionic装饰器和服务*，我们在使用Nav
    Controller推送和弹出页面时引用了实际的类名。
- en: 'I am referring to `example9/src/pages/home/home.ts` here:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里指的是`example9/src/pages/home/home.ts`：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We can implement the same using the `@IonicPage` decorator, as shown.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`@IonicPage`装饰器来实现相同的功能，如图所示。
- en: 'Let''s update `example9/src/pages/about/about.ts`, as illustrated:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更新`example9/src/pages/about/about.ts`，如图所示：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Note that the `@IonicPage` decorator has been added along with the `@Component`
    decorator. Now, we will update `example9/src/pages/home/home.ts`, as shown:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`@IonicPage`装饰器已经添加到`@Component`装饰器中。现在，我们将更新`example9/src/pages/home/home.ts`，如图所示：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note the change to `this.navCtrl.push()`. Instead of passing the reference to
    the class, we are passing the name we have provided as a property on the `@IonicPage`
    decorator in `example9/src/pages/about/about.ts`. Also, now the pages will have
    the name added to the URL, that is, [http://localhost:8100/#/about](http://localhost:8100/#/about).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意`this.navCtrl.push()`的更改。现在，我们不再传递类的引用，而是传递了我们在`example9/src/pages/about/about.ts`中的`@IonicPage`装饰器属性的名称。此外，现在页面将在URL中添加名称，即[http://localhost:8100/#/about](http://localhost:8100/#/about)。
- en: To know more about Ionic Page decorator, check out [http://ionicframework.com/docs/api/navigation/IonicPage](http://ionicframework.com/docs/api/navigation/IonicPage).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于Ionic页面装饰器的信息，请访问[http://ionicframework.com/docs/api/navigation/IonicPage](http://ionicframework.com/docs/api/navigation/IonicPage)。
- en: Also, check out IonicPage Module [http://ionicframework.com/docs/api/IonicPageModule/](http://ionicframework.com/docs/api/IonicPageModule/)
    for bundling multiple pages/components into one child module and referencing the
    same in `@NgModule` in `app.module.ts`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 还要查看IonicPage模块[http://ionicframework.com/docs/api/IonicPageModule/](http://ionicframework.com/docs/api/IonicPageModule/)，将多个页面/组件捆绑到一个子模块中，并在`app.module.ts`的`@NgModule`中引用相同的内容。
- en: Lazy Loading
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 懒加载
- en: Lazy loading is another new feature that has been added as part of the Ionic
    3 release. Lazy loading lets us load a page only when needed. This will improve
    the start up time of the app and increase the overall experience.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 懒加载是Ionic 3发布的另一个新功能。懒加载让我们在需要时才加载页面。这将改善应用程序的启动时间并提高整体体验。
- en: You can take a look at the process by visiting [https://docs.google.com/document/d/1vGokwMXPQItZmTHZQbTO4qwj_SQymFhRS_nJmiH0K3w/edit](https://docs.google.com/document/d/1vGokwMXPQItZmTHZQbTO4qwj_SQymFhRS_nJmiH0K3w/edit)
    to start implementing Lazy Loading in your Ionic app.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过访问[https://docs.google.com/document/d/1vGokwMXPQItZmTHZQbTO4qwj_SQymFhRS_nJmiH0K3w/edit](https://docs.google.com/document/d/1vGokwMXPQItZmTHZQbTO4qwj_SQymFhRS_nJmiH0K3w/edit)来查看在Ionic应用程序中实现懒加载的过程。
- en: At the time of writing this chapter, Ionic 3 is about a week old. There were
    a couple of issues/inconsistencies in the CLI as well as the scaffolded apps.
    Hopefully, these will be resolved by the time the book is out.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本章时，Ionic 3已经发布了大约一周。CLI和脚手架应用程序中存在一些问题/不一致。希望这些问题在书籍发布时能够得到解决。
- en: Ionic 2 versus Ionic 3
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ionic 2与Ionic 3
- en: In this book, all the examples have been written with Ionic 2 in mind. Having
    said that, if you are using Ionic 3 to develop your Ionic apps, there should not
    be much of a change in the code. One key difference you will note in all the scaffolded
    apps is the introduction of IonicPage decorator and IonicPage Module.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，所有示例都是以Ionic 2为目标编写的。话虽如此，如果您使用Ionic 3开发您的Ionic应用程序，代码应该不会有太大变化。在所有脚手架应用程序中，您将注意到一个关键的区别是引入了IonicPage装饰器和IonicPage模块。
- en: You can always refer to the Ionic documentation to get more information on the
    latest version of these APIs.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以随时参考Ionic文档，以获取有关这些API的最新版本的更多信息。
- en: Summary
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: With this, we conclude our Ionic journey.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这一点，我们结束了我们的Ionic之旅。
- en: To quickly summarize, we started with understanding why Angular, why Ionic,
    and why Cordova. Then, we saw how Mobile Hybrid apps work and where Cordova and
    Ionic fit in. Next, we looked at various templates of Ionic and went through Ionic
    components, decorators, and services. After that, we looked at theming Ionic apps.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，我们从理解为什么选择Angular、为什么选择Ionic和为什么选择Cordova开始。然后，我们看到移动混合应用程序的工作原理以及Cordova和Ionic的适用性。接下来，我们看了Ionic的各种模板，并了解了Ionic组件、装饰器和服务。之后，我们看了Ionic应用程序的主题设置。
- en: Next, we went through Ionic Native and saw how to work with it. Using this knowledge,
    we built a Riderr app, which implements REST APIs, interfaces with device features
    using Ionic Native, and gives you the feel of a complete app that can be built
    using Ionic.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们学习了Ionic Native，并了解了如何使用它。利用这些知识，我们构建了一个Riderr应用程序，该应用程序实现了REST API，使用Ionic
    Native与设备功能进行交互，并让您感受到可以使用Ionic构建的完整应用程序的感觉。
- en: After that, we looked at Migrating Ionic 1 apps to Ionic 2 and how to test Ionic
    2 apps. In [Chapter 10](part0158.html#4MLOS0-9757c8e51afd47e0a7a9ced32db749b8),
    *Releasing the Ionic App*, we saw how to release and manage our app.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们看了迁移Ionic 1应用程序到Ionic 2以及如何测试Ionic 2应用程序。在[第10章](part0158.html#4MLOS0-9757c8e51afd47e0a7a9ced32db749b8)，*发布Ionic应用程序*，我们看到了如何发布和管理我们的应用程序。
- en: In this chapter, we saw the key changes in Ionic 3.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了Ionic 3的关键变化。
- en: Check out the [Appendix](part0179.html#5AMKM0-9757c8e51afd47e0a7a9ced32db749b8)
    for more helpful information and a few Ionic services that are ready to be test
    driven/used in production apps.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[附录](part0179.html#5AMKM0-9757c8e51afd47e0a7a9ced32db749b8)获取更多有用信息和一些可以在生产应用程序中进行测试/使用的Ionic服务。
