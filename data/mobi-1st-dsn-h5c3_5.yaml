- en: Chapter 5. Building the About Me Page
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章。建立关于我的页面
- en: In the previous chapter, we built a form potential for the clients to contact
    us. This is just one part of the formula of the current model for a portfolio
    site, either for personal business or for any other business use. The last aspect
    of this convention is the **About Me** page. This is arguably the least important
    page I have often seen and have had to consult with clients who do pretty weird
    stuff in this corner of their websites. That said, I think it is usually well-intentioned.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们为客户建立了一个联系我们的表单潜力。这只是当前模型的组合中的一部分，无论是个人业务还是其他任何业务用途的投资组合网站。这个约定的最后一个方面是“关于我”页面。这可能是我经常看到的最不重要的页面，我经常不得不与在他们的网站这一角落做一些相当奇怪的事情的客户进行咨询。也就是说，我认为这通常是出于好意的。
- en: But before we get back to designing and coding, I want to put forward an argument
    for and against the **About Me** page.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 但在我们回到设计和编码之前，我想提出关于“关于我”页面的赞成和反对的观点。
- en: Justifying the About Me page
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 证明“关于我”页面的必要性
- en: 'Everyone wants their website to meet what can seem like two conflicting goals,
    which are as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都希望他们的网站能够实现看似两种相互冲突的目标，这些目标如下：
- en: 'Goal 1: We are professionals. Here is our work and our track record. We are
    different from our competitors.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标1：我们是专业人士。这是我们的工作和我们的业绩。我们与我们的竞争对手不同。
- en: 'Goal 2: We are just people! And I am just like you! We have warm blood flowing
    through our veins just as you do!'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标2：我们只是普通人！我和你一样！我们的血液在流动，就像你一样！
- en: So, rhetorically speaking, this actually makes a lot of sense, right? You want
    to make an emotional connection with your audience. This is called pathos in the
    study of rhetoric. If you don't make an emotional connection, the likelihood of
    getting a client or a sale decreases for sure. But, believe it or not, I just
    genuinely enjoy connecting with people, hearing about their experiences, and I
    really enjoy helping them solve problems. Furthermore, I find it gratifying to
    communicate (whether via the web or by any other means) in ways that convey my
    warmth and humanity (hope I'm right about that one). It's pretty awesome that
    I get to make money while doing it.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，从修辞学的角度来说，这其实是有道理的，对吧？你想要与你的观众建立情感联系。这在修辞学的研究中被称为感情。如果你没有建立情感联系，获得客户或销售的可能性肯定会减少。但是，信不信由你，我真的很享受与人交流，听他们的经历，我真的很享受帮助他们解决问题。此外，我发现以一种传达我的温暖和人性的方式（无论是通过网络还是其他任何方式）进行交流是令人满意的（希望我对这一点是正确的）。我可以在做这件事的同时赚钱，这真是太棒了。
- en: I am not a rare breed. Despite some silly stereotypes, I find that web developers
    are very social people who also enjoy technology. So, why is it that so much of
    the software we make lacks personality and a human touch? No idea. But I am here
    to argue for more of it. As a user of any technology, anything that is designed
    to acknowledge my humanity, and the actual conditions of my living, makes me happy.
    They can give you a moment of delight or deeply gratifying experiences.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不是一个罕见的品种。尽管有一些愚蠢的刻板印象，我发现网页开发人员是非常社交的人，也喜欢技术。那么，为什么我们制作的软件中缺乏个性和人情味呢？不知道。但我在这里要为更多的个性辩护。作为任何技术的用户，任何被设计来承认我的人性和我生活的实际状况的东西都会让我感到高兴。它们可以给你带来一刻愉悦或深刻的满足体验。
- en: All of this is to say that the **About Me** page is a nice place to shed light
    on yourself (either individually or collectively) and is but one strategy for
    connecting with your audience. But if you haven't connected with your audience
    by the time you get to the **About Me** page, in the current vernacular "ur doin'
    it wrong". And if your clients ask you to do this, you are still doing it wrong.
    To me it's important to imbue a site with the right tone as well as to make the
    site really usable. For a portfolio site, this is deceptively easy because the
    conventions are pretty mature. And for this book we've just used the conventions
    to make the **About Me** page quickly. But ultimately, this is just a framework.
    It's up to you to be creative without being overwrought, by adding surprising
    things, or maybe just one surprising memorable thing to your site. Hopefully using
    a fast, easy framework gives you more time and brainspace to do this. My worst
    fear about frameworks is that they facilitate rapid production of sites that are
    all nearly indistinguishable.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都是为了说“关于我”页面是一个很好的地方来为自己（无论是个人还是集体）提供光明，但这只是与观众建立联系的一种策略。但是，如果在到达“关于我”页面之前你还没有与你的观众建立联系，在当前的用语中，“你做错了”。如果你的客户要求你这样做，你还是做错了。对我来说，给网站注入正确的语气以及使网站真正可用是很重要的。对于投资组合网站来说，这是非常容易被欺骗的，因为惯例已经相当成熟。对于这本书，我们只是利用惯例快速制作了“关于我”页面。但最终，这只是一个框架。你需要有创意，而不要过度，通过为你的网站添加令人惊讶的东西，或者可能只是一个令人难忘的惊喜。希望使用一个快速、简单的框架能给你更多的时间和大脑空间来做这些。我对框架的最大担忧是，它们促进了几乎无法区分的网站的快速制作。
- en: So, my real point is, do have an **About Me** page, do it well, but make sure
    the whole site is also about you. It takes more work, and there are risks, but
    ultimately I think it's worth it. The other thing is this book isn't really about
    this; I am not going to teach you how to create the **About Me** page though this
    is the main topic of this chapter. That really warrants the attention of a whole
    book, not to mention a book that is less technical. So I apologize in advance
    that this chapter is going to be mainly about how to lay this page out.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我的真正观点是，确实有一个“关于我”页面，做得好，但也要确保整个网站也是关于你的。这需要更多的工作，也存在风险，但我认为最终是值得的。另一件事是，这本书并不真正涉及这个问题；我不打算教你如何创建“关于我”页面，尽管这是本章的主要内容。这确实值得一整本书来关注，更不用说一本不那么技术性的书了。所以我提前道歉，这一章主要是关于如何布置这个页面的。
- en: 'With that said, let''s get started on designing this page. The kind of content
    we will need on this page will be quite simple. It will include the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，让我们开始设计这个页面。我们将在这个页面上需要的内容类型非常简单。它将包括以下内容：
- en: Some details about the services we're going to offer.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于我们将要提供的服务的一些细节。
- en: Images of the company members. We will assume a small number for this scenario
    but include a strategy for dealing with a larger number. Obviously if this is
    just you, you're only going to need one photo. Make it good; some text for bio(s),
    something snappy, but also meaningful.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公司成员的照片。对于这种情况，我们将假设数量不多，但包括处理更多数量的策略。显然，如果只有你一个人，你只需要一张照片。让它很好；一些简介的文字，既简洁又有意义。
- en: Making the wireframes
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制作线框图
- en: 'Let''s take a look at some wireframes for this page. For these examples, I
    am going to assume that this is a portfolio site for a one person. But if you
    had a small group, you would probably want to reconsider this layout. We will
    discuss more on this later. For now, here are the wireframes for the mobile view.
    First, the top part of the page (under the marquee, which will remain consistent):'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看这个页面的一些线框图。在这些示例中，我将假设这是一个个人作品集网站。但如果你有一个小团队，你可能会想重新考虑这个布局。我们稍后会讨论更多。现在，这是移动视图的线框图。首先是页面的顶部部分（在标语牌下面，这将保持一致）：
- en: '![Making the wireframes](img/6463_05_21.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![制作线框图](img/6463_05_21.jpg)'
- en: 'Notice that we have three services listed and stacked. We''re going to use
    the set of included icons to make big, eye-catching icons to the left of each
    service/skill described. Below the icon we will put the obligatory headshot and
    bio:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们列出并堆叠了三项服务。我们将使用一组包含的图标来制作大的、引人注目的图标，放在每个服务/技能描述的左侧。在图标下面，我们将放上必不可少的头像和简介：
- en: '![Making the wireframes](img/6463_05_22.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![制作线框图](img/6463_05_22.jpg)'
- en: 'Now here is how we will use the same content on a wider desktop layout:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将如何在更宽的桌面布局上使用相同的内容：
- en: '![Making the wireframes](img/6463_05_23.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![制作线框图](img/6463_05_23.jpg)'
- en: We'll use the wider layout of this page to put some of the content on the sidebar.
    This has the benefit of letting users see more content without scrolling.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用此页面的更宽布局将一些内容放在侧边栏上。这样做的好处是让用户在不滚动的情况下看到更多内容。
- en: The markup
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标记
- en: Let's start with the markup for this page. This page will have a special technical
    challenge, since neither does 320 and Up ship a way to make this kind of sidebar,
    nor was it really meant to. Other frameworks such as Bootstrap and Foundation
    have that facility. We will roll our own solution though. No need to introduce
    an entire framework to solve this single problem. With that said, I will be taking
    a cue from how these frameworks do this.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从这个页面的标记开始。这个页面将面临一个特殊的技术挑战，因为320 and Up没有提供制作这种侧边栏的方法，也不是真的打算这样做。其他框架如Bootstrap和Foundation有这样的功能。不过我们将自己解决这个问题。没有必要引入整个框架来解决这个单一问题。话虽如此，我将从这些框架如何解决这个问题中汲取灵感。
- en: To work this problem through, let's start off with some pretty basic markup
    for the mobile layout. First, let's add another, our last, marquee (don't shed
    a tear, though; you can make as many as you want in the future).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，让我们从移动布局的一些相当基本的标记开始。首先，让我们添加另一个标语牌（不过不要流泪；在将来你可以做任意多个）。
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Hopefully this all makes sense by now. Now let''s add our first bit of markup
    for the main area, the one that describes all the stuff we have to offer. We know
    we need the following things:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 希望到目前为止这一切都是有意义的。现在让我们为主要区域添加我们的第一部分标记，描述我们所提供的所有内容。我们知道我们需要以下内容：
- en: A wrapper for all the content, so we can pad and set width on the content of
    the page as necessary for various screen widths
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个包装器，用于所有内容，这样我们可以根据不同的屏幕宽度对页面内容进行填充和设置宽度
- en: A wrapper for the main content and the sidebar content, for similar reasons
    as the previous point
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要内容和侧边栏内容的包装器，出于与前一点相似的原因
- en: Various containers and markup for all the actual content
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种容器和所有实际内容的标记
- en: 'So here it goes. Let''s put this markup below the marquee:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们开始吧。让我们在标语牌下面放上这个标记：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We've re-used the `.full` class that applies the same styles on all our main
    content, which is mainly padding and margin. I've created a lot of new classes
    too. Right now there are no styles for them but let me explain my thinking before
    I go ahead and style them.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们重新使用了`.full`类，该类在所有主要内容上应用相同的样式，主要是填充和边距。我也创建了许多新类。现在它们还没有样式，但在我继续并为它们添加样式之前，让我解释一下我的想法。
- en: The next container after `.full` is the `.main-content` container. It will not
    do much in the mobile view, but as the layout gets wider we will assign a size
    to it and float it so there is room to float the `.sidebar-container` to the right
    (spoiler alert).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在`.full`之后的下一个容器是`.main-content`容器。在移动视图中它不会做太多事情，但随着布局变得更宽，我们将为其分配一个大小并浮动它，以便有空间将`.sidebar-container`浮动到右侧（剧透）。
- en: Within the `.main-content` container, we are going to have three chunks of content
    consisting of an icon, a heading, and some text. I gave each chunk the class `.content-item`.
    Inside the class, there is a `div` tag that I will change into a circle (well,
    for modern browsers anyway) that will frame icons. That is followed by the `content-body`
    `div` class, which will hold a heading and a short blurb about my special prowess
    that I want to describe. Rinse and repeat the `content-items` class as much as
    you like, but I like sets of three. Three is a magic number after all.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在`.main-content`容器内，我们将有三个内容块，包括一个图标、一个标题和一些文字。我给每个块都加上了`.content-item`类。在这个类内部，有一个`div`标签，我将把它改成一个圆圈（至少对于现代浏览器来说），用来装饰图标。接着是`content-body`
    `div`类，它将包含一个标题和我想描述的特殊能力的简短介绍。根据需要重复使用`content-items`类，但我喜欢三个一组。三毕竟是一个神奇的数字。
- en: Notice that I use the `icon` classes that are in the framework. They utilize
    the `font-awesome` font. They are super easy to implement and are super flexible
    as you will see when we start to style them. All you need to do to get them to
    appear in your markup is add the appropriate class to your markup. I add these
    classes to the `<i>` tag, which is something of a convention, but you can just
    easily use them on a `<span>` tag, `<a>`, or whatever as long as the markup makes
    sense. You will notice that I also add the class `.big-icon` on each one. That
    is because I anticipate that I will need an additional style to make these big
    and add some other styling for larger layouts. Next, let's take advantage of the
    set of icon fonts that ship with 320 and Up.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我使用了框架中的`icon`类。它们使用`font-awesome`字体。它们非常容易实现，并且在我们开始对它们进行样式设置时，您将看到它们非常灵活。要使它们出现在您的标记中，您只需要向您的标记添加相应的类。我将这些类添加到`<i>`标记中，这是一种约定，但只要标记有意义，您也可以在`<span>`标记、`<a>`标记或其他标记上使用它们。您会注意到我还在每个图标上添加了`.big-icon`类。这是因为我预计我将需要一个额外的样式来使这些图标变大，并为更大的布局添加一些其他样式。接下来，让我们利用320和Up附带的图标字体集。
- en: Awesome icon fonts
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 令人敬畏的图标字体
- en: 'For future reference, take a look at the `_font-awesome.scss` (or similar)
    file and you will see a list of all the icons created by the styles to facilitate
    the use of the `font-awesome` icon fonts. These are just prerolled for us but
    if you need a new icon that has been added to `font-awesome`, you will need to
    add it to this list (or one of your own making). You will notice that the icon
    is actually specified with the `content` attribute. For example, the lemon icon
    CSS looks as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以后参考一下`_font-awesome.scss`（或类似的）文件，您会看到所有图标的列表，这些图标是通过样式创建的，以便使用`font-awesome`图标字体。这些对我们来说只是预先准备的，但如果您需要一个已添加到`font-awesome`的新图标，您需要将其添加到此列表中（或者自己创建一个列表）。您会注意到图标实际上是用`content`属性指定的。例如，柠檬图标的CSS如下所示：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This is because the icon is specified with the Unicode character `F094`. You
    can look this up at [http://fortawesome.github.io/Font-Awesome/icons/](http://fortawesome.github.io/Font-Awesome/icons/).
    Just click on each icon to get to know a little more about each one.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为图标是用Unicode字符`F094`指定的。您可以在[http://fortawesome.github.io/Font-Awesome/icons/](http://fortawesome.github.io/Font-Awesome/icons/)上查找。只需单击每个图标，了解一些关于每个图标的更多信息。
- en: 'While we''re here, let''s take a quick look at what else is going on to support
    these icon fonts. At the top of the `_font-awesome.scss` sheet, you will see that
    anything that has a class beginning with `icon-` gets some style by default. That
    is specified with this style:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里的时候，让我们快速看一下支持这些图标字体的其他内容。在`_font-awesome.scss`表的顶部，您会看到任何以`icon-`开头的类都会默认获得一些样式。这是用以下样式指定的：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The previous code targets anything beginning with or containing `icon-`. This
    is done with the regex `^` and `*`. Regex is the shorthand for regular expressions.
    Regular expressions are a utility for searching strings; they use various symbols
    to accomplish this task. Regex is a huge topic beyond the scope of this book but
    just know that, by using these symbols in CSS, the CSS engine searches selector
    strings in your markup. Not all the available regex symbols can be used in CSS,
    but the use of `^` and `*` can be quite powerful.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码针对任何以`icon-`开头或包含`icon-`的内容。这是通过正则表达式`^`和`*`完成的。正则表达式是正则表达式的缩写。正则表达式是用于搜索字符串的实用程序；它们使用各种符号来完成此任务。正则表达式是一个超出本书范围的巨大主题，但只需知道，通过在CSS中使用这些符号，CSS引擎会在您的标记中搜索选择器字符串。并非所有可用的正则表达式符号都可以在CSS中使用，但使用`^`和`*`可能非常强大。
- en: Keep reading and you will see that there are additional styles applied if you
    use these classes on the `<li>` or `<a>` elements. There are even special styles
    defined for putting elements inside buttons or the `<li>`tags. We won't be using
    these but please do experiment with them.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 继续阅读，您会发现如果在`<li>`或`<a>`元素上使用这些类，还会应用其他样式。甚至还为将元素放在按钮或`<li>`标签内定义了特殊样式。我们不会使用这些，但请尝试使用它们。
- en: 'If you go ahead and refresh your page, this won''t look too great; so let''s
    get on with styling this for the 320 and Up layout. The first thing I want to
    do is make the circles that will hold our icons. I want all these circles to be
    of the same size, so I am going to set a uniform size as well as a few other styles
    that I will explain in a moment:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您继续刷新页面，这看起来可能不太好；所以让我们开始为320和Up布局设置样式。我想要做的第一件事是制作将容纳我们图标的圆圈。我希望所有这些圆圈的大小都相同，所以我将设置一个统一的大小，以及我将在一会儿解释的其他一些样式：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: I actually arrived at these dimensions through a little trial and error but
    I won't bore you with that. The border radius is set to half of the height and
    width of the element. That is the recipe for making a circle. Obviously, someone
    using an old browser will get a square. If you're not okay with that, you can
    put some kind of `polyfill` or fallback in place. Notice that I used the mixin
    to make the vendor-specific border radius, but if you're using plain CSS you will
    need to type all of these.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我实际上是通过一些试错得出这些尺寸的，但我不会让您感到无聊。边框半径设置为元素高度和宽度的一半。这是制作圆圈的方法。显然，使用旧浏览器的人会得到一个正方形。如果您对此不满意，可以放置某种`polyfill`或回退。请注意，我使用mixin来制作特定于供应商的边框半径，但如果您使用纯CSS，您将需要键入所有这些。
- en: Lastly, I set the `position` to `relative` on these icons so I can absolutely
    position each icon within the circle. They all have different dimensions, so they
    will each get a unique position to accommodate that.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我将这些图标的`position`设置为`relative`，这样我就可以绝对定位每个图标在圆圈内。它们都有不同的尺寸，所以它们将各自获得一个独特的位置来适应这一点。
- en: 'Let''s move on to styling and positioning them. Put these styles below the
    `.circle` style:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续对它们进行样式和定位。将这些样式放在`.circle`样式下面：
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The previous code is the SCSS code. Here is what regular CSS looks like:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码是SCSS代码。这是常规CSS的样子：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `.big-icon` styles just make the icons bigger, white and with a little shadow
    that makes them look like they've been subtly embossed into the circle. Kind of
    a cool effect I think. I also set the `position` to `absolute` here for all the
    icons. I arrived at all the positions of the icons through a combination of math
    and eyeballing it.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`.big-icon`样式只是使图标变大，白色，并带有一点阴影，使它们看起来像是被轻微压印到圆圈中。我认为这是一种很酷的效果。我还在这里将`position`设置为`absolute`，以确定所有图标的位置。我通过数学和用眼睛看的方式得出了所有图标的位置。'
- en: Here's the math method. Looking at the icons in the developer tools in my browser
    I get the dimensions. Using the fire icon, for example, I see that it measures
    22 x 25 pixels. So to get the left positioning, I subtract the width of the icon
    from the width of the circle, that is, 56 – 22 = 34\. Divide that by 2 to get
    the left position because the left position is on the top-left of the icon, so
    we need the distance from the left edge of the icon to the center of the icon.
    This gives us a left position of 17 px. But then I eyeballed it and liked 18 px
    better, go figure. Rinse and repeat for the remaining icons.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是数学方法。在浏览器的开发者工具中查看图标的尺寸。以火焰图标为例，我看到它的尺寸为22 x 25像素。因此，要获得左侧定位，我从圆的宽度中减去图标的宽度，即56
    - 22 = 34。将其除以2以获得左侧位置，因为左侧位置在图标的左上角，所以我们需要从图标的左边缘到图标中心的距离。这给我们一个左侧位置为17像素。但后来我用眼睛看了看，觉得18像素更好，真是奇怪。对于剩下的图标也是如此。
- en: 'Now, we need to position the text to the right of each icon. Here''s how that
    will look:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要将文本定位在每个图标的右侧。看起来是这样的：
- en: '[PRE7]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This is pretty simple. The only thing that may seem weird is the `overflow:
    hidden` business. All that it does is make sure the text stays in a tidy little
    box, rather than flowing around the icon `div`. To learn more about this, you
    should consult Google, but you can refer a fabulous article at [http://alistapart.com/article/css-floats-101](http://alistapart.com/article/css-floats-101).'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '这很简单。唯一可能看起来奇怪的是`overflow: hidden`。它所做的就是确保文本保持在一个整洁的小框中，而不是围绕图标`div`流动。要了解更多信息，你可以咨询谷歌，但你可以参考[http://alistapart.com/article/css-floats-101](http://alistapart.com/article/css-floats-101)上的一篇精彩文章。'
- en: 'Go ahead and refresh the page and take a look. Looks pretty great, but the
    icon is too close to the text. Let''s fix that. Add the following code to your
    circle styles:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 继续刷新页面并查看。看起来非常棒，但图标离文本太近了。让我们来修复一下。将以下代码添加到你的圆形样式中：
- en: '[PRE8]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Ah! Now it looks good! Let''s move on to adding our picture and bio. Here is
    the markup we will need:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 啊！现在看起来很好！让我们继续添加我们的图片和简介。这是我们需要的标记：
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Notice that we are using the large placeholder image we used for the gallery
    page, but of course you need to use your own favorite glamor shot. Speaking of
    the gallery page, we will need to use some similar styles here to get the image
    and text to look right. Since we have re-used the `full` class on both sections,
    there is an appropriate amount of space between the bio content and the edge of
    the viewport. We just need to put a margin below the image to push that header
    down. Add this style:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们正在使用用于画廊页面的大占位图像，但当然你需要使用自己喜欢的时尚照片。说到画廊页面，我们需要在这里使用一些类似的样式来使图像和文本看起来正确。由于我们在两个部分都重复使用了`full`类，因此在生物内容和视口边缘之间有适当的空间。我们只需要在图像下方添加一个边距来将标题推下来。添加这个样式：
- en: '[PRE10]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Feel free to adjust the margin according to your tastes.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的喜好随意调整边距。
- en: 'Take a look at this layout at 320 px wide and everything is hunky-dory. Let''s
    get this to layout as two columns when the screen is 992 px wide or greater. Go
    ahead and resize your browser to 992 px (or just look at it on a tablet or something).
    It looks pretty weird. Luckily, all we should need to do is assign the appropriate
    percentage widths to these and float them. Try adding these styles:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在320像素宽度下查看这个布局，一切都很好。当屏幕宽度为992像素或更大时，让它布局为两列。继续调整浏览器大小到992像素（或者在平板电脑上查看）。看起来很奇怪。幸运的是，我们只需要为这些分配适当的百分比宽度并浮动它们。尝试添加这些样式：
- en: '[PRE11]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can use the classes `summary` and `bio` on each block of content now. Go
    ahead and refresh and you will notice that the footer is now trying to squeeze
    into the tiny area between the columns. Easily fixed. Just add this style to your
    footer styles in the `_site.scss` file:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以在每个内容块上使用`summary`和`bio`类。继续刷新，你会注意到页脚现在试图挤进两列之间的小区域。很容易解决。只需在`_site.scss`文件中的页脚样式中添加这个样式：
- en: '[PRE12]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Fixed!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 修复了！
- en: Ok, that is all!
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，就这些了！
- en: Summary
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned to use icon fonts and style them so they look every
    bit as good as bitmap images; however, they are far more flexible since we can
    resize, color, and add simple effects such as shadows via CSS. We also whipped
    up a custom layout very quickly to accommodate our content needs. Awesome! Now
    go out there and use what we've done to build great stuff for yourself and your
    clients!
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学会了使用图标字体并对其进行样式设置，使其看起来和位图图像一样出色；然而，它们更加灵活，因为我们可以通过CSS调整大小、颜色，并添加简单的阴影等效果。我们还迅速制作了一个自定义布局来满足我们的内容需求。太棒了！现在去利用我们所做的事情为自己和客户构建出色的东西吧！
