- en: Appendix A. Anatomy of HTML5 Boilerplate
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录A. HTML5 Boilerplate的解剖
- en: This appendix is to help those who have no experience with HTML5 Boilerplate.
    If you know all about it, there is no need to read any further (thus the reason
    this is an appendix). But if you are new to HTML5 Boilerplate, this appendix will
    help you get started with 320 and Up with a deeper knowledge of what is going
    on. In this appendix, we will look at the structure and choices of HTML5 Boilerplate
    and understand the implications of its choices to the further web pages you may
    develop.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这个附录是为了帮助那些对HTML5 Boilerplate没有经验的人。如果你对它很了解，就没有必要再读下去了（这就是为什么这是一个附录的原因）。但如果你对HTML5
    Boilerplate还很陌生，这个附录将帮助你更深入地了解320和Up的情况。在这个附录中，我们将看一下HTML5 Boilerplate的结构和选择，并了解它的选择对你可能开发的进一步网页的影响。
- en: What is HTML5 Boilerplate?
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML5 Boilerplate是什么？
- en: First of all, you can find the home page for the project at [http://html5boilerplate.com/](http://html5boilerplate.com/).
    The site offers a quick overview of HTML5, but does not provide much context to
    why HTML5 Boilerplate is useful and why it was created at all.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你可以在[http://html5boilerplate.com/](http://html5boilerplate.com/)找到该项目的主页。该网站提供了HTML5的快速概述，但并没有提供HTML5
    Boilerplate有何用处以及为什么要创建它的背景。
- en: I won't go extensively into the history of HTML5 Boilerplate. This book is mainly
    focused on how to do stuff, not how stuff happened, so I will try to explain just
    enough of the background to let you know how it works, with the hope that your
    future use of HTML5 Boilerplate with 320 and Up (as well an any other framework)
    will be with enough understanding to help you solve future problems.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会详细介绍HTML5 Boilerplate的历史。本书主要关注如何做事情，而不是事情发生的原因，所以我会尽量解释足够的背景知识，让你知道它是如何工作的，希望你未来在使用HTML5
    Boilerplate和320以及其他框架时，能够有足够的理解来帮助你解决未来的问题。
- en: In essence, HTML5 Boilerplate was a project started with the intention of creating
    an HTML page that had all the components one would need to make an effective,
    cross-browser web page; it also utilizes all the goodness available in modern
    browsers that support the modern HTML5 specification.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 实质上，HTML5 Boilerplate是一个旨在创建一个具有所有组件的HTML页面的项目，这些组件是制作有效的跨浏览器网页所需的；它还利用了支持现代HTML5规范的现代浏览器中可用的所有优点。
- en: If you want to know more about what I mean by HTML5 specification or what the
    difference is between a modern browser and an old browser, then I encourage you
    to do some searching and reading. Any links I leave for you are at the risk of
    being out-of-date soon. But, briefly, HTML5 is a specification for what browsers
    should do. It is an effort to make all browsers support the same or similar features
    so as to make it possible for web developers to make a web page and have it behave
    the same in all the browsers. This is not a reality yet, nor do I think it will
    ever be; to be fair, though, things are a lot better than they used to be.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解我所说的HTML5规范是什么，或者现代浏览器和旧浏览器之间的区别是什么，那么我鼓励你进行一些搜索和阅读。我留给你的任何链接都有可能很快就过时了。但简而言之，HTML5是一个规定浏览器应该做什么的规范。它是一种努力，使所有浏览器支持相同或类似的功能，以便让网页开发者能够制作一个网页，并使其在所有浏览器中表现相同。这还不是现实，我认为它永远不会成为现实；公平地说，现在的情况比以前好多了。
- en: So, currently, as a web developer, in most situations, you will most likely
    have to support, at a minimum, **Internet Explorer** (**IE**) Version 8 and up,
    Firefox 4 and up, and the current release of Chrome (Version matters less with
    Chrome, since it has always encouraged users to update). Note the challenge here.
    The current versions of all the browsers, except Chrome, are higher than those
    you must support. Also, chances are, if you are making a site at the time of writing,
    you may actually need to support older versions of these browsers as well as a
    few more browsers, depending on your user base. And those are just the desktop
    versions; forget about all the mobile versions of those browsers as well as the
    Android flavor of WebKit, which has a bazillion versions out there.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，作为一个网页开发者，在大多数情况下，你很可能至少需要支持**IE** 8及以上版本，Firefox 4及以上版本，以及当前版本的Chrome（Chrome的版本不那么重要，因为它一直鼓励用户更新）。请注意这里的挑战。所有浏览器的当前版本，除了Chrome，都高于你必须支持的版本。此外，如果你在写作时正在制作一个网站，很可能你实际上需要支持这些浏览器的旧版本以及一些其他浏览器，具体取决于你的用户群。而且这些只是桌面版本；还有所有移动版本的浏览器以及Android版本的WebKit，那里有无数个版本。
- en: Knowing this, you can see why I and so many other frontend engineers evangelize
    for simplicity in frontend design. A simple design has a high likelihood of giving
    a good experience to the end user as well as something approaching consistency.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 了解这一点，你就能明白为什么我和其他许多前端工程师都在倡导前端设计的简单性。简单的设计很有可能给最终用户带来良好的体验，以及接近一致性的东西。
- en: But, you don't get that experience and consistency without some effort. HTML5
    Boilerplate goes a long way towards making that effort on your behalf. Let's walk
    through it for a few pages to better understand how it works. As you read along,
    I suggest that you pull up the `index.html` file from the `before` directory in
    [Chapter 1](ch01.html "Chapter 1. Mobile First – How and Why?"), *Mobile First
    – How and Why*. This is the boilerplate version before we added anything to it.
    Let's start at the top!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果没有一些努力，你就不会得到那种经验和一致性。HTML5样板对于代表你的努力有很大帮助。让我们在接下来的几页中详细了解它是如何工作的。当你阅读时，我建议你从[第一章](ch01.html
    "第一章。移动优先-如何以及为什么？")的`before`目录中打开`index.html`文件。这是我们还没有添加任何内容的样板版本。让我们从顶部开始！
- en: Conditional comments
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 条件注释
- en: 'The code for conditional comment looks as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 条件注释的代码如下：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This code is nested inside comments but has some conditional logic. Only Internet
    Explorer has the super powers to use this logic. The previous example only renders
    the HTML code inside the comments if the browser executing it is a version less
    than IE7, thus the syntax `[if lt IE 7]`. You can infer that different HTML tags
    are rendered based on the version of IE. You can use the classes in this HTML
    tag to make special styles that are typically necessary to deal with the shortcomings
    of these older browsers.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码嵌套在注释中，但有一些条件逻辑。只有Internet Explorer才有超能力使用这个逻辑。前面的例子只有在执行它的浏览器版本小于IE7时才会渲染注释内的HTML代码，因此语法`[if
    lt IE 7]`。你可以推断出不同的HTML标记是根据IE的版本渲染的。你可以使用这个HTML标记中的类来创建特殊的样式，这些样式通常是处理这些旧浏览器的缺点所必需的。
- en: 'If you jump ahead a bit, you will see the following conditional comment:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你再往前跳一点，你会看到以下条件注释：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This includes a JavaScript library included in the 320 and Up framework that
    allows CSS3 selectors to work in browsers older than IE9.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这包括在320和Up框架中包含的JavaScript库，允许CSS3选择器在IE9之前的浏览器中工作。
- en: A whole lot of mobile meta tags
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 大量的移动元标记
- en: 'So next, within the head tags, you will see some meta tags that are used by
    vendors to perform a magic trick. The first one to take note of is as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在头部标签内，你会看到一些供供应商执行魔术的元标记。首先要注意的是：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can visit the link provided in the comment if you want further details on
    meta tags. I encourage you to do so.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想进一步了解元标记，可以访问注释中提供的链接。我鼓励你这样做。
- en: To summarize, these meta tags help mobile browsers know that they can render
    a page that isn't only intended for desktops. Get used to this as there is a lot
    more of this kind of thing coming ahead.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，这些元标记帮助移动浏览器知道他们可以渲染不仅仅是为桌面而设计的页面。习惯这一点，因为还有更多这样的东西即将到来。
- en: After this, there is a bunch of comments that allow you to create icons for
    the Apple devices. These icons are cool if a user wants to create a shortcut for
    your website. It creates an icon for your website just like an app would have.
    If you want to take advantage of this, you need icons of all the dimensions, and
    you need to either place them in the path already specified or edit the path so
    it loads your icon files.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在此之后，有一堆注释，让你为苹果设备创建图标。如果用户想为你的网站创建快捷方式，这些图标很酷。它会为你的网站创建一个图标，就像一个应用程序一样。如果你想利用这一点，你需要所有尺寸的图标，并且需要将它们放在已经指定的路径中，或者编辑路径以便加载你的图标文件。
- en: There are still more Apple-specific meta tags. For many, as you can see, you
    just need to fill in the blank field (for example, `apple-mobile-web-app-title`).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 还有更多苹果特定的元标记。正如你所看到的，对于许多元标记，你只需要填写空白字段（例如，`apple-mobile-web-app-title`）。
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The previous line of code makes sure that the page doesn''t get zoomed in as
    long as you have the `content` field in the next code line set to `yes`:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 前一行代码确保页面不会被放大，只要你在下一行代码的`content`字段设置为`yes`：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the next section, the one labeled `startup images` gives your web page more
    app-like functionalities. When users launch your site from their home screen,
    these images will fill their screen until the page loads. Again, you will need
    to provide images of all the dimensions listed and put them in the correct path.
    However, you should know that this particular block of markup can potentially
    be removed and applied with cleaner code. You will learn about this in a moment
    when we go over the `helper.js` file together.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，标记为`启动图像`的部分为您的网页提供了更多类似应用的功能。当用户从主屏幕启动您的网站时，这些图像将填满他们的屏幕，直到页面加载。同样，您需要提供所有列出的尺寸的图像，并将它们放在正确的路径中。然而，你应该知道这个特定的标记块可能会被移除，并用更清晰的代码应用。当我们一起查看`helper.js`文件时，你会在一会儿了解到这一点。
- en: 'Mercifully, the next set of tags for Windows 8 adds almost no new work! This
    tag can and should share the icon you created for Apple, and will appear in those
    nifty Windows 8 tiles. You can set the color of your tile in the following tag:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 令人欣慰的是，Windows 8的下一个标签集几乎没有新增的工作！这个标签可以并且应该与你为苹果创建的图标共享，并将出现在那些漂亮的Windows 8磁贴中。你可以在以下标签中设置你的磁贴颜色：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Please, please, I beg you. Set it to hot pink.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 拜托，拜托，我请求你。把它设置成热粉色。
- en: Whew! We're done with the head!
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 呼！我们已经完成了头部！
- en: Now, you can skip to the bottom of the file.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以跳到文件的底部。
- en: Including the scripts you'll need
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 包括你需要的脚本
- en: 'The rest isn''t terribly surprising. We include the following scripts below
    the footer, and in order:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 其余的并不是太令人惊讶。我们在页脚下面包括以下脚本，并按顺序：
- en: jQuery (from a CDN first, then locally as a fallback)
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: jQuery（首先从CDN加载，然后作为备用本地加载）
- en: A plugins file
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个插件文件
- en: A script file
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个脚本文件
- en: A helper file
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个辅助文件
- en: Google Analytics
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Analytics
- en: There is no problem with making your site this way but I often combine plugins,
    scripts, and helpers into one file.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式制作您的网站没有问题，但我经常将插件、脚本和辅助程序合并到一个文件中。
- en: The `helper.js` file should come before the script file; otherwise you can't
    call the functions in it. If they are correct, just rearrange them and you'll
    be good to go.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`helper.js`文件应该放在脚本文件之前；否则你无法调用其中的函数。如果它们是正确的，只需重新排列它们，你就可以继续了。'
- en: The last thing is I want to give you an overview of the helper file, since that
    is a part of the HTML5 Boilerplate.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一件事是我想给你一个辅助文件的概述，因为这是HTML5样板的一部分。
- en: The helper.js file
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: helper.js文件
- en: The code in this file is really helpful. The comments in it explain what each
    function does for the most part. Nonetheless, I'd like to highlight a few things
    and make sure you know how to implement them.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件中的代码真的很有帮助。其中的注释大部分解释了每个函数的作用。尽管如此，我想强调一些事情，并确保你知道如何实现它们。
- en: 'Basically, to call any function in here, just find one in the file you need
    (or just want to try) and put `();` after it. That is JavaScript''s way of executing
    a function. For example, the first usable function defined in this file (you can
    tell that they are functions because they have the word `function` in them) is
    as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，要调用这里的任何函数，只需在你需要的文件中找到一个函数（或者只是想尝试）并在其后加上`();`。这是JavaScript执行函数的方式。例如，这个文件中定义的第一个可用函数（你可以看出它们是函数，因为它们中有单词`function`）如下：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you want to use this function, just add this to your script file:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想使用这个函数，只需将以下内容添加到你的脚本文件中：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Et voilà! You just called this function. Now let's go through a quick rundown
    of what the most useful functions in here do. Keep in mind that many of the items
    in this script are used by the functions themselves; so, if you try to use them,
    they might not do anything, especially the ones that don't have the word function
    in them.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 看，你刚刚调用了这个函数。现在让我们快速浏览一下这里最有用的函数都做些什么。请记住，脚本中的许多项目是函数本身使用的；所以，如果你尝试使用它们，它们可能不会做任何事情，特别是那些没有单词“function”的项目。
- en: '`MBP.scaleFix`: This function stops an annoying bug that happens in iOS. This
    bug manifests itself when a user rotates the phone from portrait to landscape.
    In landscape, your lovely web page will end up running off the edge of the screen.
    But, no worries; this script fixes it. So you should use it.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MBP.scaleFix`：这个函数可以解决iOS中的一个恼人的bug。当用户将手机从竖屏旋转到横屏时，这个bug就会出现。在横屏模式下，你可爱的网页将会跑到屏幕边缘之外。但是，别担心；这个脚本可以修复它。所以你应该使用它。'
- en: '`MBP.hideUrlBar` and `MBP.hideUrlBarOnLoad`: These two functions are callable
    but you are more likely to use `MBP.hideUrlBarOnLoad` to do pretty much what it
    says. This function is useful on mobiles because, once the page loads, it scrolls
    the URL bar up out of the view, thus saving precious screen real-estate. This
    is super useful for users who use Safari on an iPhone. I suppose you could call
    `MBP.hideUrlBar` but I have a hard time imagining a scenario where you want to
    directly call it without freaking out users. `MBP.hideUrlBarOnLoad` calls `MBP.hideUrlBar`.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MBP.hideUrlBar`和`MBP.hideUrlBarOnLoad`：这两个函数是可调用的，但你更有可能使用`MBP.hideUrlBarOnLoad`来做几乎和它名字一样的事情。这个函数在移动设备上非常有用，因为一旦页面加载完成，它会将URL栏向上滚动，从而节省宝贵的屏幕空间。这对使用iPhone上的Safari的用户非常有用。我想你可以调用`MBP.hideUrlBar`，但我很难想象一个情景，在那种情况下你想直接调用它而不让用户感到恐慌。`MBP.hideUrlBarOnLoad`调用`MBP.hideUrlBar`。'
- en: '`MBP.fastButton`: This is a function to get around a feature of WebKit browsers
    that introduces a slight delay when users touch a link or button. Use this with
    caution.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MBP.fastButton`：这是一个用于解决WebKit浏览器的一个特性的函数，当用户触摸链接或按钮时会引入轻微的延迟。请谨慎使用。'
- en: '`MBP.splash`: This script can replace the `Startup images` block of commented-out
    code that we were discussing previously. It is provided in the head of the boilerplate
    that we were previously examining. If you''ve forgotten about it already, go back
    and read it over again. I really like the cleaner page when using this JavaScript
    to replace all that markup in the page, especially considering that only a few
    users will ever see this splash screen. In fact, if you go grab the most current
    version of HTML5 Mobile Boilerplate, instead of the index page provided in the
    current (as of this writing) version of 320 and Up, it won''t have that block
    of markup with all the splash images.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MBP.splash`：这个脚本可以替换我们之前讨论过的`启动图像`的注释代码块。它是在我们之前检查的样板中提供的。如果你已经忘记了，回去再读一遍。我真的很喜欢使用这个JavaScript来替换页面中所有那些标记，特别是考虑到只有少数用户会看到这个启动画面。实际上，如果你去获取最新版本的HTML5移动样板，而不是当前（截至本文撰写时）320和Up版本中提供的索引页面，它将不会有那个带有所有启动图像的标记块。'
- en: '`MBP.autogrow`: This feature is great if you have forms on your responsive
    site. It makes `<textarea>` grow as a user fills it.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MBP.autogrow`：如果你的响应式网站上有表单，这个功能非常棒。它会在用户填写时使`<textarea>`自动增长。'
- en: '`MBP.enableActive`: This is another awesome enhancement that enables the active
    pseudo class in Mobile Safari and is nice for user feedback on those buttons that
    tend to lag a bit (unless you are brave enough to use `FastButton`).'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MBP.enableActive`：这是另一个很棒的增强功能，可以在移动Safari中启用active伪类，对于那些按钮的用户反馈很好，因为它们往往会有点延迟（除非你足够勇敢使用`FastButton`）。'
- en: '`MBP.preventZoom`: This does what it says. The default behavior of Mobile Safari
    is to zoom in when an on-focus event happens. This is really inconvenient for
    users as they have to then manually zoom out after they are done inputting text
    to an input field.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MBP.preventZoom`：这个函数做了它说的。Mobile Safari的默认行为是在发生焦点事件时放大。这对用户来说真的很不方便，因为他们必须在输入文本到输入字段后手动缩小。'
- en: Now you know enough to go experiment with these in your own apps. For the most
    part, you will want to fire these functions when the page is loaded and ready,
    so only use those that you need in order to prevent bogging down small devices
    with loads of JavaScript.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解足够多的内容，可以在自己的应用程序中进行实验了。在大多数情况下，你会希望在页面加载和准备就绪时触发这些函数，所以只使用你需要的函数，以防止在小设备上加载大量JavaScript。
