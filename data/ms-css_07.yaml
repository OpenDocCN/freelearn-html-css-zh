- en: Web Fonts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络字体
- en: For a long time, we were stuck with a few basic fonts, such as Times New Roman,
    Georgia, and Arial. If you ever wanted to deviate farther than that, you ran the
    risk of the font not showing up when someone viewed your site because they probably
    wouldn't have had that font installed on their computer. During this period, whenever
    we wanted to use a fancy font, we were required to save it as an image, which
    used to pose many problems. Luckily for us, now web fonts have officially emerged,
    which gives us the ability to use a multitude of great fonts that will work on
    all computers. In this chapter, you're going to learn about web fonts. First you'll
    learn about the basic syntax of the `@font-face` rule, then we'll go over how
    `@font-face` can be a little tricky, followed by getting into services that provide
    fonts and deliver them to your website, such as Google Web Fonts and Typekit.
    We'll finish with icon fonts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 很长一段时间，我们只能使用一些基本字体，比如Times New Roman、Georgia和Arial。如果你想要更远的偏离，你就会面临字体在别人查看你的网站时不显示的风险，因为他们可能没有安装那个字体。在这段时间里，每当我们想使用一个花哨的字体时，我们都必须将它保存为一个图片，这曾经带来了许多问题。幸运的是，现在网络字体正式出现了，这使我们能够在所有计算机上使用大量出色的字体。在本章中，您将学习有关网络字体的知识。首先，您将学习`@font-face`规则的基本语法，然后我们将讨论`@font-face`可能有点棘手，接着我们将介绍提供字体并将其传递到您的网站的服务，比如Google
    Web Fonts和Typekit。最后我们将介绍图标字体。
- en: The @font-face property
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '@font-face属性'
- en: Let's start this chapter by learning how to use the `@font-face` property to
    add a web font to our site. First, we'll add an OTF file to a folder on our site,
    then we'll define a new font in our CSS, and finally, we'll apply that CSS to
    the elements on our web page.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从学习如何使用`@font-face`属性向网站添加网络字体开始这一章。首先，我们将在网站的一个文件夹中添加一个OTF文件，然后我们将在我们的CSS中定义一个新字体，最后，我们将将该CSS应用到我们网页上的元素。
- en: Adding font files directly to the site
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 直接将字体文件添加到网站
- en: 'In our project files for this section, we have a new folder called `fonts`.
    Inside this folder, there''s an OTF file called `LeagueGothic-Regular`:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节的项目文件中，我们有一个名为`fonts`的新文件夹。在这个文件夹里，有一个名为`LeagueGothic-Regular`的OTF文件：
- en: '![](img/00289.jpeg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00289.jpeg)'
- en: So now this font lives in our site's folder, and the end user visiting our website
    will download this font onto their computer, just like they downloaded the HTML,
    CSS file, and images. But first, we have to tell it to do that and look for it
    in our CSS.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这个字体就存在于我们网站的文件夹中，访问我们网站的最终用户将下载这个字体到他们的计算机上，就像他们下载HTML、CSS文件和图片一样。但首先，我们必须告诉它这样做，并在我们的CSS中查找它。
- en: Defining and applying new fonts in our CSS
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在我们的CSS中定义和应用新字体
- en: 'In the CSS, right underneath our reset, let''s add a new section called fonts.
    Add the `@font-face`; and this will allow us to declare a new font:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS中，就在我们的重置下面，让我们添加一个名为字体的新部分。添加`@font-face`；这将允许我们声明一个新字体：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: I'm going to declare the font name first, which can be anything. So even if
    the font is called `League Gothic-Regular`, you can name it `Bananas Serif` if
    you want. Let's call it `League Gothic` because that makes the most sense.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我将首先声明字体名称，可以是任何东西。所以即使字体叫`League Gothic-Regular`，你也可以把它命名为`Bananas Serif`。让我们称之为`League
    Gothic`，因为这是最有意义的。
- en: 'I''ve put it in single quotes for two reasons. One, it''s a web font, and two,
    it has more than one word, which should always be quoted, just like you would
    quote `''Times New Roman''`. Next, we''re going to declare where this font exists
    using the `src` property:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我用单引号括起来有两个原因。一是它是一个网络字体，二是它有多个单词，应该总是用引号括起来，就像你会引用`'Times New Roman'`一样。接下来，我们将声明这个字体存在的位置，使用`src`属性：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We want to make sure we spell that exactly right to match the name of the OTF
    file. Note that I used `../`. This is an instruction to go out of the `CSS` folder
    and then go into the `fonts` folder and look for `LeagueGothic-Regular.otf`. Here
    is our projects folder structure:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们要确保拼写与OTF文件的名称完全匹配。请注意我使用了`../`。这是一条指令，要跳出`CSS`文件夹，然后进入`fonts`文件夹，查找`LeagueGothic-Regular.otf`。这是我们项目的文件夹结构：
- en: '![](img/00290.jpeg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00290.jpeg)'
- en: 'So now we can add this font to any rule set using the `font-family` property
    that we''re used to. We can specify fallbacks as well, like we normally do, in
    case the fonts don''t get downloaded. In the "Global" section of the style sheet,
    there is a rule set for the `h1` and another for the `h2`:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用我们习惯的`font-family`属性将此字体添加到任何规则集中。我们也可以像通常一样指定回退，以防字体未被下载。在样式表的“全局”部分，有一个`h1`的规则集和另一个`h2`的规则集：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Beneath the `h2` rule set, we'll add another, targeting `h1` tags and `h2` tags
    adding our new web font.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在`h2`规则集下面，我们将添加另一个，针对`h1`标签和`h2`标签添加我们的新网络字体。
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Following is the output of preceding code:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前面代码的输出：
- en: '![](img/00291.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00291.jpeg)'
- en: 'The following is what our fonts used to look like:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们的字体以前是什么样子的：
- en: '![](img/00292.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00292.jpeg)'
- en: 'When we refresh, BAM! The very stylish web font is added to our website:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们刷新时，哇！非常时尚的网络字体被添加到我们的网站上：
- en: '![](img/00293.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00293.jpeg)'
- en: We have successfully added a web font to our website, but what we did really
    isn't going to work in all browsers unfortunately. Since typography may be the
    single most important thing on a web page, we've got to find a better solution.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功地将网络字体添加到我们的网站，但不幸的是，我们所做的实际上并不能在所有浏览器中工作。由于排版可能是网页上最重要的事情，我们必须找到一个更好的解决方案。
- en: '@font-face: a little tricky business'
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '@font-face：有点棘手的事情'
- en: On the surface, web fonts are pretty easy, but in reality, they get complicated
    when we want them to work in all modern browsers. Some browsers use OTF, others
    use WOFF, and some use EOT, RTF, and SVG. Let's go over the full setup for making
    a web font work using the `@font-face` property.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 表面上，网络字体很容易，但实际上，当我们希望它们在所有现代浏览器中工作时，它们变得复杂起来。一些浏览器使用OTF，其他使用WOFF，还有一些使用EOT、RTF和SVG。让我们来看看使用`@font-face`属性使网络字体工作的完整设置。
- en: Making it work in all browsers
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使其在所有浏览器中工作
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Not only is this seven different `url` looking for fonts, it''s also five different
    font files: `eot`, `woff2`, `woff`, `ttf`, and `svg`! Each font file format supports
    different browser versions as the comments in the preceding code sample explains.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅是寻找字体的七个不同的`url`，还有五种不同的字体文件：`eot`、`woff2`、`woff`、`ttf`和`svg`！正如前面的代码示例中的注释所解释的那样，每种字体文件格式都支持不同的浏览器版本。
- en: 'According to the same *CSS Tricks* article, just the `woff` and `woff2` file
    formats will give you pretty decent browser support (Chrome 5+, Safari 5.1+, Firefox
    3.6+, IE9+, Edge, Android 4.4+, and iOS 5.1+):'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 根据同一篇*CSS Tricks*文章，只有`woff`和`woff2`文件格式将为您提供相当不错的浏览器支持（Chrome 5+，Safari 5.1+，Firefox
    3.6+，IE9+，Edge，Android 4.4+和iOS 5.1+）：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: But this still means that you'll need to obtain and host both file formats,
    which is certainly not as challenging as five file formats, but not exactly a
    piece of cake either.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 但这仍意味着你需要获取和托管两种文件格式，这当然不像五种文件格式那么具有挑战性，但也不是一件轻而易举的事情。
- en: Web fonts are a little more involved than we would hope for. Most of the time,
    fonts are provided through a service, which is what we are about to see in the
    next two sections. Google Web Fonts, Typekit, and other services make web fonts
    even easier and offer high quality fonts in many different weights and styles.
    In the next section, we'll use a font from Google Fonts.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 网络字体比我们希望的要复杂一些。大多数情况下，字体是通过服务提供的，这正是我们将在接下来的两个部分中看到的。Google Web字体、Typekit和其他服务使网络字体变得更加容易，并提供多种不同粗细和样式的高质量字体。在下一节中，我们将使用来自Google字体的字体。
- en: Google Web Fonts
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Google Web字体
- en: Hosting your own web fonts and using proper CSS to support all browsers is slightly
    challenging. There are much easier ways to go about this. I really like Google
    Fonts; they are very easy to use and 100 percent free. The quality of the fonts
    is very good as well. In this section, we'll replace our hosted fonts with Google
    Web Fonts. The first step is to go to Google Fonts and select the two fonts we'll
    be using. Add a link to the CSS file in the heading of both HTML documents. Then
    finally, add the font name to our CSS.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 托管自己的网络字体并使用适当的CSS来支持所有浏览器稍微有些挑战。有更简单的方法来解决这个问题。我真的很喜欢Google字体；它们非常容易使用，而且100%免费。字体的质量也非常好。在这一部分，我们将用Google
    Web字体替换我们托管的字体。第一步是去Google字体并选择我们将使用的两种字体。在两个HTML文档的标题中添加CSS文件的链接。最后，在我们的CSS中添加字体名称。
- en: Finding Google Fonts
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找Google字体
- en: 'Go to [https://fonts.google.com/](https://fonts.google.com/) and search for
    our headline font: `Maven`. What''s cool is that we can type in some text, say,
    our site title, to see how specific words will look in this font. Most font services
    output something like this:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 前往[https://fonts.google.com/](https://fonts.google.com/)，搜索我们的标题字体：`Maven`。很酷的是，我们可以输入一些文本，比如说我们的网站标题，来看看这种字体中特定单词的样子。大多数字体服务都会输出类似于这样的东西：
- en: '![](img/00294.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00294.jpeg)'
- en: 'So we can just type Old Chompy and get an idea of what this font is going to
    look like on our `h1`. We can even bump up the font size too. Let''s search for
    and use **Maven Pro**; and do that by clicking the red plus icon. At the bottom
    of the screen, we should have one font family selected:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们可以只输入Old Chompy并了解一下这个字体在我们的`h1`上会是什么样子。我们甚至可以增加字体大小。让我们搜索并使用**Maven Pro**；通过点击红色加号图标来实现。在屏幕底部，我们应该选择了一个字体系列：
- en: '![](img/00295.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00295.jpeg)'
- en: 'The next font we''ll look for and grab **Droid Serif**. At the bottom it will
    show 2 families selected:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们将寻找并获取**Droid Serif**字体。底部将显示选择的2个字体系列：
- en: '![](img/00296.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00296.jpeg)'
- en: 'Let''s open that thingy at the bottom to get more information:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们打开底部的东西，获取更多信息：
- en: '![](img/00297.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00297.jpeg)'
- en: 'We''re almost done; we''re just kind of verifying and reviewing. In this panel
    that slid up from the bottom shows us a few interesting things:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们快要完成了；我们只是在验证和审查。从底部滑出的面板向我们展示了一些有趣的东西：
- en: Load time
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载时间
- en: How to embed the font files on our page
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在我们的页面上嵌入字体文件
- en: How to specify these fonts in our CSS
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在我们的CSS中指定这些字体
- en: 'I can add additional font-weights and font-styles by going to the *customize*
    tab:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以通过转到*自定义*选项卡来添加额外的字体粗细和字体样式：
- en: '![](img/00298.jpeg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00298.jpeg)'
- en: 'Here I can select additional font-weights and font-styles. If I select too
    many, the load time indicator dips to slow:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我可以选择额外的字体粗细和字体样式。如果我选择太多，加载时间指示器就会变慢：
- en: '![](img/00299.jpeg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00299.jpeg)'
- en: 'We''re only going to need normal, italic, and bold for Droid Serif, and normal
    and bold for Maven Pro, which is goes from slow to moderate:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要Droid Serif的普通、斜体和粗体，以及Maven Pro的普通和粗体，这从慢到中等：
- en: '![](img/00300.jpeg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00300.jpeg)'
- en: Right now, we're set to moderate load speed. I would really like to be in green,
    but at least we're not in red, so we'll go with that.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的加载速度设置为中等。我真的很想处于绿色状态，但至少我们没有处于红色状态，所以我们就接受这个吧。
- en: 'Let''s go back to the *Embed* tab and copy the link to these font files:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到*嵌入*选项卡，并复制这些字体文件的链接：
- en: '![](img/00301.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00301.jpeg)'
- en: 'This code is really just a style sheet. Let''s paste it in the `head` tag of
    `index.html` as well as `shark-movies.html`:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码实际上只是一个样式表。让我们把它粘贴到`index.html`和`shark-movies.html`的`head`标签中：
- en: '![](img/00302.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00302.jpeg)'
- en: 'We can see that this is the same `<link/>` we use to specify our styles:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到这是我们用来指定样式的相同`<link/>`：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In fact, it''s a stylesheet pointing to `fonts.googleapis.com` which is where
    it''s getting the fonts from. It actually shows the two font selections, both:
    Droid Serif and Maven Pro. The Google font is hosted on Google''s servers and
    we only are making one http request, which is nice for performance.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，这是一个指向`fonts.googleapis.com`的样式表，这就是它获取字体的地方。它实际上显示了两种字体选择，即：Droid Serif和Maven
    Pro。Google字体托管在Google的服务器上，我们只需要进行一次http请求，这对性能来说很好。
- en: Applying fonts in CSS
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CSS中应用字体
- en: 'Now we want to use these fonts in our CSS. As you can see, they show us exactly
    how to do that:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想在我们的CSS中使用这些字体。正如你所看到的，他们确切地告诉我们如何做到这一点：
- en: '![](img/00303.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00303.jpeg)'
- en: 'First, we replace `League Gothic` with `Maven Pro` in our `h1` and `h2`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在我们的`h1`和`h2`中用`Maven Pro`替换`League Gothic`：
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The next step is to add **Droid Serif**. I actually want to make sure all of
    our body copy, all paragraphs, anchors, and everything but `h1` tags and `h2`
    tags uses **Droid Serif**. We''ll be a little extra cautious, so we''ll add fallback
    fonts. We''re going to specify the fallback fonts as `Georgia`, then `Times New
    Roman`, and then the default `serif`, as shown here:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是添加**Droid Serif**。我实际上想确保我们的所有正文、所有段落、锚点和除了`h1`标签和`h2`标签之外的所有内容都使用**Droid
    Serif**。我们会多加一些小心，所以我们将添加备用字体。我们将指定备用字体为`Georgia`，然后是`Times New Roman`，然后是默认的`serif`，如下所示：
- en: '[PRE9]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Save these changes. Now when we go to our site, before refreshing it, we can
    see that we have a **League Gothic** applied to `h1` and `h2` and then our generic
    `Arial` for the paragraph:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 保存这些更改。现在当我们转到我们的网站时，在刷新之前，我们可以看到我们的`h1`和`h2`应用了**League Gothic**，然后我们的通用`Arial`用于段落：
- en: '![](img/00304.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00304.jpeg)'
- en: 'When we refresh, we get our new fonts: This is very good. We have **Maven Pro**
    for our `h1` and our `h2`, and we have **Droid Serif** for all of our other text:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 刷新后，我们得到了我们的新字体：这非常好。我们的`h1`和`h2`使用**Maven Pro**，我们的其他所有文本使用**Droid Serif**：
- en: '![](img/00305.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00305.jpeg)'
- en: In this section, you learned how to use Google's tremendous resource of free
    fonts. Using Google's Web Fonts is the easiest possible way on the planet to use
    a font, other than not specifying a font at all. In the next section, we will
    look at another great font resource—*Typekit*, a subscription font library by
    *Adobe* that provides a very large number of high-quality fonts.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您学会了如何使用Google提供的免费字体资源。使用Google的Web字体是地球上最简单的使用字体的方式，除了根本不指定字体。在下一节中，我们将看看另一个很棒的字体资源——Typekit，这是Adobe提供的订阅字体库，提供了大量高质量的字体。
- en: Adobe Typekit
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Adobe Typekit
- en: Adobe Typekit is one of the excellent subscription font services out there.
    Why use Typekit, though, when there are free fonts provided by Google? I don't
    want to say that you get what you pay for with Google, because I think that Google's
    fonts are very high quality and a very large selection, but I think that the selection
    and quality of fonts on Typekit is outstanding as well. However, the best feature,
    in my opinion, is that this font service is free to all *Adobe Creative Cloud*
    subscribers. So if you have subscribed to the Creative Cloud suite for tools such
    as Photoshop and Illustrator, you have access to every font on Typekit as well.
    If you're not a subscriber to the Adobe Creative Cloud, you can subscribe to just
    Typekit as well and that's totally worth it. Another cool thing is that you can
    very easily sync fonts to Photoshop and Illustrator and use them for designing
    in those tools, which isn't as easily accomplished with Google Web Fonts. In this
    section, we'll add another font to our website from Typekit.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Adobe Typekit是出色的订阅字体服务之一。但是，为什么要使用Typekit，当Google提供免费字体时呢？我不想说您得到了Google的报酬，因为我认为Google的字体质量很高，选择很多，但我认为Typekit的字体选择和质量也非常出色。然而，我认为最好的功能是，这个字体服务对所有*Adobe
    Creative Cloud*订阅者免费。因此，如果您订阅了创意云套件，例如Photoshop和Illustrator等工具，您也可以访问Typekit上的每种字体。如果您不是Adobe
    Creative Cloud的订阅者，您也可以单独订阅Typekit，这绝对值得。另一个很酷的功能是，您可以很容易地将字体同步到Photoshop和Illustrator，并在这些工具中进行设计，而使用Google
    Web字体则不那么容易。在本节中，我们将从Typekit向我们的网站添加另一种字体。
- en: Selecting fonts from Typekit
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从Typekit中选择字体
- en: 'Let''s go to [https://typekit.com/](https://typekit.com/):'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们去[https://typekit.com/](https://typekit.com/)：
- en: '![](img/00306.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00306.jpeg)'
- en: 'I''ll sign in with my Adobe ID and password. If you don''t have an Adobe ID
    or you''re not a member of either Adobe''s Creative Cloud or of Typekit as a stand
    alone service, you''ll need to sign up in order to follow along. We can browse
    fonts that look good, but let''s actually search for the font we want, `expo sans`:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我将使用我的Adobe ID和密码登录。如果您没有Adobe ID，或者既不是Adobe的创意云会员，也不是Typekit的独立服务会员，您需要注册才能跟着进行。我们可以浏览看起来不错的字体，但让我们实际搜索我们想要的字体“expo
    sans”：
- en: '![](img/00307.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00307.jpeg)'
- en: 'After selecting Expo Sans, we''re at a page that shows the different weights
    and styles. We have two basic options that we can use, SYNC ALL or ADD TO KIT.
    Syncing is for syncing this font to my computer for using in Photoshop, Illustrator,
    and other Adobe products. Adding it to a kit allows me to use it on the Web. So
    let''s do that and click on the ADD TO KIT button:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 选择Expo Sans后，我们来到一个显示不同粗细和样式的页面。我们有两个基本选项可以使用，即全部同步或添加到套件。同步是为了将此字体同步到我的计算机，以便在Photoshop、Illustrator和其他Adobe产品中使用。将其添加到套件中允许我在Web上使用它。所以让我们这样做，然后点击“添加到套件”按钮：
- en: '![](img/00308.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00308.jpeg)'
- en: 'Then, we''ll click on the CREATE A KIT button for Expo Sans Pro:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将点击“创建套件”按钮，选择Expo Sans Pro：
- en: '![](img/00309.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00309.jpeg)'
- en: 'We''ll name it `Old Chompy`, the name of our site. Then, for the domain name,
    I''ll use `localhost:8888` and `oldchompy.com`; `localhost:8888` will be for development
    and `oldchompy.com` will be for later when the site goes into production, as that
    will be the domain name. Then we''ll click on Continue:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把它命名为“Old Chompy”，这是我们网站的名称。然后，对于域名，我将使用`localhost:8888`和`oldchompy.com`；`localhost:8888`将用于开发，`oldchompy.com`将用于网站投入生产后，因为那将是域名。然后我们将点击“继续”：
- en: '![](img/00310.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00310.jpeg)'
- en: This is a minor downside of using Typekit; you have to select a domain. Throughout
    this course, we've been serving our pages to the browser directly through the
    file system. We haven't had the need to set up a local development environment.
    Normally, you don't have to do this until you start working with AJAX calls, server-side
    code, or a **content management system** (**CMS**). In order to ensure that Typekit's
    fonts can't be used willy-nilly anywhere, Typekit delivers them to a specific
    domain name.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用Typekit的一个小缺点；您必须选择一个域。在整个课程中，我们一直通过文件系统直接向浏览器提供页面。我们还没有需要设置本地开发环境。通常，直到开始使用AJAX调用、服务器端代码或内容管理系统（CMS）时，您才需要这样做。为了确保Typekit的字体不能随意在任何地方使用，Typekit将它们交付给特定的域名。
- en: I'll use `localhost:8888`, which is where my local server is running on my computer
    through MAMP. Setting up a local development environment is way beyond the scope
    of this project, so don't feel like you have to follow along exactly with this
    particular step. I'll also enter the domain where this site will theoretically
    will live publicly, which we'll be `localhost:8888` and `oldchompy.com`.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我会使用`localhost:8888`，这是我的本地服务器通过MAMP在我的电脑上运行的地方。建立本地开发环境远远超出了这个项目的范围，所以不要觉得你必须完全跟着这个特定的步骤。我还会输入这个站点理论上将公开的域名，即`localhost:8888`和`oldchompy.com`。
- en: 'Before we get into this embed code, let''s go back over to the site and look
    at the first part of the URL:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进入这个嵌入代码之前，让我们回到网站，看看URL的第一部分：
- en: '![](img/00311.jpeg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00311.jpeg)'
- en: 'Note that I''m accessing my site differently now through `local host:8888`.
    This is where my local server is running. This is different from how I''ve been
    accessing it before, which is directly through the file system, going to the file
    library web server documents and then my site folder:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我现在通过`localhost:8888`以不同的方式访问我的网站。这是我的本地服务器正在运行的地方。这与我之前的访问方式不同，之前是直接通过文件系统，进入文件库网页服务器文档，然后进入我的站点文件夹。
- en: '![](img/00312.jpeg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00312.jpeg)'
- en: I'll do this for this one section of the entire course. Like I said before,
    worry if you aren't able to follow along with this part.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我将为整个课程的这一部分做这个。就像我之前说的，如果你无法跟上这部分，不要担心。
- en: Adding fonts to the site
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将字体添加到网站
- en: 'Let''s head back to the embed code on Typekit; this screen gives us the JavaScript
    embed code:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到Typekit上的嵌入代码；这个屏幕给了我们JavaScript嵌入代码：
- en: '![](img/00313.jpeg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00313.jpeg)'
- en: 'I''ll copy this, go over to Sublime Text, and then paste it into our HTML file''s
    `<head></head>` tags. I''ll do the same thing in my `shark-movies.html` page and
    save that:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我会复制这个，转到Sublime Text，然后粘贴到我们HTML文件的`<head></head>`标签中。我会在我的`shark-movies.html`页面中做同样的事情，并保存：
- en: '[PRE10]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Alright, back to Typekit. I''ll click on the Continue button to move to the
    next step:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，回到Typekit。我会点击“继续”按钮，进入下一步：
- en: '![](img/00313.jpeg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00313.jpeg)'
- en: 'On this next screen, we can do several things, including selecting which weights
    and styles we''d like to include. By default, regular, italic, bold, and bold
    italic are selected for a combined weight of 134K. I can select other weights
    and styles it shows me how the kit size changes. For now, I''ll leave the default
    four weights and styles selected. Next, let''s click on the Using fonts in CSS
    link near the top:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，我们可以做几件事，包括选择我们想要包括的字重和样式。默认情况下，选择了常规、斜体、粗体和粗斜体，总重量为134K。我可以选择其他字重和样式，它会显示给我看套件大小如何变化。现在，我会保留默认的四种字重和样式。接下来，让我们点击顶部附近的“在CSS中使用字体”链接：
- en: '![](img/00314.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00314.jpeg)'
- en: 'This gives us the name of the font that we want to use, which is `expo-sans-pro`:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这给了我们想要使用的字体的名称，即`expo-sans-pro`：
- en: '![](img/00315.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00315.jpeg)'
- en: 'Let''s copy `expo-sans-pro` and go back to the CSS file. Just for fun, paste
    it in our `h1` selector, right before `Maven Pro`, and save it:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们复制`expo-sans-pro`，然后回到CSS文件。只是为了好玩，把它粘贴在我们的`h1`选择器中，在`Maven Pro`之前，然后保存：
- en: '[PRE11]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Before this is going to work though, we actually need to click on the Publish
    button:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，在这个工作之前，我们实际上需要点击“发布”按钮：
- en: '![](img/00316.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00316.jpeg)'
- en: 'Now, it''ll tell us it may take a few minutes to be completely distributed
    across their network, but usually it happens a lot faster than that. If we go
    to our site and refresh it now, we can see a difference in the font:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，它会告诉我们可能需要几分钟才能完全分布到他们的网络中，但通常情况下会比那快得多。如果我们现在去我们的网站并刷新，我们可以看到字体的变化：
- en: '![](img/00317.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00317.jpeg)'
- en: 'This is *Expo Sans Pro*, a really gorgeous font. I almost like it better than
    *Maven Pro*, and that''s one of the benefits of using Typekit or a paid font service:
    they have so many incredible high-quality fonts.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这是*Expo Sans Pro*，一个非常漂亮的字体。我几乎比*Maven Pro*更喜欢它，这就是使用Typekit或付费字体服务的好处之一：它们有如此多令人难以置信的高质量字体。
- en: So in conclusion, we've used a beautiful font from Typekit that I'm tempted
    to use instead of *Maven Pro*, but I think we'll leave Maven in there. Applying
    fonts from a service such as Typekit involves a few extra steps, but all in all,
    it's still easier than hosting the fonts ourselves. In the next section, we'll
    look at another kind of font we can use, called icon fonts.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总的来说，我们使用了Typekit的一个漂亮的字体，我很想使用它来代替*Maven Pro*，但我认为我们会保留Maven。从Typekit这样的服务应用字体涉及一些额外的步骤，但总的来说，它仍然比自己托管字体要容易。在下一节中，我们将看看另一种我们可以使用的字体，叫做图标字体。
- en: Icon fonts
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图标字体
- en: In this section, we'll look at how we can add an icon font to our website. Icon
    fonts work nicely when you have solid, colored icons that are used on your site.
    Instead of having every image as a separate request, all icons are part of one
    request for the entire font—this is faster. Since we're not using images, we can
    use CSS to provide the color and size of the image, meaning we can make the icons
    larger without losing fidelity. We'll showcase our icon fonts in the footer. So
    first, we'll have to build the footer for both pages, then we'll download a free
    icon font from the ZURB Foundation. Next, we'll use CSS to add the icon fonts
    to our website. Last, we'll add a `:hover` state to the icons to experiment with
    how we can use CSS to change their appearance.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们将看看如何将图标字体添加到我们的网站。当您的网站上有实心、彩色的图标时，图标字体可以很好地工作。与将每个图像作为单独的请求不同，所有图标都是整个字体的一部分的请求——这更快。由于我们不使用图像，我们可以使用CSS来提供图像的颜色和大小，这意味着我们可以使图标更大而不会失去保真度。我们将在页脚中展示我们的图标字体。因此，首先我们必须为两个页面构建页脚，然后我们将从ZURB
    Foundation下载一个免费的图标字体。接下来，我们将使用CSS将图标字体添加到我们的网站。最后，我们将为图标添加一个`:hover`状态，以尝试如何使用CSS来改变它们的外观。
- en: Building the footer
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建页脚
- en: 'So here''s what we''re shooting for in the footer of our final website:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这是我们在最终网站的页脚中所追求的目标：
- en: '![](img/00318.jpeg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00318.jpeg)'
- en: We want three columns of links, with each link accompanied by an icon. Traditionally,
    you would do this with images, but that can be a hit to performance if you have
    many images like we do. Traditionally, many folks have grouped all these icons
    into one image file called an `image sprite` and loaded it as a background image
    only showing the portion of the background image for the desired image using the
    `background-position` property. This would have made sure that you had one network
    request instead of 10 because you'd have been using one image file. This process
    was tricky because you had to use the `background-position` property to find the
    image you were looking for. The bigger issue was that, it came to changing a color
    or adding a new icon, you had to update the sprite and then the CSS. The biggest
    issue with an image sprite is when you have to go ahead and support HiDPI or *Retina*
    devices. Icon fonts aren't perfect, but they solve these tricky problems.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望有三列链接，每个链接都有一个图标。 传统上，您可以使用图像来实现这一点，但是如果您有很多图像，这可能会影响性能。 传统上，许多人将所有这些图标分组到一个称为“图像精灵”的图像文件中，并将其加载为背景图像，仅显示所需图像的背景图像部分，使用`background-position`属性。
    这将确保您只有一个网络请求，而不是10个，因为您将使用一个图像文件。 这个过程很棘手，因为您必须使用`background-position`属性来找到您要查找的图像。
    更大的问题是，当涉及更改颜色或添加新图标时，您必须更新精灵，然后更新CSS。 图像精灵的最大问题是当您必须继续支持HiDPI或* Retina *设备时。
    图标字体并不完美，但它们解决了这些棘手的问题。
- en: 'In both our HTML files, let''s copy this code for the footer:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的两个HTML文件中，让我们复制页脚的这段代码：
- en: '[PRE12]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Here''s what it looks like without any added CSS:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这是没有添加任何CSS的样子：
- en: '![](img/00319.jpeg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00319.jpeg)'
- en: 'We need to clean this up. Right before the Media Queries begin, let''s drop
    some CSS to make the footer snap into place:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要整理一下。 就在媒体查询开始之前，让我们放一些CSS使页脚吸附到位：
- en: '[PRE13]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This makes it look much better:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 这样看起来好多了：
- en: '![](img/00320.jpeg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00320.jpeg)'
- en: Downloading a free icon font from the ZURB Foundation
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从ZURB Foundation下载免费图标字体
- en: 'Let''s go to the Zurb page for Foundation Icon Fonts 3 at [http://zurb.com/playground/foundation-icon-fonts-3](http://zurb.com/playground/foundation-icon-fonts-3):'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们转到Zurb页面，查看Foundation Icon Fonts 3 [http://zurb.com/playground/foundation-icon-fonts-3](http://zurb.com/playground/foundation-icon-fonts-3)：
- en: '![](img/00321.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00321.jpeg)'
- en: 'There''s quite a few different icon fonts that come standard with this icon
    set. Let''s click on the Download the Font button. In Chrome, it''ll be downloaded
    in the bottom-left corner; we can just place the folder on the desktop and double-click
    on it to unzip it. Then, we can open up the `Foundation-icons` folder:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这个图标集中有很多不同的图标字体。 让我们点击“下载字体”按钮。 在Chrome中，它将在左下角下载； 我们只需将文件夹放在桌面上，然后双击解压缩它。
    然后，我们可以打开`Foundation-icons`文件夹：
- en: '![](img/00322.jpeg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00322.jpeg)'
- en: 'Inside this folder is a CSS file, several font files, a file called `preview.html`,
    and then a folder full of `svgs`. Here''s what the CSS file looks like:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个文件夹中有一个CSS文件，几个字体文件，一个名为`preview.html`的文件，然后是一个充满`svgs`的文件夹。 CSS文件的样子如下：
- en: '[PRE14]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Adding the icon font to our website
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将图标字体添加到我们的网站
- en: 'In our CSS, we can see the `@font-face` rule loading in different font files,
    just like it did with the web fonts we looked at in the second section of this
    chapter. Below this is the class name for every single icon font, followed by
    the pseudo element before:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的CSS中，我们可以看到`@font-face`规则加载不同的字体文件，就像我们在本章的第二部分中查看的Web字体一样。 在此之下是每个图标字体的类名，后面是伪元素before：
- en: '![](img/00323.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00323.jpeg)'
- en: 'We''ve learned about pseudo classes, but not pseudo elements. The pseudo elements
    `:before` and `:after` are basically "make believe" elements that will appear
    before or after the element you are calling. It''s a neat way to add content using
    CSS. The content that it''s adding is the icon that relates to the class name.
    So if we go down to the bottom of the selector, we can see that it actually sets
    up the font family, all the different font properties, and a couple of other things:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了伪类，但还没有了解伪元素。 伪元素`:before`和`:after`基本上是“虚拟”的元素，它们将出现在您调用的元素之前或之后。 这是使用CSS添加内容的一种巧妙方式。
    它添加的内容是与类名相关的图标。 因此，如果我们转到选择器的底部，我们可以看到它实际上设置了字体系列，所有不同的字体属性以及其他一些东西：
- en: '[PRE15]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'After that, in the next selector, you can see that each icon is getting content
    added to its pseudo element:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，在下一个选择器中，您可以看到每个图标都添加了内容到其伪元素：
- en: '![](img/00324.jpeg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00324.jpeg)'
- en: 'The content is code that corresponds to a letter in the font family. For instance:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这些内容是与字体系列中的字母对应的代码。 例如：
- en: '[PRE16]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: That's the content that corresponds to the address book icon in the font family.
    The `fi-` prefix we're seeing in these lines of code stands for **foundation icon**.
    Don't worry if you don't totally understand all of this; the main thing is that
    we need to copy this CSS to our CSS file. It's 594 lines of code, so I don't want
    to include it with our existing style sheet because it will just overly bloat
    it more than I care to. So we have two choices. We could lint out and figure out
    only the icons we plan to use from the CSS file, or we could just link to the
    CSS file separately. Let's link to it separately—this way we have the entire icon
    font library at our disposal if we need it. Ideally later, we'd lint out the unused
    icon fonts before moving to production to as pairing that file down to just the
    10 icons we're using takes it from 20kb to 1kb!
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这是与地址簿图标对应的内容在字体系列中。 我们在这些代码行中看到的`fi-`前缀代表**foundation icon**。 如果您不完全理解所有这些，不要担心；
    主要问题是我们需要将此CSS复制到我们的CSS文件中。 它有594行代码，所以我不想将其包含在我们现有的样式表中，因为这将使它比我想要的更加臃肿。 所以我们有两个选择。
    我们可以从CSS文件中删除并找出我们计划使用的图标，或者我们可以将CSS文件链接到单独的文件中。 让我们单独链接到它-这样我们在需要时可以使用整个图标字体库。
    理想情况下，稍后，我们将在转到生产之前从未使用的图标字体中删除出来，因为将该文件缩减到只使用的10个图标将其从20kb减少到1kb！
- en: 'Let''s save this file in our project''s `css` folder and call it `icons.css`:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将此文件保存在我们项目的`css`文件夹中，并将其命名为`icons.css`：
- en: '![](img/00325.jpeg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00325.jpeg)'
- en: 'We''ll now go into our `index.html` file and add a link to `foundation-icons.css`
    in the head of this file, right underneath the link to `style.css`:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将进入我们的`index.html`文件，在这个文件的头部添加一个链接到`foundation-icons.css`，就在`style.css`的链接下面：
- en: '[PRE17]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Save this, copy it, and jump over to Shark Movies to paste it in there as well,
    and save it.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 保存这个，复制它，并跳到Shark Movies粘贴它，然后保存。
- en: 'Next, let''s create a new folder called `icons`. We''ll drag the four different
    font files to this new folder:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们创建一个名为`icons`的新文件夹。我们将四个不同的字体文件拖到这个新文件夹中：
- en: '![](img/00326.jpeg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00326.jpeg)'
- en: 'Now that these four different font files are in the `icons` folder, back in
    the `icons.css` file, we just have to change the source to now point to the folder
    where we just put those font files. Let''s prepend `../icons/`, like so to the
    url:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这四个不同的字体文件都在`icons`文件夹中，回到`icons.css`文件，我们只需要改变源指向刚刚放置这些字体文件的文件夹。让我们在url前面加上`../icons/`，像这样：
- en: '[PRE18]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: So now we have these URLs pointing to the proper folder.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在我们的URL指向了正确的文件夹。
- en: 'We now need to add the icon classes to the elements in our HTML to load in
    the icon. But first we need to determine which classes to use. The `preview.html`
    file is a big help there, so let''s open that one up from the `foundation-icons`
    folder:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要在我们的HTML元素中添加图标类来加载图标。但首先我们需要确定使用哪些类。`preview.html`文件在这方面非常有帮助，所以让我们从`foundation-icons`文件夹中打开它：
- en: '![](img/00327.jpeg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00327.jpeg)'
- en: 'When we open it, we can see the icons displayed at different sizes. Search
    for Facebook, and here we can see the Facebook icon we''re looking for and the
    class name that corresponds to it, `fi-social-facebook`:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们打开它时，我们可以看到以不同大小显示的图标。搜索Facebook，这里我们可以看到我们正在寻找的Facebook图标以及与之对应的类名`fi-social-facebook`：
- en: '![](img/00328.jpeg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00328.jpeg)'
- en: 'Copy everything but the period of that class name and paste that next to the
    link to Facebook in `index.html`:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 复制除了那个类名的句号之外的所有内容，并将其粘贴到`index.html`中Facebook的链接旁边：
- en: '[PRE19]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Save this and now, when we go to our site, we will be able to see the Facebook
    icon:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 保存这个，现在当我们去我们的网站，我们将能够看到Facebook图标：
- en: '![](img/00329.jpeg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00329.jpeg)'
- en: Styling icon fonts
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图标字体样式
- en: 'We have two problems: one, it''s too small, and two, it''s really close to
    the word. What we should do is add `margin-right` to every icon and make it larger.
    This means every `span` tag in the HTML is going to need a class. Let''s add `class="icon"`
    as follows:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有两个问题：一是太小，二是离单词太近。我们应该对每个图标添加`margin-right`并使其变大。这意味着HTML中的每个`span`标签都需要一个类。让我们添加`class="icon"`如下：
- en: '[PRE20]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now in the CSS, in our footer section, let''s add a new rule set that fixes
    these two issues:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 现在在CSS中，在我们的页脚部分，让我们添加一个新的规则集来解决这两个问题：
- en: '[PRE21]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The other thing we could do is add a transition, because we''re going to have
    a hover effect, and this will help ease that state change. Let''s add a transition:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以添加一个过渡效果，因为我们将有一个悬停效果，这将有助于缓解状态变化。让我们添加一个过渡效果：
- en: '[PRE22]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now refresh the site and you''ll see that the Facebook icon is a little bit
    bigger and it has some more space:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在刷新网站，你会看到Facebook图标稍微变大了，而且有了更多的空间：
- en: '![](img/00330.jpeg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00330.jpeg)'
- en: 'Now what we need to do is add a corresponding class for Twitter, Google, Dribble,
    and the other six links in the HTML:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要为Twitter、Google、Dribble和HTML中的其他六个链接添加相应的类：
- en: '[PRE23]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Here''s how it looks:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的样子：
- en: '![](img/00331.jpeg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00331.jpeg)'
- en: 'OK! So now we have all our icon-specific classes in place, and we have an icon
    on each link on our footer. The cool part about icon fonts is that they will be
    crisp and clear on HiDPI devices. Also, we can change the color and other properties
    on a hover state, which we couldn''t do with a normal raster image. Let''s add
    a quick hover state to all of these. In our CSS, let''s add a new selector:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 好了！现在我们已经将所有与图标相关的类放在了正确的位置，并且我们的页脚上每个链接都有一个图标。图标字体的好处是它们在HiDPI设备上会清晰明了。此外，我们可以在悬停状态下更改颜色和其他属性，这是普通光栅图像所做不到的。让我们为所有这些添加一个快速的悬停状态。在我们的CSS中，让我们添加一个新的选择器：
- en: '[PRE24]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Apply this, and you should see that this icon transitions nicely to a totally
    different color:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 应用这个，你应该看到这个图标很好地过渡到了完全不同的颜色：
- en: '![](img/00332.jpeg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00332.jpeg)'
- en: Icon fonts are an excellent choice for your website. I recommend using icon
    fonts on noncritical elements of your website because, if for some reason the
    font doesn't load on your user's computer, there will be no fallback. The fallback
    usually defaults to a square, or worse, a totally unrelated character or letter.
    In our case, I think we're okay, because in a situation where our icon font doesn't
    load, we will still have descriptions of the icon right next to it. The nice part
    about icon fonts is that, just like any other font, they scale fluently to retina
    devices.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图标字体是您网站的一个很好的选择。我建议在您的网站的非关键元素上使用图标字体，因为如果由于某种原因字体在用户的计算机上无法加载，就没有备用方案。备用方案通常默认为一个方块，或者更糟糕的是一个完全无关的字符或字母。在我们的情况下，我认为我们没问题，因为在我们的图标字体无法加载的情况下，我们仍然会有图标旁边的描述。图标字体的好处是，就像任何其他字体一样，它们可以流畅地缩放到视网膜设备。
- en: Summary
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We started this chapter on web fonts by discussing the `@font-face` property,
    using it to add fonts to our site. We looked at how to use Google Fonts and Typekit.
    Finally, you learned how to use icon fonts and build a site's footer with the
    icon font from Zurb. In the next chapter, we'll talk about retina devices and
    get our pages ready for the world of HiDPI devices.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过讨论`@font-face`属性来开始本章关于Web字体的内容，使用它来向我们的网站添加字体。我们看了如何使用Google字体和Typekit。最后，您学会了如何使用图标字体，并使用Zurb的图标字体构建网站的页脚。在下一章中，我们将讨论视网膜设备，并为HiDPI设备的世界准备我们的页面。
