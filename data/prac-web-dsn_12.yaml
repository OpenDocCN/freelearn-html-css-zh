- en: Building a Website with Bootstrap
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Bootstrap构建网站
- en: 'We just saw how powerful Bootstrap can be. With an extensive list of components
    and elements we can reuse, it can make our development phase very easy, and that''s
    why developers love it. In this chapter, we''ll discuss how to build our website
    using the Bootstrap framework using the following steps:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚看到了Bootstrap有多么强大。有了一个可以重复使用的广泛组件和元素列表，它可以使我们的开发阶段非常容易，这就是为什么开发人员喜欢它。在本章中，我们将讨论如何使用Bootstrap框架构建我们的网站，具体步骤如下：
- en: Learning how to set up Bootstrap in your project
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何在项目中设置Bootstrap
- en: Creating and styling our Navigation bar
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和设计我们的导航栏
- en: Continuing with the hero section
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 继续英雄部分
- en: Creating and styling the Blog section
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和设计博客部分
- en: Creating and styling the About section
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和设计关于部分
- en: Finishing with the Footer
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完成页脚
- en: We'll start the project from scratch and create the same page we created before
    to compare our initial technique with the Bootstrap technique. Let's get started!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从头开始创建项目，并创建与之前创建的相同页面，以比较我们最初的技术与Bootstrap技术。让我们开始吧！
- en: Installing Bootstrap
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Bootstrap
- en: 'The first thing we will need to do is download Bootstrap. There are any ways
    to download it. Let''s head to the download page to check it out. Click on the
    Download button on the homepage. Now you can take a look at the different methods
    of downloading the latest version of Bootstrap:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是下载Bootstrap。有多种下载方式。让我们前往下载页面查看一下。在主页上点击下载按钮。现在你可以查看不同的下载最新版本Bootstrap的方法：
- en: '![](img/0aa32595-f9b0-4a0b-9c58-86b73c7287d4.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0aa32595-f9b0-4a0b-9c58-86b73c7287d4.png)'
- en: Downloading Bootstrap
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下载Bootstrap
- en: The first method is to download the Compiled version of Bootstrap. Your version
    will depend on when you take this course, but always take the latest version of
    Bootstrap.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法是下载编译后的Bootstrap版本。你的版本将取决于你学习这门课程的时间，但总是选择最新版本的Bootstrap。
- en: You can also download the source version of Bootstrap with all the files, but,
    most of the time, you'll only need the compiled files, because it's quicker and
    easier to get Bootstrap up and running.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以下载包含所有文件的Bootstrap源版本，但大多数情况下，你只需要编译后的文件，因为这样更快更容易让Bootstrap运行起来。
- en: If you scroll down a little bit, you would notice BoostrapCDN. Bootstrap also
    provides a **C****ontent Delivery Network** (**CDN**) that will host the latest
    version of Bootstrap in a server, so you can paste only the URL without having
    to host the files on your server. It's pretty good, as your users will not have
    to download the files again, as it might have already downloaded the files by
    visiting another website using Bootstrap.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你向下滚动一点，你会注意到BoostrapCDN。Bootstrap还提供了一个内容传送网络（CDN），它将在服务器上托管最新版本的Bootstrap，因此你可以只粘贴URL而无需在服务器上托管文件。这很好，因为你的用户不需要再次下载文件，因为他们可能已经通过访问使用Bootstrap的其他网站下载了文件。
- en: Setting up our project
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置我们的项目
- en: To get started, let's create a folder called `Racing Club Bootstrap`. In Atom,
    we will open a new window, click on Add Project Folder..., and locate the `Racing
    Club Bootstrap`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，让我们创建一个名为`Racing Club Bootstrap`的文件夹。在Atom中，我们将打开一个新窗口，点击添加项目文件夹...，并找到`Racing
    Club Bootstrap`。
- en: Inside, let's create our `index.html` file. Click on Create New (*Ctrl* + *N*
    or *Cmd* + *N*), and save it so that we can name the file `index.html`.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在里面，让我们创建我们的`index.html`文件。点击创建新文件（*Ctrl* + *N*或*Cmd* + *N*），并保存它，这样我们就可以将文件命名为`index.html`。
- en: Once done, let's head to the Bootstrap website ([http://getbootstrap.com/docs/4.0/getting-started/introduction/](http://getbootstrap.com/docs/4.0/getting-started/introduction/)),
    specifically, the Introduction section.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，让我们前往Bootstrap网站（[http://getbootstrap.com/docs/4.0/getting-started/introduction/](http://getbootstrap.com/docs/4.0/getting-started/introduction/)），具体来说是“Introduction”部分。
- en: 'In this section, Bootstrap provides you with a template to kick-start your
    project:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，Bootstrap为你提供了一个启动项目的模板：
- en: '![](img/5b6a6c41-9f62-47cf-9fdd-dfc04b123f54.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5b6a6c41-9f62-47cf-9fdd-dfc04b123f54.png)'
- en: The Starter template
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 启动模板
- en: Copy the code provided and paste it into your `index.html` file. We can remove
    `<h1>Hello, world!</h1>` from the template.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 复制提供的代码并粘贴到你的`index.html`文件中。我们可以从模板中删除`<h1>Hello, world!</h1>`。
- en: We're ready to start, but we also want to write our own CSS. For that, let's
    create a folder called `css` and a CSS file called `styles.css`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们准备好开始了，但我们也想写自己的CSS。为此，让我们创建一个名为`css`的文件夹和一个名为`styles.css`的CSS文件。
- en: 'To do that quickly, you can right-click on the left-hand bar in Atom and click
    on New Folder, as shown in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了快速做到这一点，你可以右键单击Atom中的左侧栏，然后点击新建文件夹，如下截图所示：
- en: '![](img/74a2f7cf-5ae1-4fe8-ae30-50fd5798182a.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/74a2f7cf-5ae1-4fe8-ae30-50fd5798182a.png)'
- en: Create a folder in Atom
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在Atom中创建一个文件夹
- en: 'When you create a CSS file, you will always need to link it to your HTML file,
    otherwise it doesn''t work. If you remember to link it, you''ll have to add the
    following code:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当你创建CSS文件时，你总是需要将它链接到你的HTML文件中，否则它不起作用。如果你记得链接它，你将需要添加以下代码：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now that we have created our CSS file and linked it to our HTML file, the last
    thing we need to do is to duplicate the `img` and `fonts` folders we created in
    our last project. This is easier, as we will recreate the same page. Just copy
    and paste those folders to our new project.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经创建了我们的CSS文件并将其链接到我们的HTML文件中，我们需要做的最后一件事就是复制我们在上一个项目中创建的`img`和`fonts`文件夹。这更容易，因为我们将重新创建相同的页面。只需将这些文件夹复制粘贴到我们的新项目中。
- en: 'Don''t forget to link the font CSS to your HTML. Add it before your `styles.css`:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记将字体CSS链接到你的HTML文件中。在你的`styles.css`之前添加它：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Install the Google Font Roboto:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Google字体Roboto：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now that we're all set, let's get started.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们都准备好了，让我们开始吧。
- en: Bootstrap navbar
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Bootstrap导航栏
- en: 'The first thing we will create is the Bootstrap `navbar`. The `navbar` within
    Bootstrap is one of the most recognizable features within the Bootstrap framework
    due to the nature of how it works. So, to provide an example of how it works,
    if we navigate to the Bootstrap website and then to the Documentation tab, we
    have all the navigation elements across the top of the screen:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先创建的是Bootstrap `navbar`。Bootstrap中的`navbar`是Bootstrap框架中最具标志性的特性之一，因为它的工作方式。因此，为了提供一个它的工作方式的示例，如果我们导航到Bootstrap网站，然后到文档选项卡，我们会看到屏幕顶部的所有导航元素：
- en: '![](img/c78be0f0-5ca3-4ec2-8f7e-a1087a470fbd.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/c78be0f0-5ca3-4ec2-8f7e-a1087a470fbd.png)
- en: The Bootstrap navigation
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap导航
- en: 'If we shrink the browser, we can see how the navigation shrinks as well. Then,
    when it hits the smaller screen, we get this hamburger menu, which, if we click
    on it, displays the navigation elements within it:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们缩小浏览器，我们可以看到导航也在缩小。然后，当它达到较小的屏幕时，我们会得到这个汉堡菜单，如果我们点击它，它会显示其中的导航元素：
- en: '![](img/8c3ee499-9e69-44e7-a6d1-eeac3e734a44.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/8c3ee499-9e69-44e7-a6d1-eeac3e734a44.png)
- en: The Bootstrap mobile navigation
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap移动导航
- en: Coding the Bootstrap navigation
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写Bootstrap导航
- en: Now let's head to the `navbar` section of Components in our Bootstrap website.
    Here, you can find all the necessary documentation to build your navigation with
    Bootstrap.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们转到Bootstrap网站上的组件中的`navbar`部分。在这里，您可以找到使用Bootstrap构建导航所需的所有文档。
- en: 'Now let''s head back to our HTML file and write the following code:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们回到我们的HTML文件，并写入以下代码：
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The details of the preceding code are as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码的细节如下：
- en: We start off within the body of the content by adding our `<nav>` element and
    all `<nav>` elements require a `navbar` class.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先在内容的主体中添加了我们的`<nav>`元素，所有`<nav>`元素都需要一个`navbar`类。
- en: Then, we added the new expand class, which is the `navbar-expand-lg`. This essentially
    tells the browser when to collapse the `navbar` and when to expand it.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们添加了新的扩展类，即`navbar-expand-lg`。这基本上告诉浏览器何时折叠`navbar`，何时扩展它。
- en: So, in this case, it will expand and show the desktop version when it hits large
    screens. If we wanted to expand when we hit medium screens, then we just need
    to change `lg` to `md` or, for smaller screens, to `sm`.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，在这种情况下，当它达到大屏幕时，它将展开并显示桌面版本。如果我们想在中等屏幕上展开，那么我们只需要将`lg`更改为`md`，或者对于较小的屏幕，更改为`sm`。
- en: Then, we added the positioning class, and, because we want this `navbar` to
    be fixed at the top of the screen so that when the user scrolls, the navigation
    is always visible, we simply added the class `fixed-top`.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们添加了定位类，因为我们希望这个`navbar`固定在屏幕顶部，所以当用户滚动时，导航始终可见，我们只需添加`fixed-top`类。
- en: 'Next, let''s add some navigation options:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们添加一些导航选项：
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In this code, we simply id the following things:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们简单地标识了以下内容：
- en: We added a `div` to the `collapse` class. This simply informs the browser that
    this `div` and all its content will be a collapsible element.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们添加了一个带有`collapse`类的`div`。这只是告诉浏览器，这个`div`及其所有内容将是可折叠的元素。
- en: Then, we added a class of `navbar-collapse`.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们添加了一个`navbar-collapse`类。
- en: Lastly, we added an `id="navigation-bar"` that will link to our toggle button
    later on.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们添加了一个将在稍后链接到我们的切换按钮的`id="navigation-bar"`。
- en: 'Now we will need to add our navigation list, with a `<ul>` and `<li>` for the
    list and an `<a>` for every link:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要添加我们的导航列表，包括`<ul>`和`<li>`用于列表，以及每个链接的`<a>`：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: To make the navigation work properly, we will need the `.navbar-nav` class on
    the `<ul>` and the `nav-item` class on the `<li>`. Lastly, we will need a `.nav-link`
    class on the `<a>` tag.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使导航正常工作，我们需要在`<ul>`上使用`.navbar-nav`类，在`<li>`上使用`nav-item`类。最后，我们需要在`<a>`标签上使用`.nav-link`类。
- en: 'Now let''s check out our list in our browser:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在浏览器中检查一下我们的列表：
- en: '![](img/94dfd980-0930-46ae-850c-dc26b0b0ab45.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/94dfd980-0930-46ae-850c-dc26b0b0ab45.png)
- en: Work in progress on our navigation
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们导航的工作进展
- en: We have our Bootstrap navigation, but if you shrink the page to a mobile view,
    you will notice that the navigation disappears. That is because we haven't included
    our toggle button, so let's add it now.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有了Bootstrap导航，但是如果将页面缩小到移动视图，您会注意到导航消失了。这是因为我们还没有包含我们的切换按钮，所以现在让我们添加它。
- en: 'Back in our `index.html`, we can add our button above the `div` we created.
    Let''s create a button tag and give it the `.navbar-toggler` class and instructions,
    as follows:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们的`index.html`，我们可以在创建的`div`上方添加我们的按钮。让我们创建一个按钮标签，并给它`.navbar-toggler`类和指示，如下所示：
- en: '[PRE6]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `data-target` attribute is how we link the navigation options that we had
    earlier, which is the `#navigation-bar` ID.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`data-target`属性是我们之前所拥有的导航选项的链接方式，即`#navigation-bar`ID。'
- en: Now we will need to add the hamburger menu inside this button. To do that, we
    can use the `≡` HTML code, which is the HTML code for a three-bar icon. There
    are plenty of HTML symbols available that you could use. You can google HTML symbols
    and that will provide you with plenty of examples and symbols.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要在这个按钮内添加汉堡菜单。为此，我们可以使用`≡`的HTML代码，这是三条杠图标的HTML代码。有很多可用的HTML符号，您可以使用。您可以搜索HTML符号，那将为您提供很多示例和符号。
- en: 'Let''s add a `span` tag with the `.navbar-toggler-icon` class and the HTML
    symbol inside:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加一个带有`.navbar-toggler-icon`类和HTML符号的`span`标签：
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, if we save and check it, we can see our menu icon on a mobile screen,
    and if we click on it, the menu appears correctly:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们保存并检查，我们可以在移动屏幕上看到我们的菜单图标，如果我们点击它，菜单将正确显示：
- en: '![](img/6786a443-f0fb-406d-9dd1-312be245c07b.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/6786a443-f0fb-406d-9dd1-312be245c07b.png)
- en: Mobile navigation.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 移动导航。
- en: Now let's add the logo in our `navbar`. Usually, the logo is a link, so let's
    add a `<a>` tag with the `.navbar-brand` class.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在我们的`navbar`中添加标志。通常，标志是一个链接，所以让我们添加一个带有`.navbar-brand`类的`<a>`标签。
- en: 'We don''t want the logo to collapse on mobile view, so we''ll just add `<a>`
    before the `<button>`:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不希望标志在移动视图上折叠，所以我们只需在`<button>`之前添加`<a>`：
- en: '[PRE8]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In this `<a>`, we added the following:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个`<a>`中，我们添加了以下内容：
- en: A class `.navbar-brand`
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个`.navbar-brand`类
- en: An `img` tag linked with our logo
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与我们的标志相关联的`img`标签
- en: In this `img`, we added a `.img-fluid` class that makes this image responsive
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个`img`中，我们添加了一个`.img-fluid`类，使这个图像具有响应性
- en: 'We have our logo set now, but it''s not done yet. We will need to add the right-hand
    side navigation. To do that, we simply need to add another `<ul>` after our `<ul
    class="navbar-nav">`:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在设置了我们的标志，但还没有完成。我们需要添加右侧导航。为此，我们只需要在`<ul class="navbar-nav">`之后添加另一个`<ul>`：
- en: '[PRE9]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We added the `.ml-auto` class to move this second navigation to the right. This
    stands for `margin-left` automatic. It fills the margin on the left-hand side
    of our navigation, which will effectively shift it to the right-hand side. If
    you wanted the opposite effect, you would simply add the `.mr-auto` class.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加了`.ml-auto`类来将第二个导航移到右侧。这代表着`margin-left`自动。它填充了导航左侧的边距，这将有效地将其移动到右侧。如果你想要相反的效果，你只需添加`.mr-auto`类。
- en: 'Now let''s take a look at our navigation:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来看看我们的导航：
- en: '![](img/524cb84d-b1e7-475e-947f-08d129cf635d.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](img/524cb84d-b1e7-475e-947f-08d129cf635d.png)'
- en: Bootstrap navigation
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap导航
- en: Our navigation looks awesome, and we have all the elements that we need for
    the navigation bar. Next, we will add some styles.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的导航看起来很棒，我们已经拥有了导航栏所需的所有元素。接下来，我们将添加一些样式。
- en: Styling our navigation bar
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 样式化我们的导航栏
- en: 'Styling Bootstrap components is fairly simple. The only thing we need to do
    is to overwrite the Bootstrap CSS. However, we don''t want to overwrite Bootstrap
    CSS files themselves; the only thing we want to do is add additional CSS properties
    that will overwrite the original Bootstrap CSS. We have beforehand created a CSS
    file called `styles.css`, and, since this file is linked after the Bootstrap CSS
    file in order on the HTML document, every CSS we write having the same properties
    and class will overwrite the original Bootstrap CSS:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 样式化Bootstrap组件非常简单。我们唯一需要做的就是覆盖Bootstrap CSS。但是，我们不想覆盖Bootstrap CSS文件本身；我们想要做的唯一事情就是添加额外的CSS属性，这些属性将覆盖原始的Bootstrap
    CSS。我们之前创建了一个名为`styles.css`的CSS文件，并且，由于这个文件在HTML文档中按顺序链接到Bootstrap CSS文件之后，我们编写的每个具有相同属性和类的CSS都将覆盖原始的Bootstrap
    CSS：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We need to target the right CSS class to overwrite it. If you remember, we
    used Google Chrome''s Inspector to inspect elements and check their CSS. To open
    the Inspector (or Developer Tool), right-click on the element and click on Inspect:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要定位正确的CSS类来覆盖它。如果您记得，我们使用了谷歌Chrome的检查器来检查元素并检查它们的CSS。要打开检查器（或开发工具），右键单击元素，然后单击检查：
- en: '![](img/9f641423-5b66-4374-83b7-f5acb2bf06e3.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9f641423-5b66-4374-83b7-f5acb2bf06e3.png)'
- en: The Inspect element on Chrome
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在Chrome上检查元素
- en: 'Now we can see the developer panel, and there is a lot of information there.
    You can check the different panels available. When hovering over an element in
    the HTML, you can see it displayed on the web page itself:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以看到开发者面板，那里有很多信息。您可以检查不同的面板。当在HTML中悬停在一个元素上时，您可以看到它显示在网页上：
- en: '![](img/ba2dda67-2b7a-4f43-935e-9a3cc0ed40f8.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ba2dda67-2b7a-4f43-935e-9a3cc0ed40f8.png)'
- en: The Google Chrome Inspector
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌Chrome检查器
- en: This is very useful when you want to fix any CSS style issues or look at the
    HTML. Let's fix the CSS now.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要修复任何CSS样式问题或查看HTML时，这非常有用。现在让我们修复CSS。
- en: With the Inspector, we can see that the `.navbar` class has some padding by
    default, but we want to get rid of it.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 通过检查器，我们可以看到`.navbar`类默认有一些填充，但我们想要摆脱它。
- en: 'Simply add the following CSS to your `styles.css`:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 只需将以下CSS添加到您的`styles.css`中：
- en: '[PRE11]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'After saving, you can check that we overwrote the bootstrap CSS with our own:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 保存后，您可以检查我们用自己的样式覆盖了bootstrap CSS：
- en: '![](img/94265ee5-1fe8-4d71-89d2-5e58dd87961f.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/94265ee5-1fe8-4d71-89d2-5e58dd87961f.png)'
- en: Overwriting the Bootstrap CSS
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 覆盖Bootstrap CSS
- en: 'Now that you understand the principle, we can quickly fix the navigation:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您了解了原理，我们可以快速修复导航：
- en: '[PRE12]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The preceding code will stylize the `navbar` correctly. You can see that everything
    is functional without too many lines of code, even the responsive part. That's
    the power of Bootstrap. If we compare what we've done to make the navigation responsive,
    with jQuery and all the media queries, we've written a lot less code than we did
    for the first project. Let's move on to the hero section now.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码将正确地为`navbar`添加样式。您可以看到一切都很正常，而且没有太多的代码，甚至是响应式的部分。这就是Bootstrap的强大之处。如果我们比较一下我们为了使导航栏响应而做的工作，使用jQuery和所有媒体查询，我们写的代码比我们为*第一个项目*写的要少得多。现在让我们继续进行英雄部分的工作。
- en: Styling the hero section
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 样式化英雄部分
- en: 'Now that we understand how to use Bootstrap, we can start to use other components
    in Bootstrap''s library:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了如何使用Bootstrap，我们可以开始使用Bootstrap库中的其他组件：
- en: '[PRE13]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Let me explain the preceding piece of code a bit.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我解释一下上面的代码片段。
- en: 'For the *first* `div` it is as follows:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 对于*第一个*`div`，它如下所示：
- en: We first set a custom class—`.hero`—so that we can apply a custom code in the
    parent element.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先设置了一个自定义类`.hero`，这样我们就可以在父元素中应用自定义代码。
- en: We add the utility classes `.position-relative` and `.overflow-hidden` provided
    by Bootstrap so we don't have to apply them in the CSS.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们添加了Bootstrap提供的实用类`.position-relative`和`.overflow-hidden`，这样我们就不必在CSS中应用它们。
- en: The class `.d-flex` will set the display on `display: flex`.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '类`.d-flex`将设置`display: flex`。'
- en: The utility class `.align-items-center` will align the child elements so that
    they are vertically centered.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实用类`.align-items-center`将使子元素垂直居中对齐。
- en: We add a custom font `.custom-font-title` so that we can add to every element
    with a custom font.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们添加了一个自定义字体`.custom-font-title`，这样我们就可以为每个元素添加自定义字体。
- en: We then apply a *second* `div` with the `.container` class so that we can apply
    the Bootstrap default `container` class.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们应用了*第二个*`div`，使用`.container`类，这样我们就可以应用Bootstrap默认的`container`类。
- en: The following classes are all part of the Bootstrap library. You can see them
    on the Bootstrap website.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以下类都是Bootstrap库的一部分。您可以在Bootstrap网站上看到它们。
- en: 'The next part is to customize the `.hero` class we added:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是自定义我们添加的`.hero`类：
- en: '[PRE14]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Save, and take a look at what we have:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 保存，并查看我们的成果：
- en: '![](img/848912ed-18a1-4b45-a653-cc2db2a26cd8.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/848912ed-18a1-4b45-a653-cc2db2a26cd8.png)'
- en: Preview of the hero section
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 英雄部分的预览
- en: 'Now let''s add the final touch to it:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们为其添加最后的修饰：
- en: '[PRE15]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This will overwrite the default style of Bootstrap for the heading and primary
    button:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这将覆盖Bootstrap的默认样式，用于标题和主按钮：
- en: '![](img/39b8112b-a917-461b-b3d1-c31910ad78e7.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/39b8112b-a917-461b-b3d1-c31910ad78e7.png)
- en: Our final hero section
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终的英雄部分
- en: Let's start the Blog section now.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始博客部分。
- en: Styling the Blog section
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 美化博客部分
- en: With the earlier website that we built, we had our own grid system. However,
    now, we can simply use Bootstrap grid, which is way better and more practical
    than the one we created.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们之前建立的网站中，我们有自己的网格系统。然而，现在，我们可以简单地使用Bootstrap网格，这比我们创建的网格系统要好得多，更实用。
- en: 'Let''s start with the HTML:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从HTML开始：
- en: '[PRE16]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In the preceding code, you can note that there are a lot of `.py-5` `.my-5`
    classes. Those classes are spacing classes; they''ve been added to the last version
    of Bootstrap, so you can add spacing just with a simple class. To understand how
    you can use them, navigate to the Spacing section in the Utilities section of
    the documentation:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，您可以注意到有很多`.py-5` `.my-5`类。这些类是间距类；它们已经添加到Bootstrap的最新版本中，因此您可以只用一个简单的类来添加间距。要了解如何使用它们，请转到文档的实用程序部分中的间距部分：
- en: '![](img/7eda7dc3-316a-4503-ac85-b5bdc892d03f.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/7eda7dc3-316a-4503-ac85-b5bdc892d03f.png)
- en: Spacing utilities in Bootstrap
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap中的间距实用工具
- en: Also, you would have noticed we used the grid for each card. The grid is a bit
    tricky to understand at first, but, once you get it, it's very powerful and useful.
    The best thing to do is to play around with it. You can play around with the grid
    by checking the given examples at [https://getbootstrap.com/docs/4.0/layout/grid/](https://getbootstrap.com/docs/4.0/layout/grid/).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可能已经注意到我们为每个卡片使用了网格。一开始，网格有点难以理解，但是一旦理解了，它就非常强大和有用。最好的做法是尝试一下。您可以通过查看文档中提供的示例来尝试网格。
    [https://getbootstrap.com/docs/4.0/layout/grid/](https://getbootstrap.com/docs/4.0/layout/grid/)。
- en: Here, we added the `.col-md-4` class because we want three same blocks with
    the same width, as Bootstrap works with a 12-column system—12 divided by 3 equals
    4\. Furthermore, we used the `md` property so that it only applies when the browser
    resolution is bigger than 768px.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们添加了`.col-md-4`类，因为我们希望三个相同宽度的相同块，Bootstrap使用的是12列系统-12除以3等于4。此外，我们使用了`md`属性，以便仅在浏览器分辨率大于768px时应用。
- en: 'Let''s now duplicate the card six times for our six blog posts:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们为我们的六篇博客文章复制卡片六次：
- en: '[PRE17]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The last thing is to add the Show more button. We also need to center the button
    horizontally. For that, we''ll use the `.d-flex` flexbox Bootstrap class paired
    with the `.align-items-center` class:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一件事是添加“显示更多”按钮。我们还需要水平居中按钮。为此，我们将使用`.d-flex` flexbox Bootstrap类配合`.align-items-center`类：
- en: '[PRE18]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Finally, to make it centered, we just need to add the `.mx-auto` class, so the
    left and right margins are in auto.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，为了使其居中，我们只需要添加`.mx-auto`类，这样左右边距就会自动调整。
- en: 'Let''s check what we have now:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看现在有什么：
- en: '![](img/f0024867-8940-465b-b99e-ed92a16ee425.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/f0024867-8940-465b-b99e-ed92a16ee425.png)
- en: Work in progress – the Blog section
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 正在进行中-博客部分
- en: 'We have something pretty neat, without any styling at all. The only thing left
    is to customize the cards and the outline button, and we''re good to go:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有一些相当不错的东西，完全没有样式。唯一剩下的就是自定义卡片和轮廓按钮，然后我们就可以开始了：
- en: '[PRE19]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The following is the final stage of the design:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是设计的最终阶段：
- en: '![](img/e2164d73-9ded-4348-a013-18eb5677f6e2.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/e2164d73-9ded-4348-a013-18eb5677f6e2.png)
- en: The design finalized in the blog section
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 博客部分的设计最终确定
- en: That's it; we're all done with the Blog section. Let's start the ABOUT US section.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样；我们已经完成了博客部分。让我们开始关于我们部分。
- en: Styling the about section
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 美化关于部分
- en: 'This section is pretty straightforward. We''ll reuse the same class as previously
    used. You can observe the following HTML code:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分非常简单。我们将重用之前使用的相同类。您可以观察以下HTML代码：
- en: '[PRE20]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The only new class we used is the `.text-white` class. It''s a utility class
    of Bootstrap that lets you color the font with some primary colors. You can access
    the document at [https://getbootstrap.com/docs/4.0/utilities/colors/](https://getbootstrap.com/docs/4.0/utilities/colors/):'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的唯一新类是`.text-white`类。这是Bootstrap的一个实用类，可以让您使用一些主要颜色来着色字体。您可以在[https://getbootstrap.com/docs/4.0/utilities/colors/](https://getbootstrap.com/docs/4.0/utilities/colors/)上访问文档：
- en: '![](img/bf3957fb-8ac2-4200-915f-73be91b4a2bb.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/bf3957fb-8ac2-4200-915f-73be91b4a2bb.png)
- en: Text color classes in Bootstrap.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: Bootstrap中的文本颜色类。
- en: 'For the CSS, we only need to add the background and a little styling on the
    title:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 对于CSS，我们只需要添加背景和标题上的一点样式：
- en: '[PRE21]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Let''s take a look at how it looks:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它的样子：
- en: '![](img/d9733fd1-16a6-48ac-af89-5821475342b4.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/d9733fd1-16a6-48ac-af89-5821475342b4.png)
- en: The About Us section
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 关于我们部分
- en: This About Us section was pretty easy; let's continue to the PARTNERS section.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这个关于我们部分非常简单；让我们继续到合作伙伴部分。
- en: Styling the partner section
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 美化合作伙伴部分
- en: 'For the PARTNERS section, we set the HTML to something such as this:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 对于合作伙伴部分，我们将HTML设置为以下内容：
- en: '[PRE22]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: In the preceding code, we used the class `.justify-content-center` to horizontally
    center the two partners. Everything else is pretty simple.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的代码中，我们使用了`.justify-content-center`类来水平居中两个合作伙伴。其他的都很简单。
- en: 'In terms of CSS, the only thing we had to do was change the color of the background
    to black:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS方面，我们唯一需要做的就是将背景颜色更改为黑色：
- en: '[PRE23]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'It''s done! How easy was it?:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 完成了！有多容易呢？：
- en: '![](img/77f400eb-da8f-4344-ab15-f25816c7a3ae.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: ！[](img/77f400eb-da8f-4344-ab15-f25816c7a3ae.png)
- en: The PARTNERS section
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 合作伙伴部分
- en: Let's head to the final step, that is, the footer.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进入最后一步，也就是页脚。
- en: Styling the footer
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 美化页脚
- en: 'For the footer, things will get a bit more complex. The HTML will be something
    like this:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 对于页脚，事情会变得更加复杂。HTML将是这样的：
- en: '[PRE24]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'In a lot of Bootstrap classes, there are some responsive utility classes you
    can apply, and they''re always with the same references: `xs`, `sm`, `md`, and `lg`.
    For example, for the `.d-flex` class, you can apply the responsive utility class
    when you need to. By adding `.d-md-flex`, you apply the `display:flex` property only
    on medium screens. This is very useful and can be applied to a lot of Bootstrap
    classes.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多Bootstrap类中，有一些响应式实用类可以应用，并且它们始终具有相同的引用：`xs`、`sm`、`md`和`lg`。例如，对于`.d-flex`类，您可以在需要时应用响应式实用类。通过添加`.d-md-flex`，您仅在中等屏幕上应用`display:flex`属性。这非常有用，并且可以应用于许多Bootstrap类。
- en: 'With the good use of classes, the only CSS we needed to write was the following:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 通过良好使用类，我们需要编写的唯一CSS是以下内容：
- en: '[PRE25]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This is what our footer looks like:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们的页脚的样子：
- en: '![](img/1e039c8d-f312-4a4a-a978-62a4c4a3dfbc.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1e039c8d-f312-4a4a-a978-62a4c4a3dfbc.png)'
- en: Our footer section
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的页脚部分
- en: 'It''s fully responsive:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 它是完全响应式的：
- en: '![](img/0dffa5c5-80b5-4870-8064-0fb4318f6db7.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0dffa5c5-80b5-4870-8064-0fb4318f6db7.png)'
- en: The footer section on mobile
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 移动端的页脚部分
- en: Summary
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: You saw how Bootstrap can help you in your development phase. If you can master
    the use of Bootstrap, you can really kick-start or implement any project with
    ease and efficiency. This is why so many developers love Bootstrap, and you should
    too.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 您看到了Bootstrap如何在开发阶段帮助您。如果您能掌握Bootstrap的使用，您就可以真正轻松高效地启动或实施任何项目。这就是为什么有这么多开发人员喜欢Bootstrap，您也应该喜欢。
- en: What's next? Next, we will have an introduction to server-side rendering and
    why it's the new development trend. Let's go.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来呢？接下来，我们将介绍服务器端渲染以及为什么它是新的开发趋势。让我们开始吧。
