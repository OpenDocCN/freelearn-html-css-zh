- en: Chapter 8. Usage of Flexbox Transform
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。Flexbox变换的使用
- en: 'CSS is still developing. Each year, as a frontend developer, you need to watch
    current trends and new properties that you can set for the elements. Of course,
    there is a bunch of restrictions, but in some cases, those restrictions don''t
    exist, for example, in new browsers or selected mobile apps or because of set
    requirements. In this chapter, we will cover the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: CSS仍在发展。作为前端开发人员，每年您都需要关注当前趋势和可以为元素设置的新属性。当然，有很多限制，但在某些情况下，这些限制不存在，例如在新浏览器或选定的移动应用程序中，或者因为设置了要求。在本章中，我们将涵盖以下主题：
- en: Flexbox
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flexbox
- en: Transform properties
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 变换属性
- en: Flexbox
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Flexbox
- en: Flexbox is the one of the loudest and most modern layout methodologies used
    in current CSS projects. With flexbox, you can create a structure for your web
    page, which is more elastic than projects based on floating boxes. Why? We will
    check and make an investigation in this chapter. What you need to remember is
    that Internet Explorer supports flexbox since its 11th version.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Flexbox是当前CSS项目中使用的最响亮和最现代的布局方法之一。使用flexbox，您可以为网页创建一个比基于浮动框更灵活的结构。为什么？我们将在本章中进行检查和调查。您需要记住的是，自Internet
    Explorer的第11个版本起就支持flexbox。
- en: 'Let''s look at the basics of flexbox:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看flexbox的基础知识：
- en: '![Flexbox](img/00103.jpeg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![Flexbox](img/00103.jpeg)'
- en: 'As you can see in the preceding screenshot, there is new dictionary related
    to flexbox:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在前面的屏幕截图中所见，有一个与flexbox相关的新字典：
- en: '**Main axis** (green arrow)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主轴**（绿色箭头）'
- en: '**Main start** (red line)'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主轴开始**（红线）'
- en: '**Main end** (red line)'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主轴结束**（红线）'
- en: '**Main size** (black line)'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主轴尺寸**（黑线）'
- en: '**Cross axis** (green arrow)'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交叉轴**（绿色箭头）'
- en: '**Cross start** (red line)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交叉开始**（红线）'
- en: '**Cross end** (red line)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交叉结束**（红线）'
- en: '**Cross size** (black line)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交叉尺寸**（黑线）'
- en: 'Initialization of flexbox is very simple. You just need to add the following
    code to your container:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: flexbox的初始化非常简单。您只需要将以下代码添加到容器中：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The compiled code is:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 编译后的代码是：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The usage of flexbox still needs prefixes for cross-browser compatibility.
    This is a good reason to create reusable mixins:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: flexbox的使用仍然需要前缀以实现跨浏览器兼容性。这是创建可重用mixin的一个很好的理由：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now we can create the same `.flexContainer` like the following:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以创建与以下相同的`.flexContainer`：
- en: '[PRE3]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The compiled code is:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 编译后的代码是：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let''s create a few elements within the container:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在容器中创建一些元素：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'And let''s decorate a little bit our CSS code to see how the flexbox behaves:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们稍微装饰一下我们的CSS代码，以查看flexbox的行为：
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The compiled code is:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 编译后的代码是：
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now we will see in the browser the following view:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将在浏览器中看到以下视图：
- en: '![Flexbox](img/00104.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![Flexbox](img/00104.jpeg)'
- en: 'You can see from the preceding screenshot that the container is not reaching
    the full possible height in the browser, but it does reach its full width. Inside
    the elements are floated to the left side. Now let''s change the SASS code a little
    bit:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在前面的屏幕截图中所见，容器未达到浏览器中的最大可能高度，但确实达到了其全宽。内部元素向左浮动。现在让我们稍微改变SASS代码：
- en: '[PRE8]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The compiled code is:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 编译后的代码是：
- en: '[PRE9]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'And let''s add a color class to our HTML code:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在HTML代码中添加一个颜色类：
- en: '[PRE10]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'And in the browser, you will see the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中，您将看到以下内容：
- en: '![Flexbox](img/00105.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![Flexbox](img/00105.jpeg)'
- en: As you can see in the preceding screenshot, the container has a full width and
    height, and inside the elements are behaving like inline elements but with the
    full height inherited from the container. This is because of the property called
    `align-item`, whose default value is **stretch**. Let's dig a little bit more
    into the values of this property.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在前面的屏幕截图中所见，容器具有全宽和高，并且内部元素的行为类似于内联元素，但继承自容器的全高。这是因为属性称为`align-item`，其默认值为**stretch**。让我们更深入地了解此属性的值。
- en: Flexbox property align-items
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flexbox属性align-items
- en: This is one of the properties that we can add to `flexContainer`. It has a few
    values that we can set. For now, we know how the default stretch value behaves.
    Let's study the rest of the possible values. Before all the values, let's change
    HTML and CSS code a little bit to see better all the behaviors.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们可以添加到`flexContainer`的属性之一。它有一些我们可以设置的值。目前，我们知道默认的stretch值的行为。让我们研究其余可能的值。在所有值之前，让我们稍微改变HTML和CSS代码，以更好地查看所有行为。
- en: 'Let''s modify the HTML code as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们修改HTML代码如下：
- en: '[PRE11]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Let''s append the following SASS code:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们附加以下SASS代码：
- en: '[PRE12]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The CSS file is:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: CSS文件是：
- en: '[PRE13]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Different values of flex that can be used are as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用的flex的不同值如下：
- en: '`stretch` (default)![Flexbox property align-items](img/00106.jpeg)'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stretch`（默认）![Flexbox属性align-items](img/00106.jpeg)'
- en: Tip
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: For this value stretch, you need to remove classes that are adding the height
    of boxes (`h100px`, `h200px`, `h300px`).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此值stretch，您需要删除添加盒子高度（`h100px`，`h200px`，`h300px`）的类。
- en: '`flex-start`![Flexbox property align-items](img/00107.jpeg)'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flex-start`![Flexbox属性align-items](img/00107.jpeg)'
- en: '`flex-end`![Flexbox property align-items](img/00108.jpeg)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flex-end`![Flexbox属性align-items](img/00108.jpeg)'
- en: '`center`![Flexbox property align-items](img/00109.jpeg)'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`center`![Flexbox属性align-items](img/00109.jpeg)'
- en: '`baseline`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`baseline`'
- en: 'In this case, for a better understanding of this behavior, let''s change our
    code to see how the baseline is designated:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，为了更好地理解这种行为，让我们更改我们的代码以查看如何指定基线：
- en: '[PRE14]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'And in SASS the code can be written as:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在SASS中，代码可以编写为：
- en: '[PRE15]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The CSS code will be:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: CSS代码将是：
- en: '[PRE16]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output of the preceding code is as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 前面代码的输出如下：
- en: '![Flexbox property align-items](img/00110.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![Flexbox属性align-items](img/00110.jpeg)'
- en: The position of the box from the top is set from the baseline designated by
    first line of text in the box. Purposeful there is added a margin-top for box
    described as `h100px` box to see that the baseline is counted for from any of
    the boxes in the set of children.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 从顶部的盒子位置是从盒子中的第一行文本指定的基线设置的。有意义的是为`h100px`盒子添加了一个margin-top，以查看基线是从子元素集中的任何一个盒子计算的。
- en: 'Okay. But how this example will behave when we will add a box without a text
    content? Let''s modify HTML code as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 好的。但是当我们添加一个没有文本内容的框时，这个例子会如何表现呢？让我们修改HTML代码如下：
- en: '[PRE17]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'And let''s add the `w100px` class in SASS code:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在SASS代码中添加`w100px`类：
- en: '[PRE18]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The output of the preceding code is as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 前面代码的输出如下：
- en: '![Flexbox property align-items](img/00111.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: ！[Flexbox属性align-items]（img/00111.jpeg）
- en: As we can see in the preceding screenshot, the baseline is designated by the
    bottom line of the yellow empty box.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的屏幕截图中看到的那样，基线由黄色空框的底部线指定。
- en: Flexbox property flex-wrap
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flexbox属性flex-wrap
- en: One of the next properties that we can set for the flex container is `flex-wrap`.
    This property is related to wrapping in the box. We can set `nowrap`, `wrap`,
    and `wrap-reverse` as values. How do they behave?
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以为flex容器设置的下一个属性之一是`flex-wrap`。此属性与框中的换行有关。我们可以将`nowrap`，`wrap`和`wrap-reverse`设置为值。它们的行为如何？
- en: '`nowrap` (default)![Flexbox property flex-wrap](img/00112.jpeg)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nowrap`（默认）！[Flexbox属性flex-wrap]（img/00112.jpeg）'
- en: '`wrap`![Flexbox property flex-wrap](img/00113.jpeg)'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wrap`！[Flexbox属性flex-wrap]（img/00113.jpeg）'
- en: '`wrap-reverse`![Flexbox property flex-wrap](img/00114.jpeg)'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`wrap-reverse`！[Flexbox属性flex-wrap]（img/00114.jpeg）'
- en: 'As you can see, `wrap` and `wrap-reverse` work in the same way but with one
    simple difference: `wrap-reverse` is changing the order of flex items.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，`wrap`和`wrap-reverse`的工作方式相同，但有一个简单的区别：`wrap-reverse`改变了伸缩项的顺序。
- en: Flexbox property justify-content
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flexbox属性justify-content
- en: 'The `justify-content` property is related to the container too:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`justify-content`属性也与容器有关：'
- en: '`flex-start`![Flexbox property justify-content](img/00115.jpeg)'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flex-start`！[Flexbox属性justify-content]（img/00115.jpeg）'
- en: '`flex-end`![Flexbox property justify-content](img/00116.jpeg)'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flex-end`！[Flexbox属性justify-content]（img/00116.jpeg）'
- en: '`center`![Flexbox property justify-content](img/00117.jpeg)'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`center`！[Flexbox属性justify-content]（img/00117.jpeg）'
- en: '`space-between`![Flexbox property justify-content](img/00118.jpeg)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space-between`！[Flexbox属性justify-content]（img/00118.jpeg）'
- en: '`space-around`![Flexbox property justify-content](img/00119.jpeg)'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space-around`！[Flexbox属性justify-content]（img/00119.jpeg）'
- en: Flexbox property align-content
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flexbox属性align-content
- en: 'The alignment of items is related to `flexContainer`. You need to remember
    that the effects will be visible when you have at least two lines of items. So
    let''s change the following example code:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 项目的对齐与`flexContainer`有关。您需要记住，当您至少有两行项目时，效果才会可见。因此，让我们更改以下示例代码：
- en: 'HTML:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: HTML：
- en: '[PRE19]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The SASS code is:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: SASS代码是：
- en: '[PRE20]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The CSS code is:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: CSS代码是：
- en: '[PRE21]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '`flex-start`![Flexbox property align-content](img/00120.jpeg)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flex-start`！[Flexbox属性align-content]（img/00120.jpeg）'
- en: '`flex-end`![Flexbox property align-content](img/00121.jpeg)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`flex-end`！[Flexbox属性align-content]（img/00121.jpeg）'
- en: '`center`![Flexbox property align-content](img/00122.jpeg)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`center`！[Flexbox属性align-content]（img/00122.jpeg）'
- en: '`space-between`![Flexbox property align-content](img/00123.jpeg)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space-between`！[Flexbox属性align-content]（img/00123.jpeg）'
- en: '`space-around`![Flexbox property align-content](img/00124.jpeg)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`space-around`！[Flexbox属性align-content]（img/00124.jpeg）'
- en: '`stretch`![Flexbox property align-content](img/00125.jpeg)'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stretch`！[Flexbox属性align-content]（img/00125.jpeg）'
- en: 'In the last example, all classes have been removed relating to height: `h100px`,
    `h200px`.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一个例子中，所有与高度相关的类都已被删除：`h100px`，`h200px`。
- en: Flexbox property flex-direction
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Flexbox属性flex-direction
- en: 'The different properties of flexbox are as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: flexbox的不同属性如下：
- en: '`row`![Flexbox property flex-direction](img/00126.jpeg)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`row`！[Flexbox属性flex-direction]（img/00126.jpeg）'
- en: '`row-reverse`![Flexbox property flex-direction](img/00127.jpeg)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`row-reverse`！[Flexbox属性flex-direction]（img/00127.jpeg）'
- en: '`column`![Flexbox property flex-direction](img/00128.jpeg)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column`！[Flexbox属性flex-direction]（img/00128.jpeg）'
- en: '`column-reverse`![Flexbox property flex-direction](img/00129.jpeg)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`column-reverse`！[Flexbox属性flex-direction]（img/00129.jpeg）'
- en: 'Useful mixins that you can add to your collection are as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以添加到您的收藏中的有用的mixin如下：
- en: '[PRE22]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Usage of flexbox – creating page structure
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用flexbox-创建页面结构
- en: 'When you are starting to work on a project, you are taking prepared layout
    as a graphic file and you need to make it available and interactive in the browser.
    Let''s begin with the currently most known structure:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当您开始处理项目时，您会将准备好的布局作为图形文件，并且需要在浏览器中使其可用和交互。让我们从当前最知名的结构开始：
- en: '[PRE23]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'So we want to take the header on the top aside from the left main on the right
    and footer on the bottom:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们希望将标题放在顶部，左侧主体放在右侧，页脚放在底部：
- en: '[PRE24]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The CSS file is:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: CSS文件是：
- en: '[PRE25]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The effect in browser will be as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 浏览器中的效果将如下：
- en: '![Usage of flexbox – creating page structure](img/00130.jpeg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: ！[使用flexbox-创建页面结构]（img/00130.jpeg）
- en: 'When you wish to change the sidebar width to a static value, you can append
    a small change into the SASS declaration of the side menu:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 当您希望将侧边栏宽度更改为静态值时，您可以在侧边菜单的SASS声明中添加一个小的更改：
- en: '[PRE26]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'And it will be in CSS:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 它将在CSS中：
- en: '[PRE27]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: This will keep the left column static width.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这将保持左侧列的静态宽度。
- en: Usage of flexbox – change order of boxes in mobile/tablet view
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用flexbox-在移动/平板视图中更改框的顺序
- en: 'When you are creating HTML layout adjustment to a desktop and mobile, a few
    possibilities may occur where you need to change the order of the boxes. Easy
    examples for a desktop are as follows:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在创建HTML布局时调整到桌面和移动设备时，可能会出现一些情况，您需要更改框的顺序。桌面的简单示例如下：
- en: First element needs to be on the top
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个元素需要在顶部
- en: Second element needs to be on the bottom
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个元素需要在底部
- en: 'Easy examples for a mobile are as follows:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 移动设备的简单示例如下：
- en: Second element needs to be on the top
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个元素需要在顶部
- en: First element needs to be on the bottom
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个元素需要在底部
- en: 'Let''s use the following HTML code:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用以下HTML代码：
- en: '[PRE28]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'And let''s create a few lines of SASS code:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建几行SASS代码：
- en: '[PRE29]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'In CSS:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS中：
- en: '[PRE30]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'On the desktop, when the viewport width is wider than `600px`, you can see
    the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在桌面上，当视口宽度大于`600px`时，您可以看到以下内容：
- en: '![Usage of flexbox – change order of boxes in mobile/tablet view](img/00131.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: ！[使用flexbox-在移动/平板视图中更改框的顺序]（img/00131.jpeg）
- en: 'And on a view smaller than `600px`, you can see the following:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在小于`600px`的视图上，您可以看到以下内容：
- en: '![Usage of flexbox – change order of boxes in mobile/tablet view](img/00132.jpeg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![使用flexbox - 在移动/平板视图中更改框的顺序](img/00132.jpeg)'
- en: More about transform
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更多关于transform的内容
- en: 'Transformations are very useful for frontend developers because of basic graphic
    operations that you can perform using only CSS. In previous versions of CSS, it
    was only possible with JavaScript. In one of the previous chapters, we used `transform`
    for centering elements in the container. Let''s now try to understand it more
    and check what else we can do with it:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 变换对于前端开发人员非常有用，因为你可以仅使用CSS执行基本的图形操作。在CSS的早期版本中，这只能通过JavaScript实现。在之前的章节中，我们使用`transform`来将元素居中在容器中。现在让我们尝试更深入地理解它，并检查我们还能做些什么：
- en: 'The HTML file is:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: HTML文件如下：
- en: '[PRE31]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The SASS file is:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: SASS文件如下：
- en: '[PRE32]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The CSS file is:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: CSS文件如下：
- en: '[PRE33]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The effect in the browser will be as follows:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中的效果将如下所示：
- en: '![More about transform](img/00133.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![更多关于transform的内容](img/00133.jpeg)'
- en: 'In the preceding example, there is a bunch of possible transforms in the sample
    view in the browser. In the first line, you can see the element without any transforms.
    In each of the next lines, you can check the following:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，在浏览器的示例视图中有一堆可能的变换。在第一行中，你可以看到没有任何变换的元素。在接下来的每一行中，你可以检查以下内容：
- en: '**rotate**'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**rotate**'
- en: '**skew**'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**skew**'
- en: '**scale**'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**scale**'
- en: '**translate**'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**translate**'
- en: '**multiple**'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**multiple**'
- en: 'Important aspects of transforms are the units that can be used in each of the
    transform types:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 变换的重要方面是可以在每种变换类型中使用的单位：
- en: '`rotate`: degrees, for example, `rotate(20deg, 40deg).`'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rotate`：度数，例如，`rotate(20deg, 40deg).`'
- en: '`skew`: degrees, for example, `skew(30deg, 50deg).`'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`skew`：度数，例如，`skew(30deg, 50deg).`'
- en: '`scale`: number, where 1 = 100%, for example, `scale(1.5, 1.5).`'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scale`：数字，其中1 = 100%，例如，`scale(1.5, 1.5).`'
- en: '`translate`: units related to width, such as pixels percentages, for example,
    `translate(50%, 50%)`. Important information: percentages are related to the dimensions
    of the transformed object.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`translate`：与宽度相关的单位，如像素百分比，例如，`translate(50%, 50%)`。重要信息：百分比与转换对象的尺寸相关。'
- en: In the last line of the preceding screenshot, there is a sample which shows
    how transforms can be chained in one line. This sample can be used when you need
    to append more than one transform.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面截图的最后一行中，有一个示例显示了如何在一行中链接多个变换。当你需要添加多个变换时，可以使用这个示例。
- en: Summary
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you gained knowledge about the main features of modern CSS.
    You learned how flexbox works and how you can use it in your projects. You analyzed
    two-dimensional transforms, which you can use in your projects. This chapter is
    an introduction to the new CSS features and will help you to understand possibilities.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了现代CSS的主要特性。你学会了flexbox的工作原理以及如何在项目中使用它。你分析了二维变换，这些变换可以在你的项目中使用。本章是对新CSS特性的介绍，将帮助你了解可能性。
- en: In the next chapter, we will focus on gradients, shadows, and animations. We
    will create a linear and radial gradient box and text shadows, and additionally
    gain knowledge about the `calc` function.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将专注于渐变、阴影和动画。我们将创建线性和径向渐变框和文本阴影，并且还将了解`calc`函数的知识。
