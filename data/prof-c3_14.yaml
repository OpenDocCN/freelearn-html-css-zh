- en: Chapter 14. Final Automatization and Processes Optimization
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章。最终自动化和流程优化
- en: In this last chapter, we will discuss a final automatization of repeatable processes
    during the creation of CSS code. There are a lot of processes that can be automatized,
    but awareness of whether it can be done and knowledge of the tools to be used
    is essential. In this chapter, we will focus on tools and how to implement automatizations
    in the Gulp task runner.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这最后一章中，我们将讨论在创建CSS代码过程中重复流程的最终自动化。有很多流程可以自动化，但是意识到它是否可以做到以及使用的工具的知识是必不可少的。在本章中，我们将专注于工具以及如何在Gulp任务运行器中实现自动化。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Images on retina and mobile devices
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视网膜和移动设备上的图像
- en: How to recognize unused CSS
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何识别未使用的CSS
- en: How to minify the code
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何压缩代码
- en: How to make a screenshots from the list of pages for quicker overview
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何从页面列表中制作截图以便快速概览
- en: How to use the basics of Jade templating and append its compilation into Gulp
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Jade模板的基础知识并将其编译到Gulp中
- en: Gulp
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gulp
- en: At the beginning of this book, I introduced Gulp as a starter for SASS. But
    using Gulp just to compile SASS can be a waste of time. In this chapter, we will
    add more tasks to Gulp, which can be used as a frontend developer and which will
    help you to optimize your code.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的开头，我介绍了Gulp作为SASS的入门。但是仅仅使用Gulp来编译SASS可能是浪费时间的。在本章中，我们将向Gulp添加更多任务，这些任务可以作为前端开发人员使用，并将帮助你优化你的代码。
- en: Jade as your templating engine
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Jade作为你的模板引擎
- en: 'Writing HTML files can be problematic in the case of bigger projects. The maintenance
    of repeatable elements of a page, such as main navigation footer sidebars, can
    be a problem when you need to work with, for example, 10 files. Each time you
    want to change something in the footer, you will need to update 10 files. The
    situation becomes more complicated when a project has 50 templates. You can start
    using, for example, PHP or any language that includes files with repeatable parts
    of code or use one of the template languages. There are multiple templating systems.
    Some of the well-known and trendy ones are listed here:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在大型项目的情况下编写HTML文件可能会有问题。页面的可重复元素的维护，比如主导航页脚边栏，在需要处理10个文件时可能会成为一个问题。每次你想要更改页脚中的内容，你都需要更新10个文件。当一个项目有50个模板时，情况会变得更加复杂。你可以开始使用PHP或任何包含重复代码部分的文件的语言，或者使用其中一个模板语言。有多种模板系统。以下是一些知名和时髦的模板系统：
- en: Handlebars
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手柄
- en: HAML
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HAML
- en: Jade
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jade
- en: Slim
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Slim
- en: 'Let''s focus on Jade. Why? Because of the following features:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们专注于Jade。为什么？因为有以下功能：
- en: Mixins support
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合支持
- en: Master templates
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主模板
- en: Partialization of files
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件的部分化
- en: Indented syntax (similar to SASS)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩进的语法（类似于SASS）
- en: Installing and using Jade
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和使用Jade
- en: 'Jade is installed by node package manager. You can install it with the following
    command:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Jade是通过node包管理器安装的。你可以用以下命令安装它：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If you want to compile some file, you just need to invoke the HTML file as
    follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想编译一些文件，只需要调用HTML文件如下：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For more information, I recommend you to check the official documentation of
    the Jade templating system at [http://jade-lang.com/](http://jade-lang.com/).
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 更多信息，我建议你查看Jade模板系统的官方文档[http://jade-lang.com/](http://jade-lang.com/)。
- en: Basics of Jade
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Jade的基础知识
- en: 'It is good to have a theoretical introduction, but let''s try to describe this
    part of the code into Jade:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 理论介绍很重要，但让我们试着将代码的这部分描述成Jade：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In Jade, it will look like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jade中，它会是这样的：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can see that you don''t need to think about the standard HTML problem "is
    my tag closed?" Indentations are keeping track of the opening and closing of tags.
    Each text that you want to append into a tag appears after a space after the tag
    description (name and attributes). Let''s take a look at this part of the code:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，你不需要考虑标准的HTML问题“我的标签关闭了吗？”缩进会跟踪标签的开启和关闭。你想要附加到标签中的每个文本都会出现在标签描述（名称和属性）后的空格后。让我们看一下代码的这部分：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This part of code will be compiled to:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分代码将被编译成：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'As you can see, in Jade, an attribute (`href`) appeared after element name
    (`a`), which is described in brackets. Let''s take the next part of the HTML code
    that we will translate to Jade:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在Jade中，属性（`href`）出现在元素名称（`a`）之后，用括号括起来。让我们看一下我们将要翻译成Jade的HTML代码的下一部分：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This part of the code will be repeating on all pages because it contains the
    `head` tag of our HTML. In Jade, it will look like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分代码将在所有页面上重复出现，因为它包含了我们HTML的`head`标签。在Jade中，它会是这样的：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Here you can see how to append more attributes to the HTML element. In the `link`
    element, each attribute in brackets is separated with commas.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里你可以看到如何向HTML元素添加更多属性。在`link`元素中，括号中的每个属性都用逗号分隔。
- en: 'The next part of the code is related to the DOM elements with classes and IDs:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的下一部分与带有类和ID的DOM元素有关：
- en: '[PRE8]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In Jade, the code looks like this:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jade中，代码看起来是这样的：
- en: '[PRE9]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You can see that you don''t need to describe this part:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，你不需要描述这部分：
- en: '[PRE10]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This is written as:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这是写成这样的：
- en: '[PRE11]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'There is a short form in Jade:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在Jade中有一个简短的形式：
- en: '[PRE12]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The same situation with classes:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 类似的情况也适用于类：
- en: '[PRE13]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can use a short form too:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用一个简短的形式：
- en: '[PRE14]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This short method makes Jade easy to understand because it is based on selectors
    used in CSS.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这种简短的方法使Jade易于理解，因为它基于CSS中使用的选择器。
- en: Mixins in Jade
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Jade中的混合
- en: 'Mixins in Jade are very useful, especially when you have some repeatable elements
    on the web page. This can be, for example, some small element like `a` with `href`:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Jade中的混合很有用，特别是当网页上有一些可重复的元素时。例如，可能是一些带有`href`的小元素`a`：
- en: '[PRE15]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'All we need to do now to invoke it is just add it in your template:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要做的就是将它添加到你的模板中：
- en: '[PRE16]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'And in your compiled file, you will see:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在你编译的文件中，你会看到：
- en: '[PRE17]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Include and extend functions in Jade
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Jade中包含和扩展功能
- en: 'As mentioned before, we can keep parts of code in separate files. The easiest
    way to do it is the `include` method. Let''s imagine that we have defined the
    main `nav` in the file `navigation.jade` and we want to append its content in
    our template. The code is as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们可以将代码的部分保存在单独的文件中。这样做的最简单方法是使用`include`方法。假设我们已经在文件`navigation.jade`中定义了主要的`nav`，并且我们希望在我们的模板中添加其内容。代码如下：
- en: 'File name is: `navigation.jade`'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`navigation.jade`
- en: '[PRE18]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'File name is: `template.jade`'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`template.jade`
- en: '[PRE19]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'When you compile `template.jade`, you will get:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 当您编译`template.jade`时，您将得到：
- en: '[PRE20]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'This is a great moment to use a master layout that can be extended. This can
    be done with code manipulation. The first manipulation has to be made in the master
    template—define a block that will be swapped in our HTML file. The second needs
    to be done in the file that will represent a final HTML file—point master template
    which will be extended. The code is as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很好的时机来使用可以扩展的主布局。这可以通过代码操作来完成。第一次操作必须在主模板中进行 - 定义一个将在我们的HTML文件中交换的块。第二次需要在将代表最终HTML文件的文件中完成
    - 指定将扩展的主模板。代码如下：
- en: 'File name is: `master.jade`'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`master.jade`
- en: '[PRE21]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'File name is: `index.jade`'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`index.jade`
- en: '[PRE22]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Compiled document:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 编译后的文档：
- en: '[PRE23]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Jade in gulp.js
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在gulp.js中使用Jade
- en: 'To create or add Jade tasks in `gulpfile.js`, you need to install a specific
    package with `npm`: `gulp-jade`. To do so, use the following command:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 要在`gulpfile.js`中创建或添加Jade任务，您需要使用`npm`安装特定的包：`gulp-jade`。要这样做，请使用以下命令：
- en: '[PRE24]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then you need to define a new task in `gulpfile.js` and add a watcher for templates,
    which will be stored in the `src/jade` directory. Here''s a listing of the extended
    `gulpfile.js` from the first chapter of this book:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您需要在`gulpfile.js`中定义一个新任务，并为模板添加一个监视器，该模板将存储在`src/jade`目录中。以下是来自本书第一章的扩展`gulpfile.js`的清单：
- en: '[PRE25]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: How will it behave? Every time you change any of the files in the folder `src/jade`,
    compiled files will land in the `dist` folder. Of course, this structure can be
    changed if you wish; this is just sample of usage. Feel free to change it!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 它会表现如何？每当您更改`src/jade`文件夹中的任何文件时，编译后的文件将会出现在`dist`文件夹中。当然，如果您愿意，这种结构可以更改；这只是使用示例。随意更改它！
- en: UnCSS
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UnCSS
- en: 'How many times have you faced a situation where some classes/selectors are
    not used in HTML but are described in CSS code? This happens every time your project
    is changed or redesigned. For example, your task is to remove some section and
    add a few more lines in the HTML code. So you will add some CSS code and then
    remove some of it. But are you sure that the CSS code doesn''t contain unused
    CSS portions of code? UnCSS will help you to finish this task. To install it,
    you need to execute this command:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 有多少次你面对过这样的情况：HTML中没有使用某些类/选择器，但在CSS代码中有描述？每当您的项目更改或重新设计时，这种情况都会发生。例如，您的任务是删除某些部分并在HTML代码中添加几行。因此，您将添加一些CSS代码，然后删除其中的一些。但您确定CSS代码不包含未使用的CSS代码部分吗？UnCSS将帮助您完成此任务。要安装它，您需要执行此命令：
- en: '[PRE26]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Let''s take a look at the flags used in the `npm` command:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看在`npm`命令中使用的标志：
- en: '| Flag | Description |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 标志 | 描述 |'
- en: '| --- | --- |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `-g` | Global installation |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| `-g` | 全局安装 |'
- en: '| `--save` | Local installationThese packages will appear in `package.json`
    in the section `dependencies`.These packages are needed to run your app in production.
    |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `--save` | 本地安装这些包将出现在`package.json`的`dependencies`部分。这些包是在生产中运行应用程序所需的。'
- en: '| `--save-dev` | Local installationThese packages will appear in `package.json`
    in the section `devDependencies`.These packages are needed for development and
    testing processes. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `--save-dev` | 本地安装这些包将出现在`package.json`的`devDependencies`部分。这些包是用于开发和测试过程的。'
- en: Integrating UnCSS in Gulp
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Gulp中集成UnCSS
- en: 'First, we need to install `gulp-uncss` through `npm`:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要通过`npm`安装`gulp-uncss`：
- en: '[PRE27]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Now, we need to add new tasks in `gulpfile.js`. We will need to create a test
    stage in our project, which will be stored in the `test` directory. You need these
    new tasks to make a process based on `uncss`:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要在`gulpfile.js`中添加新的任务。我们需要在项目中创建一个测试阶段，该阶段将存储在`test`目录中。您需要这些新任务来基于`uncss`进行处理：
- en: '[PRE28]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'To run the `uncss` task, you need to use the following command:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行`uncss`任务，您需要使用以下命令：
- en: '[PRE29]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'This command will perform the following tasks:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将执行以下任务：
- en: Compile Jade files to the `test` folder
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将Jade文件编译到`test`文件夹中
- en: Remove old CSS files from the `test` folder
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从`test`文件夹中删除旧的CSS文件
- en: Compile SASS files to the `test` folder
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将SASS文件编译到`test`文件夹中
- en: Run the `uncss` task and save the document with only the used part of CSS in
    the `test/uncss` folder
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行`uncss`任务，并将文档保存为`test/uncss`文件夹中仅使用的CSS部分
- en: Now we need to test it live. We will prepare a short testing environment.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要实时测试。我们将准备一个简短的测试环境。
- en: 'Here''s the structure of the files:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是文件的结构：
- en: '[PRE30]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The code is as follows:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 代码如下：
- en: 'File name is: `main.jade`'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`main.jade`
- en: '[PRE31]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'File name is: `navigation.jade`'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`navigation.jade`
- en: '[PRE32]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'File name is: `footer.jade`'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`footer.jade`
- en: '[PRE33]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'File name is: `index.jade`'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`index.jade`
- en: '[PRE34]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'File name is: `about.jade`'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`about.jade`
- en: '[PRE35]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'File name is: `contact.jade`'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`contact.jade`
- en: '[PRE36]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'File name is: `main.sass`'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`main.sass`
- en: '[PRE37]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Now, let''s check whether the process was good for us. This is the file compiled
    from SASS:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们检查这个过程对我们是否有利。这是从SASS编译的文件：
- en: '[PRE38]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'This file is checked by `uncss`, which looked into all the templates (`index.html`,
    `about.html`, and `contact.html`):'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件由`uncss`检查，它查看了所有模板（`index.html`，`about.html`和`contact.html`）：
- en: '[PRE39]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Our new command built with Gulp removed all unnecessary CSS declarations.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的新命令是用Gulp构建的，删除了所有不必要的CSS声明。
- en: Minifying CSS
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 压缩CSS
- en: 'Minification is a process that should be done mainly for production code. It''s
    going to be hard to work on minified files during the development process, so
    we need to minify our code for production code only. It is possible to enable
    minification in SASS or Compass compilation by adding a proper flag (`--compressed`).
    We will additionally use an external tool for this, to minify the code after the
    `uncss` process. What we need to do now is to install `gulp-clean-css`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 缩小文件的过程主要应该用于生产代码。在开发过程中，对缩小的文件进行操作会很困难，因此我们只需要为生产代码进行缩小。可以通过添加适当的标志（`--compressed`）来启用
    SASS 或 Compass 编译中的缩小。我们还将使用一个外部工具，在 `uncss` 过程之后对代码进行缩小。现在我们需要安装 `gulp-clean-css`：
- en: '[PRE40]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Now, minify the result of the `uncss` process. We will create a `prod` directory
    in which we will store our final version of the project. Now let''s import `gulp-clean-css`:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，缩小 `uncss` 过程的结果。我们将创建一个 `prod` 目录，其中存储项目的最终版本。现在让我们导入 `gulp-clean-css`：
- en: '[PRE41]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Let''s create the sections needed in `gulpfile.js`:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 `gulpfile.js` 中创建所需的部分：
- en: '[PRE42]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Final automatizer
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终的自动化工具
- en: 'Now we have to gather all our previously created tasks into one file. The core
    of the `gulp` project is two files: `package.json`, which gathers all project
    dependencies, and `gulpfile`, in which you can store all tasks. Here are the tasks:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要将之前创建的所有任务汇总到一个文件中。`gulp` 项目的核心是两个文件：`package.json`，它汇总了所有项目依赖，以及 `gulpfile`，你可以在其中存储所有任务。以下是任务：
- en: 'File name is: `package.json`'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`package.json`
- en: '[PRE43]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'File name is: `gulpfile.json`'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 文件名是：`gulpfile.json`
- en: '[PRE44]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Summary
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed the basics of the Jade templating system. We saw
    how to append it to the frontend developer's workflow. Based on the templating
    system, you can now include UnCSS to your process and remove unnecessary code
    from the CSS file. Then we minified the final result and created a production
    code.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了 Jade 模板系统的基础知识。我们看到了如何将其添加到前端开发人员的工作流程中。基于模板系统，你现在可以将 UnCSS 包含到你的流程中，并从
    CSS 文件中删除不必要的代码。然后我们对最终结果进行了缩小，并创建了生产代码。
- en: You can treat this automatizer as a starter for your projects and you can adjust
    it for your projects. You can also add new features and work on its evolution.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将这个自动化工具视为项目的起点，并根据自己的项目进行调整。你也可以添加新功能并不断完善它。
