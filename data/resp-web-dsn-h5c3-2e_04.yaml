- en: Chapter 4. HTML5 for Responsive Web Designs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章。响应式Web设计的HTML5
- en: If you are looking for guidance on using the HTML5 **application programming
    interfaces** (**APIs**), I'm going to paraphrase a line from a great Western movie
    and say, "I'm not your Huckleberry".
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在寻求使用HTML5 **应用程序编程接口**（**API**）的指导，我要引用一部伟大的西部电影中的一句话，说：“我不是你的Huckleberry”。
- en: What I would like to look at with you is the 'vocabulary' part of HTML5; its
    semantics. More succinctly, the way we can use the new elements of HTML5 to describe
    the content we place in markup. The majority of content in this chapter is not
    specific to a responsive web design. However, HTML is the very foundation upon
    which all web-based designs and applications are built. Who doesn't want to build
    upon the strongest possible foundation?
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我想和您一起看看HTML5的“词汇”部分；它的语义。更简洁地说，我们可以如何使用HTML5的新元素来描述我们在标记中放置的内容。本章大部分内容与响应式Web设计无关。然而，HTML是构建所有基于Web的设计和应用程序的基础。谁不想在最坚实的基础上构建？
- en: You might be wondering 'what is HTML5 anyway?' In which case I would tell you
    that HTML5 is simply the description given to the latest version of HTML, the
    language of tags we use to build web pages. HTML itself is a constantly evolving
    standard, with the prior major version being 4.01.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会想知道“HTML5到底是什么？”如果是这样，我会告诉您，HTML5只是给HTML的最新版本的描述，这是我们用来构建网页的标签语言。HTML本身是一个不断发展的标准，之前的主要版本是4.01。
- en: For a little more background on the versions and timeline of HTML's evolution,
    you can read the Wikipedia entry at [http://en.wikipedia.org/wiki/HTML#HTML_versions_timeline](http://en.wikipedia.org/wiki/HTML#HTML_versions_timeline).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 关于HTML的版本和时间线的更多背景信息，您可以阅读维基百科条目[http://en.wikipedia.org/wiki/HTML#HTML_versions_timeline](http://en.wikipedia.org/wiki/HTML#HTML_versions_timeline)。
- en: Tip
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: HTML5 is now a recommendation from the W3C. You can read the specification at
    [http://www.w3.org/TR/html5/](http://www.w3.org/TR/html5/).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5现在是W3C的推荐标准。您可以在[http://www.w3.org/TR/html5/](http://www.w3.org/TR/html5/)上阅读规范。
- en: 'The topics we will cover in this chapter are:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖的主题有：
- en: How well supported is HTML5?
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML5得到了多大的支持？
- en: Starting an HTML5 page the right way
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正确开始HTML5页面
- en: Easy-going HTML5
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松的HTML5
- en: New semantic elements
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的语义元素
- en: Text-level semantics
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本级语义
- en: Obsolete features
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过时的功能
- en: Putting the new elements to use
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将新元素投入使用
- en: '**Web Content Accessibility Guidelines** (**WCAG**) accessibility conformance
    and **Web Accessibility Initiative-Accessible Rich Internet Applications** (**WAI-ARIA**)
    for more accessible web applications'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web内容可访问性指南**（**WCAG**）可访问性符合和**Web可访问性倡议-可访问丰富的互联网应用程序**（**WAI-ARIA**）用于更具可访问性的Web应用程序'
- en: Embedding media
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌入媒体
- en: Responsive video and iFrames
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 响应式视频和iFrames
- en: A note about 'offline first'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于“离线优先”的说明
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: HTML5 also provides specific tools for handling forms and user input. This set
    of features takes much of the burden away from more resource heavy technologies
    like JavaScript for things like form validation. However, we're going to look
    at HTML5 forms separately in [Chapter 9](ch09.html "Chapter 9. Conquer Forms with
    HTML5 and CSS3"), *Conquer Forms with HTML5 and CSS3*.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5还提供了处理表单和用户输入的特定工具。这一系列功能大大减轻了像JavaScript这样的资源密集型技术对表单验证等方面的负担。然而，我们将在[第9章](ch09.html
    "第9章。用HTML5和CSS3征服表单")中单独讨论HTML5表单，*用HTML5和CSS3征服表单*。
- en: HTML5 markup – understood by all modern browsers
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML5标记-所有现代浏览器都能理解
- en: Nowadays, the majority of websites I see (and all of those I make myself) are
    written using HTML5, rather than the older HTML 4.01 standard.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，我看到的大多数网站（包括我自己制作的所有网站）都是使用HTML5编写的，而不是旧的HTML 4.01标准。
- en: All modern browsers understand the new semantic elements of HTML5 (the new structural
    elements, video, and audio tags) and even older versions of Internet Explorer
    (versions before Internet Explorer 9) can be served a tiny 'polyfill' to allow
    it to render these new elements.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 所有现代浏览器都理解HTML5的新语义元素（新的结构元素、视频和音频标签），甚至旧版本的Internet Explorer（Internet Explorer
    9之前的版本）也可以使用一个小的“polyfill”来渲染这些新元素。
- en: Note
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**What is a polyfill?**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**什么是polyfill？**'
- en: The term **polyfill** was originated by Remy Sharp as an allusion to filling
    the cracks in older browsers with Polyfilla (known as **Spackling Paste** in the
    US). Therefore, a polyfill is a JavaScript 'shim' to effectively replicate newer
    features in older browsers. However, it's important to be aware that polyfills
    add extra flab to your code. Therefore, even if you could add 15 polyfill scripts
    to make Internet Explorer 6 render a site identically to every other browser,
    it doesn't mean you necessarily should.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 术语**polyfill**是由Remy Sharp创造的，意指用Polyfilla（在美国称为**Spackling Paste**）填补旧浏览器中的裂缝。因此，polyfill是JavaScript的“垫片”，可以在旧浏览器中有效地复制新功能。然而，重要的是要意识到polyfill会给您的代码增加额外的负担。因此，即使您可以添加15个polyfill脚本使Internet
    Explorer 6渲染网站与其他浏览器完全相同，也并不意味着您一定应该这样做。
- en: If you need to enable HTML5 structural elements, I'd look at Remy Sharp's original
    script ([http://remysharp.com/2009/01/07/html5-enabling-script/](http://remysharp.com/2009/01/07/html5-enabling-script/))
    or create a custom build of Modernizr ([http://modernizr.com](http://modernizr.com)).
    If Modernizr is a tool you've not come across or used, there is a whole section
    on it in the next chapter.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要启用HTML5结构元素，我建议查看Remy Sharp的原始脚本（[http://remysharp.com/2009/01/07/html5-enabling-script/](http://remysharp.com/2009/01/07/html5-enabling-script/)）或创建Modernizr的自定义版本（[http://modernizr.com](http://modernizr.com)）。如果您还没有接触或使用Modernizr，下一章中有一个完整的部分介绍它。
- en: With that in mind, let's consider the start of an HTML5 page. Let's get a handle
    on all the opening tags and what they do.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，让我们来考虑一下HTML5页面的开始。让我们了解所有的开放标签以及它们的作用。
- en: Starting an HTML5 page the right way
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正确开始HTML5页面
- en: 'Let''s start right at the beginning of an HTML5 document. Screw this part up
    and you could spend a long time wondering why your page doesn''t behave as it
    should. The first few lines should look something like this:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从HTML5文档的开头开始。如果搞砸了这部分，你可能会花很长时间想知道为什么你的页面表现得不像应该的那样。前几行应该是这样的：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Let's go through these tags one by one. Generally, they will be the same every
    time you create a web page but trust me, it's worth understanding what they do.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐个讨论这些标签。通常情况下，每次创建网页时它们都是一样的，但相信我，了解它们的作用是值得的。
- en: The doctype
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档类型
- en: The `doctype` is a means of communicating to the browser the type of document
    we have. Otherwise, it wouldn't necessarily know how to use the content within
    it.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`doctype`是一种向浏览器传达我们拥有的文档类型的方式。否则，它可能不知道如何使用其中的内容。'
- en: 'We opened our document with the HTML5 `doctype` declaration:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用HTML5的`doctype`声明打开了我们的文档：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you're a fan of lowercase, then `<!doctype html>` is just as good. It makes
    no difference.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢小写字母，那么`<!doctype html>`也是一样好的。没有任何区别。
- en: 'This is a welcome change from HTML 4.01 pages. They used to start something
    like this:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这是从HTML 4.01页面中的一个受欢迎的变化。它们过去通常是这样开始的：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: What an enormous pain in the pimply rear! No wonder I used to copy and paste
    it!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这真是一个巨大的痛苦！难怪我过去常常复制粘贴它！
- en: 'The HTML5 `doctype` on the other hand is nice and short, just `<!DOCTYPE html>`.
    Interesting fact (to me anyway): it actually ended up this way as it was determined
    that this was the shortest method of telling a browser to render the page in "standards
    mode".'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，HTML5的`doctype`非常简短，只是`<!DOCTYPE html>`。有趣的事实（至少对我来说）：实际上它最终变成这样是因为确定这是告诉浏览器以“标准模式”渲染页面的最短方法。
- en: Tip
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Want a history lesson in what ''quirks'' and ''standards'' mode were? Wikipedia
    has you covered: [http://en.wikipedia.org/wiki/Quirks_mode](http://en.wikipedia.org/wiki/Quirks_mode)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 想要了解“怪癖”和“标准”模式是什么吗？维基百科可以帮到你：[http://en.wikipedia.org/wiki/Quirks_mode](http://en.wikipedia.org/wiki/Quirks_mode)
- en: The HTML tag and lang attribute
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML标签和lang属性
- en: 'After the `doctype` declaration, we open the `html` tag; the root tag for our
    document. We also use the `lang` attribute to specify the language for the document,
    and then we open the `<head>` section:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在`doctype`声明之后，我们打开了`html`标签；我们文档的根标签。我们还使用`lang`属性来指定文档的语言，然后我们打开了`<head>`部分。
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Specifying alternate languages
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指定备用语言
- en: According to the W3C specifications ([http://www.w3.org/TR/html5/dom.html#the-lang-and-xml:lang-attributes](http://www.w3.org/TR/html5/dom.html#the-lang-and-xml:lang-attributes)),
    the `lang` attribute specifies the primary language for the element's contents
    and for any of the element's attributes that contain text. If you're not writing
    pages in English, you'd best specify the correct language code. For example, for
    Japanese, the HTML tag would be `<html lang="ja">`. For a full list of languages
    take a look at [http://www.iana.org/assignments/language-subtag-registry](http://www.iana.org/assignments/language-subtag-registry).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 根据W3C规范（[http://www.w3.org/TR/html5/dom.html#the-lang-and-xml:lang-attributes](http://www.w3.org/TR/html5/dom.html#the-lang-and-xml:lang-attributes)），`lang`属性指定了元素内容的主要语言，以及包含文本的元素属性的语言。如果你不是用英语编写页面，最好指定正确的语言代码。例如，对于日语，HTML标签将是`<html
    lang="ja">`。要查看完整的语言列表，请查看[http://www.iana.org/assignments/language-subtag-registry](http://www.iana.org/assignments/language-subtag-registry)。
- en: Character encoding
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 字符编码
- en: 'Finally, we specify the character encoding. As it''s a void element (cannot
    contain anything) it doesn''t require a closing tag:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们指定字符编码。由于它是一个空元素（不能包含任何内容），它不需要闭合标签：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Unless you have a good reason to specify otherwise, the value for the charset
    is almost always `utf-8`. For the curious, more information on the subject can
    be found at [http://www.w3.org/International/questions/qa-html-encoding-declarations#html5charset](http://www.w3.org/International/questions/qa-html-encoding-declarations#html5charset).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 除非你有充分的理由指定其他值，否则字符集的值几乎总是`utf-8`。对于好奇的人，关于这个主题的更多信息可以在[http://www.w3.org/International/questions/qa-html-encoding-declarations#html5charset](http://www.w3.org/International/questions/qa-html-encoding-declarations#html5charset)找到。
- en: Easy-going HTML5
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轻松的HTML5
- en: I remember, back in school, every so often our super-mean (but actually very
    good) math teacher would be away. The class would breathe a collective sigh of
    relief as, rather than "Mr. Mean" (names have been changed to protect the innocent),
    the replacement teacher was usually an easy-going and amiable man. He sat quietly
    and left us to get on without shouting or constant needling. He didn't insist
    on silence whilst we worked, he didn't much care if we adhered to the way he worked
    out problems, all that mattered was the answers and that we could articulate how
    we came to them. If HTML5 were a math teacher, it would be that easy-going supply
    teacher. I'll now qualify this bizarre analogy.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我记得，在学校的时候，我们非常严厉（但实际上非常好）的数学老师偶尔会缺席。班上会松一口气，因为替代老师通常是一个随和的人。他安静地坐着，不会大声喊叫或不断刺激我们。他在我们工作时不坚持要求安静，也不太在意我们是否遵守他解决问题的方式，重要的是答案以及我们如何得出答案。如果HTML5是一位数学老师，它就是那位随和的替代老师。现在我将解释这个奇怪的类比。
- en: 'If you pay attention to how you write code, you''ll typically use lower-case
    for the most part, wrap attribute values in quotation marks, and declare a "type"
    for scripts and style sheets. For example, perhaps you link to a style sheet like
    this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你注意写代码的方式，通常会大部分使用小写字母，用引号括起属性值，并为脚本和样式表声明“类型”。例如，也许你链接到一个样式表，就像这样：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'HTML5 doesn''t require such precision, it''s just as happy to see this:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5不需要如此精确，它也可以接受这样的写法：
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Did you notice that? There's no end tag/slash, there are no quotation marks
    around the attribute values, and there is no type declaration. However, easy going
    HTML5 doesn't care. The second example is just as valid as the first.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你注意到了吗？没有结束标签/斜杠，属性值周围没有引号，也没有类型声明。然而，轻松的HTML5并不在乎。第二个例子和第一个一样有效。
- en: 'This more lax syntax applies across the whole document, not just linked assets.
    For example, specify a div like this if you like:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这种更宽松的语法适用于整个文档，不仅仅是链接的资产。例如，如果你喜欢，可以这样指定一个div：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'That''s perfectly valid HTML5\. The same goes for inserting an image:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这是完全有效的HTML5。插入图像也是一样：
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: That's also valid HTML5\. No end tag/slash, no quotes, and a mix of capitalization
    and lower case characters. You can even omit things such as the opening `<head>`
    tag and the page still validates. What would XHTML 1.0 say about this?
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这也是有效的HTML5。没有结束标签/斜杠，没有引号，大小写字母混合。你甚至可以省略诸如开头的`<head>`标签，页面仍然验证。XHTML 1.0会对此有何看法？
- en: Tip
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Want a short-cut to great HTML5 code? Consider the HTML5 Boilerplate ([http://html5boilerplate.com/](http://html5boilerplate.com/)).
    It's a pre-made "best practice" HTML5 file, including essential styles, polyfills,
    and optional tools such as Modernizr. You can pick up lots of great tips just
    by viewing the code and it's also possible to custom build the template to match
    your specific needs. Highly recommended!
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 想要一个快捷的HTML5代码？考虑使用HTML5 Boilerplate（[http://html5boilerplate.com/](http://html5boilerplate.com/)）。这是一个预先制作的“最佳实践”HTML5文件，包括必要的样式，polyfills和可选工具，如Modernizr。你可以通过查看代码获得很多很好的提示，还可以根据自己的特定需求定制模板。强烈推荐！
- en: A sensible approach to HTML5 markup
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML5标记的合理方法
- en: Personally, I like writing my markup 'XHTML' style. That means closing tags,
    quoting attribute values, and adhering to a consistent letter case. One could
    argue that ditching some of these practices would save a few bytes of data but
    that's what tools are for (any needless characters/data could be stripped if needed).
    I want my markup to be as legible as possible and I would encourage others to
    do the same. I'm of the opinion that clarity in code should trump brevity.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 就个人而言，我喜欢以“XHTML”风格编写我的标记。这意味着关闭标签，引用属性值，并遵循一致的大小写。有人可能会争辩说放弃其中一些做法会节省一些数据字节，但这就是工具的用途（如果需要，可以剥离任何不必要的字符/数据）。我希望我的标记尽可能易读，也鼓励其他人这样做。我认为代码的清晰度应该胜过简洁性。
- en: 'When writing HTML5 documents therefore, I think you can write clean and legible
    code while still embracing the economies afforded by HTML5\. To exemplify, for
    a CSS link, I''d go with the following:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在编写HTML5文档时，我认为你可以编写干净易读的代码，同时仍然可以利用HTML5所提供的经济效益。举例来说，对于CSS链接，我会选择以下方式：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: I've kept the closing tag and the quotation marks but omitted the `type` attribute.
    The point to make here is that you can find a level you're happy with yourself.
    HTML5 won't be shouting at you, flagging up your markup in front of the class
    and standing you in a corner with a dunces hat on for not validating (was it just
    my school that did that?). However you want to write your markup is just fine.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我保留了闭合标签和引号，但省略了`type`属性。这里要说明的是，你可以找到一个让自己满意的水平。HTML5不会对你大喊大叫，在班上标记你的标记，并让你站在角落里戴着愚人帽子，因为你的标记没有验证（难道只有我的学校这样做吗？）。但是，你想怎么写你的标记都可以。
- en: Who am I kidding? I want you to know right now that if you're writing your code
    without quoting attribute values and closing your tags, I am silently judging
    you.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我在开玩笑吗？我现在就想让你知道，如果你在编写代码时不引用属性值和不关闭标签，我会默默地评判你。
- en: Tip
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'Despite HTML5''s looser syntax, it''s always worth checking whether your markup
    is valid. Valid markup is more accessible markup. The W3C validator was created
    for just this reason: [http://validator.w3.org/](http://validator.w3.org/)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管HTML5的语法更宽松，但检查你的标记是否有效总是值得的。有效的标记更具可访问性。W3C验证器就是为了这个目的而创建的：[http://validator.w3.org/](http://validator.w3.org/)
- en: Enough of me berating writers of 'hipster' style markup. Let's look at some
    more benefits of HTML5.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经够抨击“嬉皮士”风格标记的作者了。让我们看看HTML5的更多好处。
- en: All hail the mighty <a> tag
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 万岁强大的<a>标签
- en: 'A huge economy in HTML5 is that we can now wrap multiple elements in an `<a>`
    tag (woohoo! About time, right?). Previously, if you wanted your markup to validate,
    it was necessary to wrap each element in its own `<a>` tag. For example, look
    at the following HTML 4.01 code:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5的一个巨大的优势是现在我们可以将多个元素包装在一个`<a>`标签中（喔耶！是时候了，对吧？）。以前，如果你想让你的标记验证，就必须将每个元素包装在自己的`<a>`标签中。例如，看看以下HTML
    4.01代码：
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'With HTML5, we can ditch all the individual `<a>` tags and instead wrap the
    group with one:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有了HTML5，我们可以放弃所有单独的`<a>`标签，而是用一个标签包装整个组：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The only limitations to keep in mind are that, understandably, you can't wrap
    one `<a>` tag within another `<a>` tag (because, like, duh) or another interactive
    element such as a `button` (because like, double duh!) and you can't wrap a form
    in an `<a>` tag either (because like, oh, you get the idea).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的唯一限制是，可以理解的是，你不能在另一个`<a>`标签中包装一个`<a>`标签（因为，嗯，显而易见），或者另一个交互元素，如`button`（因为，嗯，显而易见！），也不能在`<a>`标签中包装一个表单（因为，嗯，你懂的）。
- en: New semantic elements in HTML5
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML5中的新语义元素
- en: 'If I check the definition of the word ''semantics'' in the dictionary of OS
    X, it is defined as:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我查看OS X字典中“语义”一词的定义，它被定义为：
- en: '*"the branch of linguistics and logic concerned with meaning".*'
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“与语言学和逻辑有关的分支，关注意义”。*'
- en: For our purposes, semantics is the process of giving our markup meaning. Why
    is this important? Glad you asked.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的目的，语义是赋予我们的标记意义的过程。这为什么重要？很高兴你问。
- en: Most websites follow fairly standard structural conventions; typical areas include
    a header, a footer, a sidebar, a navigation bar, and so on. As web authors we
    will often name the divs we use to more clearly designate these areas (for example,
    `class="Header"`). However, as far as the code itself goes, any user agent (web
    browser, screen reader, search engine crawler, and so on) looking at it couldn't
    say for sure what the purpose of each of these `div` elements is. Users of assistive
    technology would also find it difficult to differentiate one `div` from another.
    HTML5 aims to solve that problem with new semantic elements.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数网站遵循相当标准的结构约定；典型的区域包括标题、页脚、侧边栏、导航栏等。作为网页作者，我们通常会为我们使用的div命名，以更清晰地指定这些区域（例如，`class="Header"`）。但是，就代码本身而言，任何用户代理（Web浏览器、屏幕阅读器、搜索引擎爬虫等）查看它时无法确定每个`div`元素的目的。辅助技术的用户也会发现很难区分一个`div`和另一个`div`。HTML5旨在通过新的语义元素解决这个问题。
- en: Note
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For the full list of HTML5 elements, get yourself (very) comfy and point your
    browser at [http://www.w3.org/TR/html5/semantics.html#semantics](http://www.w3.org/TR/html5/semantics.html#semantics).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取HTML5元素的完整列表，请舒服地将浏览器指向[http://www.w3.org/TR/html5/semantics.html#semantics](http://www.w3.org/TR/html5/semantics.html#semantics)。
- en: We won't cover every one of the new elements here, merely those I feel are the
    most beneficial or interesting in day-to-day responsive web design use. Let's
    dig in.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会在这里涵盖所有新元素，只是我认为在日常响应式Web设计中最有益或有趣的元素。让我们深入了解。
- en: The <main> element
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<main>`元素'
- en: For a long time, HTML5 had no element to demarcate the main content of a page.
    Within the body of a web page, this would be the element that contains the main
    block of content.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 很长一段时间，HTML5没有元素来划分页面的主要内容。在网页的正文中，这将是包含主要内容块的元素。
- en: At first, it was argued that the content that wasn't inside one of the other
    new semantic HTML5 elements would, by negation, be the main content. Thankfully,
    the spec changed and we now have a more declarative way to group the main content;
    the aptly named `<main>` tag.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 起初，有人认为不在其他新的语义HTML5元素之一内的内容，通过否定，将成为主要内容。幸运的是，规范发生了变化，现在我们有了更具有声明性的方式来分组主要内容；这个名为`<main>`的标签。
- en: 'Whether you''re wrapping the main content of a page or the main section of
    a web-based application, the `main` element is what you should be grouping it
    all with. Here''s a particularly useful line from the specification:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是包装页面的主要内容还是基于Web的应用程序的主要部分，`main`元素都是您应该将所有内容分组的元素。以下是规范中特别有用的一行：
- en: '*"The main content area of a document includes content that is unique to that
    document and excludes content that is repeated across a set of documents such
    as site navigation links, copyright information, site logos and banners and search
    forms (unless the document or applications main function is that of a search form)."*'
  id: totrans-94
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “文档的主要内容区域包括该文档独有的内容，不包括在一组文档中重复的内容，例如站点导航链接、版权信息、站点标识和横幅以及搜索表单（除非文档或应用程序的主要功能是搜索表单）。”
- en: It's also worth noting that there shouldn't be more than one main on each page
    (after all, you can't have two main pieces of content) and it shouldn't be used
    as a descendent as some of the other semantic HTML5 elements such as `article`,
    `aside`, `header`, `footer`, `nav`, or `header`. They can live within a main element
    however.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，每个页面上不应该有多个主要内容（毕竟，您不能有两个主要内容），它不应该被用作其他语义HTML5元素的后代，例如`article`、`aside`、`header`、`footer`、`nav`或`header`。但它们可以存在于主要元素中。
- en: Note
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Read the official line on the main element at: [http://www.w3.org/TR/html5/grouping-content.html#the-main-element](http://www.w3.org/TR/html5/grouping-content.html#the-main-element)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读关于主要元素的官方说明：[http://www.w3.org/TR/html5/grouping-content.html#the-main-element](http://www.w3.org/TR/html5/grouping-content.html#the-main-element)
- en: The <section> element
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<section>`元素'
- en: The `<section>` element is used to define a generic section of a document or
    application. For example, you may choose to create sections round your content;
    one section for contact information, another section for news feeds, and so on.
    It's important to understand that it isn't intended for styling purposes. If you
    need to wrap an element merely to style it, you should continue to use a `div`
    as you would have before.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`<section>`元素用于定义文档或应用程序的通用部分。例如，您可以选择围绕您的内容创建部分；一个部分用于联系信息，另一个部分用于新闻提要等。重要的是要理解它并不是用于样式目的。如果您需要包装一个元素仅用于样式化，您应该继续像以前一样使用`div`。'
- en: When working on web-based applications I tend to use `section` as the wrapping
    element for visual components. It provides a simple way to see the beginning and
    end of components in the markup.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发基于Web的应用程序时，我倾向于使用`section`作为可视组件的包装元素。它提供了一种简单的方法来查看标记中组件的开始和结束。
- en: You can also qualify for yourself whether you should be using a section based
    upon whether the content you are sectioning has a natural heading within it (for
    example an `h1`). If it doesn't, it's likely you'd be better off opting for a
    `div`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以自行判断是否应该使用基于内容的部分（例如`h1`）来确定是否应该使用部分。如果没有，您最好选择`div`。
- en: Note
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'To find out what the W3C HTML5 specification says about `<section>` go to the
    following URL:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看W3C HTML5规范中关于`<section>`的内容，请访问以下网址：
- en: '[http://www.w3.org/TR/html5/sections.html#the-section-element](http://www.w3.org/TR/html5/sections.html#the-section-element)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/html5/sections.html#the-section-element](http://www.w3.org/TR/html5/sections.html#the-section-element)'
- en: The <nav> element
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <nav>元素
- en: The `<nav>` element is used to wrap major navigational links to other pages
    or parts within the same page. It isn't strictly intended for use in footers (although
    it can be) and the like, where groups of links to other pages are common.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`<nav>`元素用于包装到其他页面或同一页面内部的主要导航链接。它并不严格用于页脚（尽管可以），以及其他常见的其他页面链接组。'
- en: If you usually markup your navigational elements with an un-ordered list (`<ul>`)
    and a bunch of list tags (`li`), you may be better served with a `nav` and a number
    of nested `a` tags instead.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您通常使用无序列表（`<ul>`）和一堆列表标签（`li`）标记您的导航元素，您可能更适合使用`nav`和一些嵌套的`a`标签。
- en: Note
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'To find out what the W3C HTML5 specification says about `<nav>` go to the following
    URL:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解W3C HTML5规范对`<nav>`的说明，请访问以下网址：
- en: '[http://www.w3.org/TR/html5/sections.html#the-nav-element](http://www.w3.org/TR/html5/sections.html#the-nav-element)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/html5/sections.html#the-nav-element](http://www.w3.org/TR/html5/sections.html#the-nav-element)'
- en: The <article> element
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<article>`元素'
- en: The `<article>` element, alongside `<section>` can easily lead to confusion.
    I certainly had to read and re-read the specifications of each before it sank
    in. Here's my re-iteration of the specification. The `<article>` element is used
    to wrap a self-contained piece of content. When structuring a page, ask whether
    the content you're intending to use within a `<article>` tag could be taken as
    a whole lump and pasted onto a different site and still make complete sense? Another
    way to think about it is, would the content that you are considering wrapping
    in an `<article>` actually constitute a separate article in a RSS feed? Obvious
    examples of content that should be wrapped with an `<article>` element would be
    blog posts or news stories. Be aware that if nesting `<article>` elements, it
    is presumed that the nested `<article>` elements are principally related to the
    outer article.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`<article>`元素和`<section>`一样容易引起混淆。我肯定在它们的规范之前读了很多遍，才明白它们的含义。这是我对规范的重新阐述。`<article>`元素用于包装一个独立的内容块。在构建页面时，问一下，您打算在`<article>`标签中使用的内容是否可以作为一个整体被复制到另一个网站上，并且仍然完全有意义？另一种思考方式是，您打算用`<article>`包装的内容是否实际上构成了RSS订阅中的一个单独的文章？显而易见的应该用`<article>`元素包装的内容的例子是博客文章或新闻报道。请注意，如果嵌套`<article>`元素，假定嵌套的`<article>`元素主要与外部文章相关。'
- en: Note
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To see what the W3C HTML5 specification says about `<article>` visit [http://www.w3.org/TR/html5/sections.html#the-article-element](http://www.w3.org/TR/html5/sections.html#the-article-element).
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 有关W3C HTML5规范对`<article>`的说明，请访问[http://www.w3.org/TR/html5/sections.html#the-article-element](http://www.w3.org/TR/html5/sections.html#the-article-element)。
- en: The <aside> element
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<aside>`元素'
- en: The `<aside>` element is used for content that is tangentially related to the
    content around it. In practical terms, I often use it for sidebars (when it contains
    suitable content). It's also considered suitable for pull quotes, advertising,
    and groups of navigation elements. Basically anything not directly related to
    the main content would work well in an aside. If it was an e-commerce site, I'd
    consider areas like 'customers who bought this also bought' as prime candidates
    for an `<aside>`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`<aside>`元素用于与周围内容有关的内容。在实际操作中，我经常用它来制作侧边栏（当它包含合适的内容时）。它也被认为适合用于拉引语、广告和导航元素组。基本上，任何与主要内容不直接相关的内容都可以放在`<aside>`中。如果这是一个电子商务网站，我会考虑像“购买此商品的顾客还购买了”这样的区域作为`<aside>`的首选内容。'
- en: Note
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more on what the W3C HTML5 specification says about `<aside>` visit [http://www.w3.org/TR/html5/sections.html#the-aside-element](http://www.w3.org/TR/html5/sections.html#the-aside-element).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 有关W3C HTML5规范对`<aside>`的说明，请访问[http://www.w3.org/TR/html5/sections.html#the-aside-element](http://www.w3.org/TR/html5/sections.html#the-aside-element)。
- en: The <figure> and <figcaption> elements
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<figure>`和`<figcaption>`元素'
- en: 'The specification relates that the figure element:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 规范涉及`figure`元素：
- en: '*"...can thus be used to annotate illustrations, diagrams, photos, code listings,
    etc."*'
  id: totrans-121
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这样可以用来注释插图、图表、照片、代码清单等。
- en: 'Here''s how we could use it to revise a portion of markup from the first chapter:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们如何使用它来修改第一章的一部分标记：
- en: '[PRE12]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You can see that the `<figure>` element is used to wrap this little self-contained
    block. Inside, the `<figcaption>` is used to provide a caption for the parent
    `<figure>` element.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到`<figure>`元素用于包装这个小的独立块。在内部，`<figcaption>`用于为父`<figure>`元素提供标题。
- en: It's perfect when images or code need a little caption alongside (that wouldn't
    be suitable in the main text of the content).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 当图片或代码需要在旁边加上一点标题时（这在内容的主要文本中不合适），这是完美的。
- en: Note
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The specification for the `figure` element can be found at [http://www.w3.org/TR/html5/grouping-content.html#the-figure-element](http://www.w3.org/TR/html5/grouping-content.html#the-figure-element).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '`figure`元素的规范可以在[http://www.w3.org/TR/html5/grouping-content.html#the-figure-element](http://www.w3.org/TR/html5/grouping-content.html#the-figure-element)找到。'
- en: The specification for the `figcaption` is at [http://www.w3.org/TR/html5/grouping-content.html#the-figcaption-element](http://www.w3.org/TR/html5/grouping-content.html#the-figcaption-element).
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`figcaption`的规范在[http://www.w3.org/TR/html5/grouping-content.html#the-figcaption-element](http://www.w3.org/TR/html5/grouping-content.html#the-figcaption-element)。'
- en: The <details> and <summary> elements
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<details>`和`<summary>`元素'
- en: 'How many times have you wanted to create a simple open and close ''widget''
    on your page? A piece of summary text that when clicked, opens a panel with additional
    information. HTML5 facilitates this pattern with the `details` and `summary` elements.
    Consider this markup (you can open `example3.html` from this chapter''s code to
    play with it for yourself):'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 您有多少次想要在页面上创建一个简单的打开和关闭“小部件”？点击时打开一个带有附加信息的面板的摘要文本。HTML5通过`details`和`summary`元素实现了这种模式。考虑一下这个标记（您可以打开本章代码中的`example3.html`来自己尝试）：
- en: '[PRE13]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Opening this in Chrome, with no added styling, shows only the summary text
    by default:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在Chrome中打开时，默认只显示摘要文本：
- en: '![The <details> and <summary> elements](img/B03777_04_02.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![`<details>`和`<summary>`元素](img/B03777_04_02.jpg)'
- en: 'Clicking anywhere on the summary text opens the panel. Clicking it again toggles
    it shut. If you want the panel open by default you can add the `open` attribute
    to the `details` element:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 单击摘要文本的任何位置都会打开面板。再次单击它会切换关闭。如果您希望面板默认打开，可以将`open`属性添加到`details`元素中：
- en: '[PRE14]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![The <details> and <summary> elements](img/B03777_04_03.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![`<details>`和`<summary>`元素](img/B03777_04_03.jpg)'
- en: 'Supporting browsers typically add some default styling to indicate the panel
    can be opened. Here in Chrome (and also Safari) that''s a dark disclosure triangle.
    To disable this, you need to use a WebKit specific proprietary pseudo selector:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的浏览器通常会添加一些默认样式来指示面板可以打开。在Chrome（以及Safari）中，这是一个深色的披露三角形。要禁用这个，你需要使用一个WebKit特定的私有伪选择器：
- en: '[PRE15]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You can of course use that same selector to style the marker differently.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，你可以使用相同的选择器来以不同的样式显示标记。
- en: 'Currently, there is no way of animating the open and close. Neither is there
    a (non JavaScript) way of toggling other details panels closed (at the same level)
    when a different one is open. I''m not sure either of these desires will (or should)
    ever be addressed. You should think of it more as a way to facilitate what you
    would have done with a `display: none;` toggle with the help of JavaScript.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '目前，没有办法对打开和关闭进行动画处理。也没有（非JavaScript）的办法在打开不同的详细信息面板时关闭其他详细信息面板（在同一级别）。我不确定这些愿望中的任何一个会（或应该）得到解决。你应该把它看作是一种通过JavaScript的`display:
    none;`切换来促进你所做的事情。'
- en: Sadly, as I write this (mid 2015), there is no support for this element in Firefox
    or Internet Explorer (they just render the two elements as inline elements). Polyfills
    exist ([https://mathiasbynens.be/notes/html5-details-jquery](https://mathiasbynens.be/notes/html5-details-jquery))
    and hopefully will be fully implemented soon.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 遗憾的是，截至我写这篇文章时（2015年中），Firefox或Internet Explorer不支持此元素（它们只将这两个元素呈现为内联元素）。存在Polyfills（[https://mathiasbynens.be/notes/html5-details-jquery](https://mathiasbynens.be/notes/html5-details-jquery)），希望很快就会完全实现。
- en: The <header> element
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<header>`元素'
- en: Practically, the `<header>` element can be used for the "masthead" area of a
    site's header. It can also be used as an introduction to other content such as
    a section within an `<article>` element. You can use it as many times on the same
    page as needed (you could have a `<header>` inside every `<section>` on your page
    for example).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，`<header>`元素可以用于站点页眉的“标志”区域。它也可以用作其他内容的介绍，比如`<article>`元素中的一个部分。你可以在同一页上使用它多次（例如，你可以在页面上的每个`<section>`中都有一个`<header>`）。
- en: Note
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'This is what the W3C HTML5 specification says about `<header>`:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这是W3C HTML5规范对`<header>`的说明：
- en: '[http://www.w3.org/TR/html5/sections.html#the-header-element](http://www.w3.org/TR/html5/sections.html#the-header-element)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/html5/sections.html#the-header-element](http://www.w3.org/TR/html5/sections.html#the-header-element)'
- en: The <footer> element
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<footer>`元素'
- en: The `<footer>` element should be used to contain information about the section
    it sits within. It might contain links to other documents or copyright information
    for example. Like the `<header>` it can be used multiple times withina page if
    needed. For example, it could be used for the footer of a blog but also a `footer`
    section within a blog post article. However, the specification explains that contact
    information for the author of a blog post should instead be wrapped by an `<address>`
    element.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`<footer>`元素应该用于包含所在部分的信息。例如，它可能包含指向其他文档的链接或版权信息。与`<header>`一样，如果需要，它可以在页面中多次使用。例如，它可以用于博客的页脚，也可以用于博客文章中的`footer`部分。但是，规范解释说，博客文章作者的联系信息应该用`<address>`元素包装。'
- en: Note
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'See what the W3C HTML5 specification says about `<footer>`:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 查看W3C HTML5规范对`<footer>`的说明：
- en: '[http://www.w3.org/TR/html5/sections.html#the-footer-element](http://www.w3.org/TR/html5/sections.html#the-footer-element)'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/html5/sections.html#the-footer-element](http://www.w3.org/TR/html5/sections.html#the-footer-element)'
- en: The <address> element
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<address>`元素'
- en: The `<address>` element is to be used explicitly for marking up contact information
    for its nearest `<article>` or `<body>` ancestor. To confuse matters, keep in
    mind that it isn't to be used for postal addresses and the like (unless they are
    indeed the contact addresses for the content in question). Instead postal addresses
    and other arbitrary contact information should be wrapped in good ol' `<p>` tags.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '`<address>`元素专门用于标记其最近的`<article>`或`<body>`祖先的联系信息。要混淆事情，要记住它不应该用于邮政地址等（除非它们确实是所讨论内容的联系地址）。相反，邮政地址和其他任意联系信息应该用老式的`<p>`标签包装。'
- en: I'm not a fan of the `<address>` element as in my experience it would be far
    more useful to markup a physical address in its own element, but that's a personal
    gripe. Hopefully it makes more sense to you.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我不喜欢`<address>`元素，因为根据我的经验，将物理地址标记为自己的元素会更有用，但这是我的个人抱怨。希望这对你来说更有意义。
- en: Note
  id: totrans-155
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For more on what the W3C HTML5 specification says about `<address>` check out:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 有关W3C HTML5规范对`<address>`的更多信息，请查看：
- en: '[http://www.w3.org/TR/html5/sections.html#the-address-element](http://www.w3.org/TR/html5/sections.html#the-address-element)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/html5/sections.html#the-address-element](http://www.w3.org/TR/html5/sections.html#the-address-element)'
- en: A note on h1-h6 elements
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于h1-h6元素的说明
- en: 'Something that I hadn''t realized until very recently is that using `h1`-`h6`
    tags to markup headings and sub-headings is discouraged. I''m talking about this
    kind of thing:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 直到最近我才意识到，使用`h1`-`h6`标签标记标题和副标题是不鼓励的。我说的是这种情况：
- en: '[PRE16]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Here''s a quote from the HTML5 specification:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是HTML5规范的一句引用：
- en: h1–h6 elements must not be used to markup subheadings, subtitles, alternative
    titles and taglines unless intended to be the heading for a new section or subsection.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: h1-h6元素不得用于标记副标题、副标题、替代标题和标语，除非打算用作新部分或子部分的标题。
- en: That's certainly one of the less ambiguous sentences in the specification! Ooops!
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这绝对是规范中最不明确的句子之一！哎呀！
- en: 'So, how should we author such eventualities? The specification actually has
    a whole section, ([http://www.w3.org/TR/html5/common-idioms.html#common-idioms](http://www.w3.org/TR/html5/common-idioms.html#common-idioms))
    dedicated to this. Personally, I preferred the old `<hgroup>` element but sadly
    that ship has sailed (more information in the *Obsolete HTML features* section).
    So, to follow the advice of the specification, our prior example could be rewritten
    as:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们应该如何编写这样的情况呢？规范实际上有一个专门的部分（[http://www.w3.org/TR/html5/common-idioms.html#common-idioms](http://www.w3.org/TR/html5/common-idioms.html#common-idioms)）来专门讨论这个问题。就我个人而言，我更喜欢旧的`<hgroup>`元素，但可惜的是，那艘船已经启航了（更多信息请参见*过时的HTML功能*部分）。因此，为了遵循规范的建议，我们之前的例子可以重写为：
- en: '[PRE17]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: HTML5 text-level semantics
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML5文本级语义
- en: Besides the structural and grouping elements we've looked at, HTML5 also revises
    a few tags that used to be referred to as inline elements. The HTML5 specification
    now refers to these tags as text-level semantics ([http://www.w3.org/TR/html5/text-level-semantics.html#text-level-semantics](http://www.w3.org/TR/html5/text-level-semantics.html#text-level-semantics)).
    Let's take a look at a few common examples.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们已经看过的结构和分组元素之外，HTML5还修改了一些以前被称为内联元素的标签。HTML5规范现在将这些标签称为文本级语义（[http://www.w3.org/TR/html5/text-level-semantics.html#text-level-semantics](http://www.w3.org/TR/html5/text-level-semantics.html#text-level-semantics)）。让我们看一些常见的例子。
- en: The <b> element
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<b>`元素'
- en: 'Historically, the `<b>` element meant "make this bold" ([http://www.w3.org/TR/html4/present/graphics.html#edef-B](http://www.w3.org/TR/html4/present/graphics.html#edef-B)).
    This was from back in the day when stylistic choices were part of the markup.
    However, you can now officially use it merely as a styling hook in CSS as the
    HTML5 specification now declares that `<b>` is:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，`<b>`元素意味着“使其加粗”（[http://www.w3.org/TR/html4/present/graphics.html#edef-B](http://www.w3.org/TR/html4/present/graphics.html#edef-B)）。这是从以前样式选择是标记的一部分的时代。然而，现在你可以正式地将其仅用作CSS中的样式钩，因为HTML5规范现在声明`<b>`是：
- en: '*"The b element represents a span of text to which attention is being drawn
    for utilitarian purposes without conveying any extra importance and with no implication
    of an alternate voice or mood, such as key words in a document abstract, product
    names in a review, actionable words in interactive text-driven software, or an
    article lede."*'
  id: totrans-170
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“b元素表示吸引注意力的文本范围，用于实用目的，而不传达任何额外的重要性，并且没有暗示另一种声音或情绪，例如文档摘要中的关键词，评论中的产品名称，交互式文本驱动软件中的可操作单词，或文章导言。”*'
- en: Although no specific meaning is now attached to it, as it's text level, it's
    not intended to be used to surround large groups of markup, use a `div` for that.
    You should also be aware that because it was historically used to bold text, you'll
    typically have to reset the font-weight in CSS if you want content within a `<b>`
    tag to not appear bold.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然现在没有特定的含义与之相关联，但由于它是文本级的，它不打算用于包围大量的标记，对此请使用`div`。您还应该知道，因为它在历史上用于加粗文本，如果您希望`<b>`标签内的内容不显示为加粗，通常需要在CSS中重置字体重量。
- en: The <em> element
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<em>`元素'
- en: 'OK, hands up, I''ve often used `<em>` merely as a styling hook too. I need
    to mend my ways, as in HTML5:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，举起手来，我经常只是把`<em>`用作样式钩。我需要改变我的方式，因为在HTML5中：
- en: The `em` element represents stress emphasis of its contents.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`em`元素表示其内容的重点强调。'
- en: Therefore, unless you actually want the enclosed contents to be emphasized,
    consider using a `<b>` tag or, where relevant, an `<i>` tag instead.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，除非您真的希望强调所包含的内容，否则请考虑使用`<b>`标签或者在相关情况下使用`<i>`标签。
- en: The <i> element
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`<i>`元素'
- en: 'The HTML5 specification describes the `<i>` as:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5规范将`<i>`描述为：
- en: '*"...a span of text in an alternate voice or mood, or otherwise offset from
    the normal prose in a manner indicating a different quality of text."*'
  id: totrans-178
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“...以另一种声音或情绪，或以其他方式偏离正常散文的方式，表明文本的不同质量。”*'
- en: 'Suffice it to say, it''s not to be used to merely italicize something. For
    example, we could use it to markup the odd name in this line of text:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 可以说，它不仅仅用于使某物变斜体。例如，我们可以使用它来标记文本行中的奇怪名称：
- en: '[PRE18]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-181
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'There are plenty of other text-level semantic tags in HTML5\. For the full
    run down, take a look at the relevant section of the specification at the following
    URL:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5中有许多其他文本级语义标签。要了解完整的信息，请查看规范的相关部分，网址如下：
- en: '[http://www.w3.org/TR/html5/text-level-semantics.html#text-level-semantics](http://www.w3.org/TR/html5/text-level-semantics.html#text-level-semantics)'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.w3.org/TR/html5/text-level-semantics.html#text-level-semantics](http://www.w3.org/TR/html5/text-level-semantics.html#text-level-semantics)'
- en: Obsolete HTML features
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 过时的HTML功能
- en: Besides things such as the language attributes in script links, there are some
    further parts of HTML you may be used to using that are now considered "obsolete"
    in HTML5\. It's important to be aware that there are two camps of obsolete features
    in HTML5—conforming and non-conforming. Conforming features will still work but
    will generate warnings in validators. Realistically, avoid them if you can but
    they aren't going to make the sky fall down if you do use them. Non-conforming
    features might still render in certain browsers but if you use them, you are considered
    very, very naughty and you might not get a treat at the weekend!
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 除了脚本链接中的语言属性之类的东西，HTML中还有一些您可能习惯使用的其他部分，现在在HTML5中被认为是“过时的”。重要的是要意识到在HTML5中有两种过时功能的阵营——符合和不符合。符合功能仍然可以工作，但会在验证器中生成警告。实际上，如果可以的话最好避免使用它们，但如果您使用它们，也不会导致天塌下来。不符合功能在某些浏览器中可能仍然可以渲染，但如果您使用它们，您会被认为是非常非常淘气的，并且您可能在周末得不到奖励！
- en: In terms of obsolete and non-conforming features, there is quite a raft. I'll
    confess that many I have never used (some I've never even seen!). It's possible
    you may experience a similar reaction. However, if you're curious, you can find
    the full list of obsolete and non-conforming features at [http://www.w3.org/TR/html5/obsolete.html](http://www.w3.org/TR/html5/obsolete.html).
    Notable obsolete and non-conforming features are `strike`, `center`, `font`, `acronym`,
    `frame`, and `frameset`.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在过时和不符合规范的功能方面，有相当多的功能。我承认很多我从未使用过（有些我甚至从未见过！）。你可能会有类似的反应。然而，如果你感兴趣，你可以在[http://www.w3.org/TR/html5/obsolete.html](http://www.w3.org/TR/html5/obsolete.html)找到完整的过时和不符合规范的功能列表。值得注意的过时和不符合规范的功能包括`strike`、`center`、`font`、`acronym`、`frame`和`frameset`。
- en: There are also features that were present in earlier drafts of HTML5 which have
    now been dropped. `hgroup` is one such example. The tag was originally proposed
    to wrap groups of headings; an `h1` for a title and a `h2` for a sub-title might
    have been wrapped in a `hgroup` element. However, discussion on the `hgroup` element
    is now frustraneous as it's now gone the way of the Raphus cucullatus (go on,
    Google it, you know you want to).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5中还有一些早期草案中存在的功能，现在已经被删除了。`hgroup`就是一个例子。该标签最初被提议用于包装标题组；一个标题`h1`和一个副标题`h2`可能被包装在`hgroup`元素中。然而，关于`hgroup`元素的讨论现在已经变得无用，因为它已经像Raphus
    cucullatus一样消失了（去吧，谷歌一下，你知道你想要的）。
- en: Putting HTML5 elements to use
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用HTML5元素
- en: It's time to practice using some of the elements we have just looked at. Let's
    revisit the example from [Chapter 1](ch01.html "Chapter 1. The Essentials of Responsive
    Web Design"), *The Essentials of Responsive Web Design*. If we compare the markup
    below to the original markup in [Chapter 1](ch01.html "Chapter 1. The Essentials
    of Responsive Web Design"), *The Essentials of Responsive Web Design*, (remember,
    you can download all the examples from the [http://rwd.education](http://rwd.education)
    website, or from the GitHub repo) you can see where the new elements we've looked
    at have been employed below.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是练习刚刚学习的一些元素的时候了。让我们重新访问[第1章](ch01.html "第1章.响应式网页设计的基本知识")中的示例，*响应式网页设计的基本知识*。如果我们将下面的标记与[第1章](ch01.html
    "第1章.响应式网页设计的基本知识")中的原始标记进行比较（记住，你可以从[http://rwd.education](http://rwd.education)网站或GitHub存储库下载所有示例），你可以看到我们刚刚学习的新元素在下面的示例中是如何使用的。
- en: '[PRE19]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Applying common sense to your element selection
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运用常识进行元素选择
- en: I've removed a good portion of the inner content so we can concentrate on the
    structure. Hopefully you will agree that it's easy to discern different sections
    of markup from one another. However, at this point I'd also like to offer some
    pragmatic advice; it isn't the end of the world if you don't always pick the correct
    element for every single given situation. For example, whether or not I used a
    `<section>` or `<div>` in the preceding example is of little real consequence.
    If we use an `<em>` when we should actually be using an `<i>`, I certainly don't
    feel it's a crime against humanity; the folks at the W3C won't hunt you down and
    feather and tar you for making the wrong choice. Just apply a little common sense.
    That said, if you can use elements like the `<header>` and `<footer>` when relevant,
    there are inherent accessibility benefits in doing so.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经删除了大部分内部内容，这样我们就可以集中精力关注结构。希望你会同意，很容易区分出标记的不同部分。然而，在这一点上，我也想提供一些建议；如果你并不总是为每个特定情况选择正确的元素，这并不是世界末日。例如，在前面的例子中，我使用`<section>`还是`<div>`并不是很重要。如果我们在应该使用`<i>`时使用了`<em>`，我并不认为这是对人类的罪行；W3C的人员不会因为你做出了错误的选择而追捕你。只需运用一点常识。也就是说，如果你能在相关情况下使用`<header>`和`<footer>`等元素，那么这样做就具有固有的可访问性好处。
- en: WCAG and WAI-ARIA for more accessible web applications
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: WCAG和WAI-ARIA用于更易访问的网页应用程序
- en: Even since writing the first edition of this book from 2011 to 2012, the W3C
    has made strides in making it easier for authors to write more accessible web
    pages.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 即使自2011年至2012年编写本书的第一版以来，W3C在使作者更容易编写更易访问的网页方面已经取得了进展。
- en: WCAG
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WCAG
- en: 'The WCAG exists to provide:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: WCAG的存在是为了提供：
- en: '*"a single shared standard for web content accessibility that meets the needs
    of individuals, organizations, and governments internationally."*'
  id: totrans-197
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*“一个共享的标准，用于满足国际上个人、组织和政府的网页内容可访问性需求。”*'
- en: 'When it comes to more pedestrian web pages (as opposed to single page web applications
    and the like) it makes sense to concentrate on the WCAG guidelines. They offer
    a number of (mostly common sense) guidelines for how to ensure your web content
    is accessible. Each recommendation is rated as a conformance level: A, AA, or
    AAA. For more on these conformance levels look at [http://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html#uc-levels-head](http://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html#uc-levels-head).'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更普通的网页（而不是单页面网页应用程序等），集中精力关注WCAG指南是有意义的。它们提供了许多（大多数是常识）关于如何确保您的网页内容可访问的指南。每个建议都被评为符合级别：A、AA或AAA。有关这些符合级别的更多信息，请参阅[http://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html#uc-levels-head](http://www.w3.org/TR/UNDERSTANDING-WCAG20/conformance.html#uc-levels-head)。
- en: You'll probably find that you are already adhering to many of the guidelines,
    like providing alternative text for images for example. However, you can get a
    brief run-down of the guidelines at [http://www.w3.org/WAI/WCAG20/glance/Overview.html](http://www.w3.org/WAI/WCAG20/glance/Overview.html)
    and then build your own custom quick reference list of checks at [http://www.w3.org/WAI/WCAG20/quickref/](http://www.w3.org/WAI/WCAG20/quickref/).
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会发现，你已经遵守了许多指南，比如为图像提供替代文本。然而，你可以在[http://www.w3.org/WAI/WCAG20/glance/Overview.html](http://www.w3.org/WAI/WCAG20/glance/Overview.html)上快速了解这些指南，然后在[http://www.w3.org/WAI/WCAG20/quickref/](http://www.w3.org/WAI/WCAG20/quickref/)上建立自己的自定义快速参考清单。
- en: I'd encourage everyone to spend an hour or two looking down the list. Many of
    the guidelines are simple to implement and offer real benefits to users.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我鼓励每个人花一两个小时看一看这个清单。许多指南都很容易实施，并为用户带来实际的好处。
- en: WAI-ARIA
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: WAI-ARIA
- en: The aim of WAI-ARIA is principally to solve the problem of making dynamic content
    on a web page accessible. It provides a means of describing roles, states, and
    properties for custom widgets (dynamic sections in web applications) so that they
    are recognizable and usable by assistive technology users.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: WAI-ARIA的目标主要是解决使网页上的动态内容可访问的问题。它提供了一种描述自定义小部件（Web应用程序中的动态部分）的角色、状态和属性的方法，以便辅助技术用户能够识别和使用它们。
- en: For example, if an on-screen widget displays a constantly updating stock price,
    how would a blind user accessing the page know that? WAI-ARIA attempts to solve
    these very problems.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果屏幕上的小部件显示不断更新的股票价格，那么如何盲人用户访问页面时知道呢？WAI-ARIA试图解决这些问题。
- en: Don't use roles for semantic elements
  id: totrans-204
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不要为语义元素使用角色
- en: 'It used to be advisable to add ''landmark'' roles to headers and footers like
    this:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 以前建议为标题和页脚添加“地标”角色，如下所示：
- en: '[PRE20]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'However, this is now considered surplus to requirements. If you look at the
    specifications for any of the elements listed earlier there is a dedicated *Allowed
    ARIA role attributes* section. Here is the relevant explanation from the section
    element as an example:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，现在认为这是多余的。如果您查看前面列出的任何元素的规范，都有一个专门的*允许的ARIA角色属性*部分。以下是来自section元素的相关解释：
- en: '*"Allowed ARIA role attribute values:*'
  id: totrans-208
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “允许的ARIA角色属性值：”
- en: '>'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '>'
- en: '*region role (default - do not set), alert, alertdialog, application, contentinfo,
    dialog, document, log, main, marquee, presentation, search or status."*'
  id: totrans-210
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*region role (default - do not set), alert, alertdialog, application, contentinfo,
    dialog, document, log, main, marquee, presentation, search or status."*'
- en: 'The key part there being ''role (default - do not set)''. This means that explicitly
    adding an ARIA role to the element is pointless as it is implied by the element
    itself. A note in the specification now makes this clear:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 其中关键部分是“role（默认-不设置）”。这意味着在元素本身已经隐含了ARIA角色时，明确添加ARIA角色到元素是没有意义的。规范中的一条说明现在已经明确表明了这一点。
- en: '*"In the majority of cases setting an ARIA role and/or aria-* attribute that
    matches the default implicit ARIA semantics is unnecessary and not recommended
    as these properties are already set by the browser."*'
  id: totrans-212
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “在大多数情况下，设置与默认隐式ARIA语义匹配的ARIA角色和/或aria-*属性是不必要的，也不建议这样做，因为这些属性已经由浏览器设置。”
- en: If you only remember one thing
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如果您只记住一件事
- en: 'The easiest thing you can do to aid assistive technologies is to use the correct
    elements where possible. A `header` element is going to be far more useful than
    `div class="Header"`. Similarly, if you have a button on your page, use the `<button>`
    element (rather than a `span` or other element styled to look like a `button`).
    I accept that the `button` element doesn''t always allow exact styling (it doesn''t
    like being set to `display: table-cell` or `display: flex` for example) and in
    those instances at least choose the next best thing; usually an `<a>` tag.'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '您可以尽可能使用正确的元素来帮助辅助技术。`header`元素比`div class="Header"`更有用。同样，如果页面上有一个按钮，请使用`<button>`元素（而不是`span`或其他样式看起来像`button`的元素）。我知道`button`元素并不总是允许精确的样式（例如，它不喜欢被设置为`display:
    table-cell`或`display: flex`），在这种情况下至少选择次佳选择；通常是`<a>`标签。'
- en: Taking ARIA further
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步了解ARIA
- en: ARIA isn't limited to landmark roles only. To take things further, a full list
    of the roles and a succinct description of their usage suitability is available
    at [http://www.w3.org/TR/wai-aria/roles](http://www.w3.org/TR/wai-aria/roles).
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: ARIA不仅限于地标角色。要进一步了解，可以在[http://www.w3.org/TR/wai-aria/roles](http://www.w3.org/TR/wai-aria/roles)上找到角色的完整列表和简洁的用法描述。
- en: 'For a lighter take on the subject, I''d also recommend Heydon Pickering''s
    book, *Apps For All: Coding Accessible Web Applications* (available at [https://shop.smashingmagazine.com/products/apps-for-all-coding-accessible-web-applications](https://shop.smashingmagazine.com/products/apps-for-all-coding-accessible-web-applications)).'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '对于这个话题的轻松看法，我还推荐Heydon Pickering的书《Apps For All: Coding Accessible Web Applications》（可在[https://shop.smashingmagazine.com/products/apps-for-all-coding-accessible-web-applications](https://shop.smashingmagazine.com/products/apps-for-all-coding-accessible-web-applications)上获取）。'
- en: Tip
  id: totrans-218
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Test your designs for free with non-visual desktop access (NVDA)**'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '**免费使用非视觉桌面访问（NVDA）测试您的设计**'
- en: 'If you develop on the Windows platform and you''d like to test your ARIA enhanced
    designs on a screen reader, you can do so for free with NVDA. You can get it at
    the following URL:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在Windows平台上开发，并且想要免费使用NVDA测试您的ARIA增强设计，您可以在以下网址获取：
- en: '[http://www.nvda-project.org/](http://www.nvda-project.org/)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.nvda-project.org/](http://www.nvda-project.org/)'
- en: Google now also ships the free 'Accessibility Developer Tools' for the Chrome
    browser (available cross-platform); well worth checking out.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌现在还为Chrome浏览器提供免费的“辅助开发者工具”（可跨平台使用）；非常值得一试。
- en: There's also a growing number of tools that help quickly test your own designs
    against things like color blindness. For example, [https://michelf.ca/projects/sim-daltonism/](https://michelf.ca/projects/sim-daltonism/)
    is a Mac app that lets you switch color blindness types and see a preview in a
    floating palette.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 还有越来越多的工具可以帮助您快速测试自己的设计，例如[https://michelf.ca/projects/sim-daltonism/](https://michelf.ca/projects/sim-daltonism/)是一个Mac应用程序，可以让您切换色盲类型，并在浮动调色板中预览。
- en: Finally, OS X also includes VoiceOver utility for testing your web pages.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，OS X还包括VoiceOver实用程序，用于测试您的网页。
- en: Hopefully, this brief introduction to WAI-ARIA and WCAG has given you enough
    information to think a little more about how to approach supporting assistive
    technologies. Perhaps adding assistive technology support to your next HTML5 project
    will be easier than you think.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 希望对WAI-ARIA和WCAG的简要介绍为您提供了足够的信息，让您更多地考虑如何支持辅助技术。也许在您的下一个HTML5项目中添加辅助技术支持会比您想象的更容易。
- en: As a final resource for all things accessibility, there are handy links and
    advice galore on the A11Y project home page at [http://a11yproject.com/](http://a11yproject.com/).
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 作为所有辅助功能的最终资源，A11Y项目主页上有很多有用的链接和建议，网址为[http://a11yproject.com/](http://a11yproject.com/)。
- en: Embedding media in HTML5
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在HTML5中嵌入媒体
- en: For many, HTML5 first entered their vocabulary when Apple refused to add support
    for Flash in their iOS devices. Flash had gained market dominance (some would
    argue market stranglehold) as the plugin of choice to serve up video through a
    web browser. However, rather than using Adobe's proprietary technology, Apple
    decided to rely on HTML5 instead to handle rich media rendering. While HTML5 was
    making good headway in this area anyway, Apple's public support of HTML5 gave
    it a major leg up and helped its media tools gain greater traction in the wider
    community.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 对许多人来说，当苹果拒绝在其iOS设备中添加对Flash的支持时，HTML5首次进入他们的词汇表。Flash已经在市场上占据了主导地位（有人会认为是市场垄断），成为通过网络浏览器提供视频的首选插件。然而，苹果决定不使用Adobe的专有技术，而是依靠HTML5来处理丰富的媒体渲染。虽然HTML5在这个领域本来就取得了良好的进展，但苹果对HTML5的公开支持使其获得了重大的优势，并帮助其媒体工具在更广泛的社区中获得了更大的影响力。
- en: As you might imagine, Internet Explorer 8 and lower versions don't support HTML5
    video and audio. Most other modern browsers (Firefox 3.5+, Chrome 4+, Safari 4,
    Opera 10.5+, Internet Explorer 9+, iOS 3.2+, Opera Mobile 11+, Android 2.3+) handle
    it just fine.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所想象的，Internet Explorer 8及更低版本不支持HTML5视频和音频。大多数其他现代浏览器（Firefox 3.5+，Chrome
    4+，Safari 4，Opera 10.5+，Internet Explorer 9+，iOS 3.2+，Opera Mobile 11+，Android
    2.3+）都可以很好地处理它。
- en: Adding video and audio the HTML5 way
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 以HTML5方式添加视频和音频
- en: 'Video and audio in HTML5 is easy. The only real difficulty with HTML5 media
    used to be listing out alternate source formats for media (as different browsers
    supported different file formats). Nowadays, MP4 is ubiquitous across desktop
    and mobile platforms, making the inclusion of media in your web pages via HTML5
    a breeze. Here''s a ''simple as can be'' example of how to link to a video file
    in your page:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML5中，视频和音频非常简单。以前使用HTML5媒体的唯一真正困难之处在于列出媒体的备用源格式（因为不同的浏览器支持不同的文件格式）。如今，MP4在桌面和移动平台上都是无处不在的，使得通过HTML5在网页中包含媒体变得轻而易举。以下是如何在页面中链接到视频文件的“简单至极”的示例：
- en: '[PRE21]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'HTML5 allows a single `<video></video>` tag (or `<audio></audio>` for audio)
    to do all the heavy lifting. It''s also possible to insert text between the opening
    and closing tag to inform users when there is a problem. There are also additional
    attributes you''d ordinarily want to add, such as the `height` and `width`. Let''s
    add these in:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5允许一个`<video></video>`标签（或者用于音频的`<audio></audio>`）来完成所有繁重的工作。还可以在开放和闭合标签之间插入文本，以通知用户存在问题。通常还有其他属性需要添加，比如`height`和`width`。让我们添加这些：
- en: '[PRE22]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now, if we add the preceding code snippet into our page and look at it in Safari,
    it will appear but there will be no controls for playback. To get the default
    playback controls we need to add the `controls` attribute. We could also add the
    `autoplay` attribute (not recommended—it''s common knowledge that everyone hates
    videos that auto-play). This is demonstrated in the following code snippet:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们将前面的代码片段添加到我们的页面中，并在Safari中查看它，它将出现，但没有播放控件。要获得默认的播放控件，我们需要添加`controls`属性。我们还可以添加`autoplay`属性（不建议-众所周知，每个人都讨厌自动播放的视频）。这在以下代码片段中进行了演示：
- en: '[PRE23]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The result of the preceding code snippet is shown in the following screenshot:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码片段的结果如下截图所示：
- en: '![Adding video and audio the HTML5 way](img/B03777_04_01.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![以HTML5方式添加视频和音频](img/B03777_04_01.jpg)'
- en: 'Further attributes include `preload` to control pre-loading of media (early
    HTML5 adopters should note that preload replaces autobuffer), `loop` to repeat
    the video, and `poster` to define a poster frame for the video. This is useful
    if there''s likely to be a delay in the video playing (or buffering is likely
    to take some time). To use an attribute, simply add it to the tag. Here''s an
    example including all these attributes:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 其他属性包括`preload`来控制媒体的预加载（早期的HTML5采用者应该注意，preload取代了autobuffer），`loop`来重复播放视频，以及`poster`来定义视频的海报帧。如果视频播放可能会有延迟（或者缓冲可能需要一些时间），这将非常有用。要使用属性，只需将其添加到标签中。以下是包括所有这些属性的示例：
- en: '[PRE24]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Fallback capability for older browsers
  id: totrans-241
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 旧版浏览器的回退功能
- en: 'The `<source>` tag enables us to provide fallbacks, as needed. For example,
    alongside providing an MP4 version of the video, if we wanted to ensure a suitable
    fallback for Internet Explorer 8 and lower versions, we could add a Flash fallback.
    Further still, if the user didn''t have any suitable playback technology in the
    browser, we could provide download links to the files themselves. Here''s an example:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '`<source>`标签使我们能够根据需要提供备用方案。例如，除了提供视频的MP4版本外，如果我们想要确保Internet Explorer 8及更低版本有合适的备用方案，我们可以添加Flash回退。更进一步，如果用户在浏览器中没有任何合适的播放技术，我们可以提供文件本身的下载链接。以下是一个示例：'
- en: '[PRE25]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: That code example and the sample video file (me appearing in the UK soap Coronation
    Street, back when I had hair and hopes of staring alongside DeNiro) in MP4 format
    are in `example2.html` of the chapter code.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 该代码示例和示例视频文件（我在英国肥皂剧《加冕街》中出现，当时我还有头发，希望能与德尼罗一起出演）以MP4格式在本章代码的`example2.html`中。
- en: Audio and video tags work almost identically
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 音频和视频标签的工作方式几乎相同
- en: The `<audio>` tag works on the same principles with the same attributes (excluding
    `width`, `height`, and `poster`). The main difference between the two being the
    fact that `<audio>` has no playback area for visible content.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`<audio>`标签遵循相同的原则，具有相同的属性（不包括`width`，`height`和`poster`）。两者之间的主要区别在于`<audio>`没有用于可见内容的播放区域。'
- en: Responsive HTML5 video and iFrames
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 响应式HTML5视频和iFrames
- en: We have seen that, as ever, supporting older browsers leads to code bloat. What
    began with the `<video>` tag being one or two lines ended up being 10 or more
    lines (and an extra Flash file) just to make older versions of Internet Explorer
    happy! For my own part, I'm usually happy to forego the Flash fallback in pursuit
    of a smaller code footprint but each use-case differs.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，支持旧版浏览器会导致代码膨胀。以`<video>`标签开始的一两行最终变成了10行或更多行（还有一个额外的Flash文件），只是为了让旧版的Internet
    Explorer满意！就我个人而言，我通常愿意放弃Flash回退，以追求更小的代码占用空间，但每个用例都不同。
- en: Now, the only problem with our lovely HTML5 video implementation is it's not
    responsive. That's right, an example in a responsive web design with HTML5 and
    CSS3 book that doesn't 'respond'.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可爱的HTML5视频实现的唯一问题是它不是响应式的。没错，在一个使用HTML5和CSS3的响应式网页设计示例中，它并没有“响应”。
- en: 'Thankfully, for HTML5 embedded video, the fix is easy. Simply remove any height
    and width attributes in the markup (for example, remove `width="640" height="480"`)
    and add the following in the CSS:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 值得庆幸的是，对于HTML5嵌入视频，修复很容易。只需在标记中删除任何高度和宽度属性（例如，删除`width="640" height="480"`），并在CSS中添加以下内容：
- en: '[PRE26]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'However, while that works fine for files that we might be hosting locally,
    it doesn''t solve the problem of videos embedded within an iFrame (take a bow
    YouTube, Vimeo, and others). The following code will add a film trailer for Midnight
    Run from YouTube:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，虽然这对于我们可能在本地托管的文件效果很好，但它并没有解决嵌入在iFrame中的视频的问题（比如YouTube、Vimeo等）。以下代码将在页面中添加来自YouTube的《午夜逃亡》电影预告：
- en: '[PRE27]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: However, if you add that to a page as is, even if adding that earlier CSS rule,
    if the viewport is less than 960px wide, things will start to get clipped.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果按原样添加到页面上，即使添加了之前的CSS规则，如果视口小于960px宽，事情就会开始被裁剪。
- en: The easiest way to solve this problem is with a little CSS trick pioneered by
    Gallic CSS maestro Thierry Koblentz; essentially creating a box of the correct
    aspect ratio for the video it contains. I won't spoil the magician's own explanation,
    go take a read at [http://alistapart.com/article/creating-intrinsic-ratios-for-video](http://alistapart.com/article/creating-intrinsic-ratios-for-video).
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题最简单的方法是使用加利西CSS大师Thierry Koblentz开创的一个小CSS技巧；基本上是为视频创建一个正确宽高比的框。我不想泄露这位魔术师的解释，去阅读一下[http://alistapart.com/article/creating-intrinsic-ratios-for-video](http://alistapart.com/article/creating-intrinsic-ratios-for-video)。
- en: 'If you''re feeling lazy, you don''t even need to work out the aspect ratio
    and plug it in yourself, there''s an online service that can do it for you. Just
    head to [http://embedresponsively.com/](http://embedresponsively.com/) and paste
    your iFrame URL in. It will spit you out a simple chunk of code you can paste
    into your page. For example, our Midnight Run trailer results in this:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感到懒惰，甚至不需要计算宽高比并自己插入，有一个在线服务可以为你做到。只需转到[http://embedresponsively.com/](http://embedresponsively.com/)，粘贴你的iFrame
    URL进去。它会为你生成一小段简单的代码，你可以粘贴到你的页面中。例如，我们的《午夜逃亡》预告片的结果如下：
- en: '[PRE28]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'That''s all there is to it, simply add to your page and you''re done: we now
    have a fully responsive YouTube video (note: kids, don''t pay any attention to
    Mr. DeNiro; smoking is bad)!'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样，简单地添加到你的页面，就完成了：我们现在有了一个完全响应式的YouTube视频（注意：孩子们，不要理会DeNiro先生；吸烟有害健康）！
- en: A note about 'offline first'
  id: totrans-259
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于“离线优先”的说明
- en: I believe that the ideal way to build responsive web pages and web-based applications
    is 'offline first'. This approach means that websites and applications will continue
    to work and load, even without an Internet connection.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信构建响应式网页和基于Web的应用程序的理想方式是“离线优先”。这种方法意味着网站和应用程序将继续工作和加载，即使没有互联网连接。
- en: HTML5 offline web applications ([http://www.w3.org/TR/2011/WD-html5-20110525/offline.html](http://www.w3.org/TR/2011/WD-html5-20110525/offline.html))
    were specified to meet this aim.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5离线Web应用程序（[http://www.w3.org/TR/2011/WD-html5-20110525/offline.html](http://www.w3.org/TR/2011/WD-html5-20110525/offline.html)）是为了实现这个目标而指定的。
- en: Although support for offline web applications is good ([http://caniuse.com/#feat=offline-apps](http://caniuse.com/#feat=offline-apps)),
    sadly, it's an imperfect solution. Although it's relatively simple to set up,
    there are a number of limitations and pitfalls. Documenting them all here is beyond
    the scope of this book. Instead I would recommend reading the humorous and thorough
    post by Jake Archibald on the subject at [http://alistapart.com/article/application-cache-is-a-douchebag](http://alistapart.com/article/application-cache-is-a-douchebag).
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管离线Web应用程序的支持很好（[http://caniuse.com/#feat=offline-apps](http://caniuse.com/#feat=offline-apps)），遗憾的是，这并不是一个完美的解决方案。虽然设置起来相对简单，但存在许多限制和陷阱。在这本书的范围之外记录它们都是不可能的。相反，我建议阅读Jake
    Archibald在这个主题上的幽默而全面的文章：[http://alistapart.com/article/application-cache-is-a-douchebag](http://alistapart.com/article/application-cache-is-a-douchebag)。
- en: I'm therefore of the opinion that while it's possible to achieve offline first
    experiences using offline web applications (a good tutorial of how to do so is
    at [http://diveintohtml5.info/offline.html](http://diveintohtml5.info/offline.html))
    and LocalStorage (or some combination of the two), a better solution will be with
    us before too long. I'm pinning my hopes on 'Service Workers' ([http://www.w3.org/TR/service-workers/](http://www.w3.org/TR/service-workers/)).
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我认为虽然使用离线Web应用程序（如[http://diveintohtml5.info/offline.html](http://diveintohtml5.info/offline.html)中的教程）和LocalStorage（或两者的某种组合）可以实现离线优先体验，但更好的解决方案将很快出现。我寄希望于“Service
    Workers”（[http://www.w3.org/TR/service-workers/](http://www.w3.org/TR/service-workers/)）。
- en: 'At the time of writing, Service Workers is still a relatively new specification
    but for a good overview I''d encourage you to watch this 15-minute introduction:
    [https://www.youtube.com/watch?v=4uQMl7mFB6g](https://www.youtube.com/watch?v=4uQMl7mFB6g).
    Read this introduction [http://www.html5rocks.com/en/tutorials/service-worker/introduction/](http://www.html5rocks.com/en/tutorials/service-worker/introduction/)
    and check for support at [https://jakearchibald.github.io/isserviceworkerready/](https://jakearchibald.github.io/isserviceworkerready/)'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Service Workers仍然是一个相对较新的规范，但我建议你观看这个15分钟的介绍：[https://www.youtube.com/watch?v=4uQMl7mFB6g](https://www.youtube.com/watch?v=4uQMl7mFB6g)。阅读这篇介绍[http://www.html5rocks.com/en/tutorials/service-worker/introduction/](http://www.html5rocks.com/en/tutorials/service-worker/introduction/)，并在[https://jakearchibald.github.io/isserviceworkerready/](https://jakearchibald.github.io/isserviceworkerready/)检查支持情况。
- en: I'm hopeful that if and when I come to write a third edition of this book, we
    will be able to consider a full overview and implementation of this technique.
    Fingers crossed.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望如果我写第三版这本书的时候，我们能够考虑全面概述和实施这种技术。保持乐观。
- en: Summary
  id: totrans-266
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We've covered a lot in this chapter. Everything from the basics of creating
    a page that validates as HTML5, through to embedding rich media (video) into our
    markup and ensuring it behaves responsively.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们涵盖了很多内容。从创建一个符合HTML5验证的页面的基础知识，到将丰富媒体（视频）嵌入我们的标记，并确保它具有响应性。
- en: Although not specific to responsive designs, we've also covered how we can write
    semantically rich and meaningful code and considered how we might ensure pages
    are meaningful and usable for users that are relying on assistive technology.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然不是专门针对响应式设计，但我们也讨论了如何编写语义丰富和有意义的代码，并考虑了如何确保页面对于依赖辅助技术的用户来说是有意义和可用的。
- en: By necessity, it's been a very markup heavy chapter so let's change tack now.
    In the next couple of chapters we're going to embrace the power and flexibility
    of CSS. First up, let's look at the power of CSS level 3 and 4 selectors, new
    viewport relative CSS units, and capabilities such as calc and HSL color. They
    will all enable us to create faster, more capable, and maintainable responsive
    designs.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 出于必要性，这是一个非常标记密集的章节，所以现在让我们改变方向。在接下来的几章中，我们将拥抱CSS的强大和灵活性。首先，让我们看看CSS 3和4选择器的强大功能，新的视口相关CSS单位，以及诸如calc和HSL颜色等功能。它们都将使我们能够创建更快、更有能力和更易维护的响应式设计。
