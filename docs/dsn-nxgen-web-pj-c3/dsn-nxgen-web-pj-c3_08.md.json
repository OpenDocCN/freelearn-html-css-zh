["```css\n<!doctype html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n\n  <title>Go Go Gauges</title>\n\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/application.css\">\n</head>\n<body>\n\n <div data-gauge data-min=\"0\" data-max=\"100\" data-percent=\"50\">\n <div data-arrow></div>\n </div>\n\n</body>\n</html>\n```", "```css\ngem install sass\n\n```", "```css\nsudo gem install sass\n\n```", "```css\n# Require any additional compass plugins here.\n\n# Set this to the root of your project when deployed:\nhttp_path = YOUR-HTTP-PROJECT-PATH\ncss_dir = \"css\"\nsass_dir = \"scss\"\nimages_dir = \"img\"\njavascripts_dir = \"js\"\n\n# You can select your preferred output style here (can be overridden via the command line):\n# output_style = :expanded or :nested or :compact or :compressed\n\n# To enable relative paths to assets via compass helper functions. Uncomment:\nrelative_assets = true\n\n# To disable debugging comments that display the original location of your selectors. Uncomment:\n# line_comments = false\n\npreferred_syntax = :sass \n\n```", "```css\ncompass watch .\n\n```", "```css\n@import \"compass/reset\";\n\n```", "```css\n/* line 17, ../../../../.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline;\n}\n\n/* line 22, ../../../../.rvm/gems/ruby-1.9.3-p194/gems/compass-0.12.2/frameworks/compass/stylesheets/compass/reset/_utilities.scss */\nhtml {\n  line-height: 1;\n}\n\n... \n```", "```css\n.round {\n    @include border-radius(4px);\n}\n```", "```css\n.round {\n    -moz-border-radius: 4px;\n    -webkit-border-radius: 4px;\n    -o-border-radius: 4px;\n    -ms-border-radius: 4px;\n    -khtml-border-radius: 4px;\n    border-radius: 4px;\n}\n```", "```css\nhtml{\n  font-size: 20px;\n}\n```", "```css\n@mixin px_and_rem($property, $value, $mux){\n  #{$property}: 0px + ($value * $mux);\n  #{$property}: 0rem + $value;\n}\n```", "```css\n#my_style{\nwidth: 10rem;\n}\n```", "```css\n#my_style{\n@include px_and_rem(width, 10, 20);\n}\n```", "```css\n$multiplier: 20px;\n\nhtml{\n  font-size: $multiplier;\n}\n```", "```css\ndiv[data-gauge]{\n  position: absolute;\n\n  /* width, height and rounded corners */\n  @include px_and_rem(width, 10, $multiplier);\n  @include px_and_rem(height, 5, $multiplier);\n  @include px_and_rem(border-top-left-radius, 5, $multiplier);\n  @include px_and_rem(border-top-right-radius, 5, $multiplier);\n\n  /* centering */\n  @include px_and_rem(margin-top, -2.5, $multiplier);\n  @include px_and_rem(margin-left, -5,  $multiplier);\n  top: 50%;\n  left: 50%;\n\n  /* inset shadows, both in px and rem */\nbox-shadow: 0 0 #{0.1 * $multiplier} rgba(99,99,99,0.8), 0 0 #{0.1 * $multiplier} rgba(99,99,99,0.8) inset;\n  box-shadow: 0 0 0.1rem rgba(99,99,99,0.8), 0 0 0.1rem rgba(99,99,99,0.8) inset;\n\n  /* border, font size, family and color */\n  border: #{0.05 * $multiplier} solid rgb(99,99,99);\t\n  border: 0.05rem solid rgb(99,99,99);\n\n  color: rgb(33,33,33);\n  @include px_and_rem(font-size, 0.7, $multiplier);\n  font-family: verdana, arial, sans-serif;\n\n  /* min label */\n  &:before{\n    content: attr(data-min);\n    position: absolute;\n    @include px_and_rem(bottom, 0.2, $multiplier);\n    @include px_and_rem(left, 0.4, $multiplier);\n  }\n\n  /* max label */\n  &:after{\n    content: attr(data-max);\n    position: absolute;\n    @include px_and_rem(bottom, 0.2, $multiplier);\n    @include px_and_rem(right, 0.4, $multiplier);\n  }\n}\n```", "```css\nlinear-gradient(0deg, transparent 46%, rgba(99, 99, 99, 0.5) 47%, rgba(99, 99, 99, 0.5) 53%, transparent 54%)\n```", "```css\n@function gauge-tick-marks($n, $rest){\n  $linear: null;\n  @for $i from 1 through $n {\n $p: -90deg + 180 / ($n+1) * $i;\n    $linear: append($linear, linear-gradient( $p, transparent 46%, rgba(99,99,99,0.5) 47%, rgba(99,99,99,0.5) 53%, transparent 54%), comma);\n  }\n  @return append($linear, $rest);  \n}\n```", "```css\n@import \"gauge.scss\";\n```", "```css\n@include background(gauge-tick-marks(11,null));\n```", "```css\n@function gauge-tick-marks-size($n, $rest){\n  $sizes: null;\n  @for $i from 1 through $n {\n $sizes: append($sizes, 1rem 1rem, comma);\n  }\n  @return append($sizes, $rest, comma);\n}\n```", "```css\nbackground-size: gauge-tick-marks-size(11, null);\n```", "```css\nbackground-repeat: no-repeat;\n```", "```css\n@function gauge-tick-marks-position($n, $rest){\n  $positions: null;\n  @for $i from 1 through $n {\n $angle: 0deg + 180 / ($n+1) * $i;\n $px: 100% * ( cos($angle) / 2 + 0.5 );\n $py: 100% * (1 - sin($angle));\n    $positions: append($positions, $px $py, comma);\n  }\n  @return append($positions, $rest, comma);\n}\n```", "```css\nbackground-position: gauge-tick-marks-position(11, null);\n```", "```css\n@mixin gauge-background($ticks, $rest_gradient, $rest_size, $rest_position) {\n\n  @include background-image(\n    gauge-tick-marks($ticks, $rest_gradient) \n  );\n\n  background-size: gauge-tick-marks-size($ticks, $rest_size);\n  background-position: gauge-tick-marks-position($ticks, $rest_position);\n  background-repeat: no-repeat;\n}\n```", "```css\n@include gauge-background(11, null, null, null );\n```", "```css\n@include gauge-background(11,\n  radial-gradient(50% 100%, circle, rgb(255,255,255), rgb(230,230,230)),\n  cover,\n  center center\n);\n```", "```css\n  div[data-arrow]{\n    position: absolute;\n    @include px_and_rem(width, 2, $multiplier);\n    @include px_and_rem(height, 2, $multiplier);\n    @include px_and_rem(border-radius, 5, $multiplier);\n    @include px_and_rem(bottom, -1, $multiplier);\n    left: 50%;\n    @include px_and_rem(margin-left, -1, $multiplier);\n   box-sizing: border-box;\n\n    border: #{0.05 * $multiplier} solid rgb(99,99,99);  \n    border: 0.05rem solid rgb(99,99,99);\n    background: #fcfcfc;\n  }\n```", "```css\n    &:before{\n      position: absolute;\n      display: block;\n      content: '';\n      @include px_and_rem(width, 4, $multiplier);\n      @include px_and_rem(height, 0.5, $multiplier);\n      @include px_and_rem(bottom, 0.65, $multiplier);\n      @include px_and_rem(left, -3, $multiplier);\n background-image: linear-gradient(83.11deg, transparent, transparent 49%, orange 51%, orange); \n background-image: -webkit-linear-gradient(83.11deg, transparent, transparent 49%, orange 51%, orange); \n background-image: -moz-linear-gradient(83.11deg, transparent, transparent 49%, orange 51%, orange);\n background-image: -o-linear-gradient(83.11deg, transparent, transparent 49%, orange 51%, orange); \n\n @include apply-origin(100%, 100%);\n @include transform2d( rotate(-3.45deg));\n box-shadow: 0px #{-0.05 * $multiplier} 0 rgba(0,0,0,0.2);\n box-shadow: 0px -0.05rem 0 rgba(0,0,0,0.2);\t\t\t@include px_and_rem(border-top-right-radius, 0.25, $multiplier);\n @include px_and_rem(border-bottom-right-radius, 0.35, $multiplier);\n    }\n```", "```css\n@for $i from 0 through 100 {\n  $v: $i;\n  @if $i < 10 { \n    $v: '0' + $i;\n  }\n\n  &[data-percent='#{$v}'] > div[data-arrow]{\n      @include transform2d(rotate(#{180deg * $i/100}));\n  }\n}\n```", "```css\n  @for $i from 0 through 10 {\n    &[data-percent='#{$i*10}'] > div[data-arrow]{\n      @include transform2d(rotate(#{180deg * $i/10}));\n    }\n  }\n```", "```css\n  -webkit-transition: -webkit-transform 0.5s;\n  -moz-transition: -moz-transform 0.5s;\n  -ms-transition: -ms-transform 0.5s;\n  -o-transition: -o-transform 0.5s;\n  transition: transform 0.5s;\n```", "```css\n<div data-gauge data-min=\"0\" data-max=\"100\" data-percent=\"50\" data-orange-from=\"60\" data-red-from=\"90\">\n  <div data-arrow></div>\n</div>\n```", "```css\nbackground-color: green;\n```", "```css\n@include gauge-background(11,\n radial-gradient(50% 100%, circle, rgba(255,255,255,0), rgba(255,255,255,0) 25%, rgb(255,255,255) 25%, rgb(230,230,230)),\n  cover,\n  center center\n);\n```", "```css\n@for $i from 0 through 100 {\n  $v: $i;\n  @if $i < 10 { \n    $v: '0' + $i;\n  } \n\n  &[data-percent='#{$v}'] > div[data-arrow]{\n    @include transform2d(rotate(#{180deg * $i/100}));\n  }\n\n @for $k from 0 through 10 {\n @if $i >= $k * 10 {\n &[data-percent='#{$v}'][data-orange-from^='#{$k}']{\n background-color: orange;\n }\n &[data-percent='#{$v}'][data-red-from^='#{$k}']{\n background-color: red;\n }\n }\n }\n}\n```", "```css\n<div data-gauge data-min=\"0\" data-max=\"100\" data-percent=\"50\" data-orange-from=\"60\" data-red-from=\"90\" data-trembling>\n\n```", "```css\ngem install animation \u2013pre\n\n```", "```css\nsudo gem install animation \u2013-pre\n\n```", "```css\ncompass watch . \u2013r animation\n\n```", "```css\n@import \"animation\";\n```", "```css\n@include keyframes(trembling) {\n  0% {\n      @include transform2d( rotate(-5.17deg));\n  }\n  100% {\n      @include transform2d( rotate(-1.725deg));\n  }\n}\n```", "```css\n&[data-trembling][data-percent^='8'] > div[data-arrow]:before,\n&[data-trembling][data-percent^='9'] > div[data-arrow]:before,\n&[data-trembling][data-percent='100'] > div[data-arrow]:before{\n @include animation(trembling 0.2s infinite linear alternate);\n}\n```", "```css\n<div data-gauge data-min=\"0\" data-max=\"100\" data-percent=\"50\" data-orange-from=\"60\" data-red-from=\"90\" data-trembling>\n<span>50</span>\n  <div data-arrow></div>\n</div>\n```", "```css\nspan{\n  display: block;\n  color: #DDD;\n  @include px_and_rem(font-size, 1.5, $multiplier);\n  text-align: center;\n  @include px_and_rem(width, 10, $multiplier);\n  @include px_and_rem(height, 5, $multiplier);\n  @include px_and_rem(line-height, 5, $multiplier);\n}\n```", "```css\n<script src=\"img/modernizr.js\"></script>\n```", "```css\n.no-cssgradients div[data-gauge]{ \n\n div[data-arrow]:before{\n background-color: orange;\n @include transform2d( rotate(0deg));\n box-shadow: none;\n border-radius: 0;\n }\n}\n```", "```css\nbackground-image: -svg(radial-gradient(50% 100%, circle, rgba(255,255,255,0), rgba(255,255,255,0) 35%, rgb(255,255,255) 35%, rgb(230,230,230)));\nbackground-size: cover;\nbackground-position: auto;\n```", "```css\n<!--[if IE 8]>\n  <script src=\"img/jquery-1.8.0.min.js\"></script>\n  <script src=\"img/PIE.js\"></script>\n  <script src=\"img/application.js\"></script>\n<![endif]-->\n```", "```css\n-pie-border-radius: #{5 * $multiplier} #{5 * $multiplier} 0px 0px;\n\n```", "```css\n$(function() {\n    if (window.PIE) {\n $('div[data-gauge]').each(function() {\n PIE.attach(this);\n });\n    }\n});\n```", "```css\n<!doctype html>\n<!--[if IE 8]> <html class=\"ie8\" > <![endif]-->\n<!--[if !IE]> --> <html> <!-- <![endif]-->\n<head>\n  <title>Go Go Gauges</title>\n  <script src=\"img/modernizr.js\"></script>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/application.css\">\n  <!--[if IE 8]>\n    <script src=\"img/jquery-1.8.0.min.js\"></script>\n <script src=\"img/jquery.transform2d.js\"></script>\n    <script src=\"img/PIE.js\"></script>\n    <script src=\"img/application.js\"></script>\n  <![endif]-->\n</head>\n<!-- ...rest of index.html ... -->\n```", "```css\n$(elem).css('transform', 'translate(50px, 30px) rotate(25deg) scale(2,.5) skewX(-35deg)');\n```", "```css\n$(function() {\n    if (window.PIE) {\n        $('div[data-gauge]').each(function() {\n            PIE.attach(this);\n\n var angle = Math.round(180 * parseInt($(this).attr('data-percent'),10)/100);\n $('div[data-arrow]',$(this)).css({\n 'transform': 'rotate(' + angle + 'deg)'\n });\n        });\n    }\n});\n```", "```css\n.ie8 div[data-gauge]{\n  div[data-arrow]{\n    width: #{10 * $multiplier};\n    height: #{10 * $multiplier};\n    margin-top: #{-5 * $multiplier};\n    margin-left: #{-5 * $multiplier};\n    top: 50%;\n    left: 50%;\n    background: transparent;\n    border: none;\n    &:before{\n      bottom: 50%;\n      margin-bottom: #{-0.25 * $multiplier};\n      left: #{1 * $multiplier};\n    }\n  }\n}\n```", "```css\n@function gauge-tick-marks($n, $rest, $ms){\n  $linear: null;\n  @for $i from 1 through $n {\n    $p: -90deg + 180 / ($n+1) * $i;\n $gradient: null;\n @if $ms == true {\n $gradient: -ms-linear-gradient( $p, transparent 46%, rgba(99,99,99,0.5) 47%, rgba(99,99,99,0.5) 53%, transparent 54%);\n } @else{\n $gradient: linear-gradient( $p, transparent 46%, rgba(99,99,99,0.5) 47%, rgba(99,99,99,0.5) 53%, transparent 54%);\n }\n    $linear: append($linear, $gradient, comma);\n  }\n @if $ms == true {\n @return append($linear, #{'-ms-' + $rest} ); \n } @else{\n @return append($linear, $rest); \n }\n}\n```", "```css\n@mixin gauge-background($ticks, $rest_gradient, $rest_size, $rest_position) {\n\n @include background-image(\n gauge-tick-marks($ticks, $rest_gradient, false) \n );\n\n background-image: gauge-tick-marks($ticks, $rest_gradient, true);\n\n  background-size: gauge-tick-marks-size($ticks, $rest_size);\n  background-position: gauge-tick-marks-position($ticks, $rest_position);\n  background-repeat: no-repeat;\n}\n```", "```css\nbackground-image: -ms-linear-gradient(83.11deg, transparent, transparent 49%, orange 51%, orange);\n```"]