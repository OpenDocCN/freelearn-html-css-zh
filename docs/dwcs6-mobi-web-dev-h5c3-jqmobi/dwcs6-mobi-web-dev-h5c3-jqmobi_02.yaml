- en: Chapter 2. Using HTML5 for Page Structure
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。使用HTML5进行页面结构
- en: 'In the first chapter of this book, we saw a compressed overview of the basic
    and foundational techniques for working in Dreamweaver CS6: working in a defined
    Dreamweaver site, building HTML5 pages, linking CSS stylesheet files, and constraining
    page content in a `<div>` container tag.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的第一章中，我们看到了在Dreamweaver CS6中工作的基本和基础技术的简要概述：在定义的Dreamweaver站点中工作，构建HTML5页面，链接CSS样式表文件，并在`<div>`容器标签中限制页面内容。
- en: 'In this chapter, we''ll learn to build web pages in Dreamweaver using HTML5
    container tags. These are the following four things we will accomplish by learning
    to do that:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何在Dreamweaver中使用HTML5容器标签构建网页。通过学习这些，我们将完成以下四件事：
- en: Building page layouts relying exclusively on HTML5 layouts will hone our skills
    at using these new tools for page design, and introduce HTML5 Code Hints in Dreamweaver
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅依赖于HTML5布局构建页面布局将磨练我们使用这些新工具进行页面设计的技能，并在Dreamweaver中引入HTML5代码提示
- en: Relying on *standardized* and *defined* HTML5 layout elements (as opposed to
    custom-defined, irregularly-implemented `div` tags) streamlines the page design
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 依赖于*标准化*和*定义*的HTML5布局元素（而不是自定义的、不规则实现的`div`标签）简化了页面设计
- en: There are actual, significant real-world scenarios where building pages relying
    exclusively on HTML5 layout elements is the best way to design pages (for example,
    when designing pages for iPhones or iPads)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实际上，有重要的现实场景，仅依赖于HTML5布局元素构建页面是设计页面的最佳方式（例如，在为iPhone或iPad设计页面时）
- en: There are functional advantages beyond design considerations for organizing
    page content in HTML5 layout elements. We will examine those advantages as we
    build HTML5 pages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在HTML5布局元素中组织页面内容除了设计考虑之外还有功能上的优势。在构建HTML5页面时，我们将研究这些优势。
- en: In the course of building pages using just HTML5 layout elements, we'll explore
    all four advantages of relying on HTML5 listed previously.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用HTML5布局元素构建页面的过程中，我们将探讨依赖于HTML5的四个优势。
- en: 'And here it is important to review, or at least reinforce the following two
    foundational techniques in building any professional-quality website in Dreamweaver:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建任何专业质量网站的基础技术中，重温或至少强化以下两个基础技术是很重要的：
- en: Do nothing without first defining a Dreamweaver site. Review [Chapter 1](ch01.html
    "Chapter 1. Creating Sites and Pages with Dreamweaver CS6"), *Creating Sites and
    Pages with Dreamweaver CS6*, if you are not currently working within a defined
    site.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在没有首先定义Dreamweaver站点之前不要做任何事情。如果您当前没有在定义的站点中工作，请查看[第1章](ch01.html "第1章。在Dreamweaver
    CS6中创建站点和页面")，*在Dreamweaver CS6中创建站点和页面*。
- en: 'Secondly, and not quite so essential but still pretty foundational: We always
    work with *external* stylesheets. This allows the styles we define to be applied
    globally, across an entire website, and makes updating sites possible. As we begin
    to coordinate styling in the CSS Styles panel and constructing pages with HTML5
    elements, I''ll be reminding you, and when necessary, walking you through the
    steps required to make sure all styles are saved to an external stylesheet.'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 其次，虽然不是很重要但仍然很基础：我们总是使用*外部*样式表。这允许我们定义的样式在整个网站上全局应用，并且使得更新网站成为可能。当我们开始在CSS样式面板中协调样式并使用HTML5元素构建页面时，我会提醒您，并在必要时引导您完成确保所有样式保存到外部样式表的步骤。
- en: With this as a preview and cautionary reminder, let's dive in to creating pages
    with HTML5 layout elements.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个预览和警示提醒，让我们开始使用HTML5布局元素创建页面。
- en: Structuring pages with HTML5
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用HTML5构建页面
- en: HTML5 introduced a new approach and opened up new and intuitive techniques for
    organizing page content. Until the advent of HTML, we had tags that assigned heading
    levels (`H1`… `H6`), paragraph tags, list tags, and other elements that defined
    mainly how content would be displayed.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5引入了一种新的方法，并开辟了组织页面内容的新和直观的技术。在HTML出现之前，我们有标签来分配标题级别（`H1`… `H6`），段落标签，列表标签和其他主要定义内容如何显示的元素。
- en: When it came to organizing content into containers or boxes, we were left to
    our own devices. And so developers created their own sets of ID and class styles—ID
    styles that were used once per HTML file (like a wrapper style), and class styles
    that were used multiple times on a page (like a style that defined picture/caption
    boxes).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将内容组织到容器或框中时，我们只能依靠自己。因此开发人员创建了自己的ID和类样式集 - 一次在HTML文件中使用一次的ID样式（比如包装器样式），以及在页面上多次使用的类样式（比如定义图片/标题框的样式）。
- en: 'HTML5 standardizes the elements used to organize content on a page. The key
    HTML5 structuring elements are as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5标准化了用于组织页面内容的元素。关键的HTML5结构元素如下：
- en: '`<header>`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<header>`'
- en: '`<nav>`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<nav>`'
- en: '`<article>`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<article>`'
- en: '`<section>`'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<section>`'
- en: '`<aside>`'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<aside>`'
- en: '`<footer>`'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<footer>`'
- en: The names of these elements are pretty much self-explanatory. The `<header>`
    elements define header content at the top of a page, and `<footer>` elements define
    footer content. The `<nav>` element defines navigation content. The `<article>`
    tags define different articles or coherent blocks of content within a page, and
    larger or longer articles can be subdivided into sections. The `<aside>` elements
    define sidebar content that should be embedded within an `<article>` or a `<section>`
    element.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这些元素的名称基本上是不言自明的。`<header>`元素定义页面顶部的页眉内容，`<footer>`元素定义页脚内容。`<nav>`元素定义导航内容。`<article>`标签定义页面内不同的文章或连贯的内容块，更大或更长的文章可以被细分为部分。`<aside>`元素定义应嵌入`<article>`或`<section>`元素中的侧边栏内容。
- en: There are other HTML5 elements that define content such as dates, times, and
    addresses.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他HTML5元素可以定义日期、时间和地址等内容。
- en: 'Structuring pages with HTML5 elements is referred to as *semantic markup* because
    these markup elements actually describe the type of content within the tag. Using
    HTML5 semantic markup accomplishes two things:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用HTML5元素构建页面的结构被称为*语义标记*，因为这些标记元素实际上描述了标签内的内容类型。使用HTML5语义标记可以实现两件事：
- en: For the developer, HTML5 elements eliminate the need to create a whole set of
    individually defined `<div>` tag styles.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于开发人员，HTML5元素消除了创建一整套单独定义的`<div>`标签样式的需要。
- en: For the user, the advantages of HTML5 elements essentially boil down to search
    engine optimization. By clearly delineating what the content is (a heading, a
    date, a navigation bar, an article, and so on), HTML5 elements help search engines
    identify your content and make it accessible.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于用户来说，HTML5元素的优势基本上归结为搜索引擎优化。通过清晰地界定内容是什么（标题、日期、导航栏、文章等），HTML5元素帮助搜索引擎识别您的内容并使其可访问。
- en: HTML5 structural elements
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML5结构元素
- en: Let's continue our exploration of building pages with HTML5 in Dreamweaver CS6\.
    Now, we'll walk through the steps involved in building a fairly complex HTML5
    page.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续探索在Dreamweaver CS6中使用HTML5构建页面的过程。现在，我们将逐步介绍构建相当复杂的HTML5页面所涉及的步骤。
- en: 'The first step is to alert browsers that we are presenting HTML5 content, for
    that, we need to indicate at the top of our HTML5 code that this is an HTML5 page.
    As for those browsers that respond "Huh, what''s that?"—I''ll explain how to solve
    that challenge at the end of this chapter. But first, use the following steps
    to create a new HTML5 page from scratch:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是警告浏览器我们正在呈现HTML5内容，为此，我们需要在我们的HTML5代码顶部指示这是一个HTML5页面。至于那些回应“嗯，那是什么？”的浏览器——我将在本章末尾解释如何解决这个挑战。但首先，使用以下步骤从头开始创建一个新的HTML5页面：
- en: With your Dreamweaver site defined, choose **File** | **New**. In the **New
    Document** dialog, choose **Blank Page** from the category list on the left-hand
    side of the dialog. Choose **HTML** in the **Page Type** column. Choose **<none>**
    in the **Layout** column.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义了Dreamweaver站点后，选择**文件** | **新建**。在**新建文档**对话框中，从对话框左侧的类别列表中选择**空白页面**。在**页面类型**列中选择**HTML**。在**布局**列中选择**<none>**。
- en: The **Layout CSS** pop up is set to **Create New File**. Remember, we'll be
    saving our styles to an external stylesheet. If you already have a CSS file to
    use with HTML layouts, you could choose **Link to Exiting File** instead, and
    select your existing HTML5-related CSS file as the styles file for your page.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**布局CSS**弹出窗口设置为**创建新文件**。记住，我们将把样式保存到外部样式表中。如果您已经有一个用于HTML布局的CSS文件，您可以选择**链接到现有文件**，然后选择您现有的与HTML5相关的CSS文件作为页面的样式文件。'
- en: From the **DocType** pop up, choose **HTML 5** if that is not already selected,
    as shown in the following screenshot:![HTML5 structural elements](img/4742_02_01.jpg)
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**文档类型**弹出窗口中选择**HTML 5**，如果尚未选择，如下图所示：![HTML5结构元素](img/4742_02_01.jpg)
- en: The preceding screenshot shows a new HTML5 page being generated in the **New
    Document** dialog.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的屏幕截图显示了在**新建文档**对话框中生成新的HTML5页面。
- en: Click on **Create** to generate the blank page.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**创建**生成空白页面。
- en: 'A blank page appears in the **Design** view of the **Document** window. In
    the **Split** view, we can see that the following basic code has been generated:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在**文档**窗口的**设计**视图中出现了一个空白页面。在**分割**视图中，我们可以看到生成了以下基本代码：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Breaking down HTML5 page code
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分解HTML5页面代码
- en: Let's quickly walk through this basic code to situate ourselves.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速浏览一下这个基本代码，以便了解情况。
- en: The `<!DOCTYPE HTML>` and `<html>` tags are sort of evolutionary holdovers from
    previous versions of HTML, and not actually required for HTML5 browsers. This
    code might be useful when taking into account non-HTML5 browsers, as we will be
    examining shortly. By the way, the `<!DOCTYPE>` declaration for HTML5 is not case
    sensitive.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`<!DOCTYPE HTML>`和`<html>`标签在某种程度上是HTML先前版本的遗留物，并不是HTML5浏览器实际上需要的。这段代码在考虑非HTML5浏览器时可能会有用，我们很快就会进行检查。顺便说一句，HTML5的`<!DOCTYPE>`声明不区分大小写。'
- en: And here's another intriguing thing about an HTML5 `<!DOCTYPE>` declarations.
    By telling browsers that we are structuring our content in HTML5, we are also
    telling older browsers to be less strict in enforcing rules, such as ending every
    paragraph element with `</p>`. Thus, we avoid annoying and unnecessary browser
    error messages.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 还有关于HTML5的`<!DOCTYPE>`声明的另一个有趣之处。通过告诉浏览器我们正在以HTML5结构化我们的内容，我们也在告诉旧版浏览器在执行规则时要更宽松一些，比如不需要在每个段落元素结尾加上`</p>`。因此，我们避免了令人讨厌和不必要的浏览器错误消息。
- en: 'Back to our generated code:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 回到我们生成的代码：
- en: The `<head>` and `</head>` tags demarcate the head content that is not displayed
    on the page, but serves as instructions to browsers.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`<head>`和`</head>`标签标记了不在页面上显示的头部内容，但作为浏览器的指令。'
- en: In this case, the content inside the `<head>` element identifies that the current,
    most widely applicable character set, **UTF-8**, is implemented. This character
    set allows the display of characters from a wide range of languages.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`<head>`元素内的内容标识出当前最广泛适用的字符集**UTF-8**。这个字符集允许显示来自多种语言的字符。
- en: All of the content we create for the page will be placed within the `<body>`
    and `</body>` tags. For this reason, our first step in creating our CSS styles
    for this page, will be to define a couple of basic attributes for the `</body>`
    tag.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为页面创建的所有内容都将放在`<body>`和`</body>`标签内。因此，我们在为页面创建CSS样式时的第一步将是为`</body>`标签定义一些基本属性。
- en: Finally, save this page as an HTML file. Choose **File** | **Save**. In the
    **Save As** dialog, make sure the folder selected in the **Where** pop up is your
    Dreamweaver site folder (or a subfolder within that). Give the file a name, such
    as `html5_test`, and click on **Save**.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，将此页面保存为HTML文件。选择**文件** | **保存**。在**另存为**对话框中，确保**位置**弹出窗口中选择的文件夹是您的Dreamweaver站点文件夹（或该文件夹内的子文件夹）。给文件命名，例如`html5_test`，然后单击**保存**。
- en: '![Breaking down HTML5 page code](img/4742_02_02.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![分解HTML5页面代码](img/4742_02_02.jpg)'
- en: The preceding screenshot shows how to save an HTML5 page.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的屏幕截图显示了如何保存HTML5页面。
- en: While we're at it, enter a descriptive title in the **Title** box of the **Document**
    toolbar. Re-save periodically.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 趁热打铁，在**文档**工具栏的**标题**框中输入一个描述性标题。定期重新保存。
- en: '![Breaking down HTML5 page code](img/4742_02_03.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![分解HTML5页面代码](img/4742_02_03.jpg)'
- en: The preceding screenshot shows how to define a page title.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图显示了如何定义页面标题。
- en: Using HTML5 structure elements
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用HTML5结构元素
- en: Having set up our HTML5 document with basic web page coding, we're now ready
    to create and format the HTML5 layout elements that will define how the page looks.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用基本的网页编码设置了我们的HTML5文档后，现在可以创建和格式化HTML5布局元素，以确定页面的外观。
- en: A basic HTML5 page layout is illustrated in the following screenshot. It demonstrates
    a certain hierarchy to the page. All content is constrained (for size) within
    a traditional wrapper `div` tag. Within that, the page has a header, a footer,
    and `article` elements. The `section` elements are present within `article` elements.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的HTML5页面布局如下屏幕截图所示。它展示了页面的某种层次结构。所有内容都受到传统包装器`div`标签的限制（大小）。在其中，页面有一个页眉，一个页脚和`article`元素。`section`元素存在于`article`元素中。
- en: Note also that the `nav` element (holding navigation content) can be used either
    inside another element (such as a header or footer) or outside any HTML5 semantic
    layout elements. And, note that an `aside` element can be used within either an
    `article` or a `section` element.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 还要注意，`nav`元素（包含导航内容）可以放在另一个元素内（如页眉或页脚）或在任何HTML5语义布局元素外。并且，`aside`元素可以放在`article`或`section`元素内。
- en: '![Using HTML5 structure elements](img/4742_02_04.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![使用HTML5结构元素](img/4742_02_04.jpg)'
- en: The preceding screenshot shows an HTML5 page layout.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图显示了一个HTML5页面布局。
- en: Using Code Hints
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用代码提示
- en: I won't mince words, Dreamweaver CS6 pretty much eschews any WYSIWYG support
    for HTML5 page structuring. At this stage of the game, most of us use Dreamweaver's
    **Split** view anyway, and Dreamweaver's **Code** view (available as half the
    screen in the **Split** view) has helpful code-hinting for creating HTML5 page
    structure. As you begin typing HTML5 elements in the **Code** view, beginning
    with `<`, Dreamweaver prompts you with a set of tags that begin with the letter
    you type. So, for example, typing `<he` produces code hints from which you can
    click on **<>header** and press the *Enter* key (Windows) or the *Return* key
    (Mac) to place the code.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会掩饰，Dreamweaver CS6基本上放弃了对HTML5页面结构的所见即所得支持。在这个阶段，我们大多数人都使用Dreamweaver的**分割**视图，而Dreamweaver的**代码**视图（在**分割**视图中占据半个屏幕）具有有用的代码提示，可以帮助创建HTML5页面结构。当您在**代码**视图中开始输入HTML5元素时，从`<`开始，Dreamweaver会提示您一组以您输入的字母开头的标签。例如，输入`<he`会产生代码提示，您可以从中选择**<>header**并按下*Enter*键（Windows）或*Return*键（Mac）来放置代码。
- en: 'Dreamweaver provides code hinting for HTML5 semantic layout elements, as shown
    in the following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver为HTML5语义布局元素提供代码提示，如下面的屏幕截图所示：
- en: '![Using Code Hints](img/4742_02_05.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![使用代码提示](img/4742_02_05.jpg)'
- en: To *close* (define the end of) an HTML5 layout element, simply type `</`. When
    you do that, Dreamweaver auto-enters the closing code for the open element.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 要*关闭*（定义结束）HTML5布局元素，只需键入`</`。这样做时，Dreamweaver会自动输入打开元素的关闭代码。
- en: As we walk through the coding involved in defining different HTML5 layout elements
    in the remainder of this chapter, you can enter the necessary code in the **Split**
    view, utilizing code hints, and seeing the results in the **Design** view of the
    **Split** view.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在本章的其余部分中讨论定义不同的HTML5布局元素所涉及的编码时，您可以在**分割**视图中输入必要的代码，利用代码提示，并在**分割**视图的**设计**视图中查看结果。
- en: Adding header, nav, and hgroup
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加页眉，导航和标题组
- en: The `<header>` element is used to organize all the content that goes at the
    top of a page. Within the `<header>` element, you might well include the `<nav>`
    content as shown in the next screenshot.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`<header>`元素用于组织放在页面顶部的所有内容。在`<header>`元素中，您可能会包括`<nav>`内容，如下一个屏幕截图所示。'
- en: And, you will probably include standard (traditional) HTML tags such as headings
    and links.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，您可能会包括标准（传统）的HTML标签，如标题和链接。
- en: So, the `<nav>` content—the links at the top of a page—are included in the `<header>`
    element when they are placed at the top of a page. Navigation elements placed
    in sidebars are also enclosed with the `<nav>` element, but since—in this case—they
    are not part of the header, they are not enclosed in the `<header>` element.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`<nav>`内容——页面顶部的链接——在放置在页面顶部时包含在`<header>`元素中。放在侧边栏中的导航元素也被包含在`<nav>`元素中，但由于在这种情况下它们不是页眉的一部分，它们没有包含在`<header>`元素中。
- en: Within a `<header>` element, CSS styles associated with tags (`<h1>`, `<h2>`,
    and so on), or with the class `<div>` tags can be used to supply additional formatting
    rules for how content will be displayed.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在`<header>`元素中，与标签（`<h1>`，`<h2>`等）或类`<div>`标签相关的CSS样式可以用来提供额外的格式规则，以确定内容的显示方式。
- en: With the aim of making content within a header more easily categorized, HTML5
    includes the `<hgroup>` element. The formal requirement for the `<hgroup>` content
    is that it should include at least one heading tag (`<h1>`, `<h2>`, `<h3>`, `<h4>`,
    `<h5>`, or `<h6>`).
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更容易对页眉中的内容进行分类，HTML5包括`<hgroup>`元素。`<hgroup>`内容的正式要求是，它应该至少包括一个标题标签（`<h1>`，`<h2>`，`<h3>`，`<h4>`，`<h5>`或`<h6>`）。
- en: The concept is that the heading content such as subheadings, alternative titles,
    or taglines should all be grouped within a header for easy access. So, for example,
    in the next screenshot, the two heading lines have been wrapped in an `<hgroup>`
    element. But the navigation content, although part of the header, is not included
    in the `<hgroup>` element.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这个概念是，标题内容，如副标题，替代标题或标语，都应该在页眉中进行分组以便轻松访问。例如，在下一个屏幕截图中，两行标题已经包裹在`<hgroup>`元素中。但是导航内容，虽然是页眉的一部分，但没有包含在`<hgroup>`元素中。
- en: 'In the following code, an `<h1>` heading and an `<h2>` heading, along with
    a `<nav>` element with its own `<h5>` heading (and three placeholder links), are
    all part of a `<header>` element:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，一个`<h1>`标题和一个`<h2>`标题，以及一个带有自己的`<h5>`标题（和三个占位符链接）的`<nav>`元素，都是`<header>`元素的一部分：
- en: '[PRE1]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The following screenshot illustrates how this looks in the **Split** view in
    Dreamweaver (with the **Live** view on in the **Design** view side of **Split**
    view).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了这在Dreamweaver的**分割**视图中的样子（在**分割**视图的**设计**视图一侧打开**实时**视图）。
- en: '![Adding header, nav, and hgroup](img/4742_02_06.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![添加标题、导航和标题组](img/4742_02_06.jpg)'
- en: Creating articles and sections
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建文章和章节
- en: If you write for a living, like I do, you learn to organize content into chunks
    and sub-chunks, concepts and sub-concepts, ideas and more detailed ideas, and
    so on. The basic rule for organizing content in this way is that if you create
    a sub-section, you have to create two subsections. Otherwise, there's no point
    in creating just one subsection.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您像我一样以写作为生，您会学会将内容组织成块和子块，概念和子概念，想法和更详细的想法等等。以这种方式组织内容的基本规则是，如果您创建一个子部分，您必须创建两个子部分。否则，创建一个子部分就没有意义。
- en: In line with our recurring theme of unity between content and design in HTML5
    layout, the content in HTML5 pages, where it has to be broken down, is broken
    down into what are called **articles**. And, where there is a need for distinct
    subsections within an article, those subsections are **sections**.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们在HTML5布局中不断重复的统一主题一致，在HTML5页面中，需要将内容分解时，将其分解为所谓的**文章**。而在文章内需要明确的子部分时，这些子部分就是**章节**。
- en: As you create a CSS file to match your HTML layout elements, you might well
    assign specific formatting to articles and to sections. For example, you might
    choose to indent section content or place a unique background behind it.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当您创建一个CSS文件来匹配您的HTML布局元素时，您可能会为文章和章节指定特定的格式。例如，您可能选择缩进章节内容或在其后放置一个独特的背景。
- en: 'The code for the `<article>` and `<section>` elements in the preceding illustration,
    including the placeholder text and headings is as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 前面示例中`<article>`和`<section>`元素的代码，包括占位文本和标题如下：
- en: '[PRE2]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Or, you might choose *not* to apply specific CSS rules to articles and sections,
    and simply wrap the content in the `<article>` and `<section>` elements for content-organizing
    purposes while relying on the `<body>` tag, the `<p>` (paragraph) tag, or custom
    class styles that you define in Dreamweaver for formatting the article and section
    content.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可能选择*不*对文章和章节应用特定的CSS规则，而只是将内容包装在`<article>`和`<section>`元素中，以便组织内容，同时依赖于`<body>`标签、`<p>`（段落）标签或您在Dreamweaver中定义的自定义类样式来格式化文章和章节内容。
- en: Adding aside content
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加侧边栏内容
- en: Aside is reserved for sidebar content that is dependent on the content present
    in an article or section of an article. The `<aside>` element is not intended,
    for example, to serve as a container for navigation content (navigation content
    is supposed to be identified by and wrapped in the `<nav>` element discussed earlier).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 侧边栏保留用于依赖于文章或文章部分中存在的内容的侧边栏内容。例如，`<aside>`元素并不打算作为导航内容的容器（导航内容应该由前面讨论过的`<nav>`元素标识并包装）。
- en: 'Given that aside content is generally formatted as a sidebar, there is a particular
    style generally associated with the use of `<aside>` elements: `Float`. The CSS
    `Float` attribute moves a container to the left-hand side (`float:left`) or to
    the right-hand side (`float:right`) of other content, and flows other content
    around the container. When we''ll define CSS styles for our HTML5 semantic layout
    elements at the end of this chapter, we''ll be sure to float our `<aside>` element
    style.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于侧边栏内容通常被格式化为侧边栏，与`<aside>`元素的使用通常相关联的是一种特定的样式：`Float`。CSS的`Float`属性将容器移动到左侧（`float:left`）或右侧（`float:right`），并使其他内容围绕容器流动。当我们在本章末尾为我们的HTML5语义布局元素定义CSS样式时，我们一定会确保浮动我们的`<aside>`元素样式。
- en: Creating a footer
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建页脚
- en: The final piece of an HTML5 page layout is usually a `<footer>` element. As
    with all HTML5 layout elements, `<footer>` elements have content assignments.
    Footers usually include site content author information, legal notices (such as
    copyright information), and so on.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5页面布局的最后一部分通常是`<footer>`元素。与所有HTML5布局元素一样，`<footer>`元素有内容分配。页脚通常包括站点内容作者信息、法律声明（如版权信息）等。
- en: An HTML5 layout template
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML5布局模板
- en: The following code incorporates all the HTML5 semantic layout elements discussed
    so far. Feel free to copy and paste it into the **Code** side of Dreamweaver's
    **Split** view and use it to experiment with and familiarize yourself with HTML5
    page structuring.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码包含了到目前为止讨论的所有HTML5语义布局元素。请随意复制并粘贴到Dreamweaver的**分割**视图的**代码**一侧，并用它来实验和熟悉HTML5页面结构。
- en: 'And, this code will provide a good basis to experiment with CSS styling for
    HTML5 elements—the next step in our journey:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码将为我们的旅程提供一个很好的基础，以便对HTML5元素进行CSS样式的实验：
- en: '[PRE3]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: This code example includes one metadata element that we haven't explored yet—a
    `<figure>` element. I figured I'd throw it into the code so as to keep things
    organized and simple, but let's now move on to exploring this and other HTML5
    metadata elements.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码示例包括一个我们尚未探讨的元数据元素——`<figure>`元素。我觉得我应该把它放到代码中以保持事情的有序和简单，但现在让我们继续探索这个和其他HTML5元数据元素。
- en: Adding metadata
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加元数据
- en: 'The HTML5 layout elements we''ve explored thus far have—as we have seen—a dual
    function: They serve as styleable elements that can control how content is displayed,
    and they organize content for accessibility. These HTML5 elements can be thought
    of as metadata.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经探讨的HTML5布局元素具有——正如我们所看到的——双重功能：它们作为可样式化的元素，可以控制内容的显示方式，并且它们为可访问性组织内容。这些HTML5元素可以被视为元数据。
- en: Both the style and content dimensions of HTML5 layout elements are evolving,
    but already they serve as tools for designing pages and for delivering content.
    The example we explored earlier of being able to easily select an article or an
    article section for copying on an iPhone gives a taste of how this is likely to
    evolve in the near future.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5布局元素的样式和内容维度都在不断发展，但它们已经成为设计页面和传递内容的工具。我们之前探讨的例子，即在iPhone上轻松选择文章或文章部分进行复制，让人可以略知一二，这很可能在不久的将来会发展。
- en: In addition to the key layout elements explored so far, it is worth briefly
    noting a few HTML5 elements whose main role it is to index content (even though
    they can be used to apply styles as well).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 除了迄今为止探讨的关键布局元素之外，还值得简要注意一些HTML5元素，它们的主要作用是索引内容（尽管它们也可以用于应用样式）。
- en: Defining an address
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义地址
- en: Often, one of the first things a visitor to a site seeks is, contact information
    such as a URL (if the page is not a site's home page), an e-mail address, or a
    physical address if he or she is looking to locate the hottest underground club
    or the nearest highly-rated shish-kabob stand.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 访问网站的访客通常最先寻找的是联系信息，例如URL（如果页面不是站点的主页）、电子邮件地址，或者如果他或她正在寻找最热门的地下俱乐部或最近的高评价的烤肉串摊，物理地址。
- en: An `<address>` element can be placed within any other HTML5 semantic layout
    element such as an `<article>` element if it is providing contact information
    for the author of (or topic of) the article. Or, an `<address>` element can be
    associated with (placed within) a `<footer>` element if it is providing contact
    information for the entire page.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`<address>`元素可以放置在任何其他HTML5语义布局元素中，例如`<article>`元素，如果它提供了文章的作者（或主题）的联系信息。或者，如果它提供整个页面的联系信息，则可以将`<address>`元素与（放置在）`<footer>`元素相关联。'
- en: Figures and captions
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数字和标题
- en: The `<figure>` and `<figcaption>` elements identify a figure, and an associated
    caption intuitively enough. Again, assigning these elements to content helps content
    aggregators and indexing programs (such as search engines) interpret your page
    content and make it more accessible. And, you can use these elements to style
    figures and/or captions as well.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`<figure>`和`<figcaption>`元素直观地标识了一个图和一个相关的标题。再次，将这些元素分配给内容有助于内容聚合器和索引程序（如搜索引擎）解释您的页面内容并使其更易访问。您还可以使用这些元素来设置图形和/或标题的样式。'
- en: For example, a `<figure>` element can be wrapped around both an image and a
    caption (`<figcaption>`).
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`<figure>`元素可以包裹图像和标题（`<figcaption>`）。
- en: Indicating date and time
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 指示日期和时间
- en: Speaking of using HTML5 elements to convey content, there are different HTML5
    elements associated with different kinds of time and date information.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 说到使用HTML5元素传达内容，有不同的HTML5元素与不同类型的时间和日期信息相关联。
- en: The `<time>` element is used to mark off times and dates for upcoming events.
    It is not intended to define every reference to a date and time. You would not,
    for example, use the `<time>` element when citing dates for different historical
    events while writing an historical article.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`<time>`元素用于标记即将到来的事件的时间和日期。它并不打算定义对日期和时间的每个引用。例如，在写历史文章时，您不会使用`<time>`元素来引用不同历史事件的日期。'
- en: 'The `<time>` element can be used to set off a specific time, as in the following
    HTML5 code:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`<time>`元素可用于设置特定时间，如下HTML5代码所示：'
- en: '[PRE4]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Or, date and time information can be encoded within text using the `datetime`
    parameter, as shown in the following line of code:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，日期和时间信息可以在文本中使用`datetime`参数进行编码，如下行代码所示：
- en: '[PRE5]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The format for time and date is: `YYYY-MM-DDThh:mm:ssTZD`, where `TZD` is the
    time zone.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 时间和日期的格式是：`YYYY-MM-DDThh:mm:ssTZD`，其中`TZD`是时区。
- en: You are unlikely to use the `<time>` element as a styling tool. Instead, it
    is best used to demarcate dates and times.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 您不太可能使用`<time>`元素作为样式工具。相反，最好用于标记日期和时间。
- en: Creating a CSS file for HTML5 page structure
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为HTML5页面结构创建CSS文件
- en: Hand-in-hand with our HTML5 file, designers create and use a CSS file to organize
    and manage all the styling in the page. So, let's create that CSS file now, and
    as we do, add a line that will make our HTML5 page compatible with all current
    browsers and most older ones.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 与我们的HTML5文件一起，设计师创建并使用CSS文件来组织和管理页面中的所有样式。因此，让我们现在创建该CSS文件，并在此过程中添加一行，使我们的HTML5页面与所有当前浏览器和大多数旧浏览器兼容。
- en: 'To do that, perform the following steps:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，请执行以下步骤：
- en: Navigate to **File** | **New**, and in the **New Document** dialog, choose the
    **Blank Page** category on the left-hand side, and **CSS** from the **Page Type**
    category. Click on **Create** to generate and open a new CSS file.![Creating a
    CSS file for HTML5 page structure](img/4742_02_07.jpg)
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**文件** | **新建**，在**新建文档**对话框中，选择左侧的**空白页**类别，以及**CSS**从**页面类型**类别。单击**创建**以生成并打开新的CSS文件。![为HTML5页面结构创建CSS文件](img/4742_02_07.jpg)
- en: The preceding screenshot shows the generation of a new CSS file.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图显示了生成新的CSS文件。
- en: The file opens in **Code** view. We'll be editing it in the **CSS Styles** panel,
    so—except as a learning experience—we won't need to view this page again. But
    we do need to save it. Navigate to **File** | **Save**, and give the file a name
    such as `html5_layout.css`. Make sure the site folder is selected in the **Where**
    pop up, and click on **Save**, as shown in the following screenshot:![Creating
    a CSS file for HTML5 page structure](img/4742_02_08.jpg)
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文件以**代码**视图打开。我们将在**CSS样式**面板中对其进行编辑，因此——除了作为学习经验——我们不需要再查看此页面。但是我们需要保存它。导航到**文件**
    | **保存**，并给文件命名为`html5_layout.css`之类的名称。确保在**在哪里**弹出窗口中选择了站点文件夹，并单击**保存**，如下图所示：![为HTML5页面结构创建CSS文件](img/4742_02_08.jpg)
- en: The preceding screenshot displays saving a CSS file.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图显示了保存CSS文件。
- en: In the tab bar at the top of the document window, toggle back to the HTML file
    you created.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文档窗口顶部的选项卡栏中，切换回您创建的HTML文件。
- en: View the **CSS Styles** panel (if it is not visible, navigate to **Window**
    | **CSS Styles**), and click on the **Attach Style Sheet** icon as shown in the
    following screenshot:![Creating a CSS file for HTML5 page structure](img/4742_02_09.jpg)
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看**CSS样式**面板（如果不可见，请导航到**窗口** | **CSS样式**），并单击如下屏幕截图中所示的**附加样式表**图标：![为HTML5页面结构创建CSS文件](img/4742_02_09.jpg)
- en: The **Attach External Style Sheet** dialog appears. Use the **Browse** button
    to navigate to the CSS file you just created, and click on **OK** to attach the
    stylesheet. The CSS file appears in the **CSS Files** panel (use the **All** tab
    in the **CSS Styles** panel as the norm, unless you are doing some detective work
    on particular styles, which may require the **Current** tab). You will also see
    the link to the CSS file in the **Code** view.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**附加外部样式表**对话框出现。使用**浏览**按钮导航到刚刚创建的CSS文件，并单击**确定**以附加样式表。CSS文件出现在**CSS文件**面板中（在**CSS样式**面板中使用**全部**选项卡作为标准，除非您正在对特定样式进行一些侦查工作，这可能需要**当前**选项卡）。您还将在**代码**视图中看到对CSS文件的链接。'
- en: Assigning a block property
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分配块属性
- en: Next, we will add a single attribute that enables most browsers to interpret
    the HTML5 elements even if they are not HTML5 compliant. Here, we'll be revisiting
    the technique we noted in the previous chapter where we saw how Dreamweaver CS6's
    HTML5 layouts use the `display:block` CSS attribute to keep HTML5 layouts from
    collapsing in non-HTML5 browsers.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将添加一个单个属性，使大多数浏览器能够解释HTML5元素，即使它们不符合HTML5标准。在这里，我们将重新访问我们在上一章中注意到的技术，即Dreamweaver
    CS6的HTML5布局使用`display:block` CSS属性来防止HTML5布局在非HTML5浏览器中折叠。
- en: 'To do that, perform the following steps:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，请执行以下步骤：
- en: Click on the **New CSS Rule** icon at the bottom of the **CSS Styles** panel—it
    is just to the right-hand side of the **Attach Style Sheet** icon identified in
    the previous figure. The **New CSS Rule** dialog appears.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**CSS样式**面板底部的**新CSS规则**图标—它就在前面的图标所示的**附加样式表**图标的右侧。**新CSS规则**对话框出现。
- en: In the **New CSS Rule** dialog, choose **Compound** from the first pop up. We
    are creating a rule that will apply to more than one HTML5 layout element. These
    are HTML5 tags that we want to prevent from collapsing when viewed in non-HTML5
    browsers.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**新CSS规则**对话框中，从第一个弹出菜单中选择**复合**。我们正在创建一个将应用于多个HTML5布局元素的规则。这些是我们希望在非HTML5浏览器中查看时防止折叠的HTML5标签。
- en: In the **Choose or Enter a Name for Your Selector** field, enter `header`. We
    actually want to apply the rule we're working on to additional HTML5 elements,
    but we'll add those shortly. In the **Rule Definition** section of the dialog,
    make sure your attached CSS file is selected (it will be by default). Click on
    **OK**.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**选择或输入选择器名称**字段中，输入`header`。实际上，我们希望将我们正在处理的规则应用于其他HTML5元素，但我们很快会添加这些。在对话框的**规则定义**部分，确保选择了您附加的CSS文件（默认情况下会选择）。单击**确定**。
- en: In the **CSS Rule Definition for Header** dialog, select the **Block** category,
    choose **Block** from the **Display** pop up as shown in the following screenshot,
    and then click on **OK**:![Assigning a block property](img/4742_02_10.jpg)
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**标题的CSS规则定义**对话框中，选择**块**类别，从**显示**弹出菜单中选择**块**，如下图所示，然后单击**确定**：![分配块属性](img/4742_02_10.jpg)
- en: The preceding screenshot displays the process of defining a block display.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图显示了定义块显示的过程。
- en: The `header` style appears in the **CSS Styles** panel when you expand the CSS
    styles file linked to the page. You can see that the **display** property for
    the header style has a **block** attribute associated with it in the **CSS Styles**
    panel.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您展开链接到页面的CSS样式文件时，`header`样式将出现在**CSS样式**面板中。您可以看到**CSS样式**面板中与`header`样式相关联的**display**属性具有**block**属性。
- en: We want to expand the list of HTML5 elements to which this `display:block` attribute
    is assigned. The long, slow way to do that is to duplicate steps we've traversed
    so far for each additional element. To do that the quick and easy way, click once
    in the header row in the top half of the **CSS Styles** panel, and edit the list
    of elements to include the `<address>`, `<article>`, `<footer>`, `<nav>`, and
    `<section>` elements. Use commas (",") to separate the additional elements as
    you type them in. These are HTML5 tags that we want to prevent from collapsing
    when viewed in non-HTML5 browsers. The **CSS Styles** panel should now look like
    the the following screenshot:![Assigning a block property](img/4742_02_11.jpg)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们希望扩展分配给此`display:block`属性的HTML5元素列表。这样做的长而慢的方法是为每个额外的元素重复我们迄今为止已经遍历的步骤。要以快速简便的方式做到这一点，请在**CSS样式**面板的上半部分的标题行中单击一次，并编辑元素列表以包括`<address>`、`<article>`、`<footer>`、`<nav>`和`<section>`元素。在输入它们时，使用逗号（","）分隔额外的元素。这些是我们希望在非HTML5浏览器中查看时防止折叠的HTML5标签。**CSS样式**面板现在应该看起来像以下的屏幕截图：![分配块属性](img/4742_02_11.jpg)
- en: The preceding screenshot shows the process of assigning a block display to multiple
    HTML5 semantic layout tags.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图显示了将块显示分配给多个HTML5语义布局标记的过程。
- en: With the preceding set of steps, we've told most non-HTML5 browsers to keep
    our basic HTML5 building-block elements on their own distinct horizontal row,
    so they don't get smushed into each other.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 通过上述步骤，我们告诉大多数非HTML5浏览器将我们基本的HTML5构建块元素保持在它们自己的独立水平行中，这样它们就不会被挤在一起。
- en: Defining styles
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义样式
- en: I won't bore you here by rehearsing the basic techniques for defining styles
    within a linked stylesheet in Dreamweaver CS6\. We walked through this in a compressed
    way, for review, in [Chapter 1](ch01.html "Chapter 1. Creating Sites and Pages
    with Dreamweaver CS6"), *Creating Sites and Pages with Dreamweaver CS6*, and we
    defined one (compound) style in our linked CSS file in the previous set of steps.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会在这里无聊地重复在Dreamweaver CS6中定义链接样式表中的基本技术。我们在[第1章](ch01.html "第1章。使用Dreamweaver
    CS6创建站点和页面")中以一种压缩的方式进行了回顾，*使用Dreamweaver CS6创建站点和页面*，并且在之前的步骤中在我们的链接CSS文件中定义了一个（复合）样式。
- en: To quickly review, new CSS style definitions are added to the linked stylesheet
    by clicking on the **New CSS Rule** icon at the bottom of the **CSS Styles** panel.
    All the styles we'll create are tag-type styles, applying as they do to HTML5
    semantic elements (tags).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，通过单击**CSS Styles**面板底部的**New CSS Rule**图标，可以向链接的样式表中添加新的CSS样式定义。我们将创建的所有样式都是标签类型样式，因为它们适用于HTML5语义元素（标签）。
- en: 'You can define the following styles in that manner using the **CSS Styles**
    panel. Or, you can enter (or copy) the following code into your CSS stylesheet
    after the compound style we just created:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用**CSS Styles**面板以这种方式定义以下样式。或者，您可以在刚刚创建的复合样式之后，将以下代码输入（或复制）到您的CSS样式表中：
- en: '[PRE6]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-137
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'A few notes on the CSS we created: We''re using very minimalist background
    and text colors (shades of gray plus white and black) both to make a minimalist
    aesthetic statement and to keep our project simple.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 关于我们创建的CSS的一些说明：我们使用非常简约的背景和文本颜色（灰色调加上白色和黑色），既是为了表达极简主义的审美观点，也是为了保持我们的项目简单。
- en: The `float` attribute on the `<aside>` element aligns the aside (sidebar) box
    with the right-hand side of the page, flowing content around it to the right-hand
    side. The extra padding and margin enforce spacing both, between the aside content
    and the border of the box, and between the box itself and the content that flows
    around it.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`<aside>`元素上的`float`属性将侧边栏框与页面的右侧对齐，使内容围绕在其右侧。额外的填充和边距同时强制实现了侧边内容与框的边框之间以及框本身与围绕它的内容之间的间距。'
- en: Similarly, the `float` and `margin` attributes assigned to the `<figure>` element
    align the box that will hold images and captions with the right-hand side of the
    page.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，分配给`<figure>`元素的`float`和`margin`属性将使包含图像和标题的框与页面的右侧对齐。
- en: Setting the `margin` to zero for the article sections keeps that content from
    indenting further beyond the indent inherited from the margin assigned to the
    `<article>` and `<section>` elements.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 将文章部分的`margin`设置为零可以防止内容进一步缩进，超出从`<article>`和`<section>`元素分配的边距继承的缩进。
- en: Solving HTML5 compatibility challenges
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决HTML5兼容性挑战
- en: At the time of writing this book, HTML5 is a work in progress. What does that
    mean? In historic terms, it means the standards for HTML5 are still being systematized,
    although a critical mass has been reached where the meaning and effect of most
    HTML5 terms is widely agreed upon, and browsers either support HTML5, or they
    are evolving in that direction in finite terms.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本书时，HTML5仍在不断发展。这意味着什么？从历史的角度来看，这意味着HTML5的标准仍在系统化，尽管已经达到了一个临界质量，大多数HTML5术语的含义和影响已经得到了广泛认可，浏览器要么支持HTML5，要么正在朝着这个方向发展。
- en: For developers, it means that as we explore the time- and stress-saving features
    of HTML5 to build web pages, we have to be aware of, and compensate for the fact
    that some browsers will not support some aspects of HTML5.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 对于开发人员来说，这意味着当我们探索使用HTML5的节省时间和减轻压力的功能来构建网页时，我们必须意识到并补偿一些浏览器不支持HTML5的一些方面。
- en: In the main, that means supporting the stubbornly-entrenched Internet Explorer
    community, particularly older versions of IE whose users have been abandoned by
    Microsoft, which does not provide upgrade options for most of those users.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 主要是支持顽固的Internet Explorer社区，特别是被微软抛弃的较旧版本的IE用户，微软并未为大多数用户提供升级选项。
- en: In order to not leave these users locked out of HTML5 pages, developers have
    adopted the HTML5 Shiv script and the designer's link to it. That JavaScript allows
    IE8 to recognize HTML5 semantic structure tags.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 为了不让这些用户无法访问HTML5页面，开发人员采用了HTML5 Shiv脚本，并将其链接到设计师的链接。这个JavaScript允许IE8识别HTML5的语义结构标签。
- en: 'To add the HTML5 Shiv JavaScript to pages, insert the following code in the
    `<head>` element of your page:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 要将HTML5 Shiv JavaScript添加到页面中，请在页面的`<head>`元素中插入以下代码：
- en: '[PRE7]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Summary
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored using HTML5 semantic layout elements to build pages
    in Dreamweaver. We saw how these elements function as both design containers,
    and as content identifiers. We also saw how, for some environments, an entire
    page can be built using only a few basic HTML tags plus HTML layout elements.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了在Dreamweaver中使用HTML5语义布局元素来构建页面。我们看到这些元素既可以作为设计容器，也可以作为内容标识符。我们还看到，对于一些环境来说，整个页面可以仅使用一些基本的HTML标签加上HTML布局元素来构建。
- en: In the next chapter, we will explore Dreamweaver CS6's powerful tools for generating
    validated forms.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨Dreamweaver CS6强大的工具，用于生成经过验证的表单。
