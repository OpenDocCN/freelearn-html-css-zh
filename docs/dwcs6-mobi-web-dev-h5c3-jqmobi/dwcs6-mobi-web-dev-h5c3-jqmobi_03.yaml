- en: Chapter 3. Collecting Data with Forms
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。使用表单收集数据
- en: In the Facebook-dominated world of the modern web, data collection has become
    highly opaque. When you share an intimate thought about a dying friend over social
    media, that sensitive, personal data becomes a commodity that is sold to marketers
    of flowers and books on death, when you *Like* a band in a social media environment,
    you (often unwittingly) sign up to get offers for tickets when that band is playing
    near your city or town, and so on.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在现代网络中由Facebook主导的世界中，数据收集变得高度不透明。当您在社交媒体上分享有关一个垂危朋友的亲密想法时，那些敏感的个人数据就变成了一个商品，被售给了花店和书店的营销人员，当您在社交媒体环境中*赞*一个乐队时，您（往往是不知情的）注册了在该乐队在您所在城市或镇附近演出时获取门票优惠的服务，等等。
- en: I am being harsh on the opacity of online "sign up" technology to make a point.
    As someone building your own site, you can instead, make the collection of data
    voluntary, conscious, and transparent. People who sign up, on purpose, for your
    e-newsletter, your announcements, your special offers, and so on are—after all—likely
    to be more receptive to getting mail from you than the ones they did not consciously
    ask for, but that were generated by their activity on Facebook, Amazon, and so
    on.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我对在线“注册”技术的不透明度进行了严厉批评，以表明一个观点。作为建立自己网站的人，您可以选择使数据收集变得自愿、有意识和透明。有意识地为您的电子通讯、公告、特别优惠等注册的人，毕竟更有可能比那些不是有意识要求的人更愿意接收您的邮件，而这些邮件是由他们在Facebook、亚马逊等平台上的活动生成的。
- en: 'So how do you collect information from visitors? One word: **forms**. Forms
    can be a vital, dynamic way of interacting with your visitors.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，您如何从访客那里收集信息呢？一个词：**表单**。表单可以是与访客互动的重要、动态的方式。
- en: 'The following are some examples of how forms lend value to your site:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些表单为您的网站增值的示例：
- en: A feedback form that lets visitors to your site share their complaints, suggestions,
    and positive experiences (fodder for you to use to promote your site, message,
    product, cause, or content).
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个让访客在您的网站上分享他们的投诉、建议和积极经历的反馈表单（这是您用来推广您的网站、信息、产品、事业或内容的素材）。
- en: A sign up form that lets visitors consciously get your newsletter, tweets, special
    offers, and information blasts.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个让访客有意识地获取您的通讯、推文、特别优惠和信息爆炸的注册表单。
- en: An order form to sell products.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个销售产品的订单表格。
- en: A search box that makes your site's content easily accessible. I'll show you
    how to set one up at the end of this chapter.
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个让您网站内容易于访问的搜索框。我将在本章末尾向您展示如何设置搜索框。
- en: Dreamweaver CS6 has powerful tools for building inviting, accessible forms.
    What I have always found missing in Dreamweaver is a way to connect those forms
    to backend server tools that handle submitted data. And while a full exploration
    of those connections is a bit beyond the scope of this book, I'll provide some
    basic solutions and tips for additional tools and resources that can be used for
    connecting forms to backend data-management scripts and resources at the end of
    this chapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver CS6具有强大的工具，用于构建引人入胜、易于访问的表单。我在Dreamweaver中一直觉得缺少的是一种将这些表单连接到后端服务器工具的方法，这些工具处理提交的数据。虽然对这些连接的全面探讨略微超出了本书的范围，但我将在本章末尾提供一些基本解决方案和有关连接表单到后端数据管理脚本和资源的其他工具和资源的提示。
- en: Capturing client-side form management with JavaScript
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用JavaScript捕获客户端表单管理
- en: Dreamweaver generates forms, but it doesn't manage form data. In general, data
    collected from a form is sent to a server where a collection of scripts and databases
    turn that data into a processed order, a submitted complaint, an e-mail list signup,
    or a search query. Scripts that handle data on a server are sometimes called **server-side
    scripts**.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver生成表单，但不管理表单数据。通常，从表单收集的数据会发送到服务器，那里一系列脚本和数据库将这些数据转换为已处理的订单、提交的投诉、电子邮件列表注册或搜索查询。在服务器上处理数据的脚本有时被称为**服务器端脚本**。
- en: But some form data is collected and managed without being sent to a server.
    Instead, submitted data is managed using JavaScript that runs in a user's browser.
    Data handled by such client-side scripting never goes to a server.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，有些表单数据是在不发送到服务器的情况下收集和管理的。相反，提交的数据是使用在用户浏览器中运行的JavaScript来管理的。由此类客户端脚本处理的数据永远不会发送到服务器。
- en: The most widely used client-side form is a **jump menu** —a dropdown menu used
    for navigation. Dreamweaver allows you to easily generate a jump menu, and before
    launching into an exploration of building forms that send data to a server, let's
    take a quick look at how to build a client-side jump menu in Dreamweaver, and
    edit the generated JavaScript that makes that form work.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 最广泛使用的客户端表单是**跳转菜单**——用于导航的下拉菜单。Dreamweaver允许您轻松生成跳转菜单，在探索向服务器发送数据的构建表单之前，让我们快速看一下如何在Dreamweaver中构建客户端跳转菜单，并编辑生成的使表单工作的JavaScript。
- en: Creating a jump menu
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建跳转菜单
- en: Before you create a jump menu, you'll want to have a list of URLs you want to
    access with that menu. I'll pause for a moment while you collect your list…Ok?
    Well, this is a book, so you can simply bookmark this spot (easy to do on your
    Kindle or iPad, but if you're reading a printed book, simply bend the page a bit
    to mark this spot).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建跳转菜单之前，您需要准备一个您希望使用该菜单访问的URL列表。我会暂停一会儿，让您收集您的列表...好了？这是一本书，所以您可以简单地将这个地方加为书签（在您的Kindle或iPad上很容易做到，但如果您在读印刷书籍，只需稍微折弯一下页面即可标记这个地方）。
- en: 'Beyond conceptualizing your jump menu, you need to have the following in place
    before generating the menu:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 除了构思跳转菜单，您在生成菜单之前需要具备以下条件：
- en: You need to be working in a defined Dreamweaver site. If that's not ringing
    a bell, go back to [Chapter 1](ch01.html "Chapter 1. Creating Sites and Pages
    with Dreamweaver CS6"), *Creating Sites and Pages with Dreamweaver CS6*, and immerse
    yourself in the concept of a Dreamweaver site and why it's the essential first
    step in everything you do in Dreamweaver.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要在一个定义好的Dreamweaver网站中工作。如果这不是您熟悉的，可以回到[第1章](ch01.html "第1章。使用Dreamweaver
    CS6创建网站和页面")，*使用Dreamweaver CS6创建网站和页面*，并深入了解Dreamweaver网站的概念以及为什么它是您在Dreamweaver中进行的一切工作的基本第一步。
- en: You need to be working in a saved web page.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要在已保存的网页中工作。
- en: Working in a Dreamweaver site and in a saved HTML5 page will ensure that whatever
    links you generate in your jump menu will work.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dreamweaver站点和已保存的HTML5页面中工作，可以确保在跳转菜单中生成的任何链接都能正常工作。
- en: 'With your list ready, your site defined, and your page saved, perform the following
    steps to create a jump menu in Dreamweaver CS6:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好列表、定义站点并保存页面后，执行以下步骤在Dreamweaver CS6中创建跳转菜单：
- en: With your insertion point in the **Design** view of a page, choose **Insert**
    | **Form** | **Jump Menu**. The **Insert Jump Menu** dialog opens.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面的**设计**视图中，选择**插入** | **表单** | **跳转菜单**。**插入跳转菜单**对话框将打开。
- en: The dialog opens with the first menu item selected. Often, the first item in
    a jump menu is not an option, but a label that identifies the menu, such as **Go
    to…**. In that case, the **When selected go to URL** field is left blank, as shown
    in the following screenshot:![Creating a jump menu](img/4742OT_03_01.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对话框打开时，第一个菜单项被选中。通常，跳转菜单中的第一项不是选项，而是标签，用于标识菜单，例如**转到...**。在这种情况下，**当选中时转到URL**字段为空，如下面的屏幕截图所示：![创建跳转菜单](img/4742OT_03_01.jpg)
- en: Use the **Add Item** (**+**) icon to add items to the menu. Use the **Browse…**
    button to search for and add link to files in your Dreamweaver site. Or, enter
    a full URL in the **When selected, go to URL** field, as shown in the following
    screenshot:![Creating a jump menu](img/4742OT_03_02.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**添加项目**（**+**）图标将项目添加到菜单中。使用**浏览...**按钮在Dreamweaver站点中搜索并添加文件链接。或者，在**当选中时，转到URL**字段中输入完整的URL，如下面的屏幕截图所示：![创建跳转菜单](img/4742OT_03_02.jpg)
- en: Use the **Add Item** (**+**) icon to add additional items to the menu. Use the
    **Remove Item** (**-**) icon to delete a selected item, as shown in the following
    screenshot:![Creating a jump menu](img/4742OT_03_03.jpg)
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**添加项目**（**+**）图标将其他项目添加到菜单中。使用**删除项目**（**-**）图标删除所选项目，如下面的屏幕截图所示：![创建跳转菜单](img/4742OT_03_03.jpg)
- en: Use the **Move item up in list** and **Move item down in list** arrow buttons
    to resort the order of your list (should you alphabetize?), as shown in the following
    screenshot:![Creating a jump menu](img/4742OT_03_04.jpg)
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**将项目上移**和**将项目下移**箭头按钮重新排列列表的顺序（是否按字母顺序排列？），如下面的屏幕截图所示：![创建跳转菜单](img/4742OT_03_04.jpg)
- en: When you finish defining your jump menu, click on **OK** to generate the menu.
    You can test the menu in the **Live** view as shown in the following screenshot:![Creating
    a jump menu](img/4742OT_03_05.jpg)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成定义跳转菜单后，点击**确定**生成菜单。您可以在**实时**视图中测试菜单，如下面的屏幕截图所示：![创建跳转菜单](img/4742OT_03_05.jpg)
- en: Editing Jump Menu JavaScript
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑跳转菜单JavaScript
- en: Dreamweaver provides two ways to edit the content of a generated jump menu—the
    **Properties** inspector, and the **Behaviors** panel. Let's quickly see how each
    of these works.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver提供两种编辑生成的跳转菜单内容的方式——**属性**检查器和**行为**面板。让我们快速看看每种方法的工作原理。
- en: 'To activate the **Properties** inspector, navigate to **Window** | **Properties**
    if it is not visible. When you click on any element (including a jump menu) the
    **Properties** inspector becomes a context-sensitive editing tool. In this case,
    the **Initially Selected** dropdown menu allows you to change what option in the
    menu displays by default, and the **List Values…** button opens a **List Values**
    dialog. The **List Values** dialog has tools you recognize from the jump menu
    dialog for adding, deleting, and reordering the menu options, as shown in the
    following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要激活**属性**检查器，如果它不可见，导航到**窗口** | **属性**。当单击任何元素（包括跳转菜单）时，**属性**检查器将成为一个上下文敏感的编辑工具。在这种情况下，**最初选择**下拉菜单允许您更改菜单中默认显示的选项，**列表值...**按钮打开**列表值**对话框。**列表值**对话框具有您从跳转菜单对话框中识别的工具，用于添加、删除和重新排序菜单选项，如下面的屏幕截图所示：
- en: '![Editing Jump Menu JavaScript](img/4742OT_03_06.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![编辑跳转菜单JavaScript](img/4742OT_03_06.jpg)'
- en: 'The other technique for editing the content of a jump menu is a bit less accessible,
    but provides the option of using the **Browse** button to locate and link to files
    in your Dreamweaver site. To access that option, choose **Window** | **Behaviors**,
    and click on your jump menu in the **Design** view of the **Document** window
    as shown in the following screenshot:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑跳转菜单内容的另一种技术不太容易访问，但提供了使用**浏览**按钮在Dreamweaver站点中定位并链接到文件的选项。要访问该选项，选择**窗口**
    | **行为**，并在**文档**窗口的**设计**视图中单击跳转菜单，如下面的屏幕截图所示：
- en: '![Editing Jump Menu JavaScript](img/4742OT_03_07.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![编辑跳转菜单JavaScript](img/4742OT_03_07.jpg)'
- en: With the jump menu selected in the **Behaviors** panel (technically, the **Behaviors**
    tab in the **Tag Inspector** tab), double-click on **Jump Menu** in the right-hand
    side column to (re)open the **Jump Menu** dialog. This option enables full-featured
    editing on your jump menu—pretty much duplicating the original **Jump Menu** dialog.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在**行为**面板中选择跳转菜单（技术上来说，是**标签检查器**选项卡中的**行为**选项卡），在右侧列中双击**跳转菜单**，以重新打开**跳转菜单**对话框。此选项可以在跳转菜单上进行全功能编辑，基本上是复制原始的**跳转菜单**对话框。
- en: Having quickly looked at JavaScript-based forms, and how to edit them in Dreamweaver,
    let's move to the more powerful kind of form—one that sends data to a server.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 快速浏览了基于JavaScript的表单以及如何在Dreamweaver中编辑它们，让我们转向更强大的表单类型——将数据发送到服务器的表单。
- en: Defining the form and form action
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义表单和表单操作
- en: Forms are comprised of a form and form elements. The **form element** is the
    envelope in which all the form elements are gathered up and sent somewhere. As
    such, the most important defining element of the form is the form action. The
    **form action** defines where the form data is sent.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 表单由表单和表单元素组成。**表单元素**是将所有表单元素收集起来并发送到某个地方的信封。因此，表单最重要的定义元素是表单操作。**表单操作**定义了表单数据发送的位置。
- en: As alluded to earlier in this chapter, Dreamweaver designs the frontend for
    forms, but does not provide easily-accessible options for linking that form data
    to a backend system that collects and manages that data.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章前面提到的，Dreamweaver为表单设计了前端，但没有提供易于访问的选项来将表单数据链接到收集和管理该数据的后端系统。
- en: Note
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that Adobe offers a package for managing server-side data—**Business Catalyst**
    . Business Catalyst's tools and features are not particularly accessible for non-professional
    backend administrators, and for most freelance and small-scale developers, the
    cost of this service is not competitive with other options for managing form data.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Adobe提供了一个用于管理服务器端数据的软件包——**Business Catalyst**。Business Catalyst的工具和功能对非专业的后端管理员来说并不特别易用，对于大多数自由职业者和小规模开发人员来说，这项服务的成本与其他管理表单数据的选择不具竞争力。
- en: 'At the end of this chapter, I''ll provide some basic techniques for capturing
    form data, and point you towards other resources. But here, let''s use the simplest
    and most basic technique for handling form data: Sending that form data to an
    e-mail address through a user''s e-mail client. This is not an elegant technique,
    but a) it works, and can be used for simpler form handling challenges such as
    collecting feedback; and b) it will serve as kind of a placeholder for form handling
    until we return to the concept at the end of this chapter.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，我将提供一些捕获表单数据的基本技术，并指向其他资源。但在这里，让我们使用处理表单数据的最简单和最基本的技术：将表单数据发送到用户的电子邮件客户端的电子邮件地址。这不是一种优雅的技术，但是a）它有效，并且可以用于更简单的表单处理挑战，比如收集反馈；b）它将作为表单处理的一种占位符，直到我们在本章结束时回到这个概念。
- en: 'To insert a form that sends collected content to an e-mail address using a
    user''s e-mail client, perform the following steps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤插入一个将收集的内容发送到用户的电子邮件客户端的表单：
- en: Click on the **Design** view of an open, saved document to set the insertion
    where the form will appear.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击打开的已保存文档的**设计**视图，设置表单将出现的位置。
- en: Navigate to **Insert** | **Form** | **Form**.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**插入** | **表单** | **表单**。
- en: Click on **OK** to embed the form. The form appears in the **Design** view in
    a red box. When you select the form (by clicking on the red box), the **Properties**
    inspector displays the form properties, as shown in the following screenshot:![Defining
    the form and form action](img/4742OT_03_08.jpg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**确定**嵌入表单。表单将以红色框的形式出现在**设计**视图中。当您选择表单（单击红色框）时，**属性**检查器将显示表单属性，如下图所示：![定义表单和表单操作](img/4742OT_03_08.jpg)
- en: To send the form data to an e-mail address, enter `mailto:mail@mail.com` in
    the **Action** field, substituting a real e-mail address for the placeholder e-mail
    address.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要将表单数据发送到电子邮件地址，请在**Action**字段中输入`mailto:mail@mail.com`，将实际的电子邮件地址替换为占位符电子邮件地址。
- en: In the **Enctype** field (short for encoding type) enter `text/plain`.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Enctype**字段（编码类型的缩写）中输入`text/plain`。
- en: Leave the **Method** option set to the default, **POST**. This is how most form
    data is sent.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Method**选项保留为默认的**POST**。这是大多数表单数据的发送方式。
- en: With the form defined, you are now ready to add form fields and buttons.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 有了定义的表单，现在可以添加表单字段和按钮了。
- en: Generating form fields with Spry validation
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Spry验证生成表单字段
- en: '**Validation** means testing form data before it is submitted to a server (or
    sent to an e-mail address). That''s a valuable thing. For example, if your form
    is collecting e-mail addresses for e-newsletter subscriptions, it won''t do for
    people to submit the form without an e-mail address. Beyond that, validation can
    look at the characters entered into an e-mail address field and verify that what
    is in the field at least looks like an e-mail address.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**验证**意味着在提交到服务器（或发送到电子邮件地址）之前测试表单数据。这是一件有价值的事情。例如，如果您的表单收集电子通讯订阅的电子邮件地址，人们提交表单而没有电子邮件地址是不行的。除此之外，验证可以查看输入到电子邮件地址字段中的字符，并验证该字段中的内容至少看起来像是一个电子邮件地址。'
- en: 'There are essentially three techniques for validating form data as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上有三种验证表单数据的技术，如下：
- en: Server-side scripts can validate content once it is sent to the server
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器端脚本可以在数据发送到服务器后验证内容。
- en: HTML5 provides some validation tools, but they are not yet supported universally,
    even in newer versions of some popular browsers
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML5提供了一些验证工具，但它们甚至在一些流行浏览器的更新版本中也没有得到普遍支持。
- en: JavaScript validation scripts can test data in a browser
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript验证脚本可以在浏览器中测试数据。
- en: The last option is the most reliable, fastest, and easiest way to create in
    Dreamweaver. And in the following sets of steps, we'll use Dreamweaver's library
    of Spry JavaScript and HTML to insert fields with built-in JavaScript validation.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个选项是在Dreamweaver中创建的最可靠、最快速、最简单的方式。在接下来的步骤中，我们将使用Dreamweaver的Spry JavaScript和HTML库插入具有内置JavaScript验证的字段。
- en: Creating a validated text field
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个经过验证的文本字段
- en: Text fields are the bread and butter of forms, collecting all manner of text,
    such as names, phone numbers, account numbers, addresses, and e-mail addresses
    (more on those shortly).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 文本字段是表单的基础，收集各种文本，如姓名、电话号码、帐号、地址和电子邮件地址（稍后会详细介绍）。
- en: Note
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: At the risk of sounding awfully redundant, let me re-emphasize the importance
    of creating validated fields in a defined Dreamweaver site and in a saved HTML
    file. This takes on special importance now, because we are generating JavaScript
    files that will be linked to our page, and if those links are corrupted, the form
    won't work.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 冒着听起来非常冗余的风险，让我再次强调在定义的Dreamweaver站点和保存的HTML文件中创建经过验证的字段的重要性。现在这一点尤为重要，因为我们正在生成将链接到我们页面的JavaScript文件，如果这些链接损坏，表单将无法工作。
- en: 'The most common type of validation for a text field is to make it *required*.
    Perform the following steps to insert a required text field in a form:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 文本字段最常见的验证类型是将其设置为*必填*。执行以下步骤在表单中插入一个必填文本字段：
- en: Navigate to **Insert** | **Form** | **Spry Validation Text Field**. The **Input
    Tag Accessibility Attributes** dialog appears.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**插入** | **表单** | **Spry验证文本字段**。将显示**输入标签可访问性属性**对话框。
- en: The **ID** field generates an ID style associated with the form field. This
    attribute is used in some environments to make forms more accessible for people
    with disabilities and also allows you to define an ID style that applies to the
    form field. Enter an ID style with no spaces or special characters.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**ID**字段生成与表单字段相关的ID样式。此属性用于使某些环境中的表单对残疾人更具可访问性，并且还允许您定义适用于表单字段的ID样式。输入一个没有空格或特殊字符的ID样式。'
- en: The **Label** field generates a label that identifies the field and is easily
    read by software that aids disabled web users. Enter a label (the label can have
    special characters and spaces) as shown in the following screenshot. The other
    fields in the dialog can be left at their default settings, so click on **OK**,
    as shown in the following screenshot, to generate the form:![Creating a validated
    text field](img/4742OT_03_09.jpg)
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**标签**字段生成一个标签，用于标识字段，并且易于残疾网站用户使用的软件读取。输入一个标签（标签可以包含特殊字符和空格），如下图所示。对话框中的其他字段可以保持默认设置，因此单击**确定**，如下图所示，生成表单：![创建经过验证的文本字段](img/4742OT_03_09.jpg)'
- en: Form field attributes can be defined by clicking on the form field itself in
    the **Design** view and making edits in the **Properties** inspector. Enter a
    value in the **Char width** field to define how wide the field will display (in
    characters). Enter a value in the **Max chars** field to define the maximum number
    of characters a user can enter in the field, as shown in the following screenshot:![Creating
    a validated text field](img/4742OT_03_10.jpg)
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以通过单击**设计**视图中的表单字段本身并在**属性**检查器中进行编辑来定义表单字段属性。在**字符宽度**字段中输入一个值，以定义字段将显示的宽度（以字符为单位）。在**最大字符**字段中输入一个值，以定义用户可以在字段中输入的最大字符数，如下图所示：![创建经过验证的文本字段](img/4742OT_03_10.jpg)
- en: Validation rules are defined by clicking on the (aqua colored) **Spry TextField**
    tab above the field itself. By default, our **name** field is required. You can
    add validation rules by entering a maximum or minimum number of characters in
    the **Max chars** or **Min chars** fields. And, by default, the field is validated
    on Submit—when a user submits the form. You can also force validation when a user
    leaves the field by checking the **Blur** and **Change** checkboxes (these two
    options accomplish similar things in different browsing environments).
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击字段上方的（水绿色）**Spry TextField**选项卡来定义验证规则。默认情况下，我们的**名称**字段是必填的。您可以通过在**最大字符**或**最小字符**字段中输入最大或最小字符数来添加验证规则。并且，默认情况下，当用户提交表单时，字段会进行验证。您还可以通过选中**模糊**和**更改**复选框来在用户离开字段时强制验证（这两个选项在不同的浏览环境中实现类似的功能）。
- en: You can preview how the field will respond to valid or invalid entries by experimenting
    with options in the **Preview states** dropdown list. The area below the preview
    shows the result if a user attempts to submit the form without filling in a required
    field, as shown here:![Creating a validated text field](img/4742OT_03_11.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过在**预览状态**下拉列表中尝试不同选项来预览字段对有效或无效输入的响应。预览下方的区域显示了用户在未填写必填字段的情况下尝试提交表单的结果，如下所示：![创建经过验证的文本字段](img/4742OT_03_11.jpg)
- en: After you define the field and the validation rules, click to place your insertion
    point at the end of the form field in the **Design** view, and press the *Enter*
    or *Return* key to create a new line for a new form field.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在定义字段和验证规则后，单击**设计**视图中表单字段末尾放置插入点，并按*Enter*或*Return*键创建新的表单字段的新行。
- en: Creating a validated e-mail field
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建经过验证的电子邮件字段
- en: Creating a validated e-mail field is similar to creating a text field, except
    that you'll set the validation rules to detect (and only accept) input that looks
    like an e-mail address.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 创建经过验证的电子邮件字段与创建文本字段类似，只是您将设置验证规则以检测（并且仅接受）看起来像电子邮件地址的输入。
- en: 'To do that, click on the (aqua) **Spry TextField** tab for an e-mail address
    form field, and select **Email Address** from the **Type** dropdown menu in the
    **Properties** inspector. And, select the **Enforce Pattern** checkbox on the
    right-hand side of the **Properties** inspector, as shown in the following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，单击电子邮件地址表单字段的（水绿色）**Spry TextField**选项卡，并从**属性**检查器中的**类型**下拉菜单中选择**电子邮件地址**。并且，在**属性**检查器的右侧选择**强制模式**复选框，如下图所示：
- en: '![Creating a validated e-mail field](img/4742OT_03_12.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![创建经过验证的电子邮件字段](img/4742OT_03_12.jpg)'
- en: As you can see from looking at the options in the **Type** dropdown list, Dreamweaver
    can generate a whole range of validation scripts for different kinds of text input,
    ranging from phone numbers to credit cards.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 从**类型**下拉列表中的选项可以看出，Dreamweaver可以为不同类型的文本输入生成一整套验证脚本，从电话号码到信用卡。
- en: Adding other fields
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加其他字段
- en: 'The submenus in **Insert** | **Form** includes options for generating additional
    types of validated form fields. The most important of these are as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**插入** | **表单**中的子菜单包括生成其他类型的经过验证的表单字段的选项。其中最重要的是：'
- en: '**Checkbox**: Used for *yes or no* choices, where a user can select or deselect
    an option.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**复选框**: 用于*是或否*选择，用户可以选择或取消选择选项。'
- en: '**Select**: Used to create dropdown menus with options within a form.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择**: 用于在表单中创建带有选项的下拉菜单。'
- en: '**Radio Group**: Used to create sets of options from which a user can chose
    only one. For example, to allow a user to choose one (and only one) type of credit
    card.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**单选按钮组**: 用于创建用户只能选择一个选项的选项集。例如，允许用户选择一种（仅一种）信用卡类型。'
- en: 'These additional validated form fields are pretty self-explanatory with the
    background we covered in discussing options for text fields. They are illustrated
    in the following screenshot (from top to bottom: checkbox, select menu, and radio
    group):'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这些额外的经过验证的表单字段在我们讨论文本字段选项时已经很明显。它们在下面的屏幕截图中有所说明（从上到下：复选框、选择菜单和单选按钮组）：
- en: '![Adding other fields](img/4742OT_03_13.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![添加其他字段](img/4742OT_03_13.jpg)'
- en: Adding Submit and Reset buttons
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加提交和重置按钮
- en: Without a **Submit** button, the content a user enters into the form literally
    doesn't go anywhere. A **Submit** button in a form launches the form action. So,
    if we apply the rules of formal logic here, we better make sure our form has a
    **Submit** button.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 没有**提交**按钮，用户输入的内容实际上不会去任何地方。表单中的**提交**按钮会启动表单操作。因此，如果我们在这里应用形式逻辑的规则，最好确保我们的表单有一个**提交**按钮。
- en: Add a **Submit** button by navigating to **Insert** | **Form** | **Button**.
    The **Input Tag Accessibility Attributes** dialog box appears, but just click
    on **OK** to create the **Submit** button without worrying about the options in
    this dialog box. A **Submit** button appears on your form.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 通过导航到**插入** | **表单** | **按钮**来添加一个**提交**按钮。**输入标签可访问性属性**对话框将出现，但只需单击**确定**，以创建**提交**按钮，而不必担心此对话框中的选项。表单上将出现一个**提交**按钮。
- en: '**Reset** buttons are handy, but not essential. They "reset" the form to its
    original (empty) state. To create a **Reset** button, insert a second button.
    With that button selected in the form, choose the **Reset Form** radio button
    in the **Properties** inspector, as shown in the following screenshot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**重置**按钮很方便，但并非必需。它们将表单“重置”为其原始（空）状态。要创建**重置**按钮，请插入第二个按钮。在表单中选择该按钮，然后在**属性**检查器中选择**重置表单**单选按钮，如下截图所示：'
- en: '![Adding Submit and Reset buttons](img/4742OT_03_14.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![添加提交和重置按钮](img/4742OT_03_14.jpg)'
- en: Prompting with HTML5
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用HTML5提示
- en: As noted earlier in this chapter, browser support for HTML5 form elements and
    properties is a work in progress. For that reason, I'd advise against using HTML5
    form attributes that are *essential* for the form to work—such as validation attributes.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章前面提到的，浏览器对HTML5表单元素和属性的支持仍在进行中。因此，我建议不要使用对表单工作至关重要的HTML5表单属性，例如验证属性。
- en: But HTML5 placeholders are a good idea. They prompt a user with text inside
    the form field that disappears as a user enters content. If the user's environment
    doesn't support HTML5 form placeholders, they can still rely on the form label
    to help them figure out what to enter into the form field.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 但HTML5占位符是一个好主意。它们在表单字段内部用文本提示用户，随着用户输入内容，文本会消失。如果用户的环境不支持HTML5表单占位符，他们仍然可以依靠表单标签来帮助他们弄清楚要输入到表单字段中的内容。
- en: 'A placeholder parameter can be added to a text input. Unfortunately, Dreamweaver
    CS6 doesn''t offer options for defining placeholder text in the **Design** view,
    but we can do this in the **Code** view. To do that, perform the following steps:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 可以向文本输入添加占位符参数。不幸的是，Dreamweaver CS6在**设计**视图中没有定义占位符文本的选项，但我们可以在**代码**视图中进行。要做到这一点，请执行以下步骤：
- en: Select the **Split** view from Dreamweaver's **Document** window.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Dreamweaver的**文档**窗口中选择**分割**视图。
- en: Click on a form field in the **Design** side of the **Split** view to find the
    code on the **Code** side of the **Split** view, as shown on the following screenshot:![Prompting
    with HTML5](img/4742OT_03_15.jpg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**分割**视图的**设计**侧面点击表单字段，以在**分割**视图的**代码**侧面找到代码，如下截图所示：![使用HTML5提示](img/4742OT_03_15.jpg)
- en: At the end of the `input` tag, add `placeholder="placeholder text"` (replace
    "placeholder text" with real text), as shown in the following screenshot:![Prompting
    with HTML5](img/4742OT_03_16.jpg)
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`input`标签的末尾添加`placeholder="占位符文本"`（用真实文本替换“占位符文本”），如下截图所示：![使用HTML5提示](img/4742OT_03_16.jpg)
- en: You can preview placeholder text in the **Live** view, in the **Design** side
    of the **Split** view.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在**实时**视图中预览占位文本，在**分割**视图的**设计**侧面。
- en: Designing CSS for forms
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为表单设计CSS
- en: In the first two chapters of this book, we established a framework of relying
    on external CSS stylesheet files to provide formatting for HTML elements (such
    as headings, paragraphs, and links) and special ID and class styles that can be
    applied to the `div` tags to design pages.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的前两章中，我们建立了一个框架，依赖外部CSS样式表文件为HTML元素（如标题、段落和链接）提供格式，并提供可以应用于`div`标签以设计页面的特殊ID和类样式。
- en: 'How does that doctrine apply to customizing form input? The short answer is:
    You create styles for the different form elements. The long answer: Well, we''ll
    walk through how to do that now.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这个原则如何适用于自定义表单输入？简短的答案是：您可以为不同的表单元素创建样式。长答案是：好吧，我们现在将逐步介绍如何做到这一点。
- en: 'The following are the key HTML elements to which CSS styles can be applied
    to customize form appearance:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是可以应用CSS样式以自定义表单外观的关键HTML元素：
- en: The `<form>` element style defines the appearance of the entire form.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<form>`元素样式定义了整个表单的外观。'
- en: The `<input>` element style defines the appearance of input fields (such as
    text fields).
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<input>`元素样式定义了输入字段（如文本字段）的外观。'
- en: Specific ID styles can be defined for styles that have IDs associated with them
    (a technique we examined earlier in this chapter when I showed you how to assign
    an ID to a text field in the **Input Tag Accessibility Attributes** dialog (see
    the *Creating a validated text field* section).
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以为具有与其关联的ID的样式定义特定的ID样式（这是我们在本章前面讨论过的一种技术，当我向您展示如何在**输入标签可访问性属性**对话框中为文本字段分配ID时）。
- en: Creating a stylesheet for form elements
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为表单元素创建样式表
- en: Let's walk through the process of defining each of these styles in a new, linked
    CSS file. We'll name it as `form.css`.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步介绍在新的链接CSS文件中定义每个样式的过程。我们将其命名为`form.css`。
- en: As always, starting from a saved HTML page in a defined Dreamweaver site, view
    the **CSS Styles** panel (**Window** | **CSS Styles**). Click on the **New CSS
    Rule** (**+**) icon at the bottom of the panel, as shown in the following screenshot:![Creating
    a stylesheet for form elements](img/4742OT_03_17.jpg)
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与往常一样，从已保存的HTML页面开始，在定义的Dreamweaver站点中查看**CSS样式**面板（**窗口** | **CSS样式**）。单击面板底部的**新建CSS规则**（**+**）图标，如下截图所示：![为表单元素创建样式表](img/4742OT_03_17.jpg)
- en: Note
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that if you are working with a form that includes Spry validation widgets,
    your **CSS Styles** panel will be linked to a CSS file that defines elements of
    those widgets that style things such as background colors and fonts for validation
    error messages.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果您正在使用包含Spry验证小部件的表单，您的**CSS样式**面板将链接到定义这些小部件元素的CSS文件，用于为验证错误消息的背景颜色和字体等样式。
- en: 'In the **New CSS Selector Rule** dialog, choose the following:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**新建CSS选择器规则**对话框中，选择以下内容：
- en: '**Tag** from the **Selector Type** dropdown list'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**选择器类型**下拉列表中选择**标签**
- en: '**form** from the **Selector Name** dropdown list'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**选择器名称**下拉列表中选择**form**
- en: '**(New Style Sheet File)** from the **Rule Definition** dropdown list'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**规则定义**下拉列表中选择**(新样式表文件)**
- en: Click on **OK** to begin defining the new file and style, as shown in the following
    screenshot:![Creating a stylesheet for form elements](img/4742OT_03_18.jpg)
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**开始定义新文件和样式，如下图所示：![为表单元素创建样式表](img/4742OT_03_18.jpg)
- en: In the **Save Style Sheet File As** dialog, click on the **Site Root** button
    to save your file in your Dreamweaver site's root folder. In the **Save As** field,
    enter `form.css`. Click on **Save**. The **CSS Rule Definition** dialog appears.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**另存样式表文件为**对话框中，点击**站点根目录**按钮，将文件保存在Dreamweaver站点的根文件夹中。在**另存为**字段中输入`form.css`。点击**保存**。**CSS规则定义**对话框出现。
- en: You might want to define a background color for your form style. Do that in
    the **Background** category of the **CSS Rule Definition** dialog (choose a color
    from the **Background-color** swatch).
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能希望为表单样式定义背景颜色。在**CSS规则定义**对话框的**背景**类别中执行此操作（从**背景颜色**样本中选择颜色）。
- en: You can also define a width for your form to constrain it from stretching the
    entire width of the page (or enclosing element). Do that by entering a width (such
    as 600 px) in the **Width** field of the **Box** category. Also, in the **Box**
    category, try defining 10 px of padding and a 10 px margin for the form.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以为表单定义宽度，以限制其不要延伸到整个页面（或包含元素）的宽度。在**框**类别的**宽度**字段中输入宽度（例如600像素）。此外，在**框**类别中，尝试为表单定义10像素的填充和10像素的边距。
- en: Try defining a border for your form. At any time you can click on the **Apply**
    button on the **CSS Rule Definition** dialog to test your styling, as shown in
    the following screenshot:![Creating a stylesheet for form elements](img/4742OT_03_19.jpg)
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试为表单定义边框。您随时可以点击**CSS规则定义**对话框中的**应用**按钮来测试您的样式，如下图所示：![为表单元素创建样式表](img/4742OT_03_19.jpg)
- en: After you fine-tune your form style, click on **OK** in the **CSS Rule Definition**
    dialog to save and apply your style.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**CSS规则定义**对话框中微调表单样式后，点击**确定**保存并应用您的样式。
- en: Navigate to **File** | **Save All** to save both your web page and the CSS file
    with changes.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**文件** | **全部保存**以保存您的网页和带有更改的CSS文件。
- en: Creating styles for form elements
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为表单元素创建样式
- en: 'In the same way that you defined a style for the `<form>` element, you can
    create a new style for the `<input>` element. The only difference is that once
    you''ve created a CSS file for forms (`form.css`), you will want to save all form-related
    styles to that CSS file. I''ll get you started with the following steps:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 与为`<form>`元素定义样式的方式相同，您可以为`<input>`元素创建新样式。唯一的区别是，一旦您为表单创建了CSS文件（`form.css`），您将希望将所有与表单相关的样式保存到该CSS文件中。我将为您提供以下步骤：
- en: Switch to the **Live** view in the **Document** window for a more accurate preview
    of the style you are about to define.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到**文档**窗口中的**实时**视图，以更准确地预览您即将定义的样式。
- en: 'Click on the **New CSS Rule** (**+**) icon at the bottom of the panel. The
    **New CSS Selector Rule** dialog opens, choose the following:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击面板底部的**新建CSS规则**（**+**）图标。**新建CSS选择器规则**对话框打开，选择以下内容：
- en: '**Tag** from the **Selector Type** dropdown list'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**选择器类型**下拉列表中选择**标签**
- en: '**Input** from the **Selector Name** dropdown list'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**选择器名称**下拉列表中选择**输入**
- en: '`form.css` from the **Rule Definition** dropdown list'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**规则定义**下拉列表中选择`form.css`
- en: Click on **OK** to begin defining the new style.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**开始定义新样式。
- en: The **CSS Rule Definition** dialog appears. You can take it from here—define
    style attributes for an input field and click on **Apply** to see how they look
    in the **Design** view, as shown in the following screenshot:![Creating styles
    for form elements](img/4742OT_03_20.jpg)
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**CSS规则定义**对话框出现。您可以继续进行-为输入字段定义样式属性，并点击**应用**以查看它们在**设计**视图中的外观，如下图所示：![为表单元素创建样式](img/4742OT_03_20.jpg)'
- en: Click on **OK** when you have defined the style for input fields.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为输入字段定义样式后，点击**确定**。
- en: Creating ID styles for a form
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为表单创建ID样式
- en: So far, the styles we've created apply to every instance of an element. For
    example, our form style attributes (background color, width, and so on) will apply
    to every form. And our input style attributes apply to every input element (name
    and e-mail fields and submit and reset buttons).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们创建的样式适用于元素的每个实例。例如，我们的表单样式属性（背景颜色，宽度等）将适用于每个表单。我们的输入样式属性适用于每个输入元素（名称和电子邮件字段以及提交和重置按钮）。
- en: How do you define a style that applies only to a specific element? One technique
    is to use the IDs associated with the fields we created when we generated Spry
    validation fields.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如何定义仅适用于特定元素的样式？一种技巧是使用与我们生成Spry验证字段时创建的字段相关联的ID。
- en: 'Perform the following steps to use an ID style for one of the ID elements we
    generated as we created fields:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤，使用ID样式为我们生成的ID元素之一创建ID样式：
- en: 'Click on the **New CSS Rule** (**+**) icon at the bottom of the panel. The
    **New CSS Selector Rule** dialog opens, choose the following:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击面板底部的**新建CSS规则**（**+**）图标。**新建CSS选择器规则**对话框打开，选择以下内容：
- en: '**ID** from the **Selector Type** dropdown list'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**选择器类型**下拉列表中选择**ID**
- en: '**name** from the **Selector Name** dropdown list'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**选择器名称**下拉列表中选择**名称**
- en: '**form.css** from the **Rule Definition** dropdown list'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从**规则定义**下拉列表中选择**form.css**
- en: Click on **OK** to open the **CSS Rule Definition** dialog.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**确定**打开**CSS规则定义**对话框。
- en: Define custom styling for the **name** ID element, testing your style by clicking
    on **Apply**, as shown in the following screenshot:![Creating ID styles for a
    form](img/4742OT_03_21.jpg)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为**name** ID元素定义自定义样式，通过单击**应用**来测试您的样式，如下截图所示：![为表单创建ID样式](img/4742OT_03_21.jpg)
- en: Click on **OK** to define the style for the **name** ID element.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**确定**以定义**name** ID元素的样式。
- en: Navigate to **File** | **Save All** to save changes to your HTML and CSS files.
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**文件** | **全部保存**以保存对HTML和CSS文件的更改。
- en: Thoughts on form styles
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对表单样式的思考
- en: In the framework in which we are exploring forms here, we are working with a
    form we designed ourselves. In "real life", particularly in more sophisticated
    professional projects, the HTML for a form will be supplied by the team that builds
    the backend scripts and databases that manage the form input.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们在这里探索的框架中，我们正在使用我们自己设计的表单。在“现实生活”中，特别是在更复杂的专业项目中，表单的HTML将由构建后端脚本和管理表单输入的数据库的团队提供。
- en: But I want to emphasize that you can still create CSS files and styles that
    customize the look of those forms. So, the form HTML you get from Google for a
    search engine, the form HTML you get from [www.TheSiteWizard.com](http://www.TheSiteWizard.com)
    to manage feedback, and the form HTML you get from an e-commerce add-in package,
    can all be customized with your own CSS. And in that way, forms can be integrated
    into the inviting look and feel you craft for your site.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 但我想强调的是，您仍然可以创建自定义CSS文件和样式，以自定义这些表单的外观。因此，您从Google获取的搜索引擎的表单HTML，从[www.TheSiteWizard.com](http://www.TheSiteWizard.com)获取的用于管理反馈的表单HTML，以及从电子商务插件包获取的表单HTML，都可以使用您自己的CSS进行自定义。通过这种方式，表单可以集成到您为网站打造的吸引人的外观和感觉中。
- en: Real-world form handling
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 真实世界的表单处理
- en: While I've emphasized that Adobe does not provide an accessible, reasonably-priced
    framework for managing form data, there are tons of online resources, many of
    them free, that plug into Dreamweaver sites easily. Before closing this chapter,
    I want to walk you through an example of a **FreeFind box** .
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我强调Adobe没有提供一个可访问且价格合理的管理表单数据的框架，但有大量在线资源，其中许多是免费的，可以轻松插入Dreamweaver网站。在结束本章之前，我想通过一个**FreeFind框**的示例来引导您。
- en: I picked that example because rare is the site that doesn't use a search box,
    and also because installing (and customizing) a Freefind search box is free and
    pretty straightforward.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择了这个例子，因为很少有网站不使用搜索框，而且安装（和自定义）Freefind搜索框是免费且非常简单的。
- en: For this to work, all you need is a live website hosted at a remote server.
    Getting set up with one of those is a bit more complex. Refer back to the *Defining
    a remote site* section in [Chapter 1](ch01.html "Chapter 1. Creating Sites and
    Pages with Dreamweaver CS6"), *Creating Sites and Pages with Dreamweaver CS6*,
    of this book for advice on how to do that.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使其工作，您只需要一个托管在远程服务器上的实时网站。设置其中一个有点复杂。有关如何执行此操作的建议，请参阅本书的[第1章](ch01.html "第1章。使用Dreamweaver
    CS6创建站点和页面")中的*定义远程站点*部分，*使用Dreamweaver CS6创建站点和页面*。
- en: The following set of steps draw on techniques covered earlier in this chapter,
    so if you're bouncing directly to this point in the book to install a search box,
    you're best off jumping up to the beginning of the chapter first for form and
    form style basics.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 以下一系列步骤借鉴了本章早些时候介绍的技术，因此，如果您直接跳到本书中的这一点来安装搜索框，最好先跳到本章的开头了解表单和表单样式的基础知识。
- en: 'So, with that proviso, perform the following steps to add a search box to your
    site:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在这种情况下，执行以下步骤将搜索框添加到您的网站：
- en: 'Navigate to **File** | **New** and create a new page that will hold your search
    box by performing the following steps:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**文件** | **新建**，并通过执行以下步骤创建一个将容纳您的搜索框的新页面：
- en: In the left-hand side column of the **New Document** dialog, choose **Blank
    Page**.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**新建文档**对话框的左侧列中，选择**空白页面**。
- en: In the **Page Type** column choose **HTML**.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**页面类型**列中选择**HTML**。
- en: In the **Layout** column choose **<none>**.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**布局**列中选择**<none>**。
- en: Click on **Create** to generate the new page.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**创建**以生成新页面。
- en: In the **Title** area of the **Document** toolbar, type `Search this site`
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**文档**工具栏的**标题**区域中，键入`搜索本站点`
- en: Save the page in the root folder of your site as `search.html`.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将页面保存在名为`search.html`的站点根文件夹中。
- en: Use the **Attach Style Sheet** icon in the **CSS Styles** panel to link the
    `form.css` style to this page. You'll be using the same set of styles you created
    for a signup form earlier in this chapter.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**CSS样式**面板中的**附加样式表**图标将`form.css`样式链接到此页面。您将使用本章早期为注册表单创建的相同一组样式。
- en: 'In a browser, go to [www.freefind.com](http://www.freefind.com). To sign up
    for a search box, perform the following steps:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中，转到[www.freefind.com](http://www.freefind.com)。要注册搜索框，请执行以下步骤：
- en: Enter your name, e-mail, and click on the **Instant Sign-up** button. You'll
    get login information sent to your e-mail address.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入您的姓名，电子邮件，并单击**即时注册**按钮。您将收到发送到您电子邮件地址的登录信息。
- en: Use the login information sent to your e-mail address to log in to your FreeFind
    account. The sign-in process will take you directly to the **Control** window
    for your search box.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用发送到您电子邮件地址的登录信息登录到您的FreeFind帐户。登录过程将直接带您到您的搜索框的**控制**窗口。
- en: FreeFind offers reasonably priced ad-free options, but you can use the free
    version to experiment with forms and styles, so there is no need to subscribe
    to any special plans.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: FreeFind提供价格合理且无广告的选项，但您可以使用免费版本来尝试表单和样式，因此无需订阅任何特殊计划。
- en: 'Click on the **HTML** tab in the **Control** window, as shown in the following
    screenshot:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**控制**窗口中的**HTML**选项卡，如下截图所示：
- en: '![Real-world form handling](img/4742OT_03_22.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![真实世界的表单处理](img/4742OT_03_22.jpg)'
- en: 'To copy and paste the HTML for the search box, perform the following steps:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要复制并粘贴搜索框的HTML，请执行以下步骤：
- en: To keep things simple, we will use the first option for a search box, **1\.
    Site search box - with a link to advanced search options**.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了保持简单，我们将使用搜索框的第一个选项，**1.网站搜索框-带有高级搜索选项的链接**。
- en: Click on the link beneath that option that says **get the html and paste it
    into your page**. The HTML is displayed in a box as shown in the following screenshot:![Real-world
    form handling](img/4742OT_03_23.jpg)
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击该选项下方的链接，该链接显示**获取HTML并将其粘贴到您的页面中**。HTML显示在一个框中，如下面的屏幕截图所示：![真实世界的表单处理](img/4742OT_03_23.jpg)
- en: Click inside the code, and copy it to your clipboard.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击代码内部，并将其复制到剪贴板。
- en: Switch back to your open Dreamweaver HTML file (`search.html`). In the **Code**
    side of the **Split** view, click to place your insertion point after the end
    of the `<body>` tag and press the *Enter* or *Return* key to create a new line
    of code.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换回您打开的Dreamweaver HTML文件（`search.html`）。在**拆分**视图的**代码**视图中，单击以在`<body>`标签的末尾放置插入点，然后按*Enter*或*Return*键创建新的代码行。
- en: Paste the copied HTML from FreeFind, and view the result in **Live** view in
    the **Design** side of the **Split** view as shown in the following screenshot:![Real-world
    form handling](img/4742OT_03_24.jpg)
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 粘贴来自FreeFind的复制HTML，并在**设计**视图的**拆分**视图的**实时**视图中查看结果，如下面的屏幕截图所示：![真实世界的表单处理](img/4742OT_03_24.jpg)
- en: 'The FreeFind code is cluttered with table formatting. You can remove that code
    in the **Code** side of the **Split** view if you wish, or just accept it. But
    more importantly, you can use the **Properties** inspector and other editing techniques
    we''ve explored in this book so far to customize the form. I''ll let you review
    this chapter as both a practical application of what we''ve covered, and something
    of a "test" to strengthen your confidence and skill at formatting forms to accomplish
    the following:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: FreeFind代码中充斥着表格格式。如果愿意，您可以在**拆分**视图的**代码**视图中删除该代码，或者只是接受它。但更重要的是，您可以使用我们在本书中探讨过的**属性**检查器和其他编辑技术来自定义表单。我让您将本章作为我们所涵盖内容的实际应用，并且作为加强您对格式化表单的信心和技能的“测试”来审查。
- en: Change the width of the search field to 48 characters, and the maximum characters
    to 60
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将搜索字段的宽度更改为48个字符，最大字符更改为60
- en: 'Add this placeholder text: `search string goes here`'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加此占位文本：`搜索字符串在此处`
- en: Add a Reset button
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加重置按钮
- en: As long as you don't change the form field names or delete them (including the
    hidden form fields that will not display in a browser but will allow FreeFind's
    search box to function), you can edit both the HTML and CSS for your form, as
    shown in the following screenshot (in **Live** view):![Real-world form handling](img/4742OT_03_25.jpg)
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只要您不更改表单字段名称或删除它们（包括在浏览器中不显示但允许FreeFind搜索框功能的隐藏表单字段），您可以编辑表单的HTML和CSS，如下面的屏幕截图所示（在**实时**视图中）：![真实世界的表单处理](img/4742OT_03_25.jpg)
- en: By using your `form.css` stylesheet, you'll make the FreeFind search box look
    and feel like other forms in your site.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用您的`form.css`样式表，您可以使FreeFind搜索框看起来和其他网站中的表单感觉一样。
- en: The FreeFind example was simpler than some forms you'll get from third parties.
    But the basic technique of generating HTML for a form, pasting that form into
    Dreamweaver, editing the form HTML (without deleting or renaming any form fields),
    and applying your own custom styling... well that works with any form you get
    from anywhere.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: FreeFind示例比您从第三方获取的一些表单要简单。但是生成表单的基本技术，将该表单粘贴到Dreamweaver中，编辑表单HTML（不删除或重命名任何表单字段），并应用自定义样式...
    这对于您从任何地方获取的任何表单都适用。
- en: Summary
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored Dreamweaver CS6's powerful tools for generating
    validated forms. To do that, we invoked the Spry framework—a set of widgets that
    combine HTML, CSS, and JavaScript to apply different kinds of interactivity to
    web pages. We will be revisiting the set of Spry widgets in Dreamweaver CS6 several
    times in later chapters in this book.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探索了Dreamweaver CS6用于生成经过验证的表单的强大工具。为此，我们调用了Spry框架-一组小部件，它结合了HTML、CSS和JavaScript，以将不同类型的交互应用于网页。在本书的后面几章中，我们将多次回顾Dreamweaver
    CS6中的Spry小部件集。
- en: We also learned to create a simple jump menu with Dreamweaver-generated JavaScript.
    So, from a couple of different directions, we began to explore Dreamweaver's JavaScript
    features in relation to forms.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学会了使用Dreamweaver生成的JavaScript创建一个简单的跳转菜单。因此，从不同的方向，我们开始探索Dreamweaver与表单相关的JavaScript功能。
- en: Then, we went beyond what Dreamweaver does with forms—specifically adding a
    placeholder attribute to fields with prompt text. We had to go into the **Code**
    view to do that as Dreamweaver's support for new HTML5 attributes is paltry.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们超越了Dreamweaver对表单的处理-具体是向具有提示文本的字段添加占位符属性。我们不得不进入**代码**视图来做到这一点，因为Dreamweaver对HTML5的新属性的支持很少。
- en: And finally, you worked through a real-life example of connecting a form with
    a backend system of scripts and databases. The FreeFind search example was relatively
    simple, but it had all the elements you'll need to handle in order to embed a
    form supplied by any backend server into a Dreamweaver CS6 site. And in relation
    to this, I want to highlight the dynamic role of custom CSS in making the embedded
    form look and feel like the rest of our site. We'll return to CSS formatting in
    substantially more depth in the next chapter.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，您通过一个真实的示例来连接表单与后端脚本和数据库系统。FreeFind搜索示例相对简单，但它包含了您需要处理的所有元素，以便将任何后端服务器提供的表单嵌入Dreamweaver
    CS6站点。在这方面，我想强调自定义CSS在使嵌入的表单看起来和感觉像我们网站的其余部分中的动态作用。我们将在下一章中更深入地讨论CSS格式。
