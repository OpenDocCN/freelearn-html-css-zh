- en: Chapter 5. Embedding HTML5 Native Audio and Video
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章。嵌入HTML5本机音频和视频
- en: In this chapter, we walk through how to add audio and video to web pages using
    HTML5\. The advantage of embedding media using HTML5 in Dreamweaver is that it
    does not require any external player to work. For browsers that support the HTML5
    Audio or Video element, native media is the most elegant way to present audio
    and video online.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍如何使用HTML5向网页添加音频和视频。在Dreamweaver中使用HTML5嵌入媒体的优势在于它不需要任何外部播放器才能工作。对于支持HTML5音频或视频元素的浏览器，本机媒体是在线呈现音频和视频的最优雅方式。
- en: Dreamweaver makes adding HTML5 audio relatively painless—without extensive knowledge
    of or worrying about HTML coding.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver使添加HTML5音频相对轻松，无需对HTML编码有广泛的知识或担心。
- en: Native media and compatibility
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本机媒体和兼容性
- en: Before launching our journey to embedding media with HTML5, let's step back
    for just a moment to survey the terrain. Until HTML5, if you wanted to listen
    to audio or watch video from a website, you had to do so through the agency of
    a browser plugin of one kind or another. That plugin might have been QuickTime
    Player (typically on a Mac), Windows Media Player (typically on a Windows computer),
    Flash, a plugin supplied by your hardware manufacturer, or some other program.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始使用HTML5嵌入媒体之前，让我们稍微退后一步，来看看整体情况。在HTML5之前，如果您想从网站上收听音频或观看视频，您必须通过某种浏览器插件来实现。该插件可能是QuickTime
    Player（通常在Mac上）、Windows Media Player（通常在Windows计算机上）、Flash、硬件制造商提供的插件或其他程序。
- en: Since users listened to audio with the aid of plugins (such as Windows Media
    Player or QuickTime Player), web designers had almost no control over what appeared
    onscreen when a user listened to an audio. HTML5 provides what is called **native**
    audio (as well as native video). Native video does not require a plugin. The player
    and controls still vary some depending on the browsing environment, but with HTML5,
    the audio player is *relatively* standardized.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 由于用户使用插件（如Windows Media Player或QuickTime Player）来听音频，网页设计师几乎无法控制用户在听音频时屏幕上显示的内容。HTML5提供了所谓的**本机**音频（以及本机视频）。本机视频不需要插件。播放器和控件在不同的浏览环境中仍然有所不同，但是使用HTML5，音频播放器是*相对*标准化的。
- en: 'There are two compatibility issues in presenting HTML5 audio and video: 1)
    a visitor''s browser must be HTML5 compliant; and 2) a visitor''s browser must
    support the particular audio format to which the audio or video is saved. So,
    in walking through the process of presenting HTML5 audio, we''ll explore how to
    handle both of these compatibility issues.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在呈现HTML5音频和视频时存在两个兼容性问题：1）访问者的浏览器必须符合HTML5标准；2）访问者的浏览器必须支持音频或视频保存的特定音频格式。因此，在介绍呈现HTML5音频的过程中，我们将探讨如何处理这两个兼容性问题。
- en: I'll return to compatibility issues in more detail separately for audio and
    video as we walk through the process of embedding native audio, and then native
    video, using Dreamweaver.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们逐步介绍嵌入本机音频和视频的过程时，我将分别更详细地讨论音频和视频的兼容性问题。
- en: Laying the groundwork
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 奠定基础
- en: Support for HTML5 audio and video in Dreamweaver CS6 is still a bit primitive.
    If you update Dreamweaver with Creative Cloud, more HTML5 elements (including
    audio and video) are available from the **Insert** menu (or **Insert** toolbar).
    But all versions of Dreamweaver CS6 (and 5.5) provide valuable code-hinting in
    **Code** (or **Split**) view, and that's the approach we will take here since
    it works in any Dreamweaver CS6 environment. And, besides, it is good to be exposed
    to and understand the `audio` and `video` tag syntax.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dreamweaver CS6中支持HTML5音频和视频仍然有些原始。如果您使用Creative Cloud更新Dreamweaver，则可以从**插入**菜单（或**插入**工具栏）中获得更多HTML5元素（包括音频和视频）。但是Dreamweaver
    CS6（和5.5）的所有版本都在**代码**（或**分割**）视图中提供有价值的代码提示，这是我们将采取的方法，因为它适用于任何Dreamweaver CS6环境。此外，了解`audio`和`video`标签的语法也是很有益的。
- en: 'Let''s quickly review two essential things you need to work with HTML5 media
    in Dreamweaver:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速回顾一下您在Dreamweaver中使用HTML5媒体所需的两个基本要素：
- en: If you haven't already, make sure you have a Dreamweaver site defined. This
    is an essential first step. To learn how to define a site, you can take a look
    at [Chapter 1](ch01.html "Chapter 1. Creating Sites and Pages with Dreamweaver
    CS6"), *Creating Sites and Pages with Dreamweaver CS6*, of this book to find out
    how to do so.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您还没有，请确保已定义Dreamweaver站点。这是一个必不可少的第一步。要了解如何定义站点，您可以查看本书的[第1章](ch01.html "第1章。使用Dreamweaver
    CS6创建站点和页面")*使用Dreamweaver CS6创建站点和页面*，以了解如何操作。
- en: 'Collect media files. For audio: MP3, OGG, and WebM format audio files. For
    video: h.264 (often with an `.mp4` filename extension), OGG, or WebM. You are
    going to want to have all three versions of your video files—h.264, OGG, and WebM.
    You can use the free program **Switch** ([http://www.nch.com.au/switch/index.html](http://www.nch.com.au/switch/index.html))
    to translate files from one audio format to another. For video conversion, you
    can use the free program **Online-Convert**, available for download at [http://video.online-convert.com/](http://video.online-convert.com/).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集媒体文件。对于音频：MP3、OGG和WebM格式的音频文件。对于视频：h.264（通常带有`.mp4`文件扩展名）、OGG或WebM。您将需要拥有视频文件的三个版本-h.264、OGG和WebM。您可以使用免费的**Switch**程序（[http://www.nch.com.au/switch/index.html](http://www.nch.com.au/switch/index.html)）将文件从一种音频格式转换为另一种。对于视频转换，您可以使用免费的**Online-Convert**程序，可在[http://video.online-convert.com/](http://video.online-convert.com/)下载。
- en: With this as an introduction, let's turn to the specific processes of embedding
    native HTML5 audio and video, in Dreamweaver.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 介绍到此结束，让我们转向在Dreamweaver中嵌入本机HTML5音频和视频的具体过程。
- en: Preparing native audio
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备本机音频
- en: The first thing we need to do, before we can put them on our website, is make
    our audio files HTML5-ready.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们可以将它们放在网站上之前，我们需要做的第一件事是使我们的音频文件准备好HTML5。
- en: Before shifting through various audio formats to figure out which one goes with
    which browser, let me provide a very basic overview of audio compression.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过各种音频格式来确定哪种适用于哪种浏览器之前，让我先提供一个非常基本的音频压缩概述。
- en: Audio compression
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 音频压缩
- en: You probably are familiar with at least some of the popular audio formats such
    as MP3, WAV, AIFF, and so on. Raw, uncompressed audio files, in the WAV (for Windows)
    and AIFF (for Macs) formats, provide the highest available online audio sound
    quality. But these files are very large, and download too slowly for most users.
    MP3 audio files, on the other hand, are substantially smaller in file size.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能对一些流行的音频格式如MP3、WAV、AIFF等有所了解。原始的未压缩音频文件，如WAV（用于Windows）和AIFF（用于Mac），提供了最高的在线音频音质。但这些文件非常大，对大多数用户来说下载速度太慢。另一方面，MP3音频文件的文件大小要小得多。
- en: A compression algorithm is used to squeeze extra data out of files as they are
    converted to MP3\. And for most listeners, and most audio files, MP3 quality is
    sufficient. Thus, when we talk about making audio files available online, we are
    often talking about compressed audio files in formats such as MP3\. Another compressed
    file format is the OGG format.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在转换为MP3格式时，使用压缩算法来从文件中挤出额外的数据。对于大多数听众和大多数音频文件来说，MP3的质量是足够的。因此，当我们谈论在线提供音频文件时，我们通常是指诸如MP3之类的压缩音频文件格式。另一种压缩文件格式是OGG格式。
- en: Browser support for audio files
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览器对音频文件的支持
- en: MP3 and OGG are the two most widely used formats for compressed audio. Since
    uncompressed audio takes much longer to download, compressed audio (MP3 and OGG)
    are preferable for almost all downloadable audio.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: MP3和OGG是两种最广泛使用的压缩音频格式。由于未压缩音频需要更长时间下载，压缩音频（MP3和OGG）几乎适用于所有可下载的音频。
- en: Which compressed audio format works in all browsers? Unfortunately, neither
    one works in all browsers. The five most popular browsers—Internet Explorer, Firefox,
    Chrome, Safari, and Opera—support HTML5 Audio, but different browsers support
    different formats.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 哪种压缩音频格式在所有浏览器中都有效？不幸的是，两者都不在所有浏览器中有效。最受欢迎的五种浏览器——Internet Explorer、Firefox、Chrome、Safari和Opera——都支持HTML5音频，但不同的浏览器支持不同的格式。
- en: 'Which audio formats are supported by which browsers changes over time, but
    at the time of writing this chapter, the breakdown was:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 支持哪些音频格式的浏览器会随时间而变化，但在撰写本章时，情况如下：
- en: 'Internet Explorer 9 and newer: MP3'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Internet Explorer 9及更高版本：MP3
- en: 'Firefox 4.0 and newer: OGG'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Firefox 4.0及更高版本：OGG
- en: 'Google Chrome 6 and newer: Both'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Chrome 6及更高版本：两者
- en: 'Apple Safari 5 and newer: MP3'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apple Safari 5及更高版本：MP3
- en: 'Opera 10.6 and newer: OGG'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Opera 10.6及更高版本：OGG
- en: '[W3Schools.com](http://W3Schools.com) keeps an updated list of browser support
    for audio formats at [http://www.w3schools.com/html/html5_audio.asp](http://www.w3schools.com/html/html5_audio.asp).
    But as exactly as I can predict the future, you''re going to have to provide both
    MP3 and OGG audio if you want to reach the overwhelming majority of users.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[W3Schools.com](http://W3Schools.com)在[http://www.w3schools.com/html/html5_audio.asp](http://www.w3schools.com/html/html5_audio.asp)上保持着音频格式的浏览器支持的更新列表。但是，尽管我尽可能准确地预测未来，如果您想要达到绝大多数用户，您将需要同时提供MP3和OGG音频。'
- en: The most reliable and "standards-compliant" solution for presenting HTML5 audio
    is to provide the option of both the HTML5 compressed audio formats, MP3 and OGG.
    That is the solution we'll explore next.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 呈现HTML5音频的最可靠和“符合标准”的解决方案是提供HTML5压缩音频格式MP3和OGG的选项。这是我们将要探讨的解决方案。
- en: Embedding an HTML5 audio element in a Dreamweaver web page
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Dreamweaver网页中嵌入HTML5音频元素
- en: 'Once we''ve laid the groundwork, we are ready to get started. Use the following
    steps to embed an Audio element into an open Dreamweaver HTML5 page:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们打好了基础，我们就可以开始了。使用以下步骤将音频元素嵌入到一个打开的Dreamweaver HTML5页面中：
- en: In the **Code** part of the **Split** view, place your cursor right after the
    **<body>** tag and hit *Enter* (or *Return* on a Mac) to create a new line of
    code.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**分割**视图的**代码**部分，将光标放在**<body>**标签后，然后按*Enter*（或Mac上的*Return*）创建一行新代码。
- en: Start typing `<au` and press *Tab* and the HTML5 pack will auto-complete that
    into the beginning of the `<audio>` tag, as shown in the following screenshot:![Embedding
    an HTML5 audio element in a Dreamweaver web page](img/4742_05_01.jpg)
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始键入`<au`，然后按*Tab*，HTML5包将自动将其补全为`<audio>`标签的开头，如下面的截图所示：![在Dreamweaver网页中嵌入HTML5音频元素](img/4742_05_01.jpg)
- en: Place your cursor right after the word `audio` and press the *Space bar*. A
    pop-up menu will appear again. Type the letter `s` and then double-click `src`
    in the list. This is code for the source, as in, where the file will come from.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将光标放在单词`audio`后面，然后按下*空格键*。再次会出现一个弹出菜单。键入字母`s`，然后在列表中双击`src`。这是源代码，也就是文件的来源。
- en: When you select `src`, a **Browse** link will appear. Double-click on the **Browse**
    link to open the **Select File** dialog, as shown in the following screenshot:![Embedding
    an HTML5 audio element in a Dreamweaver web page](img/4742_05_02.jpg)
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您选择`src`时，将会出现一个**浏览**链接。双击**浏览**链接打开**选择文件**对话框，如下面的截图所示：![在Dreamweaver网页中嵌入HTML5音频元素](img/4742_05_02.jpg)
- en: Find the audio file you copied before, in our case an MP3 file (but it could
    be WAV or OGG). Select that file by double-clicking on it.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到之前复制的音频文件，在我们的例子中是一个MP3文件（但也可能是WAV或OGG）。通过双击选择该文件。
- en: You want to have a controller, or player, for this audio, so we'll set a parameter
    to display one. Press the *Space bar* again, and this time type `c`, which in
    this case will be for controls. Double-click on **controls**, and then when a
    pop-up box appears, double-click **controls** again, as shown in the following
    screenshot:![Embedding an HTML5 audio element in a Dreamweaver web page](img/4742_05_03.jpg)
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您希望为这个音频添加一个控制器或播放器，所以我们将设置一个参数来显示一个。再次按下*空格键*，这次键入`c`，这在这种情况下将是用于控制。双击**controls**，然后当弹出框出现时，再次双击**controls**，如下面的截图所示：![在Dreamweaver网页中嵌入HTML5音频元素](img/4742_05_03.jpg)
- en: Close the opening `audio` tag by typing `>`.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过键入`>`来关闭开放的`audio`标签。
- en: Finally, type `</` to allow Dreamweaver to auto-complete to `</audio>`, which
    will complete the `audio` element with a closing tag.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，键入`</`，让Dreamweaver自动补全为`</audio>`，这将完成`audio`元素的闭合标签。
- en: 'Now we want to preview the file, which we can only do in Safari or Opera, assuming
    you chose an MP3\. To preview in Safari, navigate to **File** | **Preview in Browser**
    | **Safari**. It should look like the following screenshot:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们想要预览文件，这只能在Safari或Opera中进行，假设您选择了MP3。要在Safari中预览，请导航到**文件** | **在浏览器中预览**
    | **Safari**。它应该看起来像以下截图：
- en: '![Embedding an HTML5 audio element in a Dreamweaver web page](img/4742_05_04.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![在Dreamweaver网页中嵌入HTML5音频元素](img/4742_05_04.jpg)'
- en: If we had used an OGG file, we could do the same steps, but we would now have
    to preview in Firefox instead.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用了OGG文件，我们可以做同样的步骤，但现在我们必须在Firefox中预览。
- en: Alternative audio options
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备用音频选项
- en: 'So now you have audio on your page. But two things are missing:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在您的页面上有音频了。但是还缺少两件事：
- en: First, your audio player doesn't have many special features.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，您的音频播放器没有太多特殊功能。
- en: Second, not everyone who visits the sites will be able to access the audio file.
    You should provide different HTML5-supported audio formats as options for different
    browsing environments since, as we've identified earlier, not all HTML5-friendly
    browsers support the same audio file formats.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其次，并非所有访问网站的人都能访问音频文件。由于我们之前确定，不是所有支持HTML5的浏览器都支持相同的音频文件格式，因此您应该为不同的浏览环境提供不同的HTML5支持的音频格式选项。
- en: Let's start with the challenge of providing alternate audio file formats. As
    we've noted, some HTML5-compliant browsing environments support the MP3 file format,
    others support the OGG format, and remaining support WebM.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从提供备用音频文件格式的挑战开始。正如我们所指出的，一些符合HTML5标准的浏览环境支持MP3文件格式，其他支持OGG格式，剩下的支持WebM。
- en: So, we can make our audio more accessible by providing a second source file.
    That way, an HTML5-compliant browser can find and play the file format that meshes
    with that browser.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以通过提供第二个源文件使我们的音频更易访问。这样，符合HTML5标准的浏览器可以找到并播放与该浏览器相匹配的文件格式。
- en: 'To do this, we''ll vary the HTML we created earlier to separate the player
    control code from the audio source code. The code looks similar to the following
    block of code:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将改变之前创建的HTML，以将播放器控制代码与音频源代码分开。代码看起来类似于以下代码块：
- en: '[PRE0]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the preceding code, you replace `audio.ogg` or `audio.mp3` with your own
    audio filenames.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，您将`audio.ogg`或`audio.mp3`替换为您自己的音频文件名。
- en: For those users whose browsers don't interpret HTML5, such as users of older
    versions of Internet Explorer or users on older browsers, we will want to provide
    an alternative method of accessing the audio. To do this, we can create a link
    to our audio file. If we do this, when the link is clicked the audio file will
    open in its own browser user. The browser will then use a plugin player such as
    QuickTime, Flash, or Windows Media to play the audio file. It is not the most
    elegant solution, but it will work.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些浏览器无法解释HTML5的用户，比如使用较旧版本的Internet Explorer或较旧浏览器的用户，我们将希望提供另一种访问音频的方法。为此，我们可以创建一个链接到我们的音频文件。如果这样做，当链接被点击时，音频文件将在自己的浏览器用户中打开。然后浏览器将使用插件播放器，如QuickTime、Flash或Windows
    Media来播放音频文件。这并不是最优雅的解决方案，但它会起作用。
- en: To do this, we can add a line of code to the HTML we just explored. This line
    of code creates text that will appear in browsers that do not interpret (support)
    the HTML5 `<audio>` tag, and can link to a page that presents audio in a legacy
    format such as QuickTime, Windows Media, or FLV.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们可以在我们刚刚探索的HTML中添加一行代码。这行代码创建的文本将出现在不解释（支持）HTML5`<audio>`标签的浏览器中，并且可以链接到一个页面，该页面以QuickTime、Windows
    Media或FLV等传统格式呈现音频。
- en: 'The code looks similar to the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 代码看起来类似于以下内容：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This last line of code, which begins with `Your browser…`, links to an HTML
    page (`sound.html`) that can be used to present the legacy audio format that will
    play in a plugin software on older browsers.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的最后一行，以`Your browser…`开头，链接到一个HTML页面（`sound.html`），该页面可用于呈现在较旧浏览器上的插件软件中播放的传统音频格式。
- en: Adding play parameters
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加播放参数
- en: Now that (almost) everyone can access our audio, let's look at what other parameters
    we can use to add features to our `audio` element.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在（几乎）每个人都可以访问我们的音频，让我们看看我们可以使用哪些其他参数来为我们的`audio`元素添加功能。
- en: When we added the code `controls="controls"` in defining our source file, we
    added a control parameter. If you played with the controller in Safari when you
    tested it out, you have already discovered that this controller will let us play,
    pause, mute, and restart our MP3\. We can also use the bar, or scrubber, to move
    around in the audio track, rewind, or fast-forward.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在定义我们的源文件中添加了代码`controls="controls"`时，我们添加了一个控制参数。如果您在测试时在Safari中使用控制器，您已经发现这个控制器可以让我们播放、暂停、静音和重新启动我们的MP3。我们还可以使用进度条或快进/快退功能在音轨中移动。
- en: 'There are four significant HTML5 Audio parameters we might want to use. To
    enable each of these parameters, we will want to use the HTML5 code hints the
    same way we did to enable controls:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 有四个重要的HTML5音频参数我们可能想要使用。要启用这些参数中的每一个，我们将想要使用HTML5代码提示，就像我们之前启用控件一样：
- en: '`controls`: This property displays controls to start, pause, stop, or change
    volume in the audio player.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`controls`：此属性在音频播放器中显示控件，以启动、暂停、停止或更改音量。'
- en: '`loop`: This plays the audio file repeatedly, or in a loop. To enable this
    looping, place your cursor after the code `controls="controls"` and press the
    *Space bar* to activate the code hints. Type `l` and then double-click on `loop`
    to add the `loop` code .'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`loop`：这会重复播放音频文件，或者循环播放。要启用循环播放，将光标放在代码`controls="controls"`之后，按下*空格键*以激活代码提示。输入`l`，然后双击`loop`以添加`loop`代码。'
- en: '`autoplay`: This starts the audio file immediately when someone opens the page,
    as opposed to the viewer having to press **Play**, the way we did with the controller.
    You can have both `loop` and `autoplay` enabled at the same time. To make the
    audio play automatically, place your cursor after the code `controls="controls"`
    and press the *Space bar* to activate the code hints. Double-click on `autoplay`
    to add the code `autoplay =""`. For autoplaying an audio file, you don''t need
    to put anything between the quotation marks in the code, the way we did with `controls`
    and `loop`. Just adding the code enables it, as shown in the following screenshot:![Adding
    play parameters](img/4742-05_05.jpg)'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autoplay`：这会在有人打开页面时立即开始播放音频文件，而不是观看者必须按下**播放**按钮，就像我们在控制器上所做的那样。您可以同时启用`loop`和`autoplay`。要使音频自动播放，请将光标放在代码`controls="controls"`之后，按*空格键*以激活代码提示。双击`autoplay`以添加代码`autoplay
    =""`。对于自动播放音频文件，您不需要在代码中的引号之间放任何内容，就像我们在`controls`和`loop`中所做的那样。只需添加代码即可启用它，如下面的屏幕截图所示：![添加播放参数](img/4742-05_05.jpg)'
- en: Note
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Mobile devices (including iOS Apple devices) and some versions of Android mobile
    operating system do not support `autoplay`, which argues for including `controls`.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 移动设备（包括iOS苹果设备）和某些版本的Android移动操作系统不支持`autoplay`，这就需要包括`controls`。
- en: '`preload`: This property starts downloading the audio file when the page is
    open, before **Play** is clicked. This is not relevant if we''re using `autoplay`,
    since it will load immediately either way, but when we are not using `autoplay`,
    it allows the audio file to launch quicker when a visitor clicks **Play**. I recommend
    not using this option since it delays the opening of a page in many mobile environments.
    If you want to preload the track, once again you just place your cursor after
    the code `controls="controls"` and press the *Space bar* to activate the code
    hints. Type `p` and then double-click `preload`, and then double-click on `auto`
    to add the code `preload="auto"`.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`preload`：此属性在打开页面时开始下载音频文件，而不必点击**播放**。如果我们使用`autoplay`，这就不相关了，因为它无论如何都会立即加载，但是当我们不使用`autoplay`时，它允许访问者在点击**播放**时更快地启动音频文件。我建议不要使用此选项，因为它会延迟在许多移动环境中打开页面。如果要预加载音轨，只需将光标放在代码`controls="controls"`之后，按*空格键*以激活代码提示。键入`p`，然后双击`preload`，然后双击`auto`以添加代码`preload="auto"`。'
- en: 'There are two other possible variables for the `preload` property: `none` and
    `metadata`. The `none` variable specifies explicitly not to preload the file,
    while `metadata` specifies to just preload the metadata information (for example,
    information about song title, author, and so on of an audio file).'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`preload`属性还有另外两个可能的变量：`none`和`metadata`。`none`变量明确指定不预加载文件，而`metadata`指定仅预加载元数据信息（例如，音频文件的歌曲标题、作者等信息）。'
- en: You can enable multiple parameters at the same time. Just press *Space bar*
    after the code `controls="controls"` each time to activate HTML5 code hints, and
    then repeat for whatever other code you want. So you can have a track that autoplays
    and loops too, for example.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以同时启用多个参数。只需在代码`controls="controls"`之后每次按下*空格键*以激活HTML5代码提示，然后重复其他代码。因此，您可以有一个自动播放和循环的音轨，例如。
- en: Remember what will make the most sense for the audio you have and the preferences
    of visitors to your site. Keep in mind that many visitors will not appreciate
    sound automatically playing when they enter the main page of your site. They may
    be at work, or may just not want the sound on. Unless it is a linked page they
    expect sound on, it is more considerate to your visitors to have audio be something
    they can choose to turn on, rather than something they must choose to turn off.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，要根据您拥有的音频和访问者对您网站的偏好来选择最合适的内容。请记住，许多访问者不希望在他们进入网站的主页时自动播放声音。他们可能正在工作，或者可能不希望开启声音。除非是他们期望有声音的链接页面，否则对于您的访问者来说，让音频成为他们可以选择打开的内容，而不是他们必须选择关闭的内容，更加体贴。
- en: Embedding HTML5 audio
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嵌入HTML5音频
- en: In the following section, we'll walk through, step-by-step, how to embed an
    MP3 audio file using the HTML5 Audio element, and provide an option for visitors
    whose browsers do not support HTML5\. I'll assume you are working in a Dreamweaver
    site and that you have a file open, saved as an HTML5 web page (saving the file
    first is important to ensure the integrity of the link to the audio file). And,
    that you have an MP3 audio file ready to embed.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将逐步介绍如何使用HTML5音频元素嵌入MP3音频文件，并为那些浏览器不支持HTML5的访问者提供选项。我假设您正在Dreamweaver网站上工作，并且已经打开了一个文件，保存为HTML5网页（首先保存文件非常重要，以确保与音频文件的链接的完整性）。而且，您已经准备好要嵌入的MP3音频文件。
- en: 'With those pieces in place, these steps will work:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些部分放在一起，这些步骤将起作用：
- en: In the Dreamweaver Document window, jump into **Split** view, and in the **Code**
    side of the **Split** view, click where you wish to create a new line of code.
    This can be anywhere in between the `<body>` and `</body>` tags.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Dreamweaver文档窗口中，切换到**分割**视图，在**分割**视图的**代码**侧，单击要创建新代码行的位置。这可以是在`<body>`和`</body>`标签之间的任何位置。
- en: Start typing `<audio>`. A couple of letters into the process, you can press
    the *Tab* key to complete the beginning of the element. Then press your *Space
    bar*.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始输入`<audio>`。在过程中输入几个字母后，您可以按*Tab*键来完成元素的开头。然后按下*空格键*。
- en: Double-click on **src** from the pop-up list, as shown here. A **Browse** link
    appears:![Embedding HTML5 audio](img/4742-05_06.jpg)
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**src**，如图所示。将出现一个**浏览**链接：![嵌入HTML5音频](img/4742-05_06.jpg)
- en: Double-click on the **Browse** link to open the **Select File** dialog and navigate
    to and choose the MP3 audio file.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**浏览**链接以打开**选择文件**对话框，然后导航到并选择MP3音频文件。
- en: Press the *Space bar* again, and double-click on **controls** in the code hints
    that appear. Double-click on **controls** again in the next code hint.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次按下*空格键*，并在出现的代码提示中双击**controls**。然后在下一个代码提示中再次双击**controls**。
- en: Type `</` and Dreamweaver will complete the closing element `</audio>`.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 键入`</`，Dreamweaver将完成关闭元素`</audio>`。
- en: Now, to support non-HTML browsers, add a line of text on your web page with
    a link to the audio file you just embedded with the HTML5 `<audio>` tag. To do
    that, locate an insertion point (click with your mouse in the code side of **Split**
    view, just before the `</audio>` code that closes the Audio element. Type a closing
    angle bracket (`>`) to complete the element. Then type `Listen to the audio file`
    as regular HTML text, and use the **Properties** inspector to attach a link to
    the audio file for the text you embedded with the HTML5 `<audio>` tag.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了支持非HTML浏览器，在您的网页上添加一行文本，其中包含一个链接，链接到您刚刚使用HTML5 `<audio>`标签嵌入的音频文件。要做到这一点，找到一个插入点（在**分割**视图的代码侧面点击鼠标，就在关闭音频元素的`</audio>`代码之前）。键入一个闭合的尖括号（`>`）来完成元素。然后键入`Listen
    to the audio file`作为常规HTML文本，并使用**属性**检查器将音频文件链接到您使用HTML5 `<audio>`标签嵌入的文本。
- en: Tip
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: This code provides seamless HTML5 audio for HTML5-enabled browsers that can
    handle MP3 files, and a link to the MP3 file for everyone else.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码为支持HTML5的浏览器提供了无缝的HTML5音频，可以处理MP3文件，并为其他所有人提供了MP3文件的链接。
- en: Embedding native video
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嵌入本机视频
- en: Next, we will learn how to add different kinds of video to web pages using HTML5
    and Dreamweaver.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习如何使用HTML5和Dreamweaver向网页添加不同类型的视频。
- en: 'Online video is undergoing a radical evolution. Those changes can be very briefly
    summed up as the following: you don''t need a plugin player anymore. Dreamweaver
    provides limited but valuable support for embedding this native video (so-called
    because it plays in the native browser environment without plugins).'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在线视频正在经历一场彻底的演变。这些变化可以非常简要地总结为以下几点：您不再需要插件播放器。Dreamweaver为嵌入本机视频（所谓的因为它在本机浏览器环境中播放，无需插件）提供了有限但有价值的支持。
- en: 'We will learn how to use the HTML5 video element through several steps:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过几个步骤学习如何使用HTML5视频元素：
- en: Understanding the concept of native video, and how it relates to early evolutionary
    steps in the development of web video and also, which video formats work in which
    browsers.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解本机视频的概念，以及它与网络视频发展的早期演变步骤有关，还有哪种视频格式适用于哪种浏览器。
- en: Creating HTML5-ready digital video files.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建HTML5就绪的数字视频文件。
- en: Using the `<video>` tag to embed video with Dreamweaver.
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`<video>`标签在Dreamweaver中嵌入视频。
- en: Providing alternative options for non-HTML5 compatible browsers.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为不兼容HTML5的浏览器提供替代选项。
- en: Defining additional video display parameters.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义额外的视频显示参数。
- en: Tip
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: We need to do each of these steps to make sure that the HTML5 video we include
    in our site will work in every browsing environment.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要完成这些步骤，以确保我们网站中包含的HTML5视频在每个浏览环境中都能正常工作。
- en: HTML5 video and Dreamweaver
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML5视频和Dreamweaver
- en: To understand the challenges of presenting online video today, it is illuminating
    to frame things in the evolution of web video to this point. For one thing, older
    web videos are still an issue, as are older browsers. We have to address the challenge
    of presenting video in both new browsers that support current standards, and older
    browsers that do not.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解当今呈现在线视频的挑战，将事物框架化为迄今为止网络视频的演变是很有启发性的。首先，旧的网络视频仍然是一个问题，旧的浏览器也是一个问题。我们必须解决在支持当前标准的新浏览器和不支持的旧浏览器中呈现视频的挑战。
- en: Moreover, the current rather crazy state of competing online video formats won't
    make much sense without being anchored in an understanding of how this current
    state of things emerged.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，没有对竞争在线视频格式的当前相当疯狂的状态进行锚定，就很难理解这一切是如何出现的。
- en: To sort all this out, it is useful to divide emergent online video into three
    phases.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决所有这些问题，将新兴的在线视频分为三个阶段是有用的。
- en: Early video formats
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 早期视频格式
- en: The first stage of online video was characterized by a diffusion of different,
    non-compatible video formats and players. Apple's QuickTime video played in QuickTime
    player, which came with Apple's Safari browser. Microsoft's Internet Explorer
    played various Microsoft video formats such as AVI or WMF. Typically, web designers
    included QuickTime video in a site with the expectation that only users on Macs
    would be able to see the video, or included Windows Media Formats such as WMV
    or AVI, with the expectation that only users with Windows Media Player (appropriately
    updated) could handle the video. During this phase, other formats, such as RealMedia's
    video and player gained traction for a time.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在线视频的第一个阶段的特点是不同的、不兼容的视频格式和播放器的扩散。苹果的QuickTime视频在QuickTime播放器中播放，该播放器随苹果的Safari浏览器一起提供。微软的Internet
    Explorer播放各种微软视频格式，如AVI或WMF。通常，网页设计师在网站中包含QuickTime视频，期望只有Mac用户能够看到视频，或者包含Windows
    Media格式，如WMV或AVI，期望只有安装了适当更新的Windows Media Player的用户能够处理视频。在这个阶段，其他格式，如RealMedia的视频和播放器，在一段时间内也获得了一定的影响力。
- en: In this early phase, the lack of a single online video format was one marginalizing
    factor impacting web video. In addition, the absence of a critical mass of users
    with high-speed connections made online video less attractive. Low quality video
    and audio display in laptops and digital devices was another factor. Web video
    from being the integral component of websites that it is today and a corresponding
    lack of quality online video content made web video something of a marginal element
    in web design.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期阶段，缺乏单一的在线视频格式是影响网络视频的边缘化因素之一。此外，缺乏大量使用高速连接的用户使在线视频变得不那么吸引人。在笔记本电脑和数字设备上显示低质量的视频和音频也是另一个因素。网络视频从今天的网站的组成部分，以及相应缺乏高质量的在线视频内容，使网络视频成为网页设计中的边缘元素。
- en: 'Culturally and technically, web video was, at this point, something of an "outsider"
    in web browsing experience—requiring long waits for downloads, and explanation
    to users on how to watch video, as illustrated in the following site that I created
    for the Himalayan Fair in 2002:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 从文化和技术上讲，网络视频在这一点上是一种“局外人”，需要长时间等待下载，并向用户解释如何观看视频，正如我在2002年为喜马拉雅集市创建的以下网站所示：
- en: '![Early video formats](img/4742_05_07.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![早期视频格式](img/4742_05_07.jpg)'
- en: In terms of HTML and Dreamweaver technique, the `<embed>` tag was used to place
    video on a page. This tag allowed some designer control over player controls and
    other parameters (such as `autoplay`) but how (and if) the video played was mainly
    defined by a user's browser, and the plugins he/she had installed in that browser.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML和Dreamweaver技术方面，`<embed>`标签用于在页面上放置视频。这个标签允许设计师对播放器控件和其他参数（如`autoplay`）进行一些控制，但视频的播放方式（以及是否播放）主要由用户的浏览器定义，以及他/她在该浏览器中安装的插件。
- en: Flash video (FLV)
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Flash视频（FLV）
- en: Phase two in the evolution of online video, as we're delineating things here,
    marked the integration of video into every realm of every kind of website.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们这里划分的在线视频演变的第二阶段标志着视频融入到每种网站的每个领域中。
- en: One critical factor in the move of video into the mainstream on the web was
    the emergence of Adobe's **Flash Video** (**FLV** ) format and the widespread
    acceptance of Flash Player. FLV presents video in a highly compressed form—radically
    reducing file size (often by half compared to QuickTime) while maintaining good
    video and audio quality.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 视频进入网络主流的一个关键因素是Adobe的Flash Video（FLV）格式的出现和Flash Player的广泛接受。FLV以高度压缩的形式呈现视频，大大减小了文件大小（通常比QuickTime小一半），同时保持良好的视频和音频质量。
- en: 'FLV files required the Flash Player, but during this phase of the Web, installation
    of the Flash Player was almost universal. Dreamweaver, particularly in CS4 and
    CS5, included nice, customizable menu-driven Flash Player design tools. Dreamweaver
    designers could choose from a variety of Flash Player skins as they embedded Flash
    Video. The following screenshot shows a minimalist player skin:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: FLV文件需要Flash Player，但在这个Web的阶段，几乎每个人都安装了Flash Player。特别是在CS4和CS5中，Dreamweaver包括了漂亮、可定制的基于菜单驱动的Flash
    Player设计工具。Dreamweaver设计师可以在嵌入Flash视频时从各种Flash播放器皮肤中进行选择。下面的截图显示了一个极简主义的播放器皮肤：
- en: '![Flash video (FLV)](img/4742_05_08.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![Flash video (FLV)](img/4742_05_08.jpg)'
- en: Intersecting with the rise of FLV and near-universal support for the Flash Player
    was the availability of high speed Internet connections, and the proliferation
    of video content. The instant popularity of YouTube, which featured FLV videos,
    was an expression of and an engine of these phenomena. These developments, which
    are still a major element of web video, transformed web video from marginal to
    mainstream.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 与FLV的崛起和对Flash Player的几乎普遍支持相交汇的是高速互联网连接的可用性和视频内容的大量增加。YouTube的即时流行，其中包括FLV视频，是这些现象的表达和推动力。这些发展，仍然是网络视频的一个重要元素，将网络视频从边缘转变为主流。
- en: In terms of HTML and Dreamweaver, FLV would be embedded in pages using the `<object>`
    tag. But the appearance of the video player and the properties of parameters such
    as autoplay or looping are defined in the **Properties** panel in Dreamweaver's
    **Document** window for a selected FLV video.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML和Dreamweaver方面，FLV将被嵌入页面中使用`<object>`标签。但视频播放器的外观以及参数的属性（如自动播放或循环）是在Dreamweaver的**文档**窗口中的**属性**面板中为所选的FLV视频定义的。
- en: The main disadvantage of using FLV video is that it is not supported on the
    iPhone, iPod Touch, or iPad (or iPods). I'll explain how that situation developed
    next, along with the implications for web designers using video.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 使用FLV视频的主要缺点是它不受iPhone、iPod Touch或iPad（或iPod）的支持。接下来我将解释这种情况是如何发展的，以及对使用视频的网页设计师的影响。
- en: Apple devices and web video
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 苹果设备和网络视频
- en: 'The parameters of online video—with Flash Video as the cohering element—seemed
    defined, relatively stable, and globally accepted. Until...Steve Jobs published
    "Thoughts on Flash" in April, 2010\. The essence of that letter was stating and
    making permanent Apple''s position that it would never support the Flash Player
    on its i-gadgets:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在线视频的参数，以Flash Video作为凝聚元素，似乎是明确的、相对稳定的，并且被全球接受。直到...2010年4月，史蒂夫·乔布斯发表了《关于Flash的想法》。这封信的核心是阐明并永久确立了苹果公司的立场，即它永远不会在其i设备上支持Flash
    Player：
- en: '"The mobile era is about low power devices, touch interfaces, and open web
    standards—all areas where Flash falls short. The avalanche of media outlets offering
    their content for Apple''s mobile devices demonstrates that Flash is no longer
    necessary to watch video or consume any kind of web content."'
  id: totrans-114
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “移动时代是关于低功耗设备、触摸界面和开放网络标准的，这些都是Flash的短板。提供其内容给苹果移动设备的媒体机构的大量增加表明，Flash不再是观看视频或消费任何类型的网络内容的必要条件。”
- en: 'This decision came at a time when, despite Jobs'' pronouncement, the bulk of
    online video, at sites such as Hulu and YouTube, for example, was in Flash Video.
    And people who tried to watch video from these sites typically got messages like
    the one shown in the following screenshot:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这个决定是在乔布斯宣布之际做出的，尽管如此，例如在Hulu和YouTube等网站上，大部分在线视频仍然是Flash Video。试图观看这些网站上的视频的人通常会收到如下截图中所示的消息：
- en: '![Apple devices and web video](img/4742_05_09.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![苹果设备和网络视频](img/4742_05_09.jpg)'
- en: Apple threw its considerable weight behind the `h.264` format for packaging
    compressed video. This format essentially uses the same compression technology
    as Flash Video, but comes in a package that adapts player display and controls
    from a browser, not from a plugin player.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果公司全力支持`h.264`格式来打包压缩视频。这种格式本质上使用了与Flash Video相同的压缩技术，但它是通过浏览器而不是插件播放器来适应播放器的显示和控制。
- en: Setting aside the power politics and economics dimensions of this decision,
    the essential technical and design issues were that Apple did not want to expand
    limited energy resources in their digital devices on the Flash Player, and Apple
    argued that video players should be "native" to viewing environments, rather than
    global cross-platform interfaces like those in the Flash Player (that look essentially
    the same on every operating system and browser).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 撇开这个决定的权力政治和经济维度不谈，基本的技术和设计问题是苹果不希望在其数字设备上扩展有限的能源资源在Flash Player上，并且苹果认为视频播放器应该是“本地的”，而不是像Flash
    Player中那样在每个操作系统和浏览器上看起来基本相同的全球跨平台界面。
- en: Within a year of Apple's announcement, the critical mass in providing online
    video had begun to tip towards native video. But FLV remains widely distributed
    online. Thus, web designers using Dreamweaver face the challenge of embedding
    native video.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在苹果宣布之后的一年内，提供在线视频的关键群体已经开始向本机视频倾斜。但FLV仍然广泛分布在网上。因此，使用Dreamweaver的网页设计师面临着嵌入本机视频的挑战。
- en: Preparing native video files
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备本机视频文件
- en: Native video is presented in HTML5 with the `<video>` element (tag). Accomplishing
    that is our mission in this chapter, and shortly, we'll explore tools available
    in Dreamweaver for embedding video using that tag.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 本机视频是以HTML5的`<video>`元素（标签）呈现的。在本章中，我们的任务就是实现这一点，并很快我们将探讨Dreamweaver中用于嵌入视频的工具。
- en: Before we do that, let's identify the two big challenges to developers in providing
    native video. One is that there is not one but three native video formats. The
    second challenge is that older versions of Internet Explorer (8 and earlier) do
    not support the HTML5 `<video>` element.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们做到这一点之前，让我们确定开发者在提供本机视频时面临的两个主要挑战。一个是不只有一个本机视频格式，而是有三种。第二个挑战是旧版本的Internet
    Explorer（8及更早版本）不支持HTML5的`<video>`元素。
- en: Native video formats
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本机视频格式
- en: 'The three most widely supported native video formats are: MP4 (h.264), supported
    by Safari; Theora OGG, an open source video format supported by Mozilla Firefox;
    and WebM, supported by Google Chrome, Opera, and reportedly soon in Firefox.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 三种最广泛支持的本机视频格式是：MP4（h.264），由Safari支持；Theora OGG，由Mozilla Firefox支持的开源视频格式；以及WebM，由Google
    Chrome、Opera支持，并据报道很快也会在Firefox中支持。
- en: 'The following is a more detailed breakdown of which browsers currently support
    which video formats:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是当前支持哪种视频格式的浏览器的更详细的分析：
- en: 'Ogg: Firefox, Chrome, Opera 10.5+'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ogg：Firefox，Chrome，Opera 10.5+
- en: 'h.264 (MP4): Internet Explorer 9+, Safari, older versions of Chrome, Apple''s
    mobile devices, Android devices'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: h.264（MP4）：Internet Explorer 9+，Safari，旧版本的Chrome，苹果移动设备，安卓设备
- en: 'WebM: Chrome 6+, Opera 10.6+'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WebM：Chrome 6+，Opera 10.6+
- en: But keep in mind, all this is a moving target.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 但请记住，所有这些都是一个不断变化的目标。
- en: As you can see, there is no video format supported by all major browsers. And
    in particular, Firefox and Chrome (with a combined substantial share of the browser
    market) do not support the `h.264` video format.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，没有一种视频格式被所有主要浏览器支持。特别是，Firefox和Chrome（在浏览器市场上占有相当大的份额）不支持`h.264`视频格式。
- en: We will solve this challenge by providing alternate videos, all with the same
    parameters (location, player control display, and so on).
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过提供具有相同参数（位置、播放器控制显示等）的备用视频来解决这一挑战。
- en: Browsers that do NOT support HTML5
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不支持HTML5的浏览器
- en: Providing alternate video formats will solve the problem of making our native
    video display in all HTML5 browsers. But older visions of Internet Explorer (pre-IE
    9) do not support HTML5!
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 提供备用视频格式将解决我们的本机视频在所有HTML5浏览器中显示的问题。但是旧版本的Internet Explorer（IE 9之前）不支持HTML5！
- en: In the course of walking through the nits and grits of embedding native video,
    we'll build in backup support for browsers that do not support the HTML5 `<video>`
    tag. We'll do that by making a version of our video available in the FLV format.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论嵌入本机视频的细节时，我们将为不支持HTML5的浏览器构建备用支持。我们将通过制作FLV格式的视频版本来实现这一点。
- en: Preparing HTML5 video for every scenario
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为每种情况准备HTML5视频
- en: If you choose to provide only one of the available popular video formats for
    the Web, you are going to exclude a large chunk of people from seeing your video.
    For example, if you elect to use the `h.264` format supported on Apple mobile
    devices, that video cannot be viewed by the 30 percent or so of all users who
    are navigating the Web with Firefox. Conversely, if you provide Flash Video (FLV),
    your video can be watched in Firefox, but not by the highly-valued 5 percent of
    web browsers browsing on their i-devices.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择只提供Web上可用的一种流行视频格式，你将排除很大一部分人观看你的视频。例如，如果你选择在苹果移动设备上支持的`h.264`格式，那么大约30%的用户无法在Firefox上观看该视频。相反，如果你提供Flash视频（FLV），你的视频可以在Firefox中观看，但不能被5%的在i设备上浏览网页的用户观看。
- en: Our challenge, then, is to supply fast-downloading, compressed web video that
    is supported in *every* browser (or at least every significant browsing environment).
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的挑战是提供快速下载、压缩的网络视频，在*每个*浏览器（或至少是每个重要的浏览环境）中都得到支持。
- en: No problem! By the end of this chapter, you'll be able to do just that in Dreamweaver.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 没问题！在本章结束时，你将能够在Dreamweaver中做到这一点。
- en: Compressing video for the Web
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Web压缩视频
- en: Let's go back to our earlier discussion of the evolution of video for the Web.
    A key link in the chain was the development of powerful, effective compression
    for web video. It might be helpful to explain very briefly how this works.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到之前讨论的网络视频发展。链条中的一个关键环节是为网络视频开发强大、有效的压缩技术。简要解释一下这是如何工作的可能会有所帮助。
- en: Video animation—whether digital or old school analog (such as films)—is presented
    in frames. The more frames displayed per second, the smoother the animation.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 视频动画——无论是数字的还是老式的模拟（比如电影）——都是以帧的形式呈现的。每秒显示的帧数越多，动画就越流畅。
- en: Video compression reduces the size of a digital video not by reducing the number
    of frames, but by rationalizing the way frame data is saved. Say, for example,
    that you have a video of a person speaking against a background. It might well
    be the case that the background doesn't change throughout the video. Video compression
    software compacts the digital data necessary to present that video by organizing
    the data used to depict the background in such a way that it does not have to
    be repeated for each frame of the video.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 视频压缩通过合理化帧数据保存的方式来减小数字视频的大小，而不是减少帧数。例如，假设你有一个人在背景下说话的视频。也许在整个视频中背景都没有变化。视频压缩软件通过组织用于描绘背景的数据的方式来紧缩呈现该视频所需的数字数据，这样就不必为视频的每一帧重复这些数据。
- en: Note
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: I'm using a very simple example here to help make a point, but the point is
    more broadly applicable, even to video with more complex backgrounds. And, as
    a general rule of thumb, compression reduces file size by about half, while maintaining
    the original quality.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这里使用了一个非常简单的例子来帮助阐明一个观点，但这个观点更广泛地适用于更复杂背景的视频。而且，作为一个一般的经验法则，压缩可以将文件大小减少约一半，同时保持原始质量。
- en: 'In a typical workflow, you might start with video files in QuickTime''s MOV
    format (or Microsoft''s AVI format). These videos, straight from a video camera,
    or from video editing software, are not compressed. They could be presented directly
    online except that:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的工作流程中，您可能会从QuickTime的MOV格式（或Microsoft的AVI格式）开始处理视频文件。这些视频直接来自视频摄像机，或者来自视频编辑软件，都是未经压缩的。它们可以直接在线呈现，除非：
- en: They are unnecessarily large and double the download time
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们是不必要的大，会使下载时间翻倍。
- en: Not all of them are supported by browsers unless those browsers have plugins
    added, and we're trying to get away from that
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除非浏览器添加了插件，否则并非所有浏览器都支持它们，而我们正试图摆脱这一点
- en: So, after you or someone else has created video in an uncompressed format, a
    key step in the process of preparing that video for the Web is to compress it.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在您或其他人以无压缩格式创建视频之后，为了准备将该视频用于Web，过程中的关键一步是对其进行压缩。
- en: Video compression – open source and proprietary
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 视频压缩-开源和专有
- en: 'The four most popular compressed digital video formats used on the Web are
    roughly divided into two groups: open source, and proprietary. Proprietary formats
    are owned and licensed, while open source formats are free to the public.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web上使用的四种最流行的压缩数字视频格式大致分为两组：开源和专有。专有格式是有所有权和许可的，而开源格式对公众免费。
- en: WebM and Ogg Theora are free, open source video formats. To create them, you
    can use a variety of free encoding programs.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: WebM和Ogg Theora是免费的开源视频格式。要创建它们，您可以使用各种免费编码程序。
- en: Flash Video (FLV) and h.264 are not open source but proprietary. To generate
    them, we can use Adobe Media Encoder.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Flash Video (FLV)和h.264不是开源的，而是专有的。要生成它们，我们可以使用Adobe Media Encoder。
- en: While creating four additional (compressed) versions of an original uncompressed
    video (from a QuickTime or Windows Media format) is a bit of a hassle, it's doable.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然创建原始无压缩视频的四个额外（压缩）版本（来自QuickTime或Windows Media格式）有点麻烦，但是可以做到。
- en: Converting video to web formats with open source tools
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用开源工具将视频转换为Web格式
- en: There are a number of free downloadable applications that convert your (raw)
    QuickTime or Windows Media files to compressed Theora OGG or WebM.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多免费可下载的应用程序，可以将您的（原始的）QuickTime或Windows Media文件转换为压缩的Theora OGG或WebM。
- en: Note
  id: totrans-156
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: I'm currently using one called **Miro Video Converter** ([www.mirovideoconverter.com](http://www.mirovideoconverter.com)),
    a nice, free downloadable application.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我目前正在使用一个叫做**Miro Video Converter**的应用程序（[www.mirovideoconverter.com](http://www.mirovideoconverter.com)），这是一个不错的，免费可下载的应用程序。
- en: 'Whichever free video compression application you end up using, the process
    involves two steps: adding your video to the cache to be converted, and choosing
    an output format (such as `h.264`), as shown in the following screenshot (in this
    case with Miro Video Converter):'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您最终使用哪个免费视频压缩应用程序，该过程都包括两个步骤：将视频添加到缓存以进行转换，并选择输出格式（例如`h.264`），如下面的屏幕截图所示（在这种情况下是使用Miro
    Video Converter）：
- en: '![Converting video to web formats with open source tools](img/4742_05_10.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![使用开源工具将视频转换为Web格式](img/4742_05_10.jpg)'
- en: Of course, those two general steps will be performed differently depending on
    which open source video conversion program you end up using. In general, these
    free video compression applications are pretty no-frills. They don't provide options
    for editing, resizing, or tweaking the quality of compressed video. Thus, I advise
    using them to convert the open source versions of your web video (Theora OGG and
    WebM), but not the Flash Video (FLV) and h.264 (MP4) version of your video.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这两个一般步骤将根据您最终使用的开源视频转换程序而有所不同。一般来说，这些免费视频压缩应用程序非常简单。它们不提供编辑、调整大小或调整压缩视频质量的选项。因此，我建议使用它们来转换您的Web视频的开源版本（Theora
    OGG和WebM），而不是Flash视频（FLV）和h.264（MP4）版本的视频。
- en: For that, I suggest taking advantage of Adobe Media Encoder that ships with
    nearly every version of Creative Suite.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我建议利用几乎每个Creative Suite版本都附带的Adobe Media Encoder。
- en: Dreamweaver site management for HTML5 video
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Dreamweaver网站管理HTML5视频
- en: Now, having explored the process of preparing video for HTML5, let's briefly
    examine how to prepare to take maximum advantage of Dreamweaver in this process.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，经过探讨了为HTML5准备视频的过程，让我们简要地看一下如何准备充分利用Dreamweaver在这个过程中的优势。
- en: There are two ways Dreamweaver will assist in embedding HTML5 video. One way,
    which we'll get to shortly, is that Dreamweaver will provide helpful code hints
    that facilitate creating the HTML5 code we need.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver在嵌入HTML5视频方面有两种方式。一种方式是，Dreamweaver将提供有用的代码提示，以便更轻松地创建我们需要的HTML5代码。
- en: But the other value of Dreamweaver in this process is that the site management
    tools will keep track of all the files we need, and most importantly, maintain
    the integrity of links we create between embedded video and the other files (CSS,
    possible JavaScript, embedded images, and so on) needed to make our page work
    properly in browsers.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 但Dreamweaver在这个过程中的另一个价值在于，网站管理工具将跟踪我们需要的所有文件，最重要的是，维护我们在嵌入视频和其他文件（CSS，可能的JavaScript，嵌入式图像等）之间创建的链接的完整性，以便在浏览器中正确地运行我们的页面。
- en: 'So, as a critical next step, make sure you are working in a Dreamweaver website.
    As we''ve addressed this in previous chapters, we will review the bare-bones basics
    involved in doing that here in three easy steps:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，作为一个关键的下一步，请确保您正在使用Dreamweaver网站。正如我们在之前的章节中所讨论的，我们将在这里以三个简单的步骤回顾涉及其中的基本知识：
- en: If you are not working in a defined Dreamweaver site, navigate to **Site** |
    **New Site**. In the **Site Setup** dialog, give your new site a name and define
    a local site folder. Doing this defines a Dreamweaver site. Defining the Servers
    element of a site is not essential to embedding HTML5 video in Dreamweaver web
    pages, but defining the local site is.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您没有在定义的 Dreamweaver 站点中工作，请导航到 **Site** | **New Site**。在 **Site Setup** 对话框中，为您的新站点命名并定义一个本地站点文件夹。这样可以定义一个
    Dreamweaver 站点。在 Dreamweaver 网页中嵌入 HTML5 视频并不需要定义站点的服务器元素，但是定义本地站点是必要的。
- en: Now create a new file, and save it within your defined site. To do that, navigate
    to **File** | **New** to open the **New Document** dialog. Select **Blank Page**
    in the **Category** column, **HTML** in the **Page Type** column, and **<none>**
    in the **Layout** column. Select **HTML5** from the **Doc Type** popup. Click
    on **Create** to create a new, blank Dreamweaver page.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在创建一个新文件，并将其保存在您定义的站点中。为此，导航到 **File** | **New** 以打开 **New Document** 对话框。在
    **Category** 列中选择 **Blank Page**，在 **Page Type** 列中选择 **HTML**，在 **Layout** 列中选择
    **<none>**。从 **Doc Type** 弹出菜单中选择 **HTML5**。单击 **Create** 创建一个新的空白 Dreamweaver
    页面。
- en: For good housekeeping purposes to avoid the **Untitled** page title, enter a
    title in the **Title** area of the **Document** window (this can be any descriptive
    text).
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了避免 **Untitled** 页面标题，输入 **Document** 窗口中的 **Title** 区域中的标题（可以是任何描述性文本）是一个很好的管理方式。
- en: Navigate to **File** | **Save** and assign a filename.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 **File** | **Save** 并分配一个文件名。
- en: Tip
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: By saving a file, we will be able to link a video using relative paths.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 通过保存文件，我们将能够使用相对路径链接视频。
- en: Defining the HTML5 <video> element
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 定义 HTML5 的 <video> 元素
- en: Once you've prepared a Dreamweaver site, and created h.264, OGG, WebM, and FLV
    versions of your video, you have all the elements you need to embed native HTML5
    video, and provide an alternative for browsers without support for HTML5.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您准备好了 Dreamweaver 站点，并创建了视频的 h.264、OGG、WebM 和 FLV 版本，您就拥有了嵌入本机 HTML5 视频和为不支持
    HTML5 的浏览器提供替代方案所需的所有元素。
- en: In the following steps, you'll complete the process of placing video in an HTML5
    web page.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的步骤中，您将完成在 HTML5 网页中放置视频的过程。
- en: 'We can''t, regrettably, do this in **Design** view. Dreamweaver does not have
    **Design** view menu options for embedding HTML5 native video. But we can take
    advantage of two useful features in Dreamweaver''s **Document** window: **Code
    hinting** and **Split view**. Code hinting will help us generate the HTML5 code
    we need, and Split view will allow us to preview at least some of the possible
    ways visitors will see our video as we create it.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 遗憾的是，我们无法在 **Design** 视图中进行这项操作。Dreamweaver 没有用于嵌入 HTML5 本机视频的 **Design** 视图菜单选项。但是我们可以利用
    Dreamweaver **Document** 窗口中的两个有用功能：**Code hinting** 和 **Split view**。代码提示将帮助我们生成所需的
    HTML5 代码，而分割视图将允许我们在创建视频时预览访问者可能看到视频的一些可能方式。
- en: Prerequisites
  id: totrans-177
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 先决条件
- en: 'In order to review and re-emphasize the things, you need the following in place
    before creating HTML5 video in Dreamweaver:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 为了复习和重申这些事项，您在创建 Dreamweaver 中的 HTML5 视频之前需要以下准备：
- en: You should have prepared an h.264 (mp4); Theora (OGG); WebM (webm) and Flash
    Video (FLV) version of your video. You can elect to provide support for just one,
    or some of the first three HTML5-compatible formats. If you provide support for
    h.264 and OGG, you will have almost all modern browsers covered.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您应该已经准备好了您视频的 h.264（mp4）；Theora（OGG）；WebM（webm）和 Flash 视频（FLV）版本。您可以选择为前三种 HTML5
    兼容格式中的一种或多种提供支持。如果您为 h.264 和 OGG 提供支持，几乎可以覆盖所有现代浏览器。
- en: You must create a Dreamweaver site and have an open page in the Dreamweaver
    **Document** window saved as an HTML5 file within your site. View the page in
    **Split** view.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您必须创建一个 Dreamweaver 站点，并在 Dreamweaver **Document** 窗口中保存为 HTML5 文件的打开页面。在 **Split**
    视图中查看页面。
- en: Copy all your video files into a folder within the site folder you defined.
    If you save your video files elsewhere, Dreamweaver will prompt you to make copies
    of the videos within your site folder, but it saves a step and simplifies things
    to create copies of the video files in the site folder at this stage.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将所有视频文件复制到您定义的站点文件夹中的一个文件夹中。如果您将视频文件保存在其他位置，Dreamweaver 将提示您在站点文件夹中创建视频的副本，但在此阶段将视频文件的副本创建在站点文件夹中可以节省步骤并简化操作。
- en: Defining the <video> element
  id: totrans-182
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义 <video> 元素
- en: In your saved HTML5 page, place your cursor after the opening `<body>` tag.
    If you are embedding a video in a page with existing content, place your insertion
    point where the video should appear.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在保存的 HTML5 页面中，在开头的 `<body>` 标签后放置光标。如果您要在已有内容的页面中嵌入视频，请将插入点放在视频应出现的位置。
- en: Type `<vi` and code hinting will then show the `<video>` tag.
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `<vi`，代码提示将显示 `<video>` 标签。
- en: Press *Tab* to complete the beginning of the `<video>` tag.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下 *Tab* 键完成 `<video>` 标签的开始。
- en: 'Use code hinting to add parameters for height, width, and controls. The height
    and width values can either match the original values of your video, or be larger
    or smaller. If the values are larger than the original video, the resolution of
    the video will be degraded. Including the `controls` parameter displays player
    controls (for play, pause, stop, and volume). The resulting code is as follows:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用代码提示来添加高度、宽度和控件参数。高度和宽度的值可以与您的视频的原始值匹配，也可以更大或更小。如果值大于原始视频，视频的分辨率将会降低。包括 `controls`
    参数会显示播放器控件（播放、暂停、停止和音量）。生成的代码如下：
- en: '[PRE2]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: (where `xxx` is the width of the video, and `yyy` is the height)
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: （其中 `xxx` 是视频的宽度，`yyy` 是高度）
- en: As we are going to support multiple video formats, we closed the `video` tag
    by typing here.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将支持多种视频格式，我们在这里通过输入关闭了 `video` 标签。
- en: Defining video attributes
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义视频属性
- en: The HTML5 video controller normally displays a play button, a pause button,
    and a mute button, as well as a scrubber (a horizontal bar with a movable thumb
    to scroll backwards or forwards within video playback). Moreover, by default,
    HTML5 video controls display only when the user hovers his or her mouse pointer
    over the video, or when the video begins to play.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5视频控制器通常显示播放按钮、暂停按钮和静音按钮，以及一个滑块（一个可移动的拇指的水平条，用于在视频播放中向后或向前滚动）。此外，默认情况下，HTML5视频控件仅在用户将鼠标指针悬停在视频上或视频开始播放时显示。
- en: The most important video parameters are `height`, `width`, and `controls`. The
    `controls` parameter displays these player controls. The `height` and `width`
    values are followed by units of measurement, almost always pixels.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的视频参数是`height`、`width`和`controls`。`controls`参数显示这些播放器控件。`height`和`width`值后面跟着测量单位，几乎总是像素。
- en: 'There are other useful HTML5 video parameters, which are as follows:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他有用的HTML5视频参数，如下所示：
- en: '`Audio=muted` turns off volume when the video begins to play'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Audio=muted` 在视频开始播放时关闭音量'
- en: '`Autoplay=autoplay` launches the video automatically'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Autoplay=autoplay` 自动启动视频'
- en: '`Loop=loop` repeats the video'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Loop=loop` 重复播放视频'
- en: '`Preload=preload` loads the video when the page is opened, even before it is
    played'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Preload=preload` 在页面打开时加载视频，甚至在播放之前'
- en: '`Poster=[filename]` (where `filename` is a PNG image file) displays artwork
    before the video is played'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Poster=[filename]`（其中`filename`是PNG图像文件）在视频播放之前显示艺术品'
- en: Tip
  id: totrans-199
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Settings for iOS**: iPads cannot autoplay HTML5 videos, Apple doesn''t allow
    it on its iOS devices, so don''t rely on autoplay if your audience includes visitors
    on those devices. Also, preloading is appropriate for desktops and laptops, but
    too resource-intensive for mobile devices.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**iOS设置**：iPad无法自动播放HTML5视频，苹果不允许其在iOS设备上自动播放，因此如果您的受众包括这些设备上的访问者，则不要依赖自动播放。此外，预加载适用于台式机和笔记本电脑，但对移动设备来说资源消耗太大。'
- en: Even though preparing HTML5 video usually means presenting multiple video source
    files, the other attributes can be defined for all of them together. Moreover,
    normally, that is what you will want to do, since attributes such as video size,
    autoplay status, and so on will be the same regardless of what video file format
    a visitor views.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管准备HTML5视频通常意味着呈现多个视频源文件，但其他属性可以一起为它们定义。此外，通常情况下，这就是您想要做的，因为无论访问者查看哪种视频文件格式，视频大小、自动播放状态等属性都是相同的。
- en: Each of these parameters is supported by code hinting, and we'll explore how
    that works in detail in the recipe at the end of this chapter.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这些参数都受代码提示支持，我们将在本章末尾的示例中详细探讨其工作原理。
- en: Defining video source(s)
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 定义视频源
- en: Each video source requires a separate line of HTML5 code. That code is generated
    in Dreamweaver (any version with the HTML5 Pack installed) with code hints.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 每个视频源都需要一行单独的HTML5代码。这些代码是在Dreamweaver（安装了HTML5包的任何版本）中通过代码提示生成的。
- en: To begin to define a video source, type `<sour`, as you do, code hinting suggests
    the `<source>` tag. Press *Tab* to complete the code. Press the *Space bar*. Type
    `sr`, as you do, code hinting suggests `<src>`. Then press the *Tab* key. A **Browse**
    link appears.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始定义视频源，输入`<sour`，代码提示会建议`<source>`标签。按下*Tab*键完成代码。按下*空格键*。输入`sr`，代码提示会建议`<src>`。然后按下*Tab*键。会出现一个**浏览**链接。
- en: To locate a source video file, double-click on the **Browse** link provided
    by code hinting to open the **Select File** dialog.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找源视频文件，请双击代码提示提供的**浏览**链接，以打开**选择文件**对话框。
- en: '![Defining video source(s)](img/4742_05_new.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![定义视频源](img/4742_05_new.jpg)'
- en: Then, navigate to the h.264 video file you exported from Media Encoder into
    your Dreamweaver site folder. Double-click on that file to select it.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，转到您从Media Encoder导出到Dreamweaver站点文件夹的h.264视频文件。双击该文件以选择它。
- en: Alternate video for non-HTML5 environments
  id: totrans-209
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 非HTML5环境的备用视频
- en: Internet Explorer 9 includes HTML5 video support. However, many folks are still
    watching online video in older versions of Internet Explorer—IE 8, 7, and 6\.
    So it's important to include alternative access to online video that doesn't require
    HTML5 support.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Internet Explorer 9包括HTML5视频支持。然而，许多人仍在较旧版本的Internet Explorer（IE 8、7和6）中观看在线视频。因此，重要的是提供不需要HTML5支持的在线视频的替代访问方式。
- en: To do that, you can add a line of code that provides a link to a FLV file. This
    line of code should be at the end of the set of parameters for the `<video>` tag,
    right before the `</video>` closing tag. That line of code is included in the
    following example.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，您可以添加一行代码，提供一个FLV文件的链接。这行代码应该在`<video>`标签的参数集的末尾，就在`</video>`闭合标签之前。以下示例中包含了这行代码。
- en: Putting it all together
  id: totrans-212
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将所有内容整合在一起
- en: We'll walk through a step-by-step example of embedding HTML5 video at the end
    of this chapter that uses all the important `<video>` tag parameters, and incorporates
    all three HTML5 video formats, and provides accessibility for non-HTML5 browsers.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐步介绍在本章末尾嵌入HTML5视频的示例，该示例使用了所有重要的`<video>`标签参数，并整合了所有三种HTML5视频格式，并为非HTML5浏览器提供了可访问性。
- en: 'However, as a short course in that, the following lines of code display a 320
    x 240 video with controls, with all three HTML5 video formats, and an option for
    folks with older versions of IE to watch the video as an FLV video:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，作为一个简短的课程，以下代码显示了一个带有控件的320 x 240视频，包括所有三种HTML5视频格式，以及一个供使用较旧版本IE的人观看FLV视频的选项：
- en: '[PRE3]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Testing HTML5 video pages
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试HTML5视频页面
- en: It is more than clear, at this point in our exploration of HTML5 video, that
    presenting online video in HTML5 presents major compatibility issues. Will a video
    really play in the whole range of browsing environments out there, ranging from
    an iPad to Internet Explorer 6.0 on a Windows machine?
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们探索HTML5视频的过程中，很明显，以HTML5呈现在线视频存在重大的兼容性问题。视频是否真的能在各种浏览环境中播放，从iPad到Windows机器上的Internet
    Explorer 6.0？
- en: If you supply all three HTML5 video format options and include a link to a Flash
    Video page for visitors without HTML5 video support, your video should play in
    any environment.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您提供了所有三种HTML5视频格式选项，并包括指向Flash视频页面的链接，以供不支持HTML5视频的访问者使用，您的视频应该可以在任何环境中播放。
- en: Previewing a video in Live View
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在实时视图中预览视频
- en: There are two options for testing your video in Dreamweaver. One of them, which
    can be found by navigating to **File** | **Preview in Browser**, simply opens
    your page in one of the browsers installed on your own computer. This is effective
    and useful for testing video in browsers you already have installed.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dreamweaver中测试视频有两种选项。其中一种是通过导航到**文件** | **在浏览器中预览**来找到的，它简单地在您自己计算机上安装的浏览器中打开您的页面。这对于在您已经安装的浏览器中测试视频非常有效和有用。
- en: A quicker way to see if your video works, at least in Safari and other browsers
    that follow the Webkit standard (and this includes Apple mobile devices) is to
    simply look at, and test the video in **Live View**. If you are working in the
    **Split** view (pretty much a necessity for working with HTML5 video in Dreamweaver),
    you can click on the **Live View** button, and test your video even as you see
    (and edit) code on the code side of **Split** view.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在Safari和其他遵循Webkit标准的浏览器中（包括苹果移动设备），查看视频是否有效的更快方法是简单地在**实时视图**中查看和测试视频。如果您在**分割**视图中工作（这几乎是在Dreamweaver中使用HTML5视频的必要条件），您可以单击**实时视图**按钮，并在**分割**视图的代码侧面看到（和编辑）代码的同时测试您的视频。
- en: Embedding an HTML5 video
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嵌入HTML5视频
- en: The following example walks step-by-step through everything you need to make
    HTML5 video available in all three available compressed video formats, along with
    an option for FLV for older versions of Internet Explorer (versions 6-8).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例逐步介绍了使HTML5视频在所有三种可用的压缩视频格式中可用所需的一切，以及为较旧版本的Internet Explorer（6-8版本）提供FLV选项。
- en: As with all our examples in this book, the first step is to be sure you have
    a defined the Dreamweaver website. With that in place, create and save a page
    called `video.html` in the site.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 与本书中的所有示例一样，第一步是确保您已经定义了Dreamweaver网站。有了这个，就可以在站点中创建并保存一个名为`video.html`的页面。
- en: The sample code here uses a real video file (NYC Sunset) that I uploaded to
    my Vimeo channel (search for "David Karlins"). You can use this to experiment
    with. If you do, download it from Vimeo by clicking on the **Download** button
    for the video.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 此处的示例代码使用了我上传到Vimeo频道的真实视频文件（NYC日落）。您可以使用此进行实验。如果您这样做，请通过单击视频的**下载**按钮从Vimeo下载它。
- en: Then, prepare multiple versions of the video by translating the downloaded h.264
    (`nyc_sunset_424x320.mp4`) video to OGG and WebM using Micro Converter (see the
    *Converting video to web formats with open source tools* section in this chapter
    for tips on doing that).
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过使用Micro Converter将下载的h.264（`nyc_sunset_424x320.mp4`）视频转换为OGG和WebM的多个版本（有关如何执行此操作的提示，请参见本章的*使用开源工具将视频转换为Web格式*部分）。
- en: Save the three video files in a folder called `video` within your site root
    folder.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 将三个视频文件保存在名为`video`的文件夹中，该文件夹位于站点根文件夹内。
- en: 'With your site defined, an HTML5 page (`video.html`) saved, and with the (downloaded)
    mp4/h.264 video, and (converted) OGG and WebM videos in the video folder of your
    site, you''re ready for the following steps:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 定义了您的站点，保存了一个HTML5页面（`video.html`），并且在站点的视频文件夹中有（下载的）mp4/h.264视频和（转换的）OGG和WebM视频后，您可以进行以下步骤：
- en: In the Dreamweaver **Document** window, jump into **Split** view, and in the
    **Code** side of the **Split** view, click where you wish to create a new line
    of code. This can be anywhere in between the `<body>` and `</body>` tags. As we
    are working with a brand new document, place your cursor after the first `<body>`
    tag and press *Enter* (Windows) or *Return* (Mac) to create a new line of code.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Dreamweaver的**文档**窗口中，切换到**分割**视图，在**分割**视图的**代码**侧面中，单击您希望创建新代码行的位置。这可以是在`<body>`和`</body>`标签之间的任何位置。由于我们正在处理一个全新的文档，请将光标放在第一个`<body>`标签之后，然后按*Enter*（Windows）或*Return*（Mac）创建新的代码行。
- en: Start typing the `<video` element. A couple of letters into the process, you
    can press the *Tab* key to complete the beginning of the element.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始输入`<video`元素。在此过程中输入几个字母后，您可以按*Tab*键来完成元素的开始部分。
- en: Add a video parameter named `controls` to display controls.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个名为`controls`的视频参数以显示控件。
- en: Close the `<video>` tag by typing `>` and press *Return* to create a new line
    of code.
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入`>`来关闭`<video>`标签，并按*Return*创建新的代码行。
- en: Close the video element by typing `</video>`.
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过输入`</video>`来关闭视频元素。
- en: 'After the opening `video` tag, but before the closing `video` tag, define the
    first video source with the following line of code:'
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在打开的`video`标签之后，但在关闭的`video`标签之前，使用以下代码行定义第一个视频源：
- en: '[PRE4]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: At this stage, you can see (and hear!) the video in **Live** view in the **Design**
    side of **Split** view, as shown in the following screenshot:![Embedding an HTML5
    video](img/4742-05_12.jpg)
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个阶段，您可以在**分割**视图的**设计**侧面中的**实时**视图中看到（和听到！）视频，如下面的屏幕截图所示：![嵌入HTML5视频](img/4742-05_12.jpg)
- en: 'On a new line of code, enter the HTML5 code to define the Theora OGG video
    as a second video source:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新的代码行中，输入HTML5代码以定义Theora OGG视频作为第二个视频源：
- en: '[PRE5]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can test this second line of code by previewing your page in Google Chrome,
    if you have that browser installed. The current version of Chrome does not support
    h.264 video, so the `.mp4` file will not be recognized, but the `.ogv` (OGG) file
    will be.![Embedding an HTML5 video](img/4742-05_13.jpg)
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过在Google Chrome中预览页面来测试第二行代码。如果您安装了该浏览器，可以测试这个。当前版本的Chrome不支持h.264视频，因此不会识别`.mp4`文件，但会识别`.ogv`（OGG）文件。![嵌入HTML5视频](img/4742-05_13.jpg)
- en: 'Add a line of code defining the third video source:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加定义第三个视频源的代码行：
- en: '[PRE6]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'On a new line of code, simply type: `Click here to watch the video`. Select
    the word `here` and use the **Insert Hyperlink** dialog to define a link to [http://vimeo.com/22366228](http://vimeo.com/22366228),
    which opens in a new browser window (choose **_blank** from the **Target** popup).![Embedding
    an HTML5 video](img/4742-05_14.jpg)'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新的代码行上，只需输入：`点击这里观看视频`。选择单词`这里`，并使用**插入超链接**对话框来定义一个链接到[http://vimeo.com/22366228](http://vimeo.com/22366228)的链接，该链接将在新的浏览器窗口中打开（从**目标**弹出窗口中选择**_blank**）。![嵌入HTML5视频](img/4742-05_14.jpg)
- en: Tip
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: This last link is our "fail safe" option for users with very old browsers that
    do not support any HTML5 video. They can watch the video at Vimeo.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 最后这个链接是我们为那些不支持任何HTML5视频的非常老旧的浏览器用户提供的“救援”选项。他们可以在Vimeo上观看视频。
- en: Feel free to touch up the page with text or styles. Or not. Save your file.
    If you have access to IE 6, 7, or 8, you can test the non-HTML version, or you
    can test that using Adobe BrowserLab (**File** | **Preview in Browser** | **Adobe
    BrowserLab**)
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随意使用文本或样式装饰页面。或者不用。保存你的文件。如果你可以访问IE 6、7或8，你可以测试非HTML版本，或者你可以使用Adobe BrowserLab进行测试（**文件**
    | **在浏览器中预览** | **Adobe BrowserLab**）
- en: 'The entire code for our example project is as follows:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 我们示例项目的完整代码如下：
- en: '[PRE7]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Summary
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored the process of creating and presenting HTML5 audio
    and video. We examined the evolving, different, and competing options for compressing
    audio and video supported by HTML5\. Moreover, we noted the need to provide a
    way to present our video for non-HTML5 browsing environments by creating a FLV
    file that will work in those pre-HTML5 browsing environments.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了创建和呈现HTML5音频和视频的过程。我们研究了HTML5支持的不断发展、不同和竞争的音频和视频压缩选项。此外，我们注意到需要通过创建一个在HTML5之前的浏览环境中可以使用的FLV文件来呈现我们的视频。
- en: Then, we walked through Dreamweaver's tools for embedding an HTML5 video. Those
    tools are essentially code hints, which provide help in writing HTML5 `<video>`
    tags and their properties, and Live View which previews at least the Webkit (Safari)
    version of the video as we write code.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们使用Dreamweaver的工具来嵌入HTML5视频。这些工具本质上是代码提示，可以帮助编写HTML5 `<video>` 标签及其属性，并且Live
    View可以在编写代码时预览至少Webkit（Safari）版本的视频。
- en: Beyond the limitations of Dreamweaver menu options for embedding native audio
    and video, we also explored using Code view to enter our own HTML5 audio and video
    elements.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 除了Dreamweaver菜单选项的限制外，我们还探讨了使用代码视图来输入我们自己的HTML5音频和视频元素。
- en: 'In the next chapter, we''ll see how to use media queries in Dreamweaver. With
    that, we''ll begin to engage with what is probably the main focus of this book,
    and one of the most important and exciting challenges facing today''s web designer:
    creating web pages that are attractive, inviting, and accessible in both full-sized
    (laptop/desktop) environments, and in mobile devices (smart phones).'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何在Dreamweaver中使用媒体查询。通过这样做，我们将开始涉及本书可能的主要重点，也是今天网页设计师面临的最重要和最激动人心的挑战之一：创建在全尺寸（笔记本/台式机）环境和移动设备（智能手机）中都具有吸引力、诱人和可访问性的网页。
