- en: Chapter 6. Responsive Design with Media Queries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。使用媒体查询进行响应式设计
- en: It is a multimedia world. People experience and interact with web content with
    a variety of media, ranging from large-screen projections of websites to hand-held
    devices. This presents specific challenges for web designers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个多媒体世界。人们通过各种媒体与网络内容进行体验和互动，从网站的大屏幕投影到手持设备。这给网页设计师带来了特定的挑战。
- en: One of those challenges revolves around designing pages that are accessible,
    inviting, and functional at highly varying sizes. A page with centered content,
    sidebars on the left and the right, and text flowing around images may be inviting
    on a laptop, but a jumbled mess on an iPhone.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '其中一个挑战是设计页面，使其在不同大小的设备上都能够访问、吸引人并且功能正常。一个页面，内容居中，左右两侧有侧边栏，文本围绕图像流动，在笔记本电脑上可能很吸引人，但在iPhone上可能是一团糟。 '
- en: With the advent of HTML5 and CSS3, it is possible to design pages that detect
    the size of a viewing device (the viewport), and to present unique page layouts
    customized for that device. So, for example, you can create three alternative
    views of a page—one for smart phones, one for tablets, and one for full-sized
    monitors. The approach is referred to as **responsive design**. The CSS3 technique
    for implementing it is a **Media Query**.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 随着HTML5和CSS3的出现，可以设计页面来检测查看设备的大小（视口），并呈现为该设备定制的独特页面布局。因此，例如，您可以为页面创建三种不同的视图——一个用于智能手机，一个用于平板电脑，一个用于全尺寸显示器。这种方法被称为**响应式设计**。实现它的CSS3技术是**媒体查询**。
- en: In this chapter, we'll learn to design pages in Dreamweaver that detect media
    viewports using Dreamweaver-generated Media Queries, and present appropriate page
    designs tailored to the visitor's viewing environment.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何在Dreamweaver中设计页面，检测媒体视口并使用Dreamweaver生成的媒体查询，为访问者的查看环境呈现适当的页面设计。
- en: 'While doing that, we will:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这样做的同时，我们将：
- en: Use Dreamweaver's Multiscreen Preview window to preview how sites will look
    in different viewports
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Dreamweaver的多屏预览窗口预览网站在不同视口中的外观
- en: Customize Multiscreen Preview for specific devices
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为特定设备自定义多屏预览
- en: Create multiple styles for differently sized viewing devices with Dreamweaver's
    Media Queries
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Dreamweaver的媒体查询为不同大小的查看设备创建多种样式
- en: Web design for a multimedia web world
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多媒体网络世界的网页设计
- en: As noted in the introduction to this chapter, recent times have seen an explosion
    in the variety of media through which people interact with websites, particularly
    the way smart phones and tablets are defining the browsing experience more and
    more. Moreover, as noted, a web page design that is appropriate may be necessary
    for a wide-screen experience but is often inappropriate, overly cluttered, or
    just plain dysfunctional on a tiny screen.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章介绍中所指出的，最近一段时间以来，人们通过各种媒体与网站进行互动的方式呈现出爆炸式增长，特别是智能手机和平板电脑越来越多地定义了浏览体验。此外，正如所指出的，适合的网页设计可能对于宽屏体验是必要的，但在小屏幕上通常是不合适的，过于混乱，或者在小屏幕上根本无法正常工作。
- en: The solution is Media Queries—a new element of CSS stylesheets introduced with
    CSS3\. But before we examine new media features in CSS3, it will be helpful to
    understand the basic evolutionary path that led to the development of CSS3 Media
    Queries. That background will be useful both in getting our heads around the concepts
    involved and because in the crazy Wild West state of browsing environments these
    days (with emerging and yet-unresolved standards conflicts), designing for the
    widest range of media requires combining new CSS3 Media Queries with older CSS
    Media detection tools. We'll see how this plays out in real life near the end
    of this chapter, when we examine particular challenges of creating Media Queries
    that can detect, for example, an Apple iPhone.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案是媒体查询——这是CSS3中引入的新的CSS样式表元素。但在我们研究CSS3中的新媒体特性之前，了解导致CSS3媒体查询开发的基本演变路径将是有帮助的。这个背景对于理解涉及的概念以及在当前浏览环境中设计（存在新兴但尚未解决的标准冲突）的广泛媒体的需求是有用的。我们将在本章末尾看到这是如何在现实生活中发挥作用的，当我们研究创建媒体查询的特定挑战时，例如，检测苹果iPhone。
- en: How Media Queries work
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 媒体查询的工作原理
- en: Let's look at an example. If you open the Boston Globe (newspaper) site ([http://www.bostonglobe.com/](http://www.bostonglobe.com/))
    in a browser window the width of a laptop, you'll see a three-column page layout
    (go ahead, I'll wait while you check; or just take a look at the following example).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个例子。如果你在笔记本电脑宽度的浏览器窗口中打开波士顿环球报（报纸）网站（[http://www.bostonglobe.com/](http://www.bostonglobe.com/)），你会看到一个三栏页面布局（继续，我会等你检查；或者只需查看以下示例）。
- en: '![How Media Queries work](img/4742_06_01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![媒体查询的工作原理](img/4742_06_01.jpg)'
- en: 'The three-column layout works well in laptops. But in a smaller viewport, the
    design adjusts to present content in two columns, as shown in the following screenshot:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 三栏布局在笔记本电脑上效果很好。但在较小的视口中，设计会调整以呈现为两栏内容，如下面的截图所示：
- en: '![How Media Queries work](img/4742_06_02.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![媒体查询的工作原理](img/4742_06_02.jpg)'
- en: The two-column layout is the same HTML page as the three-column layout. And
    the content of both pages (text, images, media, and so on) is the same. The crew
    at the Globe do not have to build a separate home page for tablets or smartphones.
    But a media query has linked a different CSS file that displays in narrower viewports.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 两栏布局与三栏布局是同一个HTML页面。两个页面的内容（文本、图像、媒体等）是相同的。环球报的工作人员不必为平板电脑或智能手机构建单独的主页。但是一个媒体查询已经链接了一个不同的CSS文件，在较窄的视口中显示。
- en: A short history of Media Queries
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 媒体查询的简史
- en: Stepping back in time a bit, the current (pre-CSS3) version of CSS could already
    detect media, and enable different stylesheets depending on the media. Moreover,
    Dreamweaver CS6 (also CS5.5, CS5, and previous versions) provided very nice, intuitive
    support for these features.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾一下，目前（CSS3之前）的CSS版本已经可以检测媒体，并根据媒体启用不同的样式表。此外，Dreamweaver CS6（也适用于CS5.5、CS5和之前的版本）为这些功能提供了非常好的直观支持。
- en: The way this works in Dreamweaver is that when you click the **Attach Style
    Sheet** icon at the bottom of the **CSS Styles** panel (with a web page open in
    Dreamweaver's **Document** window), the **Attach External Style Sheet** dialog
    appears.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dreamweaver中的工作方式是，当你在Dreamweaver的**文档**窗口中打开一个网页时，点击**CSS样式**面板底部的**附加样式表**图标，**附加外部样式表**对话框就会出现。
- en: 'The **Media** popup in the dialog allows you to attach a stylesheet specifically
    designed for print, aural (to be read out loud by the reader software), Braille,
    handheld devices, and other "traditional" output options, as well as newer CSS3-based
    options. The **handheld** option, shown in the following screenshot, was available
    before CSS3:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 对话框中的**媒体**弹出窗口允许你附加一个专门设计用于打印、听觉（由读者软件朗读）、盲文、手持设备和其他“传统”输出选项的样式表，以及较新的基于CSS3的选项。在CSS3之前，**手持设备**选项如下截图所示是可用的：
- en: '![A short history of Media Queries](img/4742_06_03.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![媒体查询的简史](img/4742_06_03.jpg)'
- en: So, to summarize the evolutionary path, detecting media and providing a custom
    style for that media is not new to HTML5 and its companion CSS3, and there is
    support for those features in Dreamweaver CS6\. Detecting and synchronizing styles
    with defined media has been available in Dreamweaver.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总结演变路径，检测媒体并为该媒体提供自定义样式并不是HTML5及其伴侣CSS3的新功能，Dreamweaver CS6中也支持这些功能。在Dreamweaver中已经可以检测并同步具有定义媒体的样式。
- en: However, what is relatively new is the ability to detect and supply defined
    stylesheets for specific screen sizes. And that new feature opens the door to
    new levels of customized page design for specific media.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，相对较新的是检测并为特定屏幕尺寸提供定义的样式表的能力。这一新功能为特定媒体的定制页面设计打开了新的可能性。
- en: HTML5, CSS3, and Media Queries
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML5、CSS3和媒体查询
- en: With HTML5 and CSS3, Media Queries have been expanded. We can now define all
    kinds of criteria for selecting a stylesheet to apply to a viewing environment,
    including orientation (whether or not a mobile phone, tablet, and so on, is held
    in the portrait [up-down] or landscape [sideways] view), whether the device displays
    color, the shape of the viewing area, and—of most value—the width and height of
    the viewing area.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用HTML5和CSS3，媒体查询已经得到了扩展。我们现在可以定义各种选择样式表应用于查看环境的条件，包括方向（手机、平板等是纵向[上下]还是横向[侧向]视图）、设备是否显示颜色、查看区域的形状，以及最有价值的是查看区域的宽度和高度。
- en: All these options present a multitude of possibilities for creating custom stylesheets
    for different viewing environments. In fact they open up a ridiculously large
    array of possibilities. But for most designers, simply creating three appropriate
    stylesheets, one for laptop/desktop viewing, one for mobile phones, and one for
    tablets, is sufficient.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些选项都提供了为不同的查看环境创建自定义样式表的多种可能性。实际上，它们打开了一个非常庞大的可能性数组。但对于大多数设计师来说，简单地创建三个适当的样式表，一个用于笔记本/台式机查看，一个用于手机，一个用于平板电脑，就足够了。
- en: In order to define criteria for which stylesheet will display in an environment,
    HTML5 and CSS3 allow us to use `if-then` statements. So, for example, if we are
    assigning a stylesheet to tablets, we might specify that if the width of the viewing
    area is greater than that of a cell phone, but smaller than that of a laptop screen,
    we want the tablet stylesheet to be applied.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了定义在某个环境中显示哪个样式表，HTML5和CSS3允许我们使用“if-then”语句。因此，例如，如果我们正在为平板电脑分配样式表，我们可能会指定，如果查看区域的宽度大于手机的宽度，但小于笔记本屏幕的宽度，我们希望应用平板电脑样式表。
- en: Styling for mobile devices and tablets
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为移动设备和平板电脑设计样式
- en: While a full exploration of the aesthetic dimensions of creating styles for
    different media is beyond the scope of our mission in this book, it is worth noting
    a few basic "dos and don'ts" vis-à-vis styling for mobile devices.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在本书的使命范围内，对于为不同媒体创建样式的审美维度进行全面探讨是不可能的，但值得注意的是，在为移动设备设计样式时，有一些基本的“应该”和“不应该”。
- en: 'I''ll be back with more detailed advice on mobile styling later in this chapter,
    but in a word, the challenge is: simplify. In general, this means applying many
    or all of the following adjustments to your pages:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 稍后在本章中，我将提供更详细的移动设备样式建议，但总的来说，挑战是：简化。一般来说，这意味着对你的页面应用以下许多或所有的调整：
- en: Smaller margins
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 较小的边距
- en: Larger (more readable) type
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更大（更易读）的字体
- en: Much less complex backgrounds; no image backgrounds
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更简单的背景；没有图像背景
- en: No sidebars or floated content (content around which other content wraps)
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有侧边栏或浮动内容（其他内容环绕的内容）
- en: Often, no containers that define page width
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常没有定义页面宽度的容器
- en: Note
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Design advice online**: If you search for "css for mobile devices" online,
    you''ll find thousands of articles with different perspectives and advice on designing
    web pages that can be easily accessed with handheld devices.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**在线设计建议**：如果你在网上搜索“移动设备的css”，你会找到成千上万篇文章，其中包含不同的观点和建议，用于设计可以轻松在手持设备上访问的网页。'
- en: Media Queries versus jQuery Mobile and apps
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 媒体查询与jQuery Mobile和应用程序
- en: Before moving to the technical dimension of building pages with responsive design
    using Media Queries, let me briefly compare and contrast media queries to the
    two other options available for displaying content differently for fullscreen
    and mobile devices.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在转向使用媒体查询构建具有响应式设计的页面的技术维度之前，让我简要比较和对比一下媒体查询和另外两种用于在全屏和移动设备上显示内容的可用选项。
- en: One option is an **app**. Apps (short for applications) are full-blown computer
    programs created in a high-level programming language. Dreamweaver CS6 includes
    new tools to connect with and generate apps through the online PhoneGap resources.
    We cover that process in some depth in the final chapter of this book, [Chapter
    10](ch10.html "Chapter 10. Building Apps with PhoneGap"), *Building Apps with
    PhoneGap*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一个选项是**应用程序**。应用程序是用高级编程语言创建的完整的计算机程序。Dreamweaver CS6包括了与在线PhoneGap资源连接和生成应用程序的新工具。我们在本书的最后一章[第10章](ch10.html
    "第10章。使用PhoneGap构建应用程序")中对这个过程进行了比较深入的介绍，*使用PhoneGap构建应用程序*。
- en: The second option is a jQuery Mobile site. jQuery Mobile sites are based on
    JavaScript. But, as we'll see later in this book, you don't need to know JavaScript
    to build jQuery Mobile sites. The main difference between jQuery Mobile sites
    and Media Query sites with mobile-friendly designs is that jQuery Mobile sites
    require different content while Media Query sites simply repackage the same content
    with different stylesheets.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个选项是jQuery Mobile站点。jQuery Mobile站点是基于JavaScript的。但是，正如我们将在本书后面看到的那样，您不需要了解JavaScript就可以构建jQuery
    Mobile站点。jQuery Mobile站点和具有移动友好设计的媒体查询站点之间的主要区别在于，jQuery Mobile站点需要不同的内容，而媒体查询站点只是使用不同的样式表重新包装相同的内容。
- en: Which approach should you use, Media Queries or JavaScript? That is a judgment
    call. What I can advise here is that Media Queries provides the easiest way to
    create and maintain a mobile version of your site.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该使用哪种方法，媒体查询还是JavaScript？这是一个判断。我在这里可以提供建议的是，媒体查询提供了创建和维护站点的移动版本的最简单方式。
- en: Previewing with Multiscreen Preview
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Multiscreen Preview进行预览
- en: Dreamweaver's Multiscreen Preview provides an instant (if not precise) preview
    of how a web page will look in the three different viewing environments.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver的Multiscreen Preview提供了一个即时（虽然不精确）的预览，显示网页在三种不同的视图环境中的外观。
- en: 'To view an open web page in **Multiscreen Preview**, go to **View** | **Toolbars**
    | **Document**, or go to **Window** | **Multiscreen Preview** from the **Document**
    window menu. When you do, the **Multiscreen Preview** window opens, with three
    views, as shown in the following screenshot:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要在**Multiscreen Preview**中查看打开的网页，可以转到**View** | **Toolbars** | **Document**，或者从**Document**窗口菜单中转到**Window**
    | **Multiscreen Preview**。这样做时，**Multiscreen Preview**窗口会打开，并显示三个视图，如下截图所示：
- en: '![Previewing with Multiscreen Preview](img/4742_06_04.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![使用Multiscreen Preview进行预览](img/4742_06_04.jpg)'
- en: Multiscreen Preview is a form of Live view. You can't edit content there, you
    can only preview how a page will look in a browser. You can, however—as we shall
    see—edit the stylesheets associated with each view, and observe the effect in
    Multiscreen Preview.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Multiscreen Preview是一种实时预览。您不能在那里编辑内容，只能预览页面在浏览器中的外观。然而，正如我们将看到的那样，您可以编辑与每个视图相关联的样式表，并在Multiscreen
    Preview中观察效果。
- en: The three preset viewport sizes in the **Multiscreen Preview** window provide
    a pretty widely applicable set of screen sizes for previewing how an open page
    will look in a smartphone, a tablet, and on a desktop (or a full-sized laptop
    with a screen width of 1024 pixels or more). The width settings are a good, general
    way to preview how your page will look in different media.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**Multiscreen Preview**窗口中的三个预设视口尺寸提供了一组相当广泛的屏幕尺寸，用于预览打开页面在智能手机、平板电脑和桌面（或屏幕宽度为1024像素或更多的全尺寸笔记本电脑）上的外观。这些宽度设置是一种很好的、一般的预览方式，可以预览页面在不同媒体中的外观。'
- en: On the other hand, if you are designing for a specific viewing environment,
    you can customize these settings. To do that, click on the **Viewport Sizes**
    button in the upper-right corner of the **Multiscreen Preview** window. That opens
    the **Viewport Sizes** dialog. You can change the width (and, in the case of phones
    and tablets, the height) of any of the three available views by changing the values
    in the **Width** or **Height** box, and clicking on **OK**.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果您正在为特定的视图环境进行设计，可以自定义这些设置。要做到这一点，点击**Multiscreen Preview**窗口右上角的**Viewport
    Sizes**按钮。这将打开**Viewport Sizes**对话框。您可以通过更改**Width**或**Height**框中的值，并点击**OK**来更改三个可用视图中的任何一个的宽度（以及手机和平板电脑的高度）。
- en: 'The most useful adjustment you make in **Viewport Sizes** dialog might actually
    be the height of the **Phone** preview. By making that value a bit larger, you
    can get more of a sense of how pages will look in smartphones with longer viewing
    screens. In the following screenshot, the height of the **Phone** preview window
    is being changed to **480** pixels:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在**Viewport Sizes**对话框中，您可能进行的最有用的调整实际上可能是**Phone**预览的高度。通过将该值稍微增加，您可以更好地了解页面在具有更长视图屏幕的智能手机上的外观。在下面的截图中，**Phone**预览窗口的高度正在更改为**480**像素：
- en: '![Previewing with Multiscreen Preview](img/4742_06_05.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![使用Multiscreen Preview进行预览](img/4742_06_05.jpg)'
- en: 'When you first preview a page, you will most probably not like the way it looks
    in the phone and tablet preview windows. At that point, you can do one of two
    things, as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当您首次预览页面时，您很可能不会喜欢手机和平板电脑预览窗口中的外观。此时，您可以选择以下两种方法：
- en: Elect not to worry about how the page looks and works in mobile devices, under
    the assumption that this mobile device thing is a passing fad that will soon go
    away
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择不担心页面在移动设备上的外观和功能，假设这个移动设备是一个很快就会消失的过时潮流
- en: You can use Dreamweaver to generate a Media Query to present more inviting,
    accessible content in mobile devices
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以使用Dreamweaver生成媒体查询，以在移动设备上呈现更具吸引力、易访问的内容
- en: Assuming you chose the latter, let's move on to explore how to create stylesheets
    for phone and tablet display, and to apply these stylesheets in the appropriate
    environments.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您选择了后者，让我们继续探讨如何为手机和平板电脑显示创建样式表，并在适当的环境中应用这些样式表。
- en: Generating a Media Query in Dreamweaver CS6
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Dreamweaver CS6中生成媒体查询
- en: There are a number of valid approaches and possible protocols you can use to
    generate the sets of styles for a Media Query in Dreamweaver CS6\. Before walking
    through one that works well, let's survey what it is we're trying to accomplish.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多有效的方法和可能的协议可用于在Dreamweaver CS6中生成媒体查询的样式集。在介绍一个有效方法之前，让我们先了解一下我们试图实现的目标。
- en: Note
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Dreamweaver's tools for creating Media Queries in CS6 are a bit enhanced compared
    to those in Dreamweaver CS5.5; therefore, readers using older versions of Dreamweaver
    will find a few of the options we explore below unavailable.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 与Dreamweaver CS5.5相比，CS6中创建媒体查询的工具有所增强；因此，使用旧版本Dreamweaver的读者会发现下面探讨的一些选项不可用。
- en: Essentially, we need three sets of stylesheets—one for phones, one for tablets,
    and one for full-sized monitors. Because full-sized monitors are still, at this
    point, a "standard" in terms of how web content is viewed, and because the phone
    and tablet styles will likely have less complex styles, it makes sense to start
    by creating a stylesheet for a full-sized page.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，我们需要三套样式表——一个用于手机，一个用于平板电脑，一个用于全尺寸显示器。因为在这一点上，全尺寸显示器仍然是以某种标准方式查看网页内容的，“标准”，而手机和平板电脑的样式可能会更简单，因此有意义的是首先创建一个全尺寸页面的样式表。
- en: In other words, the first step is to create a basic CSS stylesheet that works
    well with the page when it is opened in a full-sized desktop or laptop monitor.
    Then, variations on that page can be generated with simplified layouts that work
    on phones and tablets.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，第一步是创建一个基本的CSS样式表，使其在全尺寸台式机或笔记本电脑显示器上打开页面时能够很好地工作。然后，可以生成简化布局的页面变体，适用于手机和平板电脑。
- en: Building alternative stylesheets
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建备用样式表
- en: As noted, from a style and accessibility perspective, it makes sense to start
    with a "full-sized" web page style and then build permutations of that style that
    work with phones and tablets.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 正如前面提到的，从样式和可访问性的角度来看，从“全尺寸”网页样式开始，然后构建适用于手机和平板电脑的样式变体是有意义的。
- en: There is also a technical reason to use that workflow. Keep in mind that all
    three CSS stylesheet files will be providing styling rules for the same page.
    That means all three alternative CSS files have to provide rules for the same
    set of HTML elements and tags.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个使用该工作流程的技术原因。请记住，所有三个CSS样式表文件将为同一个页面提供样式规则。这意味着所有三个备用CSS文件都必须为同一组HTML元素和标签提供规则。
- en: For example, if a `<div>` tag defines a main container on a page, the stylesheets
    for all three media (phone, tablet, and desktop) have to define how that `<div>`
    tag should appear. The rules for the phone CSS might include a narrower width,
    a simpler background color, and other attributes. But, the point is that all three
    stylesheets will have rules for this main container `div` tag. And that must be
    the case for all the layout elements, whether HTML5 layout elements, `<div>` tags,
    or some combination of the two.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果一个`<div>`标签在页面上定义了一个主容器，三种媒体（手机、平板和台式机）的样式表都必须定义`<div>`标签应该如何显示。手机CSS的规则可能包括较窄的宽度、更简单的背景颜色和其他属性。但是，关键是所有三个样式表都必须为这个主容器`div`标签定义规则。对于所有的布局元素，无论是HTML5布局元素、`<div>`标签还是两者的组合，都必须如此。
- en: Preparing to generate a Media Query
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备生成媒体查询
- en: One effective protocol for preparing to generate a Media Query is to have three
    CSS files ready to assign to different media.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 准备生成媒体查询的一个有效协议是准备好三个可分配给不同媒体的CSS文件。
- en: 'A simple protocol for doing that is as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的准备工作协议如下：
- en: Create a basic CSS file for your page that works for desktop- or laptop-sized
    monitors. If you are generating pages from Dreamweaver CS6's HTML5 layouts, you
    can use the CSS file that comes with the respective layout as this "main" layout.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的页面创建一个适用于台式机或笔记本电脑尺寸显示器的基本CSS文件。如果您正在从Dreamweaver CS6的HTML5布局生成页面，您可以使用相应布局附带的CSS文件作为“主”布局。
- en: Save the "main" CSS file with a filename such as `full-size.css` and then resave
    it twice with two different filenames (such as `tablet.css` and `smartphone.css`),
    creating three identical stylesheets. Alternately, if you only want to provide
    two options (and let tablet users see the full-size styles), just save two versions
    of the CSS file—`full-size.css` and `smartphone.css`.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用文件名如`full-size.css`保存“主”CSS文件，然后再保存两次，使用两个不同的文件名（如`tablet.css`和`smartphone.css`），创建三个相同的样式表。或者，如果您只想提供两个选项（并且让平板用户看到全尺寸样式），只需保存两个版本的CSS文件——`full-size.css`和`smartphone.css`。
- en: With the alternative stylesheets saved, you can customize them right in the
    **Multiscreen Preview** menu.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存备用样式表后，您可以在**多屏预览**菜单中自定义它们。
- en: With three alternative CSS files available for assignment and editing, you're
    ready to define Media Queries. We'll walk through that process next.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 有了三个备用CSS文件可供分配和编辑，您就可以开始定义媒体查询了。接下来我们将介绍这个过程。
- en: Assigning styles to different media
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为不同媒体分配样式
- en: The best way to avail oneself of Dreamweaver's tools for building Media Queries
    is to work in the Multiscreen Preview mode. Remember, this means we will not be
    editing content as we adjust styles. But that constraint is something we can definitely
    live with, and in fact, as a general approach, adjusting content and style should
    be thought of and approached as distinct processes.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 利用Dreamweaver构建媒体查询的最佳方式是在多屏预览模式下工作。请记住，这意味着我们在调整样式时不会编辑内容。但这种限制是我们完全可以接受的，事实上，作为一种一般方法，调整内容和样式应该被视为不同的过程。
- en: So, our scenario is that we've opened **Multiscreen Preview** for an open web
    page. And we have at the ready three different CSS files—the ones discussed in
    the "3-step" protocol identified just a bit earlier in this chapter.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的情景是我们已经为打开的网页打开了**多屏预览**。并且我们已经准备好了三个不同的CSS文件——就像本章稍早讨论的“3步”协议中所指出的那样。
- en: 'With at least two CSS files saved as part of your Dreamweaver site, and with
    a web page open in **Multiscreen Preview**, follow these steps to define custom
    styles for each view:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在Dreamweaver站点中至少保存两个CSS文件，并在**多屏预览**中打开网页后，按照以下步骤为每个视图定义自定义样式：
- en: Click on the **Media Queries** button to open the **Media Queries** dialog.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**媒体查询**按钮打开**媒体查询**对话框。
- en: In the **Write Media Queries To** area, choose the **This Document** option.
    The **Site-Wide Media Query File** alternative is trickier; it involves Dreamweaver
    changing code in all your pages and is less reliable.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**编写媒体查询到**区域，选择**此文档**选项。**站点范围的媒体查询文件**选项较为棘手；它涉及Dreamweaver更改所有页面中的代码，并且不太可靠。
- en: Leave the **Force Devices to Report Actual Width** checkbox selected. This overcomes
    any confusion that can be caused when different devices define "pixels" in ways
    that distort their actual width. The initial selections in the **Media Queries**
    dialog should look like the following:![Assigning styles to different media](img/4742_06_06.jpg)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保留“强制设备报告实际宽度”复选框选中。这可以克服当不同设备以扭曲其实际宽度的方式定义“像素”时可能引起的混乱。在“媒体查询”对话框中的初始选择应该如下所示：![为不同媒体分配样式](img/4742_06_06.jpg)
- en: 'Click on the **+** icon to add a stylesheet. The **Properties** area becomes
    active for that selected stylesheet:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“+”图标添加样式表。所选样式表的“属性”区域变为活动状态：
- en: In the **Description** field, enter text that describes the style (this is for
    your own benefit, not for public display).
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“描述”字段中，输入描述样式的文本（这是为了你自己的利益，而不是公开展示）。
- en: In the **Min Width** field, enter a value that defines the narrowest viewport
    in which this style will display, wherever that is appropriate. If you are defining
    a CSS style for smartphones, you would not have any minimum width as that style
    would apply no matter how small the viewport.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“最小宽度”字段中，输入一个值，定义了该样式将显示的最窄视口，无论在何处都适用。如果你为智能手机定义CSS样式，你不需要任何最小宽度，因为该样式将适用于任何大小的视口。
- en: In the **Max Width** field, enter a value that defines the narrowest viewport
    in which this style will display, wherever that is appropriate. If you are defining
    a CSS style for full-size browsers, you would not have any maximum width as that
    style would apply no matter how large the viewport.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“最大宽度”字段中，输入一个值，定义了该样式将显示的最宽视口，无论在何处都适用。如果你为全尺寸浏览器定义CSS样式，你不需要任何最大宽度，因为该样式将适用于任何大小的视口。
- en: 'Use the **Select File** icon in the **CSS File** area to navigate to and select
    a stylesheet file that will apply in viewports that meet the defined criteria,
    as shown in the following screenshot:'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在“CSS文件”区域使用“选择文件”图标导航到并选择一个样式表文件，该文件将适用于符合定义条件的视口，如下面的屏幕截图所示：
- en: '![Assigning styles to different media](img/4742_06_07.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![为不同媒体分配样式](img/4742_06_07.jpg)'
- en: Repeat step 4 to add additional stylesheets to the media query. All the associated
    styles will be listed as shown in the following screenshot:![Assigning styles
    to different media](img/4742_06_08.jpg)
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复步骤4，为媒体查询添加其他样式表。所有相关的样式将如下屏幕截图所示列出：![为不同媒体分配样式](img/4742_06_08.jpg)
- en: Click **OK** to close the **Media Queries** dialog, and see your media query
    applied in the **Multiscreen Preview** window as shown here:![Assigning styles
    to different media](img/4742_06_09.jpg)
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“确定”关闭“媒体查询”对话框，并在“多屏预览”窗口中看到应用了你的媒体查询，如下所示：![为不同媒体分配样式](img/4742_06_09.jpg)
- en: At any point, you can toggle in or out of **Multiscreen Preview** by choosing
    **Multiscreen Preview** from the **Window** menu.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在任何时候，你都可以通过选择“窗口”菜单中的“多屏预览”来切换进入或退出“多屏预览”。
- en: Formatting CSS files for Media Queries
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为媒体查询格式化CSS文件
- en: With a Media Query defined for a web page, we can interactively create and adjust
    the styles for each targeted browsing environment. To do that, re-open the Multiscreen
    Preview for the page.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 通过为网页定义媒体查询，我们可以交互地创建和调整每个目标浏览环境的样式。要做到这一点，重新打开页面的多屏预览。
- en: '"Wait!", you might exclaim, "how can I edit the page in Multiscreen Preview
    when that window functions like Live view in the Document window—locking out any
    content editing?". A thoughtful concern, but here we will be only editing the
    CSS styles, not the page content. And that we can do in **Multiscreen Preview**.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: “等等！”你可能会惊叹道，“当多屏预览窗口像文档窗口中的实时视图一样锁定任何内容编辑时，我怎么能编辑页面呢？”。这是一个值得思考的问题，但在这里我们只会编辑CSS样式，而不是页面内容。我们可以在“多屏预览”中做到这一点。
- en: To edit styles in **Multiscreen Preview**, view the **CSS Styles** panel (**Window**
    | **CSS Styles**). The attached styles, along with the parenthetical notes that
    help us remember which style is which, appear in the top-half of the **CSS Styles**
    panel.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要在“多屏预览”中编辑样式，查看“CSS样式”面板（“窗口”|“CSS样式”）。附加的样式以及帮助我们记住哪种样式是哪种的括号注释显示在“CSS样式”面板的上半部分。
- en: You can expand any of those styles by clicking the triangle next to the style's
    name in the top-half of the **CSS Styles** panel. In the following screenshot,
    the `mobile.css` style is expanded. And clicking on a style rule within the style
    (in this case, the `font` parameter of the `body` tag style) reveals the parameters
    for that style in the bottom-half of the **CSS Styles** panel.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在“CSS样式”面板的上半部分点击样式名称旁边的三角形来展开任何这些样式。在下面的屏幕截图中，“mobile.css”样式被展开。点击样式中的样式规则（在这种情况下是“body”标签样式的“font”参数）会在“CSS样式”面板的下半部分显示该样式的参数。
- en: '![Formatting CSS files for Media Queries](img/4742_06_10.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![为媒体查询格式化CSS文件](img/4742_06_10.jpg)'
- en: Adjusting CSS for Mobile
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整移动设备的CSS
- en: 'As pointed out earlier, the art of designing styles for mobile devices is,
    well, an art. And, as suggested earlier, there are tons of online resources opining
    and advising on what to include in phone and tablet styles. But before highlighting
    a few widely agreed-on elements of mobile-device styling, it is important to issue
    a warning: don''t delete style rules from any of your stylesheet files.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 正如之前指出的，为移动设备设计样式的艺术，嗯，就是一种艺术。而且，正如之前建议的，有大量在线资源对手机和平板样式的包含内容提出意见和建议。但在强调移动设备样式的一些广泛认可的元素之前，重要的是要发出警告：不要从任何样式表文件中删除样式规则。
- en: Our protocol for creating the three alternative stylesheets for a Media Query
    started with one stylesheet, from which we created two copies. Those stylesheets
    "came into the world" with identical sets of style rules.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为媒体查询创建三种备用样式表的协议始于一个样式表，从中创建了两个副本。这些样式表以相同的样式规则集“诞生”。
- en: It is fine and necessary to change the parameters of those style rules. You
    can have different formatting for containers, text, backgrounds, and so on, in
    your phone style than you have in your tablet style. No problem. But keep in mind
    that all three of your styles have to mesh with the same HTML file, with the same
    CSS style names used to define formatting and layout tags and elements.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 更改这些样式规则的参数是可以的，也是必要的。您可以在手机样式中对容器、文本、背景等进行不同的格式设置。但请记住，您的三种样式都必须与相同的HTML文件相匹配，使用相同的CSS样式名称来定义格式和布局标签和元素。
- en: 'As for styling mobile devices, the following techniques are widely applicable:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 至于移动设备的样式，以下技术是广泛适用的：
- en: Keep the type large.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持字体较大。
- en: Keep links easy to find. Underlined links are passé in full-sized web pages,
    but helpful on cell phones.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持链接易于找到。在全尺寸的网页中，带下划线的链接已经过时，但在手机上很有帮助。
- en: Use nice large margins and/or padding in containers to make it easy for big
    stubby fingers to select tiny content on cell phone screens.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在容器中使用较大的边距和/或填充，以便大而粗的手指在手机屏幕上轻松选择小内容。
- en: Avoid sidebars (don't use the `float` attribute).
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免使用侧边栏（不要使用`float`属性）。
- en: 'Use `visibility: hidden` to hide non-essential elements in phone styles. In
    the following screenshot, `visibility` has been set to `hidden` for the header
    in the phone style, and the height of the header has been reduced to 1 pixel so
    as to create a thin line of spacing for aesthetic reasons and so it does not occupy
    precious space on a smart phone screen.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在手机样式中使用`visibility: hidden`来隐藏非必要的元素。在下面的屏幕截图中，已经将手机样式中的`visibility`设置为`hidden`，并将标题的高度减小为1像素，以便出于美观原因创建一条细线间距，这样它就不会占据智能手机屏幕上的宝贵空间。'
- en: The following screenshot shows three stylesheets applied to the same page in
    **Multiscreen Preview**. The tablet view only required a few adjustments—basically
    reducing the widths of the layout elements (the main container, the sidebar, and
    the header). The phone stylesheet took more trial-and-error experimentation, including
    removing all `float` attributes and reducing the width of different elements.
    Different color schemes were applied to each stylesheet as well, with a very basic
    color scheme (black and white) applied to the cell phone style.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的屏幕截图显示了在**多屏预览**中应用到同一页面的三个样式表。平板电脑视图只需要进行了一些调整，基本上是减小了布局元素（主容器、侧边栏和标题）的宽度。手机样式需要更多的试验和错误实验，包括删除所有`float`属性和减小不同元素的宽度。每个样式表也应用了不同的颜色方案，手机样式应用了非常基本的颜色方案（黑色和白色）。
- en: '![Adjusting CSS for Mobile](img/4742_06_11new.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![调整手机CSS](img/4742_06_11new.jpg)'
- en: 'As they say in the commercials for weight-loss products, "your results may
    vary." Meaning, tweaking a stylesheet for a phone does require some trial and
    error. But again, the basic rule is: simpler. Eliminating floats (so no content
    appears in a second column) is usually the first step.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 就像减肥产品的广告中所说的，“你的结果可能会有所不同。”这意味着，为手机调整样式表确实需要一些试验和错误。但基本规则仍然是：简单。通常，消除浮动（使内容不出现在第二列中）是第一步。
- en: Defining a Media Query for smartphones
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为智能手机定义媒体查询
- en: In this example, we'll walk through, step by step, how to use Dreamweaver's
    flexible and highly useful three-column HTML5 layout. We will create a Media Query
    to display this two-column content in a layout more appropriate for cell phones—without
    columns or sidebars.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将逐步介绍如何使用Dreamweaver灵活且非常有用的三列HTML5布局。我们将创建一个媒体查询，以在更适合手机的布局中显示这两列内容，而不需要列或侧边栏。
- en: 'As always, the starting assumption is that you are working in a Dreamweaver
    site (refer back to [Chapter 1](ch01.html "Chapter 1. Creating Sites and Pages
    with Dreamweaver CS6"), *Creating Sites and Pages with Dreamweaver CS6*, if that
    doesn''t register). With a site defined, the following steps will produce a nice,
    appropriately minimalist layout for your page in a cell phone:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，起始假设是您正在Dreamweaver网站中工作（如果没有，请参阅[第1章](ch01.html "第1章。使用Dreamweaver CS6创建站点和页面"),
    *使用Dreamweaver CS6创建站点和页面*）。有了定义的站点，以下步骤将为您的手机页面生成一个漂亮、适当的极简布局：
- en: Go to **File** | **New**. In the **New Document** dialog, select the **Blank
    Page** category. Choose **HTML** from the **Page Type** column, and choose the
    first HTML5 layout, **2 column fixed, centered**, from the **Layout** column.
    In the **New Document** dialog, leave the **Layout CSS** pop-up selection at **Create
    New File**. Make sure there are no files selected in the **Attach CSS File** box
    (if there are, use the **Trashcan** icon to delete them). With these settings
    in place, click **Create**.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**文件**|**新建**。在**新建文档**对话框中，选择**空白页**类别。从**页面类型**列中选择**HTML**，并从**布局**列中选择第一个HTML5布局，**2列固定，居中**。在**新建文档**对话框中，将**布局CSS**弹出选择保留在**创建新文件**。确保**附加CSS文件**框中没有选择任何文件（如果有，请使用**垃圾桶**图标将其删除）。设置好这些设置后，点击**创建**。
- en: The **Save Style Sheet File As** dialog opens. Change the saved stylesheet name
    to `fullsize.css`, and click **Save** to save the stylesheet to your site's folder.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**另存样式表文件为**对话框打开。将保存的样式表名称更改为`fullsize.css`，然后点击**保存**将样式表保存到您站点的文件夹中。'
- en: 'The web page opens in the Dreamweaver **Document** window. Let''s make two
    edits to the content:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网页在Dreamweaver**文档**窗口中打开。让我们对内容进行两次编辑：
- en: Delete the [http://www.adobe.com/go/adc_css_layouts](http://www.adobe.com/go/adc_css_layouts)
    link. That link is inappropriately long, particularly for a cell phone. If (in
    real life) we wanted to link to a site with a long URL, we could assign the link
    to much shorter text by going to **Insert** | **Hyperlink**.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除[http://www.adobe.com/go/adc_css_layouts](http://www.adobe.com/go/adc_css_layouts)链接。该链接过长，特别是对于手机来说。如果（在现实生活中）我们想要链接到一个具有很长URL的网站，我们可以通过转到**插入**|**超链接**来将链接分配给更短的文本。
- en: In the header area, type `Full... or Mobile?`.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在标题区域，键入`全尺寸...还是手机？`。
- en: Go to **File** | **Save** to save the edited HTML page as `2_views.html`.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**文件**|**保存**，将编辑后的HTML页面保存为`2_views.html`。
- en: Next, we will create a CSS file to build from to display content in a mobile
    device. Go to **File** | **New**. In the **New Document** dialog, choose **CSS**
    from the **Page Type** list and click on the **Create** button. Go to **File**
    | **Save**, and save the new, blank CSS file as `mobile.css`. Copy and paste all
    the code in the original `fullsize.css` file into the new `mobile.css` file. We'll
    edit these styles next.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个CSS文件，用于在移动设备上显示内容。转到**文件** | **新建**。在**新建文档**对话框中，从**页面类型**列表中选择**CSS**，然后单击**创建**按钮。转到**文件**
    | **保存**，将新的空白CSS文件保存为`mobile.css`。将原始的`fullsize.css`文件中的所有代码复制并粘贴到新的`mobile.css`文件中。接下来我们将编辑这些样式。
- en: Return to the `2_views.html` page in the **Document** window. You can do that
    either by clicking on the file in the **Files** tab bar at the top of the **Document**
    window, or by using the **Window** menu.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到**文档**窗口中的`2_views.html`页面。您可以通过单击**文档**窗口顶部的**文件**选项卡栏中的文件，或者使用**窗口**菜单来执行此操作。
- en: Go to **Window** | **Multiscreen Preview**; click on the **Media Queries** button
    in **Multiscreen Preview** to open the **Media Queries** dialog.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**窗口** | **多屏预览**；在**多屏预览**中单击**媒体查询**按钮以打开**媒体查询**对话框。
- en: 'For tablets and full-sized computers, for the sake of this example, we will
    simply display the already attached CSS file (`fullsize.css`). Click on the `+`
    icon to add a stylesheet. The **Properties** area becomes active for the new stylesheet:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于平板电脑和全尺寸计算机，为了举例，我们将简单地显示已附加的CSS文件（`fullsize.css`）。单击“+”图标添加样式表。**属性**区域将激活新样式表：
- en: In the **Description** field, enter `Full Size`.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**描述**字段中输入`全尺寸`。
- en: In the **Min Width** field, enter `960`. This style will only apply to viewports
    with a width of at least 960 pixels.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**最小宽度**字段中输入`960`。此样式将仅应用于宽度至少为960像素的视口。
- en: Leave the **Max Width** field blank. As we are defining a CSS style for full-sized
    browsers, we do not want to set a maximum width; this style will be applied no
    matter how wide the viewport.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将**最大宽度**字段留空。因为我们正在为全尺寸浏览器定义CSS样式，所以不希望设置最大宽度；无论视口有多宽，都将应用此样式。
- en: Use the **Select File** icon in the **CSS File** area to navigate to and select
    the `fullsize.css` stylesheet file that will apply in viewports that meet the
    defined criteria.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**CSS文件**区域使用**选择文件**图标导航并选择`fullsize.css`样式表文件，该文件将应用于符合定义条件的视口。
- en: For smartphones, we will display the `mobile.css` file we created in the fifth
    step. Click on the **+** icon to add a stylesheet. The **Properties** area becomes
    active for the new stylesheet.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于智能手机，我们将显示在第五步中创建的`mobile.css`文件。单击“+”图标添加样式表。**属性**区域将激活新样式表。
- en: In the **Description** field, enter `Mobile`.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**描述**字段中输入`移动`。
- en: Leave the **Min Width** field blank. This style will apply to viewports with
    width less than 960 pixels.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将**最小宽度**字段留空。此样式将应用于宽度小于960像素的视口。
- en: In the **Max Width** field, enter `960`. As we are defining a CSS style for
    mobile phones, we do not want this stylesheet to display in viewports wider than
    960 pixels.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**最大宽度**字段中输入`960`。因为我们正在为手机定义CSS样式，所以不希望此样式表在宽度大于960像素的视口中显示。
- en: Use the **Select File** icon in the **CSS File** area to navigate to and select
    the `mobile.css` stylesheet file that will apply in viewports that meet the defined
    criteria.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**CSS文件**区域使用**选择文件**图标导航并选择`mobile.css`样式表文件，该文件将应用于符合定义条件的视口。
- en: 'View the page layouts in **Multiscreen Preview**; the layout for the full screen
    viewport is not bad. But the page layout and colors won''t work well in mobile
    devices. Let''s make some adjustments in the mobile version of the page, as follows:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**多屏预览**中查看页面布局；全屏视口的布局还不错。但是页面布局和颜色在移动设备上效果不佳。让我们在页面的移动版本中进行一些调整，如下所示：
- en: Change the font size for the `body` tag to `150%`, providing larger text for
    mobile devices, as shown here:![Defining a Media Query for smartphones](img/4742_06_12.jpg)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`body`标签的字体大小更改为`150%`，为移动设备提供更大的文本，如下所示：![为智能手机定义媒体查询](img/4742_06_12.jpg)
- en: We want to remove all `width` and `float` parameters in every style rule for
    our mobile style. Those `width` and `float` parameters create columns, and content
    that doesn't fill the entire width of the page, and make the display in a mobile
    phone inaccessible and uninviting. Go through each of the styles in the `mobile.css`
    stylesheet and click to left of every `width` or `float` parameter to convert
    that code to comments, as shown here:![Defining a Media Query for smartphones](img/4742_06_13.jpg)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望在我们的移动样式的每个样式规则中删除所有`width`和`float`参数。这些`width`和`float`参数会创建列，以及内容不会填满页面的整个宽度，使得在移动电话上显示变得不可访问和不吸引人。浏览`mobile.css`样式表中的每个样式，并单击`width`或`float`参数的左侧以将该代码转换为注释，如下所示：![为智能手机定义媒体查询](img/4742_06_13.jpg)
- en: 'Consider adjusting the color scheme to create a higher contrast between background
    and foreground colors, to make the page easier to read and navigate in different
    lighting conditions encountered by mobile phone users (including bright, outdoor,
    and sunlight). The following example shows higher contrast assigned to the navigation
    element:'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 考虑调整颜色方案，以在移动电话用户遇到不同照明条件（包括明亮、户外和阳光）下使页面更易于阅读和导航。以下示例显示导航元素分配了更高的对比度：
- en: '![Defining a Media Query for smartphones](img/4742_06_14.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![为智能手机定义媒体查询](img/4742_06_14.jpg)'
- en: That's it! There's more tweaking we could do, but remember that when designing
    for mobile devices, less really is more. Exit **Multiscreen Preview** (go to **Window**
    | **Multiscreen Preview** to deselect this view). Save your page with changes
    to the CSS.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就是这样！我们还可以进行更多微调，但要记住，在为移动设备设计时，少即是多。退出**多屏预览**（转到**窗口** | **多屏预览**取消选择此视图）。保存对CSS的更改后的页面。
- en: Surveying alternative approaches
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调查替代方法
- en: In this chapter, we focused on creating media queries using Dreamweaver's **Multiscreen
    Preview** window and **Media Queries** dialog box.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们专注于使用Dreamweaver的**多屏预览**窗口和**媒体查询**对话框创建媒体查询。
- en: Another approach to defining Media Queries is to create them within a single
    CSS file. The advantage of this approach is that styles for all viewports are
    in the same CSS file. The disadvantage is that this makes CSS files two, three,
    or even four (or more) times as long, bulky, and hard to edit. On the balance,
    I would argue that in most situations the approach we've taken so far is easier
    to manage, but since Dreamweaver includes a substantial template that uses the
    single-CSS file approach, let's survey how this works.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种定义媒体查询的方法是在单个CSS文件中创建它们。这种方法的优点是所有视口的样式都在同一个CSS文件中。缺点是这会使CSS文件变得两倍、三倍，甚至四倍（或更多）的长，臃肿且难以编辑。总的来说，我认为在大多数情况下，我们迄今为止采取的方法更容易管理，但由于Dreamweaver包含一个使用单CSS文件方法的大型模板，让我们看看这是如何运作的。
- en: 'The syntax to define a Media Query within a CSS file is:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在CSS文件中定义媒体查询的语法是：
- en: '[PRE0]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The value can include a max-width, a min-width, or both.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 值可以包括max-width、min-width或两者兼有。
- en: 'In this example, the background color for the `body` tag is yellow for viewports
    of `480` pixels or less, and green for viewports of `481` pixels or more:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，`body`标签的背景颜色在`480`像素或更少的视口上为黄色，在`481`像素或更多的视口上为绿色：
- en: '[PRE1]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As I pointed out, Dreamweaver CS6 includes a substantial and complex sample
    page that includes CSS files with Media Queries for multiple viewports within
    the same CSS files, and JavaScripting as well.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我所指出的，Dreamweaver CS6包含一个庞大而复杂的示例页面，其中包括在同一CSS文件中为多个视口定义样式的CSS文件，以及JavaScript。
- en: Again, Dreamweaver's Fluid Grid layout is one specific (and complex) sample,
    for example, of a Media Query using the technique of defining styles for multiple
    viewports within a single CSS file.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，Dreamweaver的流体网格布局是一个具体（且复杂）的示例，例如，使用在单个CSS文件中为多个视口定义样式的媒体查询技术。
- en: As with all Dreamweaver sample pages, you can use this page for education and
    inspiration; it is well documented (except for JavaScript). If you're interested
    in examining this sample, go to **File** | **New Fluid Grid Layout** and explore
    the options in the **New Document** dialog box for this page sample.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 与所有Dreamweaver示例页面一样，您可以将此页面用于教育和灵感；它有很好的文档（除了JavaScript）。如果您有兴趣查看此示例，请转到**文件**
    | **新流体网格布局**，并在**新文档**对话框中探索此页面示例的选项。
- en: '![Surveying alternative approaches](img/4742_06_15.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![调查替代方法](img/4742_06_15.jpg)'
- en: Summary
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Older versions of HTML and CSS allowed for Media Queries to identify output
    devices including printers, Braille readers, and audio-reader devices. New additions
    in CSS3 allow Media Queries to detect screen size (in pixels) as well as other
    more esoteric properties of a browsing environment.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: HTML和CSS的旧版本允许媒体查询识别包括打印机、盲文阅读器和音频阅读器在内的输出设备。CSS3的新添加允许媒体查询检测屏幕大小（以像素为单位）以及浏览环境的其他更神秘的属性。
- en: Dreamweaver CS6's Multiscreen preview and Media Queries dialog work together
    to preview and edit how the same HTML page content will display differently in
    a smart phone, a tablet, and a full-sized monitor.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: Dreamweaver CS6的多屏预览和媒体查询对话框共同工作，预览和编辑同一HTML页面内容在智能手机、平板电脑和全尺寸监视器上的显示方式。
- en: 'In the next chapter of this book, we''ll begin to explore a different approach
    to creating mobile-friendly sites: jQuery Mobile. The jQuery Mobile approach provides
    a more dynamic, animated, inviting style for mobile sites, but, as you''ll see
    in [Chapter 7](ch07.html "Chapter 7. Creating Mobile Pages with jQuery Mobile"),
    *Mobile Pages with jQuery Mobile*, it requires separate content for full-sized
    and mobile sites.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的下一章中，我们将开始探索创建移动友好网站的不同方法：jQuery Mobile。jQuery Mobile方法为移动网站提供了更动态、更有吸引力的样式，但正如您将在[第7章](ch07.html
    "第7章。使用jQuery Mobile创建移动页面")中看到的那样，*使用jQuery Mobile创建移动页面*，它需要为全尺寸和移动站点分别提供内容。
