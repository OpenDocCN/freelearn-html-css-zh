- en: Chapter 1.  Writing Styles for Rapidly Changing, Long-lived Projects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。为快速变化、长期存在的项目编写样式
- en: This isn't actually a book about writing CSS, as in the stuff inside the curly
    braces. It's a book about the organising and architecture of CSS; the parts outside
    the braces. It's the considerations that can be happily ignored on smaller projects
    but actually become the most difficult part of writing CSS in larger projects.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上不是一本关于编写CSS的书，而是关于CSS的组织和架构；花括号外的部分。这是在较小的项目中可以忽略的考虑因素，但实际上成为在较大项目中编写CSS最困难的部分。
- en: Terms like *CSS at scale*, or *Large-scale CSS* can seem quite nebulous. I'll
    try and clarify.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 像*大规模CSS*或*大规模CSS编写*这样的术语可能看起来相当模糊。我会尝试澄清。
- en: 'When people talk about *large scale CSS* or *writing CSS at scale* there can
    be a few possible metrics that relate to the *large* or *big* part of the description:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当人们谈论*大规模CSS*或*大规模CSS编写*时，可能会涉及到*大*或*大*部分描述的一些可能的指标：
- en: It might be CSS that simply has a large file size. There's a lot of CSS output
    and so making changes to that codebase can be difficult, as there is so much of
    the code to consider.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可能是仅仅因为文件大小很大的CSS。有很多CSS输出，因此对该代码库进行更改可能很困难，因为有很多代码需要考虑。
- en: The CSS could be said to be *large* due to the complexity of the user interface
    that is being built with it. The overall file size may be smaller than the first
    situation but there may be a great many pieces of user interface that's codified
    in those styles. Considering how to effect changes across all of those visuals
    may be problematic.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSS可能被称为*大型*，是因为正在构建的用户界面的复杂性。总体文件大小可能比第一种情况要小，但在这些样式中可能有许多用户界面的部分。考虑如何影响所有这些视觉可能会有问题。
- en: It might be *large CSS* simply due to the number of developers that have, are,
    and will be likely to touch and change the CSS codebase.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可能是*大型CSS*，仅仅是因为有许多开发人员可能会接触和更改CSS代码库。
- en: Or, it can be all the above.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，它可以是以上所有情况。
- en: Defining the problem
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义问题
- en: Enduring CSS was born from my own need to define a rational approach to writing
    CSS on large scale web applications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 持久的CSS诞生于我自己对在大规模Web应用程序上编写CSS的合理方法的需求。
- en: The definition of what makes something a *web application* as opposed to merely
    a *web page* can be divisive so let's put that aside for now. Let's simply consider
    the scenario in which a new approach to writing CSS was needed.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 定义什么使某物成为*网络应用程序*，而不仅仅是*网页*，可能会引起分歧，所以我们暂且不考虑这一点。让我们简单地考虑需要一种新的CSS编写方法的情况。
- en: Consider an interface that was, by necessity, densely populated with visual
    components; sliders, buttons, input fields etc.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个界面，由于必要，密集地填充了视觉组件；滑块、按钮、输入字段等。
- en: In addition, consider that this interface was (and is) constantly evolving and
    needed to be changed rapidly. Furthermore, any changes might be made by any number
    of different style sheet authors.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，考虑到这个界面（现在和以后）不断发展，并且需要迅速更改。此外，任何更改可能由任意数量的不同样式表作者进行。
- en: Without a clearly defined CSS writing methodology, through the many iterations,
    the CSS was always out of hand. The style sheets were in a perpetual state of
    entropy as a result of mixed approaches, different levels of technical understanding
    between authors and code documentation that varied greatly in quality.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有明确定义的CSS编写方法，通过许多迭代，CSS总是失控的。由于混合方法、不同作者之间的技术理解水平和代码文档的质量差异很大，样式表处于永久的熵状态。
- en: So the result was CSS that was difficult to iterate upon, hard to reason about
    and nobody was ever quite sure where redundancy lay. Worse still, style sheet
    authors lacked the confidence to remove code for fear of inadvertently effecting
    other parts of the application.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，结果是CSS很难迭代，难以理解，没有人确切地知道冗余在哪里。更糟糕的是，样式表作者缺乏信心删除代码，因为担心无意中影响应用程序的其他部分。
- en: If you've ever inherited or worked in a team on a large CSS codebase, I'm sure
    some of what I'm describing will sound familiar.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经继承或在一个大型CSS代码库的团队中工作，我相信我所描述的一些情况会听起来很熟悉。
- en: 'Therefore, at the outset of my journey, I defined some basic needs. More simply,
    these were the problems that any new CSS authoring approach had to solve. Here
    is the list of those needs:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在我的旅程开始时，我定义了一些基本需求。更简单地说，这些是任何新的CSS编写方法必须解决的问题。以下是这些需求的列表：
- en: To allow the easy maintenance of a large CSS codebase over time
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着时间的推移，允许轻松维护大型CSS代码库
- en: To allow portions of CSS code to be removed from the codebase without effecting
    the remaining styles
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许从代码库中删除CSS代码的部分而不影响其余样式
- en: To make it possible to rapidly iterate on any new designs
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使得能够快速迭代任何新设计
- en: Changing the properties and values that applied to one visual element should
    not unintentionally effect others
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改应用于一个视觉元素的属性和值不应无意中影响其他元素
- en: Any solution should require minimal tooling and workflow changes to implement
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何解决方案都应要求最少的工具和工作流程更改来实施。
- en: Where possible, W3C standards such as ARIA should be used to communicate state
    change within the user interface
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在可能的情况下，应使用W3C标准，如ARIA，来传达用户界面中的状态变化
- en: In the next chapter we are going to look more specifically at these problems.
    However, first, an important cautionary note.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将更具体地看这些问题。然而，首先，一个重要的警告。
- en: Solve your own problems
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决自己的问题
- en: 'I believe in *Pin Cing Do*, which translates roughly as the *The way of pragmatic
    coding* ([https://benfrain.com/be-better-front-end-developer-way-of-pragmatic-coding/](https://benfrain.com/be-better-front-end-developer-way-of-pragmatic-coding/)).
    This means solving the problems you actually have. Therefore, I''ll state something
    up front that may be obvious to some:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信*Pin Cing Do*，大致翻译为*务实编码之道*（[https://benfrain.com/be-better-front-end-developer-way-of-pragmatic-coding/](https://benfrain.com/be-better-front-end-developer-way-of-pragmatic-coding/)）。这意味着解决你真正遇到的问题。因此，我会直截了当地说一些对一些人来说可能是显而易见的事情：
- en: 'It may be that the problems I had were not the problems you have. As such,
    you should temper the advice and approach offered herein accordingly. Alternatively,
    consider that your needs may be better addressed by different approaches and methodologies.
    I''m not going to try and convince you that ECSS is necessarily the best solution
    in all situations. For example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 也许我遇到的问题并不是你所面临的问题。因此，你应该相应地调整所提供的建议和方法。或者，考虑到你的需求可能更适合不同的方法和方法论。我不会试图说服你，ECSS在所有情况下都是最佳解决方案。例如：
- en: ECSS won't give you the smallest possible CSS footprint (consider *Atomic CSS*
    ([http://acss.io/](http://acss.io/)) for that).
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ECSS不会给你最小可能的CSS占用空间（考虑*原子CSS*（[http://acss.io/](http://acss.io/)））。
- en: It isn't widely used and documented (consider *BEM* ([https://en.bem.info/](https://en.bem.info/))
    if ubiquity is a major concern).
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它并不被广泛使用和记录（如果普遍性是一个主要问题，考虑*BEM*（[https://en.bem.info/](https://en.bem.info/)））。
- en: ECSS does not abstract styles and allow styling of elements from a bunch of
    specific utility classes. You should look at OOCSS and read the writing of its
    many advocates for that.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ECSS不会抽象样式，允许使用一堆特定的实用类来为元素添加样式。你应该看看OOCSS，并阅读其许多倡导者的著作。
- en: 'OK, public service announcement out of the way. Let''s head on to the next
    chapter. This is where we''ll look at the principle problems of scaling and architecting
    CSS for large scale projects: specificity, the cascade, isolation and selectors
    tied to structural elements.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，公共服务公告已经发布。让我们继续下一章。这是我们将研究大型项目的CSS扩展和架构的主要问题：特异性、级联、隔离和与结构元素相关的选择器。
