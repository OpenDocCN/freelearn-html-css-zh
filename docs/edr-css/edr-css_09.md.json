["```css\n//PostCSS related\nvar postcss = require(\"gulp-postcss\");\nvar postcssImport = require(\"postcss-import\");\nvar autoprefixer = require(\"autoprefixer\");\nvar simpleVars = require(\"postcss-simple-vars\");\nvar mixins = require(\"postcss-mixins\");\nvar cssnano = require(\"cssnano\");\nvar reporter = require(\"postcss-reporter\");\nvar stylelint = require(\"stylelint\");\nvar stylelinterConfig = require(\"./stylelintConfig.js\");\nvar colorFunction = require(\"postcss-color-function\");\nvar nested = require(\"postcss-nested\");\nvar sourcemaps = require(\"gulp-sourcemaps\");\n\n// Create the styles\ngulp.task(\"styles\", [\"lint-styles\"], function () {\n\n    var processors = [\n        postcssImport({glob: true}),\n        mixins,\n        simpleVars,\n        colorFunction(),\n        nested,\n        autoprefixer({ browsers: [\"last 2 version\", \"safari 5\", \"opera 12.1\", \"ios 6\", \"android 2.3\"] }),\n        cssnano\n    ];\n\n    return gulp.src(\"preCSS/styles.css\")\n\n    // start Sourcemaps\n    .pipe(sourcemaps.init())\n\n    // We always want PostCSS to run\n    .pipe(postcss(processors).on( class=\"st\">\"error\", gutil.log))\n\n    // Write a source map into the CSS at this point\n    .pipe(sourcemaps.write())\n\n    // Set the destination for the CSS file\n    .pipe(gulp.dest(\"./build\"))\n\n    // If in DEV environment, notify user that styles have been compiled\n    .pipe(notify(\"Yo Mofo, check dem styles!!!\"))\n\n    // If in DEV environment, reload the browser\n    .pipe(reload({stream: true}));\n});\n\n```", "```css\n{\n    \"rules\": {\n        \"color-hex-case\": \"lower\",\n        \"color-hex-length\": \"long\",\n        \"color-named\": \"never\",\n        \"color-no-invalid-hex\": true,\n        \"font-family-name-quotes\": \"always-where-\n        required\",\n        \"font-weight-notation\": \"numeric\",\n        \"function-comma-newline-before\": \"never-multi-\n        line\",\n        \"function-comma-newline-after\": \"never-multi-\n        line\",\n        \"function-comma-space-after\": \"always\",\n        \"function-comma-space-before\": \"never\",\n        \"function-linear-gradient-no-nonstandard-\n        direction\": true,\n        \"function-max-empty-lines\": 0,\n        \"function-name-case\": \"lower\",\n        \"function-parentheses-space-inside\": \"never\",\n        \"function-url-data-uris\": \"never\",\n        \"function-url-quotes\": \"always\",\n        \"function-whitespace-after\": \"always\",\n        \"number-leading-zero\": \"never\",\n        \"number-no-trailing-zeros\": true,\n        \"string-no-newline\": true,\n        \"string-quotes\": \"double\",\n        \"length-zero-no-unit\": true,\n        \"unit-case\": \"lower\",\n        \"unit-no-unknown\": true,\n        \"value-keyword-case\": \"lower\",\n        \"value-no-vendor-prefix\": true,\n        \"value-list-comma-space-after\": \"always\",\n        \"value-list-comma-space-before\": \"never\",\n        \"shorthand-property-no-redundant-values\": true,\n        \"property-case\": \"lower\",\n        \"property-no-unknown\": true,\n        \"property-no-vendor-prefix\": true,\n        \"declaration-bang-space-before\": \"always\",\n        \"declaration-bang-space-after\": \"never\",\n        \"declaration-colon-space-after\": \"always\",\n        \"declaration-colon-space-before\": \"never\",\n        \"declaration-empty-line-before\": \"never\",\n        \"declaration-block-no-duplicate-properties\": true,\n        \"declaration-block-no-ignored-properties\": true,\n        \"declaration-block-no-shorthand-property-\n        overrides\": true,\n        \"declaration-block-semicolon-newline-after\":\n        \"always\",\n        \"declaration-block-semicolon-newline-before\":\n        \"never-multi-line\",\n        \"declaration-block-single-line-max-declarations\":\n        1,\n        \"declaration-block-trailing-semicolon\": \"always\",\n        \"block-closing-brace-empty-line-before\": \"never\",\n        \"block-no-empty\": true,\n        \"block-no-single-line\": true,\n        \"block-opening-brace-newline-after\": \"always\",\n        \"block-opening-brace-space-before\": \"always\",\n        \"selector-attribute-brackets-space-inside\":\n        \"never\",\n        \"selector-attribute-operator-space-after\":\n        \"never\",\n        \"selector-attribute-operator-space-before\":\n        \"never\",\n        \"selector-attribute-quotes\": \"always\",\n        \"selector-class-pattern\": [\"^[a-z]([a-z0-9]){1,3}-[A-Z][a-zA-Z0-9]+(_[A-Z][a-zA-Z0-9]+)?(-([a-z0-9-]+)?[a-z0-9])?$\", { \"resolveNestedSelectors\": true }],\n        \"selector-combinator-space-after\": \"always\",\n        \"selector-combinator-space-before\": \"always\",\n        \"selector-max-compound-selectors\": 3,\n        \"selector-max-specificity\": \"0,3,0\",\n        \"selector-no-id\": true,\n        \"selector-no-qualifying-type\": true,\n        \"selector-no-type\": true,\n        \"selector-no-universal\": true,\n        \"selector-no-vendor-prefix\": true,\n        \"selector-pseudo-class-case\": \"lower\",\n        \"selector-pseudo-class-no-unknown\": true,\n        \"selector-pseudo-class-parentheses-space-inside\":\n        \"never\",\n        \"selector-pseudo-element-case\": \"lower\",\n        \"selector-pseudo-element-colon-notation\":\n        \"single\",\n        \"selector-pseudo-element-no-unknown\": true,\n        \"selector-max-empty-lines\": 0,\n        \"selector-list-comma-newline-after\": \"always\",\n        \"selector-list-comma-newline-before\": \"never-\n        multi-line\",\n        \"selector-list-comma-space-before\": \"never\",\n        \"rule-nested-empty-line-before\": \"never\",\n        \"media-feature-colon-space-after\": \"always\",\n        \"media-feature-colon-space-before\": \"never\",\n        \"media-feature-name-case\": \"lower\",\n        \"media-feature-name-no-vendor-prefix\": true,\n        \"media-feature-no-missing-punctuation\": true,\n        \"media-feature-parentheses-space-inside\": \"never\",\n        \"media-feature-range-operator-space-after\":\n        \"always\",\n        \"media-feature-range-operator-space-before\": \"always\",\n        \"at-rule-no-unknown\": [true, {\"ignoreAtRules\": [\"mixin\"]}],\n        \"at-rule-no-vendor-prefix\": true,\n        \"at-rule-semicolon-newline-after\": \"always\",\n        \"at-rule-name-space-after\": \"always\",\n        \"stylelint-disable-reason\": \"always-before\",\n        \"comment-no-empty\": true,\n        \"indentation\": 4,\n        \"max-empty-lines\": 1,\n        \"no-duplicate-selectors\": true,\n        \"no-empty-source\": true,\n        \"no-eol-whitespace\": true,\n        \"no-extra-semicolons\": true,\n        \"no-indistinguishable-colors\": [true, {\n            \"threshold\": 1,\n            \"whitelist\": [ [ \"#333333\", \"#303030\" ] ]\n        }],\n        \"no-invalid-double-slash-comments\": true\n    }\n}\n```"]