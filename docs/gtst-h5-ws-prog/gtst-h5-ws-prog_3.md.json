["```js\nvar server = new WebSocketServer(\"ws://localhost:8181\");\n```", "```js\nvar clients = new List<IWebSocketConnection>();\n```", "```js\nserver.Start(socket) =>\n{\n});\n```", "```js\nserver.Start(socket) =>\n{\n  socket.OnOpen = () =>\n  {\n    // Add the incoming connection to our list.\n    clients.Add(socket);\n  }\n\n  // Handle the other events here\u2026\n}); \n```", "```js\nsocket.OnClose = () =>\n{\n  // Remove the disconnected client from the list.\n  clients.Remove(socket);\n};\n```", "```js\nsocket.OnMessage = () =>\n{\n  // Display the message on the console.\n  Console.WriteLine(message);\n};\n```", "```js\nsocket.OnMessage = () =>\n{\nforeach (var client in clients)\n{\n  // Send the message to everyone!\n  // Also, send the client connection's unique identifier in order to recognize who is who.\n  client.Send(client.ConnectionInfo.Id + \" says: \" + message);\n}\n};\n```", "```js\nnamespace WebSockets.Server\n{\n  class Program\n  {\n    static void Main(string[] args)\n    {\n      // Store the subscribed clients.\n      var clients = new List<IWebSocketConnection>();\n\n      // Initialize the WebSocket server connection.\n      var server = new WebSocketServer(\"ws://localhost:8181\");\n\n      server.Start(socket) =>\n      {\n        socket.OnOpen = () =>\n        {\n          // Add the incoming connection to our list.\n          clients.Add(socket);\n\n          // Inform the others that someone has just joined the conversation.\n          foreach (var client in clients)\n          {\n            // Check the connection unique ID and display a different welcome message!\n            if (client.ConnectionInfo.Id != socket.ConnectionInfo.Id)\n            {\n              client.Send(\"<i>\" + socket.ConnectionInfo.Id + \" joined the conversation.</i>\");\n            }\n            else\n            {\n              client.Send(\"<i>You have just joined the conversation.</i>\");\n            }\n          }\n        };\n\n        socket.OnClose = () =>\n        {\n          // Remove the disconnected client from the list.\n          clients.Remove(socket);\n\n          // Inform the others that someone left the conversation.\n          foreach (var client in clients)\n          {\n            if (client.ConnectionInfo.Id != socket.ConnectionInfo.Id)\n            {\n              client.Send(\"<i>\" + socket.ConnectionInfo.Id + \" left the chat room.</i>\");\n              }\n            }\n          };\n\n          socket.OnMessage = message =>\n          {\n            // Send the message to everyone!\n            // Also, send the client connection's unique identifier in order to recognize who is who.\n            foreach (var client in clients)\n            {\n              client.Send(socket.ConnectionInfo.Id + \" says: <strong>\" + message + \"</strong>\");\n            }\n          };\n        });\n\n        // Wait for a key press to close...\n        Console.ReadLine();\n      }\n  }\n}\n```"]