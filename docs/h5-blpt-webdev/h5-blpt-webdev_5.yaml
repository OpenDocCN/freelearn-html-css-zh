- en: Chapter 5. Customizing the Apache Server
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章。自定义Apache服务器
- en: Our Sun and Sand festival site is more or less done! But before we deploy it
    to production, let us make sure we have optimized the configuration of the server
    where the page and the associated files will be served from, so that the end users
    can load the page as quickly as possible, while we check against security vulnerabilities
    that might cause our site to get hacked.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的Sun and Sand节日网站基本上已经完成了！但在部署到生产环境之前，让我们确保我们已经优化了页面和相关文件所在的服务器的配置，以便最终用户可以尽快加载页面，同时我们检查可能导致我们的网站被黑客攻击的安全漏洞。
- en: Server-side configurations
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务器端配置
- en: Before we go further, let us briefly look at what a server does. The server
    understands a browser's request for a page of your site and then looks for the
    file the URL requests. The server then sends the file back to the browser with
    additional information called HTTP headers. **Apache** is the most popular server
    software for websites, and HTML5 Boilerplate comes with a configuration file for
    Apache called `.htaccess`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，让我们简要地看一下服务器的作用。服务器理解浏览器对站点页面的请求，然后寻找URL请求的文件。服务器然后以HTTP头的形式将文件发送回浏览器。**Apache**是网站最流行的服务器软件，HTML5
    Boilerplate附带了一个名为`.htaccess`的Apache配置文件。
- en: Setting up the Apache server
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Apache服务器
- en: Before we check out the various features of the Apache configuration file provided
    by HTML5 Boilerplate, let us set up a local Apache server, so that we can see
    these features in action.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们查看HTML5 Boilerplate提供的Apache配置文件的各种功能之前，让我们设置一个本地Apache服务器，这样我们就可以看到这些功能的运行情况。
- en: Installing Apache
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Apache
- en: We will look at the installations of Apache on Mac, Windows, and Linux.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看一下在Mac、Windows和Linux上安装Apache。
- en: Mac
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Mac
- en: 'You do not have to do anything special; Apache is already installed. But to
    use it for this project, ensure you copy all the files to the website''s folder
    in your home folder (`/~<username>`). Edit the `/etc/apache2/httpd.conf` file
    to change the following highlighted code:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 您无需做任何特殊操作；Apache已经安装好了。但是为了在这个项目中使用它，请确保将所有文件复制到您的主文件夹中的网站文件夹（`/~<username>`）。编辑`/etc/apache2/httpd.conf`文件以更改以下突出显示的代码：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到以下：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You will also need to change this entry in `/etc/apache2/<username>.conf` the
    same way.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要以相同的方式更改`/etc/apache2/<username>.conf`中的条目。
- en: Windows
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Windows
- en: 'You need to download and install Apache on Windows; it can be downloaded from
    `httpd.apache.org/docs/2.2/platform/windows.html`. Note that you need to add the
    following code snippet to `conf/httpd.conf`, located within the folder where the
    Apache application is found:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在Windows上下载并安装Apache；可以从`httpd.apache.org/docs/2.2/platform/windows.html`下载。请注意，您需要将以下代码片段添加到`conf/httpd.conf`中，该文件位于找到Apache应用程序的文件夹内：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Linux
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Linux
- en: 'If you are using Ubuntu, there is a friendly documentation available at [https://help.ubuntu.com/8.04/serverguide/C/httpd.html](https://help.ubuntu.com/8.04/serverguide/C/httpd.html).
    To enable `.htaccess` files, used to configure your Apache server, you need to
    edit `/etc/apache2/sites-available/default` from the following code snippet:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用Ubuntu，可以在[https://help.ubuntu.com/8.04/serverguide/C/httpd.html](https://help.ubuntu.com/8.04/serverguide/C/httpd.html)找到友好的文档。要启用`.htaccess`文件，用于配置您的Apache服务器，您需要编辑`/etc/apache2/sites-available/default`，从以下代码片段中：
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To the following code snippet:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 到以下代码片段：
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Configuring Apache
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置Apache
- en: 'Our folder for HTML5 Boilerplate contains a file called `.htaccess`. As the
    filename starts with a `.`, it is likely that `.htaccess` won''t show up when
    you list your files in Finder/Windows Explorer or other file manager utilities,
    as shown in the following screenshot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的HTML5 Boilerplate文件夹中包含一个名为`.htaccess`的文件。由于文件名以`.`开头，因此在Finder/Windows资源管理器或其他文件管理工具中列出文件时，`.htaccess`可能不会显示出来，如下面的截图所示：
- en: '![Configuring Apache](img/8505_05_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![配置Apache](img/8505_05_01.jpg)'
- en: But if you enable the hidden files to appear on your OS, you will be able to
    see this file.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果您启用了操作系统上的隐藏文件显示，您将能够看到这个文件。
- en: All that is required now is to move our site files (including the `.htaccess`
    file) to the server we just set up. Apache looks for a `.htaccess` file on all
    folders (unless told not to by a configuration setting) and so having our `.htaccess`
    file in the parent folder of our site is just fine.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在所需的就是将我们的网站文件（包括`.htaccess`文件）移动到我们刚刚设置的服务器上。Apache会在所有文件夹中寻找`.htaccess`文件（除非通过配置设置告知不要这样做），因此将我们的`.htaccess`文件放在站点的父文件夹中就可以了。
- en: Using a `.htaccess` file for testing is not a bad idea in general. However,
    if you want to make your site really zippy, it is best to put the configuration
    directly on the Apache server's main configuration file (`httpd.conf`). Unfortunately,
    not all hosting providers allow this.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，使用`.htaccess`文件进行测试并不是一个坏主意。但是，如果您想让您的网站真正快速，最好将配置直接放在Apache服务器的主配置文件（`httpd.conf`）中。不幸的是，并非所有的托管提供商都允许这样做。
- en: 'If you do have access to the Apache server''s main configuration file (`httpd.conf`),
    you should copy the configurations from HTML5 Boilerplate''s `.htaccess` file
    and put them within `httpd.conf` inside a `Directory` tag, as shown in the following
    code snippet:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您可以访问Apache服务器的主配置文件（`httpd.conf`），您应该从HTML5 Boilerplate的`.htaccess`文件中复制配置，并将其放在`httpd.conf`中的`Directory`标签内，如下面的代码片段所示：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You should then remove the `.htaccess` file as the directives are already on
    the server's main configuration file.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您应该删除`.htaccess`文件，因为指令已经在服务器的主配置文件中了。
- en: Features available out of the box
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开箱即用的功能
- en: Most of the advantages that HTML5 Boilerplate's `.htaccess` file provides are
    not immediately obvious. If your site receives low traffic and does not make too
    many network requests, you may not notice any significant difference using HTML5
    Boilerplate's `.htaccess` file. However, when you do have spikes of high activity
    (not uncommon!) or suddenly have a lot of network requests for images and videos
    that your site requires, HTML5 Boilerplate's `.htaccess` comes to your rescue
    automatically.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 Boilerplate的`.htaccess`文件提供的大多数优势并不是立即显而易见的。如果您的网站流量较低，且不会发出太多网络请求，您可能不会注意到使用HTML5
    Boilerplate的`.htaccess`文件会有显著的差异。但是，当您出现高活动量的峰值（这并不罕见！）或突然有很多您网站所需的图像和视频的网络请求时，HTML5
    Boilerplate的`.htaccess`会自动帮助您。
- en: All of these features are available to you as soon as you either put a `.htaccess`
    file in the project folder or if you set up Apache's main configuration file as
    indicated earlier.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 只要您将`.htaccess`文件放在项目文件夹中，或者按照前面指示的设置Apache的主配置文件，所有这些功能都可以立即使用。
- en: Removing ETags
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除ETags
- en: '**Entity Tags** (**ETags**) validate whether components, that is, images, files,
    and so on, in a browser''s cache match components on the server. Unfortunately,
    ETags do more harm than good. Most servers have ETags available by default, which
    is why HTML5 Boilerplate''s server configuration file prevents a server from serving
    them, as shown in the following code snippet:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**实体标签**（**ETags**）验证浏览器缓存中的组件（如图像、文件等）是否与服务器上的组件匹配。不幸的是，ETags带来的害处大于好处。大多数服务器默认启用ETags，这就是为什么HTML5
    Boilerplate的服务器配置文件阻止服务器提供它们的原因，如下面的代码片段所示：'
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Steve Souders writes in depth on why ETags fail to solve the problem they were
    designed for and why you should remove them, at `developer.yahoo.com/blogs/ydn/posts/2007/07/high_performanc_11/`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Steve Souders深入探讨了为什么ETags无法解决它们设计的问题以及为什么您应该删除它们，网址为`developer.yahoo.com/blogs/ydn/posts/2007/07/high_performanc_11/`。
- en: Gzip components
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Gzip组件
- en: '**Gzip** is the most popular compression method. By compressing your files
    with Gzip, you can make sure your files get transferred more quickly, even with
    low bandwidth connections. Sometimes the savings are as much as 70 percent of
    file size, making this a great performance configuration default.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gzip**是最流行的压缩方法。通过使用Gzip压缩文件，您可以确保文件在低带宽连接下更快地传输。有时，节省的文件大小高达70％，使其成为一个很好的性能配置默认值。'
- en: 'Let us look at how big our files are without our `.htaccess` Gzip feature in
    place. To do this, we simply comment out that section, as shown in the following
    code snippet:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看没有`.htaccess` Gzip功能时我们的文件有多大。为了做到这一点，我们只需注释掉该部分，如下面的代码片段所示：
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, let us look at the sizes of files that get delivered to our browser through
    the network tools available in browser developer tools (in this case, Chrome Developer
    Tools):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过浏览器开发者工具中的网络工具来查看通过网络传递到我们浏览器的文件的大小（在本例中是Chrome开发者工具）：
- en: '![Gzip components](img/8505_05_02.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![Gzip组件](img/8505_05_02.jpg)'
- en: 'Now, let''s enable Gzip by enabling the appropriate rules in `.htaccess` by
    removing `#` from the beginning of the lines. Notice the difference, as shown
    in the following screenshot:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过从`.htaccess`中删除行首的`#`来启用Gzip的适当规则。注意下面的截图中的差异：
- en: '![Gzip components](img/8505_05_03.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![Gzip组件](img/8505_05_03.jpg)'
- en: If you would like to learn more about Gzip, [Chapter 4](ch04.html "Chapter 4. Adding
    Interactivity and Completing Your Site"), *Smaller Components, Book of Speed,
    Stoyan Stefanov*, found at [www.bookofspeed.com/chapter4.html](http://www.bookofspeed.com/chapter4.html),
    would be a good place to start from.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于Gzip的信息，[第4章](ch04.html "第4章。添加交互性并完成您的网站"), *Smaller Components,
    Book of Speed, Stoyan Stefanov*，网址为[www.bookofspeed.com/chapter4.html](http://www.bookofspeed.com/chapter4.html)，将是一个很好的起点。
- en: Using Expires header for better cache control
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Expires头文件进行更好的缓存控制
- en: 'Servers can indicate to browsers how long they can keep files in the cache.
    This is pretty useful for static files that don''t change frequently, and will
    reduce your page-load time. HTML5 Boilerplate''s `.htaccess` file has a set of
    defaults for most static files, as shown in the following code snippet:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器可以告诉浏览器它们可以将文件保存在缓存中的时间有多长。这对于不经常更改的静态文件非常有用，并且将减少页面加载时间。HTML5 Boilerplate的`.htaccess`文件有一组默认值适用于大多数静态文件，如下面的代码片段所示：
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This tells the server to cache requests for files of each type as soon as it
    is accessed freshly for the period specified by the text `"access plus…"`. For
    example, consider the following code snippet:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉服务器在每个类型的文件被访问后立即缓存请求，缓存时间由文本`"access plus…"`指定。例如，考虑以下代码片段：
- en: '[PRE9]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This fragment makes the server tell the browser, requesting CSS and JavaScript
    files, to cache each of these files for at least a year since the first time it
    was accessed, unless the user deliberately clears their cache.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个片段让服务器告诉浏览器请求CSS和JavaScript文件时，要至少缓存这些文件一年，除非用户故意清除他们的缓存。
- en: Note
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Yahoo's best practices for speeding up your site has a detailed explanation
    of what the Expires header does at `developer.yahoo.com/performance/rules.html#expires`.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Yahoo关于加速网站的最佳实践详细解释了Expires头文件的作用，网址为`developer.yahoo.com/performance/rules.html#expires`。
- en: Custom 404 page
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义404页面
- en: 'HTML5 Boilerplate provides a custom 404 page called `404.html`. But, this will
    never be used, unless the server knows to serve this file every time a resource
    is not found. HTML5 Boilerplate''s `.htaccess` file has a configuration that tells
    the server to use this file as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 Boilerplate提供了一个名为`404.html`的自定义404页面。但是，除非服务器知道在找不到资源时每次都要提供此文件，否则永远不会被使用。HTML5
    Boilerplate的`.htaccess`文件有一个配置，告诉服务器按如下方式使用此文件：
- en: '[PRE10]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Make sure to refer to the `404.html` using the full path. For example, on a
    Mac, the full path would be `/~<username>/404.html`, if you are hosting it in
    the website's folder under your `<username>` folder.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 确保使用完整路径引用`404.html`。例如，在Mac上，如果您将其托管在您的`<username>`文件夹下的网站文件夹中，则完整路径将是`/~<username>/404.html`。
- en: 'The following screenshot shows how a browser renders the default HTML5 Boilerplate
    404 page, when HTML5 Boilerplate''s `.htaccess` file is used:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了当使用HTML5 Boilerplate的`.htaccess`文件时，浏览器如何呈现默认的HTML5 Boilerplate 404页面：
- en: '![Custom 404 page](img/8505_05_04.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![自定义404页面](img/8505_05_04.jpg)'
- en: Forcing the latest IE version
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 强制使用最新的IE版本
- en: Internet Explorer utilizes a `meta` tag to decide whether it should render a
    site in compatibility mode or use the latest rendering engine to render it.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Internet Explorer利用`meta`标签来决定是否应该以兼容模式呈现站点，还是使用最新的渲染引擎来呈现它。
- en: Google Chrome has released a plugin named **Chrome Frame** , downloadable from
    [https://developers.google.com/chrome/chrome-frame/](https://developers.google.com/chrome/chrome-frame/)
    that, if installed on a user's computer, will provide the experience of a modern
    browser when the user uses older versions of Internet Explorer. Your site can
    opt-in to using this plugin on a user's computer, when your page is being viewed
    on older versions of Internet Explorer. To opt-in to using this plugin automatically,
    append `", chrome=1"` to the `content` attribute value for the `http-equiv` `meta`
    tag.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Google Chrome发布了一个名为**Chrome Frame**的插件，可以从[https://developers.google.com/chrome/chrome-frame/](https://developers.google.com/chrome/chrome-frame/)下载，如果安装在用户的计算机上，当用户使用较旧版本的Internet
    Explorer时，将提供现代浏览器的体验。当您的页面在较旧版本的Internet Explorer上被查看时，您的网站可以选择使用这个插件。要自动选择使用这个插件，将`",
    chrome=1"`附加到`http-equiv` `meta`标签的`content`属性值。
- en: 'This tag can be set within the HTML file itself, which is what HTML5 Boilerplate
    does, as shown in the following code snippet:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这个标签可以在HTML文件本身中设置，这就是HTML5 Boilerplate所做的，如下面的代码片段所示：
- en: '[PRE11]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'However, as HTML5 Boilerplate uses conditional comments around the `html` tag,
    IE will render the HTML in **Compatibility View**, not with Chrome Frame. Hence,
    using the `meta` tag with conditional comments around the `html` tag would not
    work. HTML5 Boilerplate''s .`htaccess` file sets this as an HTTP header instead,
    as shown in the following code snippet:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，由于HTML5 Boilerplate在`html`标签周围使用了条件注释，IE将以**兼容视图**而不是Chrome Frame来呈现HTML。因此，在`html`标签周围使用带有条件注释的`meta`标签是行不通的。HTML5
    Boilerplate的`.htaccess`文件将其设置为HTTP头，如下面的代码片段所示：
- en: '[PRE12]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This forces IE to respect the HTTP header that is sent, and use the latest rendering
    engine irrespective of what the `meta` tag states. You can also set IE to use
    whatever rendering engine you like. We discuss this feature in depth in [Appendix](apa.html
    "Appendix A. You Are an Expert,Now What?"), *You Are an Expert, Now What?*, under
    the section *What is meta x-ua-compatible?*.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这将强制IE尊重发送的HTTP头，并使用最新的渲染引擎，而不管`meta`标签陈述的是什么。您还可以设置IE使用任何您喜欢的渲染引擎。我们在[附录](apa.html
    "附录 A. 你是专家，现在怎么办？")中深入讨论了这个功能，*你是专家，现在怎么办？*，在*什么是meta x-ua-compatible？*一节下。
- en: Note
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: There is a great level of detailed testing and comments that informed our decision
    to recommend this method for setting IE Compatibility mode, which is available
    from the **Issue Tracker** on Github at [github.com/h5bp/html5-boilerplate/issues/378](http://github.com/h5bp/html5-boilerplate/issues/378).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经过了大量详细的测试和评论，这些测试和评论为我们推荐使用这种方法设置IE兼容模式提供了信息，这些信息可以在Github的**Issue跟踪器**上找到，网址为[github.com/h5bp/html5-boilerplate/issues/378](http://github.com/h5bp/html5-boilerplate/issues/378)。
- en: Using UTF-8 encoding
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用UTF-8编码
- en: 'Character encoding is a way to represent your text data in byte sequences.
    There have been different standards available for different scripts, for example,
    Greek, Japanese, and so on, but the standards body that creates HTML specifications,
    W3C, strongly endorses the use of **UTF-8** as the de-facto encoding scheme for
    all text served on the Web to ensure all browsers can render your text data correctly.
    The `.htaccess` file sets it in the following manner:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 字符编码是一种以字节序列表示文本数据的方式。不同的脚本有不同的标准，例如希腊语、日语等，但是创建HTML规范的标准机构W3C强烈推荐在Web上提供的所有文本都使用**UTF-8**作为事实上的编码方案，以确保所有浏览器都能正确呈现您的文本数据。`.htaccess`文件以以下方式设置它：
- en: '[PRE13]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Note
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Edward Z. Yang wrote an informative post on why UTF-8 is the best choice for
    character encoding at `htmlpurifier.org/docs/enduser-utf8.html#whyutf8;` it is
    worth reading if you are interested in this topic.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Edward Z. Yang在`htmlpurifier.org/docs/enduser-utf8.html#whyutf8`上写了一篇信息丰富的文章，解释了为什么UTF-8是字符编码的最佳选择；如果您对这个话题感兴趣，这篇文章值得一读。
- en: Serving the right MIME types
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提供正确的MIME类型
- en: A **Multipurpose Internet Mail Extensions** (**MIME**) type sent as a HTTP header
    helps the browser decide how to process the content that is sent. For example,
    a browser needs to know when a file is a stylesheet and when it is a downloadable
    text document. This information is provided by the MIME type HTTP header that
    the server returns when sending that resource. HTML5 Boilerplate's `.htaccess`
    file ensures your server provides the right MIME type when serving content.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 作为HTTP头发送的**多用途互联网邮件扩展**（**MIME**）类型有助于浏览器决定如何处理发送的内容。例如，浏览器需要知道文件是样式表还是可下载的文本文档。服务器发送资源时返回的MIME类型HTTP头提供了这些信息。HTML5
    Boilerplate的`.htaccess`文件确保服务器在提供内容时提供正确的MIME类型。
- en: 'For example, in our Senegal music festival website, we need our Web fonts to
    be understood by the browser to be a font file and not garbled text. In our HTML5
    Boilerplate `.htaccess` file, the following lines make sure the server returns
    the correct MIME type so browsers can do that:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在我们的塞内加尔音乐节网站中，我们需要让浏览器理解我们的Web字体是字体文件而不是乱码文本。在我们的HTML5 Boilerplate`.htaccess`文件中，以下行确保服务器返回正确的MIME类型，以便浏览器可以做到这一点：
- en: '[PRE14]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Note
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information on MIME types can be found on the **Mozilla Developer Network**
    at `developer.mozilla.org/en/Properly_Configuring_Server_MIME_Types#What_are_MIME_types.3F`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 有关MIME类型的更多信息可以在**Mozilla开发者网络**上找到，网址为`developer.mozilla.org/en/Properly_Configuring_Server_MIME_Types#What_are_MIME_types.3F`。
- en: Blocking access to hidden folders
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 阻止访问隐藏文件夹
- en: 'If you use a **Version Control System** (**VCS**) to manage your website''s
    code, the hidden folders used to manage versioning (`.git` or `.svn`) are likely
    to exist in your production servers too. You do not want anyone to access these
    files and find any information that could be used to hack your website. HTML5
    Boilerplate prevents the server from providing content requested of these folders
    within the `.htaccess` file, as shown in the following code snippet:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用**版本控制系统**（**VCS**）来管理网站的代码，则用于管理版本的隐藏文件夹（`.git`或`.svn`）可能也存在于您的生产服务器中。您不希望任何人访问这些文件并找到可能被用来黑客攻击您的网站的任何信息。HTML5
    Boilerplate通过`.htaccess`文件阻止服务器提供对这些文件的内容的请求，如以下代码片段所示：
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Blocking access to backup and source files
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 阻止访问备份和源文件
- en: 'If you have your databases backed up on the server, for example, `database.sql.bak`,
    you do not want anyone to access that either, nor logfiles or any of your source
    files, such as Photoshop files for logos—we know it happens! The following code
    in the `.htaccess` file prevents access to these files:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您的数据库在服务器上备份，例如`database.sql.bak`，您也不希望任何人访问，也不希望访问日志文件或任何源文件，例如用于logo的Photoshop文件
    - 我们知道这种情况经常发生！`.htaccess`文件中的以下代码阻止访问这些文件：
- en: '[PRE16]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This tells the server to look for files that end with any of these extensions:
    `<filename>.bak`, `<filename>.config`, and so on, and if so, deny processing requests
    for such files. It will return a `403 Forbidden` error instead.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉服务器查找以以下任何扩展名结尾的文件：`<filename>.bak`，`<filename>.config`等等，如果是这样，拒绝处理对这些文件的请求。它将返回`403
    Forbidden`错误。
- en: Starting Rewrite engine
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动重写引擎
- en: 'The Apache server requires you to start the rewrite engine before you do any
    URL rewriting. The HTML5 Boilerplate `.htaccess` file enables this as shown in
    the following code snippet:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行任何URL重写之前，Apache服务器要求您启动重写引擎。HTML5 Boilerplate的`.htaccess`文件通过以下代码片段启用了这一点：
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: If your site is in a subfolder, remove the `#` from the `RewriteBase` line and
    set it to the full path to the subfolder from the root.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的站点在子文件夹中，请删除`RewriteBase`行前的`#`并将其设置为从根目录到子文件夹的完整路径。
- en: Preventing 404 errors for non-existing redirected folders
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 防止不存在的重定向文件夹出现404错误
- en: In Apache, you need to disable `MultiViews` if you want to redirect URLs requested
    from paths, that do not exist, to another path.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在Apache中，如果您希望重定向从不存在的路径请求的URL到另一个路径，您需要禁用`MultiViews`。
- en: 'For example, if you have an incoming request to `http://example.com/beaches/10`
    and you want it to internally redirect to `http://example.com/index.php?q=10`
    and the folder `beaches` does not exist in the root folder of your website, Apache
    would throw an error. The HTML5 Boilerplate''s `.htaccess` file prevents this
    from occurring by using the following code statement:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您收到对`http://example.com/beaches/10`的请求，并且希望将其内部重定向到`http://example.com/index.php?q=10`，并且`beaches`文件夹不存在于您网站的根文件夹中，Apache将抛出错误。HTML5
    Boilerplate的`.htaccess`文件通过使用以下代码语句防止这种情况发生：
- en: '[PRE18]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Additional customizations
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他自定义
- en: Many additional customizations are provided but are commented out, as they require
    careful consideration and sometimes may have unwanted repercussions.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了许多其他自定义选项，但它们都被注释掉，因为它们需要仔细考虑，有时可能会产生意想不到的后果。
- en: Suppressing or forcing the "www." at the beginning of URLs
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 抑制或强制URL开头的“www。”
- en: Most of us do not realize that `http://example.com` and `http://www.example.com`
    are treated as two separate sites by search engines. You can either force rewriting
    of URLs to www or the non-www ones. I prefer the non-www URL, because it is three
    characters shorter!
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人没有意识到`http://example.com`和`http://www.example.com`在搜索引擎中被视为两个不同的站点。您可以强制重写URL以使用www或非www。我更喜欢非www
    URL，因为它比较短！
- en: 'HTML5 Boilerplate''s `.htaccess` file provides you with choices for doing either
    of them. By default, the configuration forces the server to rewrite requests for
    `http://www.example.com` to `http://example.com`. If you prefer the other way
    around, have the server rewrite requests for `http://example.com` to `http://www.example.com`,
    as described in the following steps:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 Boilerplate的`.htaccess`文件为您提供了这两种选择。默认情况下，配置会强制服务器将对`http://www.example.com`的请求重写为`http://example.com`。如果您喜欢另一种方式，可以让服务器将对`http://example.com`的请求重写为`http://www.example.com`，如以下步骤所述：
- en: 'Comment out the default option shown in the following code snippet:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注释掉以下代码片段中显示的默认选项：
- en: '[PRE19]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The commented-out default section should now look like the following code snippet:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在注释掉的默认部分应该看起来像以下代码片段：
- en: '[PRE20]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: As you might notice, all we did was add a `#` character and a space before each
    of those lines.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，我们所做的就是在每行前添加一个`#`字符和一个空格。
- en: 'Now, we shall enable the second option by uncommenting it. Change the following
    code snippet by uncommenting it:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将通过取消注释来启用第二个选项。通过取消注释更改以下代码片段：
- en: '[PRE21]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The uncommented code section should look like the following code snippet:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消注释的代码部分应该看起来像以下代码片段：
- en: '[PRE22]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: All we did was remove the `#` character and a space in front of the lines starting
    with `<IfModule mod_rewrite.c>` and ending with `</IfModule>`.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的就是删除以`<IfModule mod_rewrite.c>`开头并以`</IfModule>`结尾的行前的`#`字符和空格。
- en: Whichever option you want to use, make sure you don't have both these options
    enabled at the same time, as that would prevent Apache from serving your page.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您想使用哪个选项，请确保您不要同时启用这两个选项，因为这将阻止Apache提供您的页面。
- en: Setting cookies from iFrames
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从iFrames设置cookies
- en: IE usually blocks cookies set from within an IFrame. If you require such cookies
    to be set, especially if you have advertisements or social networking plugins,
    you need to send a **Platform for Privacy Preferences Project** (**P3P**) header.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: IE通常会阻止从IFrame中设置的cookies。如果您需要设置这样的cookies，特别是如果您有广告或社交网络插件，您需要发送**隐私偏好平台项目**（**P3P**）标头。
- en: 'Look for the comment in the `.htaccess` file with the same text as the title
    of this section and change the following lines:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在`.htaccess`文件中查找与本节标题相同的注释，并更改以下行：
- en: '[PRE23]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'To the following code snippet:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下代码片段中：
- en: '[PRE24]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-120
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Eric Law wrote about IE's cookie policies in detail, which makes for good reading
    at `blogs.msdn.com/b/ieinternals/archive/2009/08/20/wininet-ie-cookie-internals-faq.aspx`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Eric Law详细介绍了IE的cookie策略，可以在`blogs.msdn.com/b/ieinternals/archive/2009/08/20/wininet-ie-cookie-internals-faq.aspx`上阅读。
- en: PHP security defaults
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PHP安全默认值
- en: If you are serving PHP, there are a lot of configuration options in the HTML5
    Boilerplate's `.htaccess` file that could make your PHP installation more secure.
    If you are using PHP, you can turn them on using the same procedure as the one
    outlined in the section titled *Suppress or force the "www."' at the beginning
    of URLs*.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在使用PHP，HTML5 Boilerplate的`.htaccess`文件中有很多配置选项，可以使你的PHP安装更安全。如果你使用PHP，你可以使用与*抑制或强制URL开头的"www。"*一节中概述的相同过程打开它们。
- en: Given we aren't using PHP in our website, we do not need to turn them on.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于我们的网站不使用PHP，我们不需要打开它们。
- en: Stop advertising Apache version
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 停止广告Apache版本
- en: 'You can prevent Apache from advertising its version to mitigate chances of
    malicious programmers exploiting vulnerabilities in a particular version. Here
    is how the Apache version is advertised:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以防止Apache广告其版本，以减少恶意程序员利用特定版本的漏洞的可能性。以下是Apache版本的广告方式：
- en: '![Stop advertising Apache version](img/8505_05_05.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![停止广告Apache版本](img/8505_05_05.jpg)'
- en: This previous screenshot shows the Apache version number sent as a HTTP header
    to the browser.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这个先前的截图显示了Apache版本号作为HTTP头发送到浏览器。
- en: Note
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You can use the developer tools that come with most browsers to verify HTTP
    headers. In this case, we are using Chrome's Developer Tools **Resources** tab.
    More information on how to use this tool is available on Chrome's help center
    at `developers.google.com/chrome-developer-tools/docs/network`.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用大多数浏览器自带的开发者工具来验证HTTP头。在这种情况下，我们使用Chrome的开发者工具**资源**选项卡。关于如何使用这个工具的更多信息，请参考Chrome的帮助中心`developers.google.com/chrome-developer-tools/docs/network`。
- en: 'This needs to be configured from within the server''s main configuration file,
    and we cannot do this from within the `.htaccess` file. So, let''s remove the
    following directive from the HTML5 Boilerplate''s `.htaccess` file and replace
    the one found in `/etc/apache2/httpd.conf` (the path to this file will be different
    if you are using Windows or Linux):'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要从服务器的主配置文件中进行配置，我们无法从`.htaccess`文件中进行配置。因此，让我们从HTML5 Boilerplate的`.htaccess`文件中删除以下指令，并替换为在`/etc/apache2/httpd.conf`中找到的指令（如果你使用Windows或Linux，则该文件的路径将不同）：
- en: '[PRE25]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The following screenshot shows the version-less HTTP header sent by Apache
    after applying the configuration value to the Apache server''s main configuration
    file:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在将配置值应用到Apache服务器的主配置文件后，下面的截图显示了Apache发送的无版本HTTP头：
- en: '![Stop advertising Apache version](img/8505_05_06.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![停止广告Apache版本](img/8505_05_06.jpg)'
- en: Allowing concatenation from within specific JS and CSS files
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 允许在特定JS和CSS文件中进行合并
- en: Sometimes, you may want the server to combine multiple script or stylesheet
    files into one response when a request is made. Note that doing so does not make
    it any faster for your page to load, as the server takes its own time to stitch
    these files together.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，当请求发出时，你可能希望服务器将多个脚本或样式表文件合并为一个响应。请注意，这样做并不会加快页面加载速度，因为服务器需要自己的时间将这些文件拼接在一起。
- en: This is an option I recommend you consider last, when every other solution has
    failed. Ideally, you should never be doing this.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我建议你在其他解决方案都失败时最后考虑的选项。理想情况下，你永远不应该这样做。
- en: 'To do this, first uncomment the following lines in the `.htaccess` file from:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，首先取消`.htaccess`文件中的以下行：
- en: '[PRE26]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To the following code snippet:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 改为以下代码片段：
- en: '[PRE27]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Then, in the `js` folder, create a file called `script.combined.js`.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在`js`文件夹中，创建一个名为`script.combined.js`的文件。
- en: 'Open the `script.combined.js` file in your text editor, and use the following
    syntax with all the files that should be combined and output in the `script.combined.js`
    file:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`script.combined.js`文件，并使用以下语法将所有应该合并并输出到`script.combined.js`文件中的文件：
- en: '[PRE28]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: If you are looking to combine stylesheets on the fly, you can do the same. Create
    a file in the `css` folder called `style.combined.css`.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要动态合并样式表，你可以这样做。在`css`文件夹中创建一个名为`style.combined.css`的文件。
- en: 'Open the `style.combined.css` file in your text editor, and use the following
    syntax with all the files that should be combined and output in the `style.combined.css`
    file:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在文本编辑器中打开`style.combined.css`文件，并使用以下语法将所有应该合并并输出到`style.combined.css`文件中的文件：
- en: '[PRE29]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: As I mentioned earlier, doing this will make Apache slower to respond to these
    requests. You should be using a build script to concatenate files (we will look
    into the build script in [Chapter 7](ch07.html "Chapter 7. Automate Deployment
    With the Build Script"), *Automate Deployment with the Build Script*). So uncomment
    this setting only if you have no other choice.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我之前提到的，这样做会使Apache对这些请求的响应变慢。你应该使用一个构建脚本来连接文件（我们将在[第7章](ch07.html "第7章。使用构建脚本自动部署")中研究构建脚本，*使用构建脚本自动部署*）。所以只有在没有其他选择的情况下取消这个设置。
- en: Stopping screen flicker in IE on CSS rollovers
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在CSS的鼠标悬停效果中停止IE的屏幕闪烁
- en: 'When you use background images that change on hovering over a link, you will
    see a flicker in IE when this occurs. You can prevent this by changing the following
    lines in the `.htaccess` file from:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用背景图片在链接上悬停时发生变化，IE会出现闪烁。你可以通过更改`.htaccess`文件中的以下行来防止这种情况发生：
- en: '[PRE30]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'To the following code snippet:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 改为以下代码片段：
- en: '[PRE31]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Preventing SSL certificate warnings
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 防止SSL证书警告
- en: If you want to serve your site only on a secured connection, you need to obtain
    a **Secure Sockets Layer** (**SSL**) certificate that browsers will use to identify
    your website. If the domain on the certificate does not match the domain on the
    incoming request—, for example, you had a SSL certificate for `https://secure.example.com`,
    and the assets that are being loaded on the page hosted on that domain are served
    from `https://example.com`, but all of the files are hosted on the same Apache
    server; —then browsers will throw warnings and inform the user that the authenticity
    of the Web page is unverifiable.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只想在安全连接上提供您的网站，您需要获取一个**安全套接字层**（**SSL**）证书，浏览器将使用该证书来识别您的网站。如果证书上的域与传入请求上的域不匹配，例如，您为`https://secure.example.com`拥有SSL证书，而在该域上托管的页面上加载的资产是从`https://example.com`提供的，但所有文件都托管在同一个Apache服务器上；那么浏览器将抛出警告，并通知用户无法验证网页的真实性。
- en: 'You can make sure the requests to domain, which does not have the SSL certificate,
    is rewritten to the one for which you do have an SSL certificate. If you require
    this, you can uncomment the following snippet from:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以确保对没有SSL证书的域的请求被重定向到您拥有SSL证书的域。如果需要，您可以取消注释以下代码片段：
- en: '[PRE32]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'To the following code snippet:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是代码片段：
- en: '[PRE33]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Note that the `https://example-domain-please-change-me.com` URL needs to point
    to the domain you have an SSL certificate for.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`https://example-domain-please-change-me.com`的URL需要指向您拥有SSL证书的域。
- en: Note
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More details on the SSL and SSL certifications are given in the Linux documentation
    project at `tldp.org/HOWTO/SSL-Certificates-HOWTO/x64.html`.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 有关SSL和SSL证书的更多详细信息，请参阅Linux文档项目中的`tldp.org/HOWTO/SSL-Certificates-HOWTO/x64.html`。
- en: That covers all the optional features that HTML5 Boilerplate's `.htaccess` file
    provides. Let us take a look at cross-domain policies and how to set them.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 这涵盖了HTML5 Boilerplate的`.htaccess`文件提供的所有可选功能。让我们看看跨域策略以及如何设置它们。
- en: Cross-domain policies you should be aware of
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 您应该了解的跨域策略
- en: An HTTP request is called a **cross-domain** request when a page served from
    one domain, for example, `http://example.com`, requires data from another, say
    `http://foo.com`. By default, most browsers do not allow cross-domain requests
    of data–be it data or flash assets– to prevent malicious access.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当来自一个域的页面（例如`http://example.com`）需要来自另一个域（例如`http://foo.com`）的数据时，HTTP请求被称为**跨域**请求。默认情况下，大多数浏览器不允许跨域请求数据，无论是数据还是Flash资产，以防止恶意访问。
- en: However, you can set a cross-domain policy file on the server (in the previous
    example, the server where `http://foo.com` is served from), which allows browsers
    to access these resources.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，您可以在服务器上设置一个跨域策略文件（在上一个示例中，是从`http://foo.com`提供服务的服务器），允许浏览器访问这些资源。
- en: Flash requires this policy file to be specified in a file called `crossdomain.xml`,
    where you can specify which domains can make request of assets from the server.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: Flash需要在名为`crossdomain.xml`的文件中指定此策略文件，您可以在其中指定哪些域可以从服务器请求资产。
- en: This file is provided within HTML5 Boilerplate, and by default, the most restrictive
    policy is enabled. If you do want the least restrictive policy, you can uncomment
    that option and comment away the most restrictive one.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件包含在HTML5 Boilerplate中，默认情况下启用最严格的策略。如果您确实希望使用最不严格的策略，可以取消注释该选项，并注释掉最严格的选项。
- en: Note
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Do realize that you need to fully understand the implications of allowing cross-domain
    requests for access to assets before you make it less restrictive.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在放宽限制之前，确保充分了解允许跨域请求访问资产的影响。
- en: You can also make cross-domain AJAX requests, or restrict access to images or
    fonts, by setting an HTTP header. This is known as the **Cross Origin Resource
    Sharing** (**CORS**) policy.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过设置HTTP标头来进行跨域AJAX请求，或限制对图像或字体的访问。这被称为**跨域资源共享**（**CORS**）策略。
- en: Cross-domain AJAX requests
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 跨域AJAX请求
- en: AJAX requests can only be made if the requesting page is on the same domain
    as the URL it is requesting data from. CORS is a new HTML5 feature that will allow
    you to make AJAX requests from any domain, provided permission has been given
    to the requesting domain. By setting an HTTP header on the server from which you
    are requesting data using an AJAX request, you can overcome this limitation. Let
    us look at how this can be done.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在请求页面与请求数据的URL位于同一域上时，才能进行AJAX请求。CORS是HTML5的一个新功能，允许您从任何域进行AJAX请求，前提是已经给予了请求域的权限。通过在服务器上设置一个HTTP标头，您可以克服这个限制。让我们看看如何做到这一点。
- en: 'The following is an example of a cross-domain request that you could make:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是您可以进行的跨域请求的示例：
- en: '[PRE34]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'We note that the browser throws an error saying such access is forbidden, as
    shown in the following screenshot:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到浏览器会抛出错误，显示访问被禁止，如下面的截图所示：
- en: '![Cross-domain AJAX requests](img/8505_05_07.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![跨域AJAX请求](img/8505_05_07.jpg)'
- en: 'Now, in our `.htaccess` file hosted on [http://nimbupani.com](http://nimbupani.com),
    we will uncomment the following directive:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们托管在[http://nimbupani.com](http://nimbupani.com)上的`.htaccess`文件中，我们将取消注释以下指令：
- en: '[PRE35]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Let us try our code again. Aha! Now it works!
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再试一下我们的代码。啊哈！现在可以了！
- en: This is the least restrictive setting, which can allow any domain to make an
    AJAX request on your server. It is fairly trivial to make a very high volume of
    requests because of this and also to pretend it's your site and fool the visitors,
    and so on. Use this setting with care.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最不严格的设置，可以允许任何域在您的服务器上进行AJAX请求。由于这个原因，非常容易进行大量的请求，也可以假装是您的网站并欺骗访问者等。请谨慎使用此设置。
- en: CORS-enabled images
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启用CORS的图像
- en: 'Typically, browsers allow all images to be linked from any other domain. This
    is called **hotlinking**. Read more about it at `en.wikipedia.org/wiki/Inline_linking`.
    If a high-traffic website links to assets that are hosted on your server, your
    hosting provider might even fine you for excessive use of bandwidth (or your site
    might go down!). If you want to prevent this, for example, if you do not want
    `http://example.com` to use an `img` element with an `src` attribute pointing
    to an image on your server `http://foo.com/image.jpg`, you can enable a more restrictive
    policy that only allows certain domains to access your image files by changing
    the following line in the `.htaccess` file from:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，浏览器允许从任何其他域链接所有图像。这称为**热链接**。在`en.wikipedia.org/wiki/Inline_linking`上了解更多信息。如果一个高流量的网站链接到托管在您服务器上的资产，您的托管提供商甚至可能因为带宽的过度使用对您处以罚款（或者您的网站可能会崩溃！）。如果您想要阻止这种情况，例如，如果您不希望`http://example.com`使用指向您服务器上图像的`img`元素的`src`属性，您可以通过更改`.htaccess`文件中的以下行来启用更严格的策略：
- en: '[PRE36]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'To the following line:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 到以下行：
- en: '[PRE37]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Where you replace `http://example.com` with the domain name that is only allowed
    access to that image. The server will then prevent any other domain from accessing
    images on your domain.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，用只允许访问该图像的域名替换`http://example.com`。服务器将阻止任何其他域访问您域上的图像。
- en: 'If you want your images to be accessed by multiple domains, you will have to
    write a convoluted regex comparison for the origin, as shown in the following
    code snippet:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望多个域访问您的图像，您将不得不编写一个复杂的正则表达式比较原点，如下面的代码片段所示：
- en: '[PRE38]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: In this case, replace `example-1\.com` with your domain (take care to place
    the forward slash before the `.com`), and likewise for `example-2\.com`.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，用您的域替换`example-1\.com`（注意在`.com`之前放置斜杠），同样适用于`example-2\.com`。
- en: Webfont access
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Webfont访问
- en: 'Most of the time, you will be hosting fonts on the same domain where you will
    be using them. If you do host fonts in a separate domain, Firefox will not request
    them without the right HTTP header. This directive is already enabled by default
    in `.htaccess` file. In case you want to restrict access, you need to change these
    lines from:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，您将在与您将使用它们的相同域上托管字体。如果您在单独的域中托管字体，Firefox将不会在没有正确的HTTP标头的情况下请求它们。这个指令已经在`.htaccess`文件中默认启用。如果您想要限制访问，您需要将这些行从以下内容更改：
- en: '[PRE39]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'To the following code snippet:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 到以下代码片段：
- en: '[PRE40]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Replace `http://example.com` with the domain name you would like to specifically
    allow access to the Webfonts.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 用您希望特别允许访问Webfonts的域名替换`http://example.com`。
- en: Note
  id: totrans-197
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you would like to get a good overview of how CORS-enabled image, Webfont,
    and AJAX requests work and differ from `crossdomain.xml`, you should read the
    HTML5security project wiki page at `code.google.com/p/html5security/wiki/CrossOriginRequestSecurity`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想要了解CORS启用的图像、Webfont和AJAX请求的工作原理，并了解与`crossdomain.xml`的区别，您应该阅读`code.google.com/p/html5security/wiki/CrossOriginRequestSecurity`上的HTML5security项目wiki页面。
- en: Using other server configuration files
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用其他服务器配置文件
- en: 'We have seen how to use the features available in the Apache `.htaccess` file
    that HTML5 Boilerplate comes with. But there is a repository of configuration
    files for other kinds of servers such as Ngnix, Node, Google App Engine, IIS,
    and Lighttpd. The following table contains the configuration filenames and their
    corresponding server software:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了如何使用Apache`.htaccess`文件中提供的功能。但是还有其他类型服务器的配置文件的存储库，如Ngnix、Node、Google
    App Engine、IIS和Lighttpd。以下表格包含配置文件名及其对应的服务器软件：
- en: '| Config filename | Server software |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| 配置文件名 | 服务器软件 |'
- en: '| --- | --- |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `.htaccess` | Apache Web server at `httpd.apache.org/docs/2.2/howto/htaccess.html`.
    |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| `.htaccess` | Apache Web服务器在`httpd.apache.org/docs/2.2/howto/htaccess.html`上。
    |'
- en: '| `Web.config` | IIS Web server from `learn.iis.net/page.aspx/376/delegating-configuration-to-webconfig-files/`.
    |'
  id: totrans-204
  prefs: []
  type: TYPE_TB
  zh: '| `Web.config` | IIS Web服务器在`learn.iis.net/page.aspx/376/delegating-configuration-to-webconfig-files/`上。
    |'
- en: '| `Node.js` | Node Web server from `nodejs.org`. |'
  id: totrans-205
  prefs: []
  type: TYPE_TB
  zh: '| `Node.js` | Node Web服务器从`nodejs.org`。 |'
- en: '| `Ngnix.conf` | Ngnix server at `wiki.nginx.org/Configuration`. |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| `Ngnix.conf` | Ngnix服务器在`wiki.nginx.org/Configuration`上。 |'
- en: '| `Lighttpd.conf` | Lighttpd server at `redmine.lighttpd.net/projects/lighttpd/wiki/TutorialConfiguration`.
    |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| `Lighttpd.conf` | Lighttpd服务器在`redmine.lighttpd.net/projects/lighttpd/wiki/TutorialConfiguration`上。
    |'
- en: '| `App.yaml` and `gae.py` | Google App Engine at `code.google.com/appengine/docs/python/config/appconfig.html`.
    |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| `App.yaml` 和 `gae.py` | Google App Engine在`code.google.com/appengine/docs/python/config/appconfig.html`上。
    |'
- en: The configuration files for these servers are available at `github.com/h5bp/server-configs`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这些服务器的配置文件可在`github.com/h5bp/server-configs`上找到。
- en: web.config
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: web.config
- en: HTML5 Boilerplate's `web.config` file is used to configure options for your
    site running on an IIS7 server or higher.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5 Boilerplate的`web.config`文件用于配置在IIS7服务器或更高版本上运行的站点的选项。
- en: As with the `.htaccess` file, merely having it in the root folder of your website
    allows it to be recognized and used to configure an IIS7 server.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 与`.htaccess`文件一样，将其放在您网站的根文件夹中，即可被识别并用于配置IIS7服务器。
- en: lighttpd.conf
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: lighttpd.conf
- en: As with the other configuration files, place it in the root folder for the Lighttpd
    server to configure the server.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他配置文件一样，将其放在Lighttpd服务器的根文件夹中以配置服务器。
- en: nginx.conf
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: nginx.conf
- en: Nginx is a lightweight server popular with websites using the Ruby on Rails
    framework.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: Nginx是一个轻量级服务器，受到使用Ruby on Rails框架的网站的欢迎。
- en: As with the `.htaccess` file, place this file in the root folder of your website.
    In addition, make sure `nginx-mime.types` is also in the root folder. This file
    is required for Ngnix to make sure it sends each file with the right MIME type.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 与`.htaccess`文件一样，将此文件放在您网站的根文件夹中。此外，确保`nginx-mime.types`也在根文件夹中。这个文件是Ngnix所必需的，以确保它发送每个文件的正确MIME类型。
- en: node.js
  id: totrans-218
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: node.js
- en: 'With the `node.js` configuration file, the usage is different. The configuration
    file assumes you are using the Express/Connect framework for managing resource
    requests for your app. In your server-side app code, you can use the following
    to start the server:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`node.js`配置文件，使用方式不同。配置文件假定您正在使用Express/Connect框架来管理应用程序的资源请求。在服务器端应用程序代码中，您可以使用以下内容启动服务器：
- en: '[PRE41]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'This requires you to install the `h5bp` package using **Node Package Manager**
    (**NPM**) and the `express` package using the same. The `h5bp` package has a slew
    of configurations that will be used when the server is started. If you wish to
    use only some specific configurations, you can pass them in as options to the
    server function, as shown in the following code snippet:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要您使用Node Package Manager（NPM）安装`h5bp`包和相同的`express`包。`h5bp`包有一系列配置，将在服务器启动时使用。如果您只想使用一些特定的配置，可以将它们作为选项传递给服务器函数，如下面的代码片段所示：
- en: '[PRE42]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Google App Engine
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Google App Engine
- en: Some websites are also served from Google App Engine ([http://code.google.com/appengine/](http://code.google.com/appengine/)),
    which requires your website's backend to be written in Java, Python, or Go.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 有些网站也是从Google App Engine（[http://code.google.com/appengine/](http://code.google.com/appengine/)）提供的，这需要您的网站后端使用Java、Python或Go编写。
- en: You need to ensure that the `app.yaml` file is in the root folder of your website.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保`app.yaml`文件位于您网站的根文件夹中。
- en: 'The following table contains the summary of all the features available in HTML5
    Boilerplate server configurations:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格包含HTML5 Boilerplate服务器配置中所有功能的摘要：
- en: '| Feature name | Apache | Nginx | IIS | Lighttpd | Node.js | Google App Engine
    |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| 功能名称 | Apache | Nginx | IIS | Lighttpd | Node.js | Google App Engine |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| ETags | Yes | Yes | Yes | Yes | No | No |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '| ETags | 是 | 是 | 是 | 是 | 否 | 否 |'
- en: '| Gzip | Yes | Yes | Yes | Yes | Yes | Yes |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| Gzip | 是 | 是 | 是 | 是 | 是 | 是 |'
- en: '| Expires header | Yes | No | No | No | Yes | No |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| 过期头 | 是 | 否 | 否 | 否 | 是 | 否 |'
- en: '| Custom 404 page | Yes | Yes | Yes | No | No | No |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| 自定义404页面 | 是 | 是 | 是 | 否 | 否 | 否 |'
- en: '| Forcing the latest IE version | Yes | Yes | Yes | Yes | Yes | Yes |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| 强制使用最新的IE版本 | 是 | 是 | 是 | 是 | 是 | 是 |'
- en: '| Using UTF-8 encoding | Yes | Yes | Yes | No | No | No |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| 使用UTF-8编码 | 是 | 是 | 是 | 否 | 否 | 否 |'
- en: '| Serving the right MIME types | Yes | Yes | Yes | Yes | No | Yes |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| 提供正确的MIME类型 | 是 | 是 | 是 | 是 | 否 | 是 |'
- en: '| Blocking access to hidden folders | Yes | No | No | No | Yes | No |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| 阻止访问隐藏文件夹 | 是 | 否 | 否 | 否 | 是 | 否 |'
- en: '| Blocking access to backup and source files | Yes | No | No | Yes (only `~&.inc`)
    | Yes | No |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| 阻止访问备份和源文件 | 是 | 否 | 否 | 是（仅`~&.inc`） | 是 | 否 |'
- en: '| Stop advertising server information | No | No | Yes | No | Yes | No |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| 停止广告服务器信息 | 否 | 否 | 是 | 否 | 是 | 否 |'
- en: '| Starting Rewrite Engine | Yes | No | No | No | No | No |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| 启动重写引擎 | 是 | 否 | 否 | 否 | 否 | 否 |'
- en: '| Preventing 404 errors for non-existing redirected folder | Yes | No | No
    | No | No | No |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| 防止不存在的重定向文件夹出现404错误 | 是 | 否 | 否 | 否 | 否 | 否 |'
- en: '| Suppressing or forcing the "www." at the beginning of URLs | Yes | No | Yes
    | No | Yes | No |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| 抑制或强制URL开头的“www。” | 是 | 否 | 是 | 否 | 是 | 否 |'
- en: '| Setting cookies from iFrames | Yes | No | Yes | No | No | No |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| 从iFrames设置cookies | 是 | 否 | 是 | 否 | 否 | 否 |'
- en: '| PHP security defaults | Yes | No | Yes | No | No | No |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| PHP安全默认值 | 是 | 否 | 是 | 否 | 否 | 否 |'
- en: '| Stop advertising Apache version | Yes | No | No | No | No | No |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| 停止广告Apache版本 | 是 | 否 | 否 | 否 | 否 | 否 |'
- en: '| Allowing concatenation from within JS and CSS files | Yes | No | Yes | No
    | No | No |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| 允许在JS和CSS文件中进行串联 | 是 | 否 | 是 | 否 | 否 | 否 |'
- en: '| Stopping screen flicker in IE on CSS rollovers | Yes | No | Yes | No | No
    | No |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| 在CSS滚动时停止IE中的屏幕闪烁 | 是 | 否 | 是 | 否 | 否 | 否 |'
- en: '| Preventing SSL certificate Warnings | Yes | No | Yes | No | No | No |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| 防止SSL证书警告 | 是 | 否 | 是 | 否 | 否 | 否 |'
- en: '| Cross-domain AJAX requests | Yes | No | Yes | No | Yes | No |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| 跨域AJAX请求 | 是 | 否 | 是 | 否 | 是 | 否 |'
- en: '| CORS-enabled Images | Yes | No | No | No | No | No |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| 支持CORS的图像 | 是 | 否 | 否 | 否 | 否 | 否 |'
- en: '| Webfont Access | Yes | No | No | No | No | No |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| Webfont访问 | 是 | 否 | 否 | 否 | 否 | 否 |'
- en: Summary
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We dived deep into the internals of serving pages over several servers and configuration
    files for some of the major servers. We looked at some of the good defaults provided
    out of the box and some optional ones that you can enable with careful understanding.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我们深入研究了在几个服务器和配置文件上提供页面的内部工作。我们查看了一些默认提供的良好配置以及一些可选配置，您可以通过仔细理解来启用它们。
- en: Now that our site is almost ready to get out of the door, we shall look at some
    of the other ways to make it better.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的网站几乎准备好出门了，我们将看一些其他方法来使它变得更好。
