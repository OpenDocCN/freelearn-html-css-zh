- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: The HTML5 canvas is revolutionizing graphics and visualizations on the Web.
    Powered by JavaScript, the HTML5 Canvas API enables web developers to create visualizations
    and animations right in the browser without Flash. Although the HTML5 Canvas is
    quickly becoming the standard for online graphics and interactivity, many developers
    fail to exercise all of the features that this powerful technology has to offer.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5画布正在改变网络上的图形和可视化。由JavaScript驱动，HTML5 Canvas API使Web开发人员能够在浏览器中创建可视化和动画，而无需Flash。尽管HTML5
    Canvas迅速成为在线图形和交互的标准，但许多开发人员未能充分利用这一强大技术所提供的所有功能。
- en: The **HTML5 Canvas Cookbook** begins by covering the basics of the HTML5 Canvas
    API and then progresses by providing advanced techniques for handling features
    not directly supported by the API such as animation and canvas interactivity.
    It winds up by providing detailed templates for a few of the most common HTML5
    canvas applications—data visualization, game development, and 3D modeling. It
    will acquaint you with interesting topics such as fractals, animation, physics,
    color models, and matrix mathematics.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 《HTML5 Canvas Cookbook》首先介绍了HTML5 Canvas API的基础知识，然后提供了处理API不直接支持的高级技术，如动画和画布交互的方法。最后，它提供了一些最常见的HTML5画布应用的详细模板，包括数据可视化、游戏开发和3D建模。它将使您熟悉有趣的主题，如分形、动画、物理学、颜色模型和矩阵数学。
- en: By the end of this book, you will have a solid understanding of the HTML5 canvas
    API and a toolbox of techniques for creating any type of HTML5 canvas application,
    limited only by the extent of your imagination.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本书的学习，您将对HTML5 Canvas API有扎实的理解，并掌握了创建任何类型的HTML5画布应用的技术，仅受想象力的限制。
- en: What this book covers
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](ch01.html "Chapter 1. Getting Started withPaths and Text"), *Getting
    Started with Paths and Text*, begins by covering the basics of sub-path drawing
    and then moves on to more advanced path drawing techniques by exploring algorithms
    to draw zigzags and spirals. Next, the chapter dives into text drawing and then
    completes with an exploration of fractals.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章。开始使用路径和文本")，“开始使用路径和文本”，首先介绍了子路径绘制的基础知识，然后通过探索绘制锯齿和螺旋的算法来深入研究更高级的路径绘制技术。接下来，本章深入探讨了文本绘制，最后探索了分形。'
- en: '[Chapter 2](ch02.html "Chapter 2. Shape Drawing and Composites"), *Shape Drawing
    and Composites*, begins by covering the basics of shape drawing and also shows
    you how to use color fills, gradient fills, and patterns. Next, the chapter takes
    an in-depth look at transparencies and composite operations, and then provides
    recipes for drawing more complex shapes such as clouds, gears, flowers, card suits,
    and even a full vector-style jet complete with layers and shading.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。形状绘制和合成")，“形状绘制和合成”，首先介绍了形状绘制的基础知识，并向您展示如何使用颜色填充、渐变填充和图案。接下来，本章深入研究了透明度和合成操作，然后提供了绘制更复杂形状的方法，如云、齿轮、花朵、纸牌花色，甚至是一个完整的矢量飞机，包括图层和阴影。'
- en: '[Chapter 3](ch03.html "Chapter 3. Working with Images and Videos"), *Working
    with Images and Videos*, covers the basics of image and video handling, shows
    you how to copy-and-paste sections of the canvas, and covers different types of
    pixel manipulation. The chapter also shows you how to convert images into data
    URLs, save a canvas drawing as an image, and load a canvas with a data URL. Finally,
    the chapter ends with a pixilated image focus algorithm that can be used to focus
    and blur images dynamically with pixel manipulation.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章。使用图像和视频")，“使用图像和视频”，介绍了图像和视频处理的基础知识，向您展示如何复制和粘贴画布的部分，并涵盖了不同类型的像素操作。本章还向您展示了如何将图像转换为数据URL，将画布绘制保存为图像，并使用数据URL加载画布。最后，本章以一个可以用于动态聚焦和模糊图像的像素操作的像素化图像焦点算法结束。'
- en: '[Chapter 4](ch04.html "Chapter 4. Mastering Transformations"), *Mastering Transformations*,
    explores what’s possible with canvas transformations, including translations,
    scaling, rotations, mirror transforms, and free-form transformations. In addition,
    the chapter also explores the canvas state stack in detail.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。掌握变换")，“掌握变换”，探索了画布变换的可能性，包括平移、缩放、旋转、镜像变换和自由形式变换。此外，本章还详细探讨了画布状态堆栈。'
- en: '[Chapter 5](ch05.html "Chapter 5. Bringing the Canvas to Life with Animation"),
    *Bringing the Canvas to Life with Animation*, begins by constructing an `Animation`
    class to handle an animation stage, and shows you how to create a linear motion,
    a quadratic motion, and an oscillating motion. Next, it covers some more complex
    animations such as the oscillation of a soap bubble, a swinging pendulum, and
    rotating mechanical gears. Finally, the chapter ends with a recipe for creating
    your own particle physics simulator, and also provides a recipe for creating hundreds
    of microscopic organisms inside the canvas to stress performance.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章。使用动画使画布栩栩如生")，“使用动画使画布栩栩如生”，首先构建一个`Animation`类来处理动画阶段，并向您展示如何创建线性运动、二次运动和振荡运动。接下来，它涵盖了一些更复杂的动画，如肥皂泡的振荡、摆动的钟摆和旋转的机械齿轮。最后，本章以创建自己的粒子物理模拟器的方法结束，并提供了在画布内创建数百个微生物以测试性能的方法。'
- en: '[Chapter 6](ch06.html "Chapter 6. Interacting with the Canvas: Attaching Event
    Listeners to Shapes and Regions"), *Interacting with the Canvas: Attaching Event
    Listeners to Shapes and Regions*, begins by constructing an `Events` class which
    extends the canvas API by providing a means for attaching event listeners to shapes
    and regions on the canvas. Next, the chapter covers techniques for getting the
    canvas mouse coordinates, detecting region events, detecting image events, detecting
    mobile touch events, and drag-and-drop. The chapter ends by providing a recipe
    for creating an image magnifier and another recipe for creating a drawing application.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，与画布交互：将事件侦听器附加到形状和区域，首先构建了一个扩展画布API的`Events`类，提供了一种在画布上附加事件侦听器到形状和区域的方法。接下来，该章节涵盖了获取画布鼠标坐标的技术，检测区域事件，检测图像事件，检测移动触摸事件和拖放。该章节最后提供了一个创建图像放大器的方法和另一个创建绘图应用程序的方法。
- en: '[Chapter 7](ch07.html "Chapter 7. Creating Graphs and Charts"), *Creating Graphs
    and Charts*, provides production-ready graph and chart classes, including a pie
    chart, a bar chart, an equation grapher, and a line chart.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，创建图表和图表，提供了生产就绪的图表类，包括饼图、条形图、方程图和折线图。
- en: '[Chapter 8](ch08.html "Chapter 8. Saving the World with Game Development"),
    *Saving the World with Game Development*, gets you started with canvas game development
    by showing you how to create an entire side-scroller game called Canvas Hero.
    The chapter shows you how to create sprite sheets, create levels and boundary
    maps, create classes to handle the hero, the bad guys, the level, and the hero’s
    health, and also shows you how to structure the game engine using an MVC (model
    view controller) design pattern.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，用游戏开发拯救世界，通过展示如何创建一个名为Canvas Hero的整个横向卷轴游戏，让您开始使用画布游戏开发。该章节向您展示如何创建精灵表，创建关卡和边界地图，创建处理英雄、坏人、关卡和英雄生命的类，还向您展示如何使用MVC（模型视图控制器）设计模式构建游戏引擎。
- en: '[Chapter 9](ch09.html "Chapter 9. Introducing WebGL"), *Introducing WebGL*,
    begins by constructing a WebGL wrapper class to simplify the WebGL API. The chapter
    introduces WebGL by showing you how to create a 3D plane and a rotating cube,
    and also shows you how to add textures and lighting to your models. The chapter
    ends by showing you how to create an entire 3D world that you can explore in first
    person.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，介绍WebGL，首先构建了一个WebGL包装类，以简化WebGL API。该章节通过展示如何创建一个3D平面和一个旋转的立方体来介绍WebGL，还向您展示如何向模型添加纹理和光照。该章节最后展示了如何创建一个完整的3D世界，您可以在其中进行第一人称探索。
- en: '[Appendices A](apa.html "Appendix A. Detecting Canvas Support"), [B](apb.html
    "Appendix B. Canvas Security"), and [C](apc.html "Appendix C. Additional Topics")
    discuss other special topics such as canvas support detection, security, canvas
    vs. CSS3 transitions and animations, and the performance of canvas applications
    on mobile devices.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 附录A，附录B和附录C讨论了其他特殊主题，如画布支持检测、安全性、画布与CSS3过渡和动画，以及移动设备上画布应用的性能。
- en: What you need for this book
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要什么
- en: All you need to get started with HTML5 canvas is a modern browser such as Google
    Chrome, Firefox, Safari, Opera, or IE9, and a simple text editor such as notepad.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用HTML5画布，您只需要一个现代浏览器，如Google Chrome，Firefox，Safari，Opera或IE9，以及一个简单的文本编辑器，如记事本。
- en: Who this book is for
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: This book is geared towards web developers who are familiar with HTML and JavaScript.
    It is written for both beginners and seasoned HTML5 developers with a good working
    knowledge of JavaScript.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向熟悉HTML和JavaScript的Web开发人员。它适用于初学者和有一定JavaScript工作知识的HTML5开发人员。
- en: What is HTML5 Canvas
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML5画布是什么？
- en: Canvas was originally created by Apple in 2004 to implement Dashboard widgets
    and to power graphics in the Safari browser, and was later adopted by Firefox,
    Opera, and Google Chrome. Today, canvas is a part of the new HTML5 specification
    for next generation web technologies.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Canvas最初是由苹果于2004年创建的，用于实现Dashboard小部件并在Safari浏览器中提供图形支持，后来被Firefox、Opera和Google
    Chrome采用。如今，画布是下一代Web技术的新HTML5规范的一部分。
- en: The HTML5 canvas is an HTML tag that you can embed inside an HTML document for
    the purpose of drawing graphics with JavaScript. Since the HTML5 canvas is a bitmap,
    every pixel drawn onto the canvas overrides pixels beneath it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5画布是一个HTML标签，您可以将其嵌入到HTML文档中，用于使用JavaScript绘制图形。由于HTML5画布是一个位图，绘制到画布上的每个像素都会覆盖其下的像素。
- en: 'Here is the base template for all of the 2D HTML5 Canvas recipes for this book:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书所有2D HTML5画布配方的基本模板：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Notice that the canvas element is embedded inside the body of the HTML document,
    and is defined with an `id`, a `width`, and a `height`. JavaScript uses the `id`
    to reference the canvas tag, and the `width` and `height` are used to define the
    size of the drawing area. Once the canvas tag has been accessed with `document.getElementById()`,
    we can then define a 2D context with:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，画布元素嵌入在HTML文档的主体内，并且使用`id`、`width`和`height`进行定义。JavaScript使用`id`引用画布标签，`width`和`height`用于定义绘图区域的大小。一旦使用`document.getElementById()`访问了画布标签，我们就可以定义一个2D上下文：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Although most of this book covers the 2D context, the final chapter, [Chapter
    9](ch09.html "Chapter 9. Introducing WebGL"), uses a 3D context to render 3D graphics
    with WebGL.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本书大部分内容涵盖了2D上下文，但最后一章使用了3D上下文来使用WebGL渲染3D图形。
- en: Conventions
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您会发现一些区分不同信息类型的文本样式。以下是一些这些样式的示例，以及它们的含义解释。
- en: 'Code words in text are shown as follows: "Define the `Events` constructor."'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词显示如下：“定义`Events`构造函数。”
- en: 'A block of code is set as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目会以粗体显示：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "It writes out the text **Hello Logo!** at the origin."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。例如，屏幕上看到的单词，在菜单或对话框中出现在文本中，就像这样：“它在原点处写出文本**Hello Logo!**”'
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的框中。
- en: Tip
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这种方式出现。
