["```html\n    <!doctype html>\n    <head>\n      <link type=\"text/css\" rel=\"stylesheet\"href=\"css/vendor/graph.css\">\n      <title>Motion chart</title>\n      <script src=\"img/d3.v2.js\"></script>\n      <script src=\"img/rickshaw.js\"></script>\n    </head>\n    ```", "```html\n    <div id=\"content\">\n      <div id=\"chart\"></div>\n    </div>\n    ```", "```html\n    (function () {\n      //create a color palette\n        var palette = new Rickshaw.Color.Palette({scheme: 'munin' });\n      // we set the refresh rate in milliseconds\n        var refreshRate = 500;\n    ```", "```html\n    // create graph\n    var graph = new Rickshaw.Graph({\n      element: document.getElementById(\"chart\"),\n      width: 900,\n\n    height: 600,\n      renderer: 'line',\n      series: new Rickshaw.Series.FixedDuration(\n        [\n          { name : 'one' },\n          { name : 'two' },\n          { name : 'three' }\n        ], palette, {\n          timeInterval: refreshRate,\n          maxDataPoints: 50\n          }\n        )\n      });\n    ```", "```html\n    var yAxis = new Rickshaw.Graph.Axis.Y({\n      graph: graph\n    });\n    ```", "```html\n    graph.render();\n    yAxis.render();\n    ```", "```html\n    //random util\n    function getRandomInRange(n){\n      return Math.floor(Math.random() * n);\n    }\n    // generate random data and add it to the graph\n    setInterval( function() {\n      var data = {\n        one: getRandomInRange(50) + 100,\n        two: Math.abs(Math.sin(getRandomInRange(30)+1) ) *(getRandomInRange(100) + 100),\n        three: 400 + getRandomInRange(110)*2\n      };\n      graph.series.addData(data);\n      //update\n      graph.render();  yAxis.render();\n    }, refreshRate );\n    ```", "```html\npalette.color()\n\"#00cc00\"\npalette.color()\n\"#0066b3\"\npalette.color()\n\"#ff8000\"\n\n```", "```html\nthis.schemes.cool = [\n  '#5e9d2f',\n  '#73c03a',\n  '#4682b4',\n  '#7bc3b8',\n  '#a9884e',\n  '#c1b266',\n  '#a47493',\n  '#c09fb5'\n  ];\n```", "```html\nelement: document.getElementById(\"chart\")\n```", "```html\nseries: new Rickshaw.Series.FixedDuration([\n  {name: 'one'},\n  {name: 'two'},\n  {name: 'three'}\n  ], palette, {\n  timeInterval: refreshRate,\n  maxDataPoints: 50\n  })\n```", "```html\nvar data = {\n  one: someNumber,\n  two: someNumber,\n  three:  someNumber\n  };\n```", "```html\ngraph.series.addData(data);\n```", "```html\nObject:\n color: \"#00cc00\"\n data: Array[50]\n name: \"one\"\n\n```", "```html\nvar legend = new Rickshaw.Graph.Legend({\n  element: document.getElementById('legend'),\n  graph: myGraph\n  });\n```", "```html\n    {\n      \"nodes\": [\n        {\n          \"name\": \"Hamlet\",\n            icon\":\"http://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Bernhardt_Hamlet2.jpg/165px-Bernhardt_Hamlet2.jpg\"\n        },\n        {\n          \"name\": \"King Claudius\",\n          \"icon\": \"http://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/Massalitinov_and_Knipper_in_Hamlet_1911.jpg/167px-Massalitinov_and_Knipper_in_Hamlet_1911.jpg\"\n        },\n    ```", "```html\n    \"links\": [\n      {\n        \"source\": 1,\n        \"target\": 0\n      }\n      {\n        \"source\": 3,\n        \"target\": 0\n      }\n    ]\n    ```", "```html\n    <script src=\"img/d3.v2.min.js\"></script>\n    <style>\n    .link {\n      stroke: #aaa;\n    }\n    .node text {\n      pointer-events: all;\n      font: 14px sans-serif;\n      cursor: pointer;\n      user-select: none;\n    }\n    </style>\n    ```", "```html\n    (function (){\n      var width = 960,    height = 600;\n      var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    }\n    ```", "```html\n    var force = d3.layout.force()\n    .gravity(.04)\n    .distance(350)\n    .charge(-200)\n    .size([width, height]);\n    ```", "```html\n    d3.json(\"data.json\", function(json) {\n      force.nodes(json.nodes)\n      .links(json.links)\n      .start();\n      var link = svg.selectAll(\".link\")\n      .data(json.links)\n      .enter().append(\"line\")\n      .attr(\"class\", \"link\");\n      var node = svg.selectAll(\".node\")\n      .data(json.nodes)\n      .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .call(force.drag);\n    }\n    ```", "```html\n    node.append(\"image\")\n    .attr(\"xlink:href\", function(d){return d.icon;})\n    .attr(\"x\", -32)\n    .attr(\"y\", -32)\n    .attr(\"width\", 100)\n    .attr(\"height\", 100);\n\n    node.append(\"text\")\n    .attr(\"dx\", -32)\n    .attr(\"dy\", -32)\n    .text(function(d) { return d.name });\n    ```", "```html\n    force.on(\"tick\", function() {\n      link.attr(\"x1\", function(d) { return d.source.x; })\n      .attr(\"y1\", function(d) { return d.source.y; })\n      .attr(\"x2\", function(d) { return d.target.x; })\n      .attr(\"y2\", function(d) { return d.target.y; });\n\n      node.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n      });\n    }());\n    ```", "```html\n-webkit-touch-callout: none;\n-webkit-user-select: none;\n-khtml-user-select: none;\n-moz-user-select: none;\n-ms-user-select: none;\nuser-select: none;\n```", "```html\nvar force = d3.layout.force()\n.gravity(.04)\n.distance(350)\n.charge(-200)\n.size([width, height]);\n```", "```html\nforce.nodes(json.nodes)\n.links(json.links)\n.start();\n```", "```html\nvar node = svg.selectAll(\".node\")\n.data(json.nodes)\n.enter().append(\"g\")\n.attr(\"class\", \"node\")\n.call(force.drag);\n```", "```html\nnode.append(\"image\")\n.attr(\"xlink:href\", function(d){return d.icon;})\n```", "```html\nforce.on(\"tick\", function() {\n  link.attr(\"x1\", function(d) { return d.source.x; })\n  .attr(\"y1\", function(d) { return d.source.y; })\n  .attr(\"x2\", function(d) { return d.target.x; })\n  .attr(\"y2\", function(d) { return d.target.y; });\n  node.attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n  });\n```", "```html\n    <!DOCTYPE html>\n      <html>\n        <head>\n          <link type=\"text/css\" rel=\"stylesheet\"href=\"css/vendor/graph.css\">\n          <link type=\"text/css\" rel=\"stylesheet\"href=\"css/vendor/legend.css\">\n          <link rel=\"stylesheet\" type=\"text/css\"href=\"http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css\">\n          <link type=\"text/css\" rel=\"stylesheet\"\n            href=\"css/main.css\">\n        </head>\n    ```", "```html\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"css/main.css\">\n    ```", "```html\n    <div id=\"content\">\n    <div id=\"chart\"></div>\n    <div id=\"legend\"></div>\n    </div>\n    <div style=\"clear:both\"></div>\n    <div id=\"slider\"></div>\n    ```", "```html\n    var refreshRate = 300;\n    var palette = new Rickshaw.Color.Palette( { scheme: 'munin' } );\n    ```", "```html\n    var graph = new Rickshaw.Graph( {\n      element: document.getElementById(\"chart\"),\n      width: 900,\n      height: 500,\n      renderer: 'area',\n      series: new Rickshaw.Series.FixedDuration([{\n        color: palette.color(),\n        name: 'NASDAQ'\n      },\n      {\n        color: palette.color(),\n        name: 'NIKKEI'\n      }], palette, {\n        timeInterval: refreshRate,\n        maxDataPoints: 200,\n        timeBase: new Date().getTime() / 1000\n      })\n    });\n    ```", "```html\n    var slider = new Rickshaw.Graph.RangeSlider({\n      graph: graph,\n      element: $('#slider')\n    });\n    ```", "```html\n    var yAxis = new Rickshaw.Graph.Axis.Y({\n      graph: graph\n    });\n    ```", "```html\n    var legend = new Rickshaw.Graph.Legend({\n      graph: graph,\n      element: $('#legend').get(0)\n    });\n    ```", "```html\n    function getRandomInRange(n){\n      return Math.floor(Math.random() * n);\n    }\n    setInterval( function() {\n      var data = {\n        one: getRandomInRange(50) + 100,\n        two: 400 + getRandomInRange(110)*2\n      };\n      graph.series.addData(data);\n      graph.render();\n      yAxis.render();\n    }, refreshRate );\n    ```", "```html\nseries: new Rickshaw.Series.FixedDuration([{\n  color: palette.color(),\n  name: 'NASDAQ'\n  }, {\n  color: palette.color(),\n  name: 'NIKKEI'\n  }], palette,\n```", "```html\nvar slider = new Rickshaw.Graph.RangeSlider({\n  graph: graph,\n  element: $('#slider')\n});\n```", "```html\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Image carousel</title>\n        <style type=\"text/css\">\n    ```", "```html\n    #carousel {\n     perspective: 500px;\n      -webkit-perspective: 500px;\n      position:relative; display:inline-block;\n      overflow:hidden;\n    }\n    ```", "```html\n    #rotator {\n      transform-style: preserve-3d;\n      -webkit-transform-style: preserve-3d;\n      position:relative;\n      margin:30px 100px;\n      width:200px; height:200px;\n      transition: transform 1s;\n      -webkit-transition: -webkit-transform 1s;\n    }\n    #rotator img {\n      position:absolute;\n      width: 200px; height:200px;\n      transition: transform 1s;\n      -webkit-transition: -webkit-transform 1s;\n    }\n    #controls {\n      text-align: center;\n      position:absolute;\n      left:0; bottom:0.5em;\n      width:100%;\n    }\n    #controls span {\n      height: 1em; width: 1em;\n      background-color:#ccc;\n      margin: 0 0.5em;\n      display: inline-block;\n    }\n      </style>\n    </head>\n    <body>\n      <div id=\"carousel\">\n        <div id=\"rotator\">\n          <img class=\"image\" src=\"img/1.jpg\">\n          <img class=\"image\" src=\"img/2.jpg\">\n          <img class=\"image\" src=\"img/3.jpg\">\n          </div>\n        <div id=\"controls\"></div>\n      </div>\n      <script src=\"img/jquery.min.js\"></script>\n      <script type=\"text/javascript\" src=\"img/example.js\">\n    </script>\n    </body>\n    </html>\n    ```", "```html\n    (function() {\n      $(\"#carousel\").on('mouseover', pause);\n      $(\"#carousel\").on('mouseout', start);\n      var position = 0;\n      var all = $(\"#carousel\").find('.image');\n      var total = all.length;\n    ```", "```html\n      var angle = (360 / total);\n      var deg2radfac = 2 * Math.PI / 360;\n      var zMovement = $(\"#rotator\").width() / 2 *Math.tan(deg2radfac * angle / 2);\n      all.each(function(k) {\n        var trans = 'rotateY(' + (angle * k).toFixed(0) + 'deg)'\n        + 'translateZ('+ zMovement.toFixed(0) + 'px)';\n        $(this).css('transform', trans);\n      });\n      $(\"#rotator\").css('transform', 'translateZ('+ (0 - zMovement).toFixed(0) + 'px)');\n    ```", "```html\n    for (var k = 0; k < all.length; ++k) {\n      $('<span />').attr('data-id', k).appendTo(\"#controls\");\n    }\n    $(\"#controls\").on('click', 'span', function() {\n      changeTo(position = $(this).attr('data-id'));\n    });\n    ctrls = $(\"#controls span\");\n    start();\n    ```", "```html\n    function change(dir) {\n      dir = dir || 1;\n      position += dir;\n        if (position >= all.length) position = 0;\n        else if (position < 0) position = 0;\n        changeTo(position);\n      }\n    function changeTo(position, cb) {\n      ctrls.css({'opacity': 0.33});\n      ctrls.eq(position).css({'opacity': 1});\n      $(\"#rotator\").css('transform',\n      'translateZ('+ (0 - zMovement).toFixed(0) + 'px) ' +\n      'rotateY(' + (angle * position).toFixed() + 'deg) ');\n      }\n    function start() { timer = setInterval(change, 5000); }\n    function pause() {\n      if (timer) { clearInterval(timer); timer = null; }\n      }\n    }());\n    ```", "```html\n    <!DOCTYPE HTML>\n    <html>\n      <head>\n        <title>Chart example</title>\n      </head>\n      <body>\n        <div id=\"chart\" style=\"height:200px;width:800px;\"></div>\n        <script src=\"img/jquery.min.js\"></script>\n        <script src=\"img/jquery.flot.js\"></script>\n        <script src=\"img/jquery.flot.navigate.js\"></script>\n        <script type=\"text/javascript\" src=\"img/example.js\"></script>\n      </body>\n    </html>\n    ```", "```html\n    $(function() {\n      var now  = Date.now();\n      var hour = 60 * 60 * 1000, day = 24*hour;\n      var weekAgo = now - 7*day;\n      var zoomOut = null;\n\n      function getData(cb) {\n        var temperatures = [];\n        // Generate random but convincing-looking data.\n        for (var k = 24 * 7; k >= 0; --k)\n        temperatures.push([now - k*hour,Math.random()*2 + 10*Math.sin(k/4 + 2)]);\n        cb(temperatures);\n      }\n\n      getData(function(data) {\n        var p = $.plot(\"#chart\", [{data: data}], {\n          xaxis: {\n            mode: 'time',\n            zoomRange: [day / 2, 7 * day],\n            panRange: [weekAgo, now]\n          },\n        yaxis: { zoomRange: false,   panRange: false },\n        zoom: { interactive: true },pan:  { interactive: true }\n        });\n      zoomOut = p.zoomOut.bind(p);\n      });\n      $('<input type=\"button\" value=\"zoom out\">')\n      .appendTo(\"#chart\")\n      .click(function (e) {\n        e.preventDefault();\n        zoomOut && zoomOut();\n      });\n    });\n    ```", "```html\n    <body>\n     <button id=\"show\">Show quote</button>\n     <div id=\"fallback\" ></div>\n      <script src=\"img/jquery.min.js\"></script>\n      <script src=\"img/notification.js\"></script>\n      <script src=\"img/display.js\"></script>\n    </body>\n    ```", "```html\n    var simpleNotification = (function () {\n      var my = {};\n       my.show = function (data) {\n        if (window.webkitNotifications) {\n          //check if there is a support for webkitNotifications\n          if (window.webkitNotifications.checkPermission()== 0) {\n            var notification = webkitNotifications.createNotification(data.icon, data.title, data.body);\n            notification.show();\n            //set timeout to hide it\n            setTimeout(function(){\n            notification.cancel();\n          }, data.timeout);\n        } else {\n          webkitNotifications.requestPermission(function () {\n            //call the same function again\n            my.show(data);\n          });\n        }\n      }\n    ```", "```html\n    else if (window.Notification) {\n      if (\"granted\" === Notification.permissionLevel()) {\n        var notification = new Notification(data.title, data);\n          notification.show();\n        } else if (\"default\" === Notification.permissionLevel() ) {\n          Notification.requestPermission(function () {\n            //call the same function again\n            my.show(data);\n          });\n        }\n      }\n    ```", "```html\n      }else{\n        //Notifications not supported, going with fallback\n        data.errorCallback();\n        }\n      };\n      return my;\n    }());\n    ```", "```html\n      function fetchRandomQuote(location,data){\n        $.ajax(\n          {\n            url:location,\n            dataType:'json',\n            success: function(result){\n              var quoteNumber = Math.floor(Math.random()*26)+1;\n              var obj = result.quotes[quoteNumber];\n              for(var key in obj){\n                data.title += key;\n                data.body = obj[key];\n            }\n           simpleNotification.show(data);\n        }}\n        );\n      };\n    ```", "```html\n    $(document).ready(function() {\n      $(\"#show\").click(function (){\n        var data = {\n          icon: \"images/war.png\",\n          title: \"The Art of War - The Use of Spies \",\n          body: \"text\",\n          timeout : 7000,\n          errorCallback: function(){\n            $(\"#fallback\").text(this.body);\n            }\n          };\n        fetchRandomQuote('js/data.json',data);\n        });});\n    ```", "```html\n  if (window.webkitNotifications.checkPermission() == 0)\n```", "```html\nvar notification = webkitNotifications.createNotification(data.icon, data.title, data.body);\nnotification.show();\n```", "```html\nsetTimeout(function(){\n  notification.cancel()\n}, data.timeout);\n```", "```html\nwebkitNotifications.requestPermission(function () {\n  my.show(data);\n}\n```", "```html\nvar data = {\n  icon: \"images/war.png\",\n  title: \"The Art of War - The Use of Spies \",\n  body: \"text\",\n  timeout : 7000,\n  errorCallback: function(){\n    $(\"#fallback\").text(this.body);\n    } };\n```", "```html\n    {\n      \"type\":\"Feature\",\n      \"properties\":{\n        \"name\":\"The Bahamas\"\n      },\n      \"geometry\":{\n        \"type\":\"MultiPolygon\",\n        \"coordinates\":[\":[\n            [\n              [\n                [\n                  -77.53466,\n                  23.75975\n                ],\n                  [\n                    -77.78,\n                    23.71\n                  ], \u2026\n                ]}}\n    ```", "```html\n    <style>\n      .frame {\n        stroke: #333;\n        fill: none;\n        pointer-events: all;\n      }\n      .feature {\n        stroke: #ccc;\n      }\n    </style>\n    <script src=\"img/d3.v2.js\"></script>\n    ```", "```html\n    <script>\n    var commonwealth = [\n    \"Australia\", \"Algeria\",\n    \"The Bahamas\", \"Bangladesh\",\n    \"Belize\", \"Botswana\",\n    \"Brunei\", \"Cameroon\",\n    \"Canada\", \"Cyprus\",\n    \"Gambia\", \"Ghana\",\n    \"Guyana\", \"India\",\n    \"Jamaica\", \"Kenya\",\n    \"Lesotho\", \"Malawi\",\n    \"Malaysia\", \"Mozambique\",\n    \"Madagascar\", \"Namibia\",\n    \"New Zealand\", \"Nigeria\",\n    \"Pakistan\", \"Papua New Guinea\",\n    \"Rwanda\", \"Sierra Leone\",\n    \"Solomon Islands\", \"Somaliland\",\n    \"South Africa\", \"South Sudan\",\n    \"Sudan\", \"Sri Lanka\",\n    \"Swaziland\", \"United Republic of Tanzania\",\n    \"Trinidad and Tobago\", \"Yemen\",\n    \"Uganda\", \"United Kingdom\",\n    \"Vanuatu\", \"Zambia\"\n    ];\n\n    function random(number) {\n      return Math.floor(Math.random()*number).toString(16)\n    }\n    function randomColor() {\n      return \"#\"+random(255)+random(255)+random(255);\n    }\n    ```", "```html\n    function getColorForCountry(name){\n      if(commonwealth.indexOf(name)<0){\n        return \"#bbb\";\n      }else {\n        return randomColor();\n      }\n    }\n    ```", "```html\n    var margin = {\n      top: 10,  right: 10,\n      bottom: 10,  left: 10\n    },\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top \u2013 margin.bottom;\n    ```", "```html\n    var projection = d3.geo.mercator()\n      .scale(width)\n      .translate([width / 2, height / 2]);\n\n    var path = d3.geo.path()\n      .projection(projection);\n    var zoom = d3.behavior.zoom()\n      .translate(projection.translate())\n      .scale(projection.scale())\n      .scaleExtent([height, 10 * height])\n      .on(\"zoom\", move);\n    ```", "```html\n    var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(zoom);\n    ```", "```html\n    var feature = svg.append(\"g\")\n      .selectAll(\".feature\");\n    ```", "```html\n    svg.append(\"rect\")\n      .attr(\"class\", \"frame\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    ```", "```html\n    d3.json(\"js/world-data.json\", function(data) {\n      feature = feature\n        .data(data.features)\n        .enter().append(\"path\")\n        .attr(\"class\", \"feature\")\n        .attr(\"d\", path)\n        .style(\"fill\", function(d){return getColorForCountry(d.properties.name)});\n      });\n    ```", "```html\n    function move() {\n      projection.translate(d3.event.translate).scale(d3.event.scale);\n      feature.attr(\"d\", path);\n    }\n    ```", "```html\nvar path = d3.geo.path()\n  .projection(projection);\n```", "```html\nd3.behavior.zoom()\n  .scale(projection.scale())\n  .scaleExtent([height, 10 * height])\n  .on(\"zoom\", move);\n```", "```html\nd3.json(\"js/world-data.json\", function(data) {\n  feature = feature\n    .data(data.features)\n    .enter().append(\"path\")\n```"]