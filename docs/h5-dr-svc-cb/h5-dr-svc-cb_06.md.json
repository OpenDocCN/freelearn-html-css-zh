["```html\n    <form>\n        <div>\n          <label>\n            Name <input id=\"name\" type=\"text\" name=\"name\" maxlength=\"20\" title=\"Text is limited to 20 chars\"placeholder=\"Firstname Lastname\" >\n          </label>\n        </div>\n    ```", "```html\n        <div>\n          <label>\n            Initially invalid <input value=\"Some way to long value\" maxlength=\"4\" name=\"testValue\" title=\"You should not have more than 4 characters\">\n          </label>\n        </div>\n    ```", "```html\n        <div>\n          <label>\n            Comment <textarea spellcheck=\"true\" name=\"comment\" placeholder=\"Your comment here\"> </textarea>\n          </label>\n        </div>\n    ```", "```html\n        <button type=\"submit\">Save</button>\n        <button id=\"enable\" type=\"button\">Enable JS validation</button>\n    ```", "```html\n        <script src=\"img/jquery.min.js\"></script>\n        <script src=\"img/jquery.validate.min.js\"></script>\n        <script src=\"img/formValidate.js\" ></script>\n    ```", "```html\n        $(\"#enable\").click(function(){\n          $(\"#userForm\").validate({\n            rules: {\n              name : \"required\",\n              comment: {\n                required: true,\n                minlength: 50\n              }\n            },\n            messages: {\n              name: \"Please enter your name\",\n              comment: {\n                required: \"Please enter a comment\",\n                minlength: \"Your comment must be at least 50 chars long\"\n              }\n            }\n          });\n        });\n    ```", "```html\nif ('spellcheck' in document.createElement('textarea')){\n    // spellcheck is supported\n} else {\n   //spellchek is not supported\n}\n```", "```html\n<html lang=\"en\">\n<body spellcheck=\"true\">\n  <textarea></textarea>\n  <div lang=\"fr\">\n    <textarea></textarea>\n     <input type=\"text\">\n  </div>\n</body>\n</html>\n```", "```html\n $(\"#userForm\").validate({\n        rules: {\n          name : \"required\",\n          comment: {\n            required: true,\n            minlength: 50\n          }\n        },\n```", "```html\n        messages: {\n          name: \"Please enter your name\",\n          comment: {\n            required: \"Please enter a comment\",\n            minlength: \"Your comment must be at least 50 chars long\"\n          }\n```", "```html\n       highlight: function(currentElement) {\n          console.log(\"error on \" +currentElement );\n        }, unhighlight: function(currentElement) {\n          console.log(\"no more error on \" +currentElement );\n        }\n```", "```html\n    <form>\n      <div>\n        <label>\n          Age <input id=\"age\" type=\"number\" name=\"name\" min=\"18\" max=\"140\" />\n        </label>\n      </div>\n    ```", "```html\n      <div>\n        <label>\n          Bet <input id=\"deposit\" value=\"1000\" type=\"range\" name=\"deposit\" min=\"0\" max=\"2000\" />\n           <output id=\"depositDisplay\">1000</output>\n        </label>\n      </div>\n    ```", "```html\n      <div>\n        <label>\n          Doubles <input value=\"4\" type=\"number\" name=\"doubles\" min=\"0\" step=\"5\" max=\"10\" title=\"The value should be multiple of 5\"/>\n        </label>\n      </div>\n    <div>\n        <label>\n          Awesomeness <input id=\"awesomeness\" value=\"11\" type=\"range\" name=\"awesomeness\" min=\"0\" step=\"3\" max=\"50\" />\n          <output id=\"awesomenessDisplay\">10</output>\n        </label>\n      </div>\n    ```", "```html\n    <input type=\"submit\" />\n    </form>\n      <script src=\"img/jquery.min.js\"></script>\n      <script src=\"img/example.js\"> </script>\n    ```", "```html\n    $(function() {\n      $('#deposit').change(function() {\n        $('#depositDisplay').html(this.value);\n      });\n\n      $('#awesomeness').change(function() {\n        $('#awesomenessDisplay').html(this.value);\n      });\n     });\n    ```", "```html\n<input value=\"11\" type=\"range\" name=\"awesomeness\" min=\"0\" step=\"3\" max=\"50\" />\n```", "```html\n      <div>\n        <label>\n          Username: <input type=\"text\" title=\"only letters allowed\" name=\"username\" pattern=\"^[a-zA-Z]+$\" />\n        </label>\n      </div>\n    ```", "```html\n      <div>\n        <label>\n          Phone <input type=\"tel\" name=\"phone\" pattern=\"[\\+]?[1-9]+\" />\n        </label>\n      </div>\n    ```", "```html\n      <div>\n        <label>\n          Webpage <input type=\"url\" name=\"webpage\" />\n        </label>\n      </div>\n    ```", "```html\n      <div>\n        <label>\n          Emails <input type=\"email\" name=\"emails\" multiple required />\n        </label>\n      </div>\n      <div>\n        <label>\n        Gmail <input type=\"email\" name=\"emails\" pattern=\"[a-z]+@gmail.com\" maxlength=\"14\"/>\n        </label>\n      </div>\n    ```", "```html\n/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n```", "```html\n      <head>\n        <title>Built In Validation</title>\n        <link rel=\"stylesheet\" href=\"example.css\">\n      </head>\n    ```", "```html\n    input:invalid {\n        background-color: red;\n        outline: 0;\n    }\n    input:valid {\n        background-color: green;\n        background: url(valid.png) no-repeat right;\n        background-size: 20px 15px;\n        outline: 0;\n    }\n    input:required{\n      box-shadow: inset 0 0 0.6em black;\n    }\n    input:optional{\n      box-shadow: inset 0 0 0.6em green;\n    }\n    ```", "```html\n      <div>\n        <label>\n          Name <input required name=\"name\" x-moz-errormessage=\"We need this.\"/>\n        </label>\n      </div>\n      <div>\n        <label>\n        Nickname <input required name=\"nickname\"/>\n        </label>\n      </div>\n    ```", "```html\n           <div>\n          <label>\n            Start week <input type=\"week\" name=\"week\" min=\"2013-W02\" max=\"2014-W02\" required />\n          </label>\n        </div>\n        <div>\n          <label>\n            Best months <input value=\"2013-01\" type=\"month\" step=\"2\" name=\"month\" />\n          </label>\n        </div>\n    ```", "```html\n        <button type=\"submit\">Save</button>\n        <button type=\"submit\" formnovalidate>Save but don't validate</button>\n        <button type=\"button\">Check Validity</button>\n    ```", "```html\n      <div id=\"validLog\"></div>\n    ```", "```html\n        <script src=\"img/jquery.min.js\"></script>\n        <script src=\"img/example.js\"></script>\n    ```", "```html\n        $(function() {\n          var attemptNumber = 1;\n          $(\"button[type=button]\").click(function(){\n            var message = (attemptNumber++)+\"#<br/>\";\n            var isValid = $('form')[0].checkValidity();\n            if(isValid){\n              message += \"Form is valid\";\n            }else{\n              $(\"input\").each(function( index ) {\n                var validityState = $(this)[0].validity;\n                var errors = \"\";\n                If(!validityState.valid){\n                  message += \"Invalid field <b> \" + $(this).attr(\"name\")+\"</b>: \";\n                  for(key in validityState){\n                    if(validityState[key]){\n                    errors += key+\" \";\n                }\n              }\n              message += \"  \" + errors + \" <br />\";\n            }\n            });\n          }\n          message += \"<hr />\";\n          $(\"#validLog\").prepend(message);\n        });\n    ```", "```html\n        $(\"input[name='nickname']\").change(function(){\n          if($(this).val() === $(\"input[name='name']\").val()){\n            $(this)[0].setCustomValidity(\"You must have an awesome nickname so nickname and name should not match\");\n          }else{\n          $(this)[0].setCustomValidity(\"\");\n\n        });\n        $(\"input[name='name']\").change(function(){\n          if($(this).val() === $(\"input[name='nickname']\").val()){\n          $(this)[0].setCustomValidity(\"Nickname and name should not match\");\n          }else{\n          $(this)[0].setCustomValidity(\"\");\n          }\n        });\n    ```", "```html\n <input type=\"text\" required=\"required\" oninvalid=\"this.setCustomValidity('Please put some data here')\">\n```", "```html\n<button type=\"submit\" formnovalidate>Save but don't validate</button>\n```", "```html\n$('form')[0].checkValidity();\n```", "```html\n       $(\"input\").each(function(index) {\n          var validityState = $(this)[0].validity;\n       \u2026\n```", "```html\n    $(\"input[name='nickname']\").change(function(){\n      if($(this).val() === $(\"input[name='name']\").val()){\n      $(this)[0].setCustomValidity(\"You must have an awesome nickname so nickname and name should not be the same\");\n      }else{\n      $(this)[0].setCustomValidity(\"\");\n      }\n    });\n```", "```html\n    $('form').each(function(){\n      $(this)[0].addEventListener('invalid', function(e) {\n        e.preventDefault();\n        console.log(\"custom popup\");\n      },true);\n    });\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n        <head>\n            <title>Password strength calculator</title>\n       </head>\n       <body>\n       <input type=\"password\" id=\"pass\" value=\"\" />\n       <div id=\"strength\">0 (very poor)</div>\n       <script src=\"img/jquery.min.js\"></script>\n       <script type=\"text/javascript\" src=\"img/common-passwords.js\"></script>\n       <script type=\"text/javascript\" src=\"img/example.js\"></script>\n       </body>\n    </html>\n    ```", "```html\n    $(function() {\n        function isCommon(pass) {\n          return ~window.commonPasswords.indexOf(pass);\n        }\n\n        function bruteMagnitude(pass) {\n          var sets = [\n          { regex: /\\d/g, size: 10 },\n          { regex: /[a-z]/g, size: 26 },\n          { regex: /[A-Z]/g, size: 26 },\n          { regex: /[!-/:-?\\[-`{-}]/g, size: 24 },\n          ];\n          var passlen = pass.length,\n          szSet = 0;\n\n          sets.forEach(function(set) {\n            if (set.regex.test(pass)) {\n              szSet += set.size;\n              pass = pass.replace(set.regex, '');\n            }\n            });\n            // other (unicode) characters\n            if (pass.length) szSet += 20;\n            return passlen * Math.log(szSet) / Math.LN10;\n        }\n\n        var strengths = ['very poor', 'poor', 'passing', 'fair',\n            'good', 'very good', 'excellent'];\n\n        function strength(pass) {\n            if (isCommon(pass) || !pass.length) return 0;\n            var str = bruteMagnitude(pass);\n            return str < 7  ? 0 // very poor\n                 : str < 9  ? 1 // poor      - 10 million - 1 billion\n                 : str < 11 ? 2 // passing   - 1 billion - 100 billion\n                 : str < 13 ? 3 // fair      - 100 billion - 10 trillion\n                 : str < 15 ? 4 // good      - 10 trillion - 1 quadrillion\n                 : str < 17 ? 5 // very good - 1-100 quadrillion\n                 : 6;           // excellent - over 100 quadrillion\n        }\n    ```", "```html\n        $('#pass').on('keyup keypress', function() {\n          var pstrength = strength($(this).val());\n          $(\"#strength\").text(pstrength + ' (' + strengths[pstrength] + ')');\n        });\n    });\n    ```", "```html\nmagnitude = log10(setSize passwordLength) = passwordLength * log10(setSize)\n```", "```html\n    npm install csv\n\n    ```", "```html\n    var csv = require('csv');\n    var zips = {};\n    csv().from.path('zip_code_database.csv').on('record', function(zc) {\n        // column 0 is zipcode; column 5 is state\n        // column 12 is country, 13 is decomissioned (0/1)\n        // filter non-decmissioned US zipcodes\n        if (zc[12] == 'US' && !parseInt(zc[13])) {\n          zips[zc[5]] = zips[zc[5]] || [];\n          zips[zc[5]].push(parseInt(zc[0].trim(), 10));\n        }\n    }).on('end', function() {\n    ```", "```html\n        var zipCodeDB = [];\n        function rangify(arr) {\n          var ranges = [], first = 0, last = 0;\n          for (var k = 0; k < arr.length; ++k) {\n            var first = arr[k];\n            while (arr[k] + 1 >= arr[k + 1] && k < arr.length - 1) ++k;\n            var last = arr[k];\n            ranges.push(first != last? [first, last]:[first]);\n            first = last = 0;\n          }\n          return ranges;\n        }\n    ```", "```html\n        var list = [];\n        for (var state in zips) if (state != 'undefined') {\n            list.push({state: state, codes: rangify(zips[state])});\n        }\n        list = list.sort(function(s1, s2) {\n            return s1.state < s2.state ? -1\n                 : s1.state > s2.state ?  1\n                 :0;\n        });\n        console.log('window.zipCodeDB =', JSON.stringify(list));\n        }\n    ```", "```html\n    window.zipCodeDB = [{\n        \"state\": \"AA\",\n        \"codes\": [34004, 34006, 34008, 34011, [34020, 34025],\n            [34030, 34039], 3404, ...]\n    },\n    ...\n    ]\n    ```", "```html\n    <!DOCTYPE HTML>\n    <html>\n        <head>\n            <title>Zip code validation</title>\n       </head>\n       <body>\n       <p>State: <select id=\"state\"></select></p>\n       <p>Zipcode: <input type=\"text\" id=\"zipcode\" value=\"\" /></p>\n       <div id=\"validate\">Invalid zipcode</div>\n       <script src=\"img/jquery.min.js\"></script>\n       <script type=\"text/javascript\" src=\"img/zipcodedb.js\"></script>\n       <script type=\"text/javascript\" src=\"img/example.js\"></script>\n       </body>\n    </html>\n    ```", "```html\n    $(function() {\n\n        function lookup(zipcode) {\n          function within(zipcode, ranges) {\n            for (var k = 0; k < ranges.length; ++k)\n            if (zipcode == ranges[k]\n            || (ranges[k].length > 1\n            && ranges[k][0] <= zipcode\n            && zipcode <= ranges[k][1])) return k;\n            return -1;\n            }\n            for (var k = 0; k < window.zipCodeDB.length; ++k) {\n              var state = window.zipCodeDB[k],\n              check = within(zipcode, state.codes);\n              if (~check) return state.state;\n            }\n            return null;\n        }\n\n        window.zipCodeDB.forEach(function(state) {\n          $('<option />').attr('value', state.state)\n          .text(state.state).appendTo('#state');\n        });\n\n        $(\"#zipcode\").on('keypress keyup change', function() {\n          var state = lookup($(this).val());\n          if (state == $(\"#state\").val())\n          $('#validate').text('Valid zipcode for ' + state);\n          else $('#validate').text('Invalid zipcode');\n        });\n    });\n    ```", "```html\ndata = $.getJSON('/api/call');\ndoThingsWith(data);\n```", "```html\n$.getJSON('/api/call', function(data) {\n    doThingsWith(data);\n});\n```", "```html\nvar errors = validate(input)\nif (errors.length) display(errors);\n```", "```html\nvalidate(input, function(errors) {\n    if (errors.length) display(errors);\n});\n```", "```html\nfunction validate(input) {\n    if (condition(input))\n      return [{message: \"Input does not satisfy condition\"}];\n    else return [];\n}\n```", "```html\nfunction validate(input, callback) {\n    condition(input, function(result) {\n      if (result) callback([{message: \"Input does not satisfy condition\"}]);\n      else callback([]);\n    });\n}\n```", "```html\nfunction validate(input, callback) {\n    $.getJSON('/api/validate/condition', function(result)\n    if (result) callback([{message: \"Input does not satisfy condition\"}]);\n    else callback([]);\n    });\n}\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Async validation</title>\n    <style type=\"text/css\">\n    p[data-validation-error] {\n        display:none;\n        color:red;\n    }\n    </style>\n    </head>\n    <body>\n    <form>\n        <p>Username:</p>\n        <p><input name=\"user\" id=\"user\" value=\"\" /></p>\n        <p data-validation-error=\"user\"></p>\n    </form>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {\n        function validate(name, callback) {\n          // Simulate an async server call\n          setTimeout(function() {\n            callback(~['user', 'example'].indexOf(name) ?\n            'Username is already in use' : null);\n            },500);\n        }\n        function createDelayed(ms) {\n          var t = null;\n          return function(fn) {\n            if (t) clearTimeout(t);\n            t = setTimeout(fn, ms);\n            };\n        };\n        var delayed = createDelayed(1500);\n\n        var user = $('input[name=\"user\"]'),\n        form = user.parents('form');\n        user.on('keyup keypress', function() {\n          delayed(validate.bind(null, $(this).val(), function callback(err) {\n            var validationError = form.find('p[data-validation-error=\"user\"]');\n            console.log(validationError);\n            if (err) validationError.text(err).show();\n            else validationError.hide();\n          }));\n        });\n    });\n    ```", "```html\n  <form data-avalidate>\n    <input name=\"field\"\n        data-v-ruleName=\"ruleParam\" name=\"user\" value=\"\" />\n    <span data-v-error=\"ruleName\">{parameterized} rule error</span>\n  </form>\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Async validation</title>\n    <style type=\"text/css\">\n    [data-v-error] { display:none; color:red; }\n    label { width: 10em; display:inline-block; text-align: right; }\n    </style>\n    </head>\n    <body>\n      <form data-avalidate>\n        <p>\n        <label for=\"user\">Username:</label>\n        <input name=\"user\"\n          required\n          data-v-minlen=\"6\"\n          data-v-server=\"/api/validate/unique\"\n          value=\"\" />\n        <span data-v-error=\"minlen\">Must be at least {minlen} characters long</span>\n        <span data-v-error=\"server\">{username} is already in use</span>\n        </p>\n\n        <p>\n        <label for=\"email\">Email:</label>\n        <input name=\"email\" type=\"email\"\n          required\n          data-v-minlen=\"6\"\n          data-v-server=\"/api/validate/email\"\n          value=\"\" />\n        <span data-v-error=\"server\">{email} is already in use</span>\n        </p>\n\n        <p><label for=\"pass\">Password:</label>\n        <input name=\"pass\" type=\"password\"\n          required\n          data-v-minlen=\"8\"\n          data-v-strength=\"3\"\n          value=\"\" />\n        <span data-v-error=\"minlen\">Must be at least {minlen} characters long</span>\n        <span data-v-error=\"strength\">Strength is {strength}</span>\n        </p>\n\n        <p><label for=\"pass2\">Password (again):</label>\n        <input name=\"pass2\" type=\"password\"\n          required\n          data-v-equals=\"pass\"\n          value=\"\" />\n        <span data-v-error=\"equals\">Must be equal to the other password</span>\n        </p>\n\n        <input type=\"submit\">\n\n    </form>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/avalidate.js\"></script>\n    <script type=\"text/javascript\" src=\"img/avalidate-plugins.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    ;(function($) {\n    ```", "```html\n        function createDelayed(ms) {\n          var t = null;\n          return function(fn) {\n            if (t) clearTimeout(t);\n            t = setTimeout(fn, ms);\n          };\n        }\n    ```", "```html\n        function showError(error, strings) {\n          var tmpl;\n          if (!error.attr('data-v-template')) {\n          tmpl = error.text().toString();\n          error.attr('data-v-template', tmpl);\n        } else tmpl = error.attr('data-v-template');\n          for (var key in strings)\n          tmpl = tmpl.replace('{'+key+'}', strings[key]);\n          error.text(tmpl).show();\n        }\n    ```", "```html\n        function elementVerifier() {\n          var isValid = true, waiting = 0, field = this;\n          $.each(this.attributes, function(i, attr) {\n            if (!attr.name.match(/data-v-/)) return;\n            var plugin = attr.name.toString().replace('data-v-',''),\n            options = attr.value;\n\n            ++waiting;\n            $.avalidate[plugin].call(field, options, function (valid, strings) {\n              var error = $(field).parent().find('[data-v-error=\"'+plugin+'\"]');\n              if (!valid) {\n                showError(error, strings);\n                isValid = false;\n              }\n              else error.hide();\n              if (!--waiting && isValid)\n              $(field).attr('data-valid', 1);\n            });\n          });\n        }\n    ```", "```html\n        function setupFormVerifier(form) {\n          form.on('change keyup mouseup', 'input,textarea,select', function() {\n            var $this = $(this)\n            var delayer = $this.data('avalidate');\n            if (!delayer) {\n              delayer = createDelayed(800);\n              $this.data('avalidate', delayer);\n            }\n            $this.attr('data-valid', 0);\n            delayer(elementVerifier.bind(this));\n            }).on('submit', function(e) {\n                var all = $(this).find('input,textarea,select').filter('[type!=\"submit\"]'),\n              valid = all.filter('[data-valid=\"1\"]');\n              if (all.length != valid.length)\n              e.preventDefault();\n            });\n        }\n    ```", "```html\n        $(function() {\n          $('body').on('submit change keyup mouseup', 'form[data-avalidate]', function() {\n            if (!$(this).attr('data-avalidate-enabled')) {\n              setupFormVerifier($(this));\n              $(this).attr('data-avalidate-enabled', 1)\n            }\n          });\n        });\n    }(jQuery));\n    ```", "```html\n    ;(function($) {\n\n        $.avalidate = {};\n        $.avalidate.equals = function(name, callback) {\n          var other = $(this).parents('form').find('[name=\"'+name+'\"]').val();\n          callback($(this).val() === other, {});\n        };\n        $.avalidate.minlen = function(len, callback) {\n           callback($(this).val().length >= len || $(this).text().length >= len, {minlen: len});\n        };\n        $.avalidate.server = function(param, cb) {\n          setTimeout(function() {\n            var val = $(this).val();\n            if (~param.indexOf('mail'))\n            cb('test@test.com' != val, {email: val });\n            else\n            cb('username' != val, { username: val });\n          }.bind(this), 500);\n        };\n        $.avalidate.strength = function(minimum, cb) {\n            cb($(this).val().length > minimum, {strength: 'Low'});\n        };\n\n    }(jQuery));\n    ```"]