["```html\n    var someJSONString = '{\"comment\":\"JSON data usually is retrieved from server\",\"who\":\"you\"}';\n    ```", "```html\n         var evalData =  eval('(' + someJSONString + ')');\n         var jsonData =  JSON.parse(someJSONString);\n    ```", "```html\n         document.writeln(someJSONString.who + \" access without conversion <br/>\" );\n         document.writeln(jsonData.who + \" with parse <br/>\" );\n         document.writeln(evalData.who + \" with eval <br/>\");\n    ```", "```html\n    var transformed = JSON.parse(someJSONString, function(key, val) {\n      if (key === \"\") return val;\n      return val +' a?';\n     });\n```", "```html\n{comment: \"JSON data usually is retrieved from server a?\", who: \"you a?\"}\n```", "```html\n   <script src=\"img/json3.min.js\"></script>\n   <script src=\"img/json2.js\"></script>\n```", "```html\n        var someJSON = {\n          \"firstname\":\"John\",\n          \"lastname\":\"Doe\",\n          \"email\":\"john.doe@example.com\"\n         };\n    ```", "```html\n        var customToJSON = {\n          \"firstname\":\"John\",\n          \"lastname\":\"Doe\",\n          \"email\":\"john.doe@example.com\",\n          toJSON: function () {\n          return {\"custom\":\"rendering\"};\n          }\n        };\n    ```", "```html\n         var jsonString = JSON.stringify(someJSON);\n         var jsonStringCustomToJSON = JSON.stringify(customToJSON);\n    ```", "```html\n        var allowedProperties=[\"firstname\",\"lastname\"];\n         var jsonCensured = JSON.stringify(someJSON , allowedProperties);\n         var jsonCensured3Spaces = JSON.stringify(someJSON,allowedProperties,30);\n         var jsonCensuredTab = JSON.stringify(someJSON,allowedProperties,\"\\t\");\n    ```", "```html\n         document.writeln(jsonString + \"  <br/>\" );\n         document.writeln(jsonStringCustomToJSON + \"  <br/>\" );\n         document.writeln(jsonCensured + \"  <br/>\" );\n         document.writeln(jsonCensured3Spaces + \"  <br/>\" );\n         document.writeln(jsonCensuredTab + \"  <br/>\" );\n    ```", "```html\n{\"custom\":\"rendering\"} \n```", "```html\nJSON.stringify(value[, replacer ] [, space])\n```", "```html\n   <script src=\"img/json3.min.js\"></script>\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n        <head>\n          <title>Text to base64 and binary</title>\n       </head>\n       <body>\n       <input type=\"text\" id=\"text\" value=\"Enter text here\">\n       <div id=\"base64\"></div>\n       <div id=\"bytes\"></div>\n       <script src=\"img/jquery.min.js\"></script>\n       <script type=\"text/javascript\" src=\"img/atobuf.js\"></script>\n       <script type=\"text/javascript\" src=\"img/example.js\"></script>\n       </body>\n    </html>\n    ```", "```html\n    $(function() {\n        $(\"#text\").on('keyup keypress', function() {\n          var base64 = btoa($(this).val()),\n          buf = atobuf(base64),\n          bytes = new Uint8Array(buf),\n          byteString = [].join.call(bytes, ' ');\n          $(\"#base64\").text(base64);\n          $(\"#bytes\").text(byteString);\n        });\n    }\n    ```", "```html\n    (function(exports) {\n        var key = {};\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz 0123456789+/='\n            .split('').forEach(function(c, i) {\n                key[c] = i;\n            });\n\n        exports.atobuf = function atobuf(b64str) {\n            var b64l = b64str.length,\n                bytes = b64l / 4 * 3;\n            if (b64str[b64str.length - 1] == '=') bytes -= 1;\n            if (b64str[b64str.length - 2] == '=') bytes -= 1;\n\n            var buf = new ArrayBuffer(bytes),\n                arr = new Uint8Array(buf),\n                at = 0;\n\n            for (var k = 0; k < bytes; k+=3) {\n                var e1 = key[b64str[at++]],\n                    e2 = key[b64str[at++]],\n                    e3 = key[b64str[at++]],\n                    e4 = key[b64str[at++]];\n\n                var b1 = (e1 << 2) | (e2 >> 4),\n                    b2 = ((e2 & 0xF) << 4) | (e3 >> 2),\n                    b3 = ((e3 & 0x3) << 6) | e4;\n\n                arr[k] = b1;\n                if (k+1<bytes) arr[k+1] = b2;\n                if (k+2<bytes) arr[k+2] = b3;\n            }\n\n            return buf;\n        };\n\n    }(typeof(exports) !== 'undefined' ? exports : this));\n    ```", "```html\n    <!doctype html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Binary data to Base64</title>\n      </head>\n      <body>\n        <canvas id=\"myCanvas\" width=\"100\" height=\"100\"></canvas>\n    ```", "```html\n        <input type=\"text\" id=\"text\" placeholder=\"Insert some text\">\n    ```", "```html\n        <div>\n          <b> Text Base64:</b>\n          <output id=\"content\"></output>\n        </div>\n        <hr />\n        <div>\n          <b> Image Base64:</b>\n          <output id=\"imgBase\"></output>\n        </div>\n    ```", "```html\n        <script src=\"img/jquery.min.js\"></script>\n        <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    ```", "```html\n      var canvas = $('#myCanvas')[0],\n      context = canvas.getContext('2d');\n      context.beginPath();\n      context.rect(0, 0, 100, 100);\n      context.fillStyle = 'green';\n      context.fill();\n      var imgdata = context.getImageData(0,0, 200, 200);\n    ```", "```html\n    function arrayToString(inputArray){\n        var stringData = '';\n        var bytes = new Uint8ClampedArray(inputArray);\n        var length = bytes.byteLength;\n        for (var i = 0; i < length; i++) {\n          stringData += String.fromCharCode(bytes[i]);\n        }\n        return stringData;\n      }\n    ```", "```html\n      var stringData = arrayToString(imgdata.data);\n      var b64encoded = btoa(stringData);\n    ```", "```html\n      var originalStringData = atob(b64encoded);\n    ```", "```html\n      function stringToArray(raw){\n       var rawLength = raw.length;\n       var array = new Uint8ClampedArray(new ArrayBuffer(rawLength));\n        for(i = 0; i < rawLength; i++) {\n          array[i] = raw.charCodeAt(i);\n        }\n       return array;\n      }\n    ```", "```html\n    var originalArray = stringToArray(originalStringData);\n    ```", "```html\n      $(\"#imgBase\").text(b64encoded);\n    ```", "```html\n      function utf8ToB64(str) {\n        return window.btoa(unescape(encodeURIComponent(str)));\n      }\n\n      function b64ToUtf8(str) {\n        return decodeURIComponent(escape(window.atob(str)));\n      }\n    ```", "```html\n      $(\"#text\").keyup(function(e) {\n        var currentValue = $(this).val();\n        $(\"#content\").val(utf8ToB64(currentValue));\n      });\n    ```", "```html\ncontext.getImageData(0,0, 200, 200);\n```", "```html\n [0,128,0,255,0,128,0,255 \u2026]\n\n```", "```html\n[Object Uint8ClampedArray]\n\n```", "```html\nError: InvalidCharacterError: DOM Exception 5\n\n```", "```html\n > encodeURICompoenent(\" \");\n \"%20\"\n\n```", "```html\n> \"\\u2197\"\n\"\u2197\"\n> encodeURIComponent(\"\\u2197\")\n\"%E2%86%97\"\n> btoa(encodeURIComponent('\\u2197'));\n\"JUUyJTg2JTk3\"\n```", "```html\nyepnope({\n    test: window.btoa && window.atob,\n    nope: 'base64.js',\n    callback: function () {\n       //safe to use window.btoa and window.atob\n    }\n});\n```", "```html\n    <!doctype html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Binary data to json</title>\n        <style type=\"text/css\">\n          div {\n            word-wrap: break-word;\n          }\n        </style>\n      </head>\n      <body>\n        <canvas id=\"myCanvas\" width=\"75\" height=\"75\"></canvas>\n        <hr />\n        <div>\n          <output id=\"generatedJson\"> </output>\n        </div>\n        <script src=\"img/jquery.min.js\"></script>\n        <script type=\"text/javascript\" src=\"img/example.js\"></script>\n      </body>\n    </html>\n    ```", "```html\n      var canvas = $('#myCanvas')[0],\n          context = canvas.getContext('2d');\n      context.beginPath();\n      context.arc(50, 50, 20, 0, Math.PI*2, true);\n      context.closePath();\n      context.fillStyle = 'green';\n      context.fill();\n     var imgdata = context.getImageData(0,0, 50, 50);\n    ```", "```html\n      function arrayToString(inputArray){\n        var stringData = '',\n        len = inputArray.byteLength;\n        for (var i = 0; i < len; i++) {\n          stringData += String.fromCharCode(inputArray[i]);\n        }\n        return stringData;\n      }\n    ```", "```html\n      var imageEncoded = btoa(arrayToString(imgdata.data));\n     var jsObject = {\n        \"name\":\"pie chart or not a pie...chart\",\n        \"dataURL\" : {\n          \"jpeg\": canvas.toDataURL('image/jpeg'),\n          \"png\": canvas.toDataURL('image/png')\n        },\n        \"image\" : imageEncoded\n      };\n    ```", "```html\n     var jsonString = JSON.stringify(jsObject, null , 2);\n      $(\"#generatedJson\").text(jsonString);\n    ```", "```html\n  context.beginPath();\n  context.arc(50, 50, 20, 0, Math.PI*2, true);\n  context.closePath();\n```", "```html\n  \"dataURL\" : {\n      \"jpeg\": \"copy data rendered here\",\n      \"png\":\"or copy data from here\"\n    }\n```", "```html\ndocument.cookie = \"name=test; expires=Fri, 18 Jan 2023 00:00:00 GMT; path=/\";\n```", "```html\ndocument.cookie = \"otherName=test; expires=Fri, 18 Jan 2023 00:00:00 GMT; path=/\"\n```", "```html\n\"name=test; otherName=test\"\n```", "```html\ndocument.cookie = \"otherName=test; expires=Fri, 18 Jan 2000 00:00:00 GMT; path=/\"\n```", "```html\ndocument.cookie = \"otherName=test; path=/\"\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Cookie serialization</title>\n    </head>\n    <body>\n    <form method=\"post\">\n        <input type=\"text\" name=\"text1\" value=\"Form data will be saved\"><br>\n        <input type=\"text\" name=\"text2\" value=\"in the cookie formdata\"><br>\n        <input type=\"text\" name=\"text3\" value=\"and restored after reload\">\n    </form>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/cookie.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n        (function(exports) {\n\n            var cookie = {};\n\n            cookie.set = function set(name, val, opt) {\n              opt = opt || {};\n              var encodedVal = encodeURIComponent(JSON.stringify(val)),\n              expires = opt.expires  ? opt.expires.toUTCString()\n              : opt.duration ? new Date(Date.now()\n                                             + opt.duration * 1000).toUTCString()\n              : null;\n\n              var cook = name +'=' + encodedVal + ';';\n              if (expires) cook += 'expires=' + expires;\n              if (opt.path) cook += 'path=' + opt.path;\n              document.cookie = cook;\n            };\n\n            cookie.del = function(name) {\n              document.cookie = name + '=deleted; expires='\n              + new Date(Date.now() - 1).toUTCString();\n            }\n            cookie.get = function get(name) {\n              var cookies = {};\n              var all = document.cookie.split(';').forEach(function(cs) {\n              var c = cs.split('=');\n              if (c[1])\n              cookies[c[0]] =\n              JSON.parse(decodeURIComponent(c[1]));\n              });\n            if (name)\n              return cookies[name]            \n              else\n              return cookies\n            };\n\n            exports.cookie = cookie;\n        }(typeof(exports) !== 'undefined' ? exports : this));\n        ```", "```html\n    $(function() {\n        var savedform = cookie.get('formdata');\n        savedform && savedform.forEach(function(nv) {\n          $('form')\n          .find('[name=\"'+nv.name+'\"]')\n          .val(nv.value);\n        });\n        $('form input').on('change keyup', function() {\n          cookie.set('formdata', $('form').serializeArray(),\n          {duration: 120});\n        });\n    });\n    ```", "```html\n    <!doctype html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>JavaScript objects to form data</title>\n      </head>\n      <body>\n        <label><b>Generated string:</b></label>\n        <output id=\"generated\">none</output>\n        <hr/>\n        <output id=\"generatedJson\">none</output>\n        <hr/>\n    ```", "```html\n      <form id=\"theForm\">\n        <label>Full name</label>\n        <input type=\"text\" id=\"fullName\" name=\"fullName\" placeholder=\"Some Name\">\n        <label>Email address </label>\n        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"example@example.com\">\n        <label>Percent of awesomeness </label>\n        <input type=\"number\" id=\"awesomeness\" name=\"awesomeness\" value=\"50\" min=\"1\" max=\"100\">\n        <br/>\n        <input type=\"submit\">\n      </form>\n    ```", "```html\n     <script src=\"img/jquery.min.js\"></script>\n        <script src=\"img/example.js\"></script>\n    ```", "```html\n    $(function() {\n    $(\"#theForm\").keyup(function(){\n        var theForm = $(\"#theForm\"),\n        parameterArray = theForm.serializeArray();\n        $(\"#generated\").text(theForm.serialize());\n        $(\"#generatedJson\").text(JSON.stringify(parameterArray));\n       });\n    });\n    ```", "```html\n{\n    \"person\" :\n    {\n        \"contact\" :\n        {\n            \"email\" : \"test@example.com\",\n            \"phone\" : \"0123456789\"\n        }\n    }\n}\n```", "```html\n<input type=\"email\" name=\"person.contact.email\" value=\"test@example.com\" />\n<input type=\"text\" name=\"person.contact.phone\" value=\"0123456789\" />\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Deserializing XML with DOMParser</title>\n    <style type=\"text/css\">\n    div.children { padding-left: 3em; }\n    h3 { padding:0; margin:0; }\n    .children .text { padding-top: 0.5em; }\n    .attribute .name { padding-left: 1.5em; width:5em;\n        display:inline-block; font-weight:bold; }\n    .attribute .value { padding-left: 1em; font-style:oblique; }\n    </style>\n    </head>\n    <body>\n    <textarea rows=\"11\" cols=\"60\">\n    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;\n    &lt;root&gt;\n        Text in document\n        &lt;element attribute=&quot;value&quot; foo=&quot;bar&quot; /&gt;\n        &lt;bold weight=&quot;strong&quot;&gt;Text in element&lt;/bold&gt;\n        &lt;list&gt;\n          &lt;item&gt;item text 1&lt;/item&gt;\n          &lt;item&gt;item text 2&lt;/item&gt;\n        &lt;/list&gt;        \n    &lt;/root&gt;\n    </textarea>\n    <div id=\"tree\">\n    </div>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {\n      function parseDocument(text) {\n        function displayElement(e) {\n          var holder = $(\"<div />\").addClass('element');\n          $(\"<h3 />\").text(e.nodeName).appendTo(holder);\n          if (e.attributes && e.attributes.length) {\n            var attrs = $(\"<div />\").addClass('attributes')\n            .appendTo(holder);\n            for (var a = 0; a < e.attributes.length; ++a) {\n              var nameval = e.attributes[a];\n              var attr = $(\"<div />\").addClass('attribute')\n              .appendTo(attrs);\n              $('<span />').addClass('name')\n              .text(nameval.name).appendTo(attr);\n              $('<span />').addClass('value')\n                            .text(nameval.value).appendTo(attr);\n              }\n            }\n            if (e.childNodes.length) {\n              var children = $(\"<div />\").appendTo(holder)\n              .addClass('children');\n              for (var c = 0; c < e.childNodes.length; ++c) {\n                var child = e.childNodes[c];\n                if (child.nodeType == Node.ELEMENT_NODE)\n                            displayElement(child).appendTo(children);\n                        else if (child.nodeType == Node.TEXT_NODE\n                              || chilc.nodeType == Node.CDATA_SECTION_NODE)\n                            $(\"<div />\").addClass('text')\n                                .text(child.textContent)\n                                .appendTo(children);\n                    }\n                }\n                return holder;\n            }\n            var parser = new DOMParser();\n            var doc = parser.parseFromString(text, 'application/xml');\n            window.doc = doc;\n            return displayElement(doc.childNodes[0]);\n        }\n        function update() {\n          $('#tree').html('')\n            parseDocument($('textarea').val()).appendTo('#tree');\n        }\n        update();\n        $('textarea').on('keyup change', update);\n    });\n    ```", "```html\n    <!doctype html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Create XML from JavaScript objects</title>\n      </head>\n      <body>\n        <output id=\"log\"> </output>\n    ```", "```html\n      <kml id=\"test\" >\n        <Document>\n          <name>Red Pyramid</name>\n          <description><![CDATA[]]></description>\n          <Style id=\"style1\">\n            <IconStyle>\n              <Icon>\n                <href></href>\n              </Icon>\n            </IconStyle>\n          </Style>\n          <Placemark>\n            <name>Red Pyramid</name>\n            <styleUrl>#style1</styleUrl>\n            <Point>\n              <coordinates>31.206320,29.808853,0.000000</coordinates>\n            </Point>\n          </Placemark>\n        </Document>\n      </kml>\n    ```", "```html\n        <script src=\"img/example.js\"></script>\n      </body>\n    </html>\n    ```", "```html\n    ;(function() {\n     var doc = document.implementation.createDocument(\"\",\"root\", null),\n           node = doc.createElement(\"someNode\");\n      doc.documentElement.appendChild(node);\n\n      document.getElementById('first')\n      .appendChild(\n        document.createTextNode(\n          new XMLSerializer()\n        .serializeToString(doc))\n      );\n\n      var kml = document.getElementById('test');\n      document.getElementById('second')\n      .appendChild(\n        document.createTextNode(\n          new XMLSerializer()\n          .serializeToString(kml))\n      );\n    }());\n    ```", "```html\nfunction xmlStringify(someXML) {\n  if (typeof XMLSerializer !== 'undefined') {\n    return (new XMLSerializer()).serializeToString(someXML);\n  }\n  // fallback for IE\n  if (someXML.xml) {\n    return someXML.xml;\n  }\n  //Not supported\n}\n```"]