["```html\nwget https://raw.github.com/wycats/handlebars.js/master/dist/handlebars.js\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Displaying objects with Handlebars</title>\n    </head>\n    <body>\n    <form method=\"post\">\n        <p>Name: <input id=\"name\" type=\"text\" name=\"name\" value=\"John\"></p>\n    </form>\n    <div id=\"greeting\">\n    </div>\n    <script id=\"template\" type=\"text/x-handlebars-template\">\n\n    {{#if evening}}\n        Good evening,\n    {{/if}}\n    {{#if morning}}\n        Good morning,\n    {{/if}}\n    {{#if day}}\n        Hello,\n    {{/if}}\n    <b>{{name}}</b>\n\n    </script>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/handlebars.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {\n        var template = Handlebars.compile($('#template').html());\n        function changeName() {\n            var hour = new Date().getHours();\n            $('#greeting').html(template({\n                name: $(\"#name\").val(),\n                evening: hour > 18,\n                morning: hour < 10,\n                day: hour >= 10 && hour <= 18\n            }));\n        }\n        $('#name').on('keypress keyup', changeName);\n        changeName();\n    });\n    ```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Displaying an EJS object</title>\n    </head>\n    <body>\n    <form method=\"post\">\n        <p>Name: <input id=\"name\" type=\"text\" name=\"name\" value=\"John\"></p>\n    </form>\n    <div id=\"greeting\">\n    </div>\n    <script id=\"template\" type=\"text/ejs\">\n        <% if (hour > 18) { %>\n            Good evening,\n        <% } else if (hour < 10) { %>\n            Good morning,\n        <% } else { %>\n            Hello,\n        <% } %>\n        <b><%= name %></b>\n    </script>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/ejs_production.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {\n        var template = new EJS({\n            text: $('#template').html()\n        });\n        function changeName() {\n            $('#greeting').html(template.render({\n                name: $(\"#name\").val(),\n                hour: new Date().getHours()\n            }));\n        }\n        $('#name').on('keypress keyup', changeName);\n        changeName();\n    });\n    ```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Displaying an object with Jade </title>\n    </head>\n    <body>\n    <form method=\"post\">\n        <p>Name: <input id=\"name\" type=\"text\" name=\"name\" value=\"John\"></p>\n    </form>\n    <div id=\"greeting\">\n    </div>\n    <script id=\"template\" type=\"text/jade\">\n\n    if hour > 18\n        span Good evening,\n    else if hour < 10\n        span\n            | Good\n            | morning,\n    else\n        span Hello,\n    b= name\n\n    </script>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/jade.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {\n        var template = jade.compile(\n            $('#template').html()\n        );\n        function changeName() {\n            $('#greeting').html(template({\n                name: $(\"#name\").val(),\n                hour: new Date().getHours()\n            }));\n        }\n        $('#name').on('keypress keyup', changeName);\n        changeName();\n    });\n    ```", "```html\nwget https://raw.github.com/wycats/handlebars.js/master/dist/handlebars.js\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Rendering an array with EJS</title>\n    <style type=\"text/css\">\n    .message {\n        border-bottom:solid 1px #ccc;\n        width: 250px;\n        padding: 5px; }\n    .message p { margin: 0.5em 0; }\n    .message.unread { font-weight:bold; }    \n    .message .date {\n        float: right;\n        font-style: italic;\n        color: #999; }\n    </style>\n    </head>\n    <body>\n    <h2>Messages</h2>\n    <div id=\"list\">\n    </div>\n    <script id=\"template\" type=\"text/x-handlebars-template\">\n\n    {{#each list}}\n        <div class=\"message {{status}}\">\n            <p><span class=\"name\">{{name}}</span>\n            <span class=\"date\">{{date}}</span></p>\n            <p class=\"text\">{{text}}</p>\n        </div>\n    {{/each}}\n\n    </script>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/handlebars.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {\n        var template = Handlebars.compile($('#template').html());\n        $('#list').html(template({list:[\n            { status: 'read',   name: 'John', date: 'Today',\n                text: 'just got back, how are you doing?' },\n            { status: 'unread', name: 'Jenny', date: 'Today',\n                text: 'please call me asap' },\n            { status: 'read',   name: 'Jack', date: 'Yesterday',\n                text: 'where do you want to go today?' },\n        ]}));\n    });\n    ```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Rendering an array with EJS</title>\n    <style type=\"text/css\">\n    .message {\n        border-bottom:solid 1px #ccc;\n        width: 250px;\n        padding: 5px; }\n    .message p { margin: 0.5em 0; }\n    .message.unread { font-weight:bold; }    \n    .message .date {\n        float: right;\n        font-style: italic;\n        color: #999; }\n    </style>\n    </head>\n    <body>\n    <h2>Messages</h2>\n    <div id=\"list\">\n    </div>\n    <script id=\"template\" type=\"text/ejs\">\n    <% for (var k = 0; k < list.length; ++k) {\n        var message = list[k];  %>\n        <div class=\"message <%= message.status %>\">\n            <p><span class=\"name\"><%= message.name %></span>\n            <span class=\"date\"><%= message.date %></span></p>\n            <p class=\"text\"><%= message.text %></p>\n        </div>\n    <% } %>\n    </script>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/ejs_production.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {\n        var template = new EJS({\n            text: $('#template').html()\n        });\n        $('#list').html(template.render({list:[\n            { status: 'read',   name: 'John', date: 'Today',\n                text: 'just got back, how are you doing?' },\n            { status: 'unread', name: 'Jenny', date: 'Today',\n                text: 'please call me asap' },\n            { status: 'read',   name: 'Jack', date: 'Yesterday',\n                text: 'where do you want to go today?' },\n        ]}));\n    });\n    ```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Rendering an array with EJS</title>\n    <style type=\"text/css\">\n    .message {\n        border-bottom:solid 1px #ccc;\n        width: 250px;\n        padding: 5px; }\n    .message p { margin: 0.5em 0; }\n    .message.unread { font-weight:bold; }    \n    .message.odd { background-color:#f5f5f5; }\n    .message .date {\n        float: right;\n        font-style: italic;\n        color: #999; }\n    </style>\n    </head>\n    <body>\n    <h2>Messages</h2>\n    <div id=\"list\">\n    </div>\n    <script id=\"template\" type=\"text/jade\">\n\n    each msg,i in list\n      .message(class=msg.status + (i % 2?' odd':' even'))\n        p\n          span.name=msg.name\n          span.date=msg.date\n        p.text=msg.text\n\n    </script>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/jade.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {\n        var template = jade.compile($('#template').html());\n        $('#list').html(template({list:[\n            { status: 'read',   name: 'John', date: 'Today',\n                text: 'just got back, how are you doing?' },\n            { status: 'unread', name: 'Jenny', date: 'Today',\n                text: 'please call me asap' },\n            { status: 'read',   name: 'Jack', date: 'Yesterday',\n                text: 'where do you want to go today?' },\n        ]}));\n    });\n    ```", "```html\n.message:nth-child(odd) { ... }\n.message:nth-child(even) { ... }\n```", "```html\nwget https://raw.github.com/wycats/handlebars.js/master/dist/handlebars.js\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Helpers in Handlebars</title>\n    <style type=\"text/css\">\n    li { padding:1em; }\n    li img { vertical-align:middle; }\n    </style>\n    </head>\n    <body>\n    <div id=\"list\">\n    </div>\n    <script id=\"template\" type=\"text/x-handlebars-template\">\n\n    {{#ul list}}\n        {{img image alt=name}} {{name}}\n    {{else}}\n        No items found\n    {{/ul}}\n\n    </script>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/handlebars.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {    \n        Handlebars.registerHelper('ul', function(items, options) {\n            if (items .length) return '<ul>' + items.map(function(item) {\n                return '<li>' + options.fn(item) + '</li>';  \n            }).join('') + '</ul>'\n            else\n                return options.inverse(this);\n        });\n\n        Handlebars.registerHelper('img', function(src, options) {\n            return new Handlebars.SafeString('<img src=\"' + src\n                + '\" alt=\"'+ (options.hash['alt'] || '')\n                + '\" title=\"'+ (options.hash['title'] || '')\n                + '\">');\n        });\n\n        var template = Handlebars.compile($('#template').html());\n\n        $('#list').html(template({list:[\n            { name: 'John',  image: '1.png'},\n            { name: 'Jack',  image: '2.jpg'},\n            { name: 'Jenny', image: '3.jpg'},\n        ]}));\n    });\n    ```", "```html\n{{#helperName argument param=value otherparam=value}}\n    body\n{{else}}\n    alternative\n{{/name}}\n```", "```html\nfunction helper(argument, options) {\n\u2026\n}\n```", "```html\n{{helperName argument param=value otherparam=value}}\n```", "```html\n<ul>\n    <li> <img src=\"img/1.png\" alt=\"John\" title=\"\"> John </li>\n    <li> <img src=\"img/2.jpg\" alt=\"Jack\" title=\"\"> Jack </li>\n    <li> <img src=\"img/3.jpg\" alt=\"Jenny\" title=\"\"> Jenny </li>\n</ul>\n```", "```html\nwget https://raw.github.com/wycats/handlebars.js/master/dist/handlebars.js\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Partials in Handlebars</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    </head>\n    <body>\n    <div id=\"list\" class=\"conversation\">\n    </div>\n\n    <script id=\"thread-template\" type=\"text/x-handlebars-template\">\n        <div class=\"message\">\n            <img src=\"img/{{image}}\">\n            <span class=\"name\">{{from}}</span>\n            <span class=\"date\">{{date}}</span>\n            <p class=\"text\">{{text}}</p>\n        </div>\n        <div class=\"replies\">\n            {{#each replies}}\n                {{> thread}}\n            {{/each}}\n        </div>\n    </script>\n\n    <script id=\"template\" type=\"text/x-handlebars-template\">\n    <h2>{{topic}}</h2>\n    {{> thread}}\n    <p><input type=\"button\" value=\"Reply\"></p>\n    </script>\n\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/handlebars.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    * { box-sizing: border-box; }\n    .conversation { width: 70ex; }\n    .message {\n        background-color:#f5f5f5;\n        padding: 5px;\n        margin:5px 0;\n        float:left;\n        clear: both;\n        width:100%; }\n    .message p {\n        margin: 0 0 0.5em 0; }\n    .message .name {\n        font-weight: bold; }\n    .message img {\n        float: left;\n        margin-right: 1em}\n    .message.unread {\n        font-weight:bold; }    \n    .message .date {\n        margin-left:1em;\n        float: right;\n        font-style: italic;\n        color: #999; }\n    .replies {\n        margin-left:3em;\n        clear:both; }\n    ```", "```html\n    $(function() {    \n\n        Handlebars.registerPartial('thread', $(\"#thread-template\").html());\n\n        var template = Handlebars.compile($('#template').html());\n\n        $('#list').html(template({\n            topic: \"The topic of this conversation\",\n            from: 'John',  \n            image: '1.png',\n            text: \"I wrote some text\",\n            date: 'Yesterday',\n            replies:[\n                {from: 'Jack',\n                    image: '2.jpg',\n                    text: \"My response to your text is favorable\",\n                    date: 'Today' ,\n                    replies: [\n                        {from: 'John',\n                            image: '1.png',\n                            text: \"Thank you kindly\",\n                            date: 'Today'}\n                    ]},\n                {from: 'Jenny',\n                    image: '3.jpg',\n                    text: \"I'm also going to chime in\",\n                    date: 'Today' }\n            ]}));\n    });\n    ```", "```html\n{{> partial}}\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Partials in EJS</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    </head>\n    <body>\n    <div id=\"list\" class=\"conversation\">\n    </div>\n\n    <script id=\"thread-template\" type=\"text/ejs\">\n        <div class=\"message\">\n            <img src=\"img/<%= thread.image %>\">\n            <span class=\"name\"><%= thread.from %></span>\n            <span class=\"date\"><%= thread.date %></span>\n            <p class=\"text\"><%= thread.text %></p>\n        </div>\n        <div class=\"replies\">\n            <% thread.replies && thread.replies.forEach(function(reply) { %>\n                <%= partial.render({thread:reply, partial:partial}) %>\n            <% }); %>\n        </div>\n    </script>\n\n    <script id=\"template\" type=\"text/ejs\">\n    <h2><%= thread.topic %></h2>\n    <%= partial.render({thread: thread, partial: partial}) %>\n    <p><input type=\"button\" value=\"Reply\"></p>\n    </script>\n\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/ejs_production.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    * { box-sizing: border-box; }\n    .conversation { width: 70ex; }\n    .message {\n        background-color:#f5f5f5;\n        padding: 5px;\n        margin:5px 0;\n        float:left;\n        clear: both;\n        width:100%; }\n    .message p {\n        margin: 0 0 0.5em 0; }\n    .message .name {\n        font-weight: bold; }\n    .message img {\n        float: left;\n        margin-right: 1em}\n    .message.unread { font-weight:bold; }    \n    .message .date {\n        margin-left:1em;\n        float: right;\n        font-style: italic;\n        color: #999; }\n    .replies {\n        margin-left:3em;\n        clear:both; }\n    ```", "```html\n    $(function() {    \n        var template = new EJS({\n            text: $('#template').html()\n        });\n\n        var threadTemplate = new EJS({\n            text:$(\"#thread-template\").html()\n        });\n        $('#list').html(template.render({\n            partial: threadTemplate,\n            thread:{\n                topic: \"The topic of this conversation\",\n                from: 'John',  \n                image: '1.png', text: \"I wrote some text\",\n                date: 'Yesterday',\n                replies:[\n                    {from: 'Jack',\n                        image: '2.jpg',\n                        text: \"My response to your text is favorable\",\n                        date: 'Today' ,\n                        replies: [\n                            {from: 'John',\n                                image: '1.png',\n                                text: \"Thank you kindly\",\n                                date: 'Today'}\n                        ]},\n                        {from: 'Jenny',\n                            image: '3.jpg',\n                            text: \"I'm also going to chime in\",\n                            date: 'Today' }\n            ]}}));\n    });\n    ```", "```html\n  markdown: function(str){\n    var md;\n\n    // support markdown / discount\n    try {\n      \u2026.\n    }\n    str = str.replace(/\\\\n/g, '\\n');\n    return md.parse(str).replace(/\\n/g, '\\\\n').replace(/'/g,''');\n  },\n```", "```html\n  markdown: function(str){\n    str = str.replace(/\\\\n/g, '\\n');\n    return markdown.toHTML(str).replace(/\\n/g, '\\\\n').replace(/'/g,''');\n  },\n```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Using the markdown filter in Jade</title>\n    </head>\n    <body>\n    <h2>Rendered markdown</h2>\n    <div id=\"list\">\n    </div>\n    <script id=\"template\" type=\"text/jade\">\n\n    #header\n      | Hello\n    #content\n      :markdown\n        # Jade-markdown hybrid\n        **Jade** simplifies the writing of HTML markup and dynamic\n        templates. However, its not very good at simplifying the\n        writing textual content that combines headings, paragraphs\n        and images.\n\n        This is where the **markdown** filter steps in. The filter\n        allows you  to write text documents and easily embed\n        [links](http://google.com) or images such as:\n\n        ![Google](https://www.google.com/images/srpr/logo3w.png)\n\n        Because filters are post-processed by Jade, we can easily\n        add dynamic content such as the current date:\n        #{new Date().toString()} or model #{prop} passed to the\n        template function and have it processed by Jade.\n\n    </script>\n    <script src=\"img/jquery.min.js\"></script>\n    <script src=\"img/markdown.js\"></script>\n    <script type=\"text/javascript\" src=\"img/jade.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {\n        var template = jade.compile($('#template').html());\n        $('#list').html(template({prop: 'properties' }));\n    });\n    ```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Mixins in Jade</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    </head>\n    <body>\n    <div id=\"list\" class=\"conversation\">\n    </div>\n\n    <script id=\"thread-template\" type=\"text/jade\">\n    </script>\n\n    <script id=\"template\" type=\"text/jade\">\n\n    mixin thread(thread)\n      .message\n        img(src=thread.image)\n        span.name=thread.from\n        span.date=thread.date\n        p.text=thread.text\n      .replies\n        if thread.replies\n          each reply in thread.replies\n            +thread(reply)\n\n    h2=thread.topic\n    +thread(thread)\n    p\n      input(type=\"button\",value=\"Reply\")\n\n    </script>\n\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/jade.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {    \n        var template = jade.compile($('#template').html());\n        $('#list').html(template({\n            thread:{\n                topic: \"The topic of this conversation\",\n                from: 'John',  \n                image: '1.png',\n                text: \"I wrote some text\",\n                date: 'Yesterday',\n                replies:[\n                    {from: 'Jack',\n                        image: '2.jpg',\n                        text: \"My response to your text is favorable\",\n                        date: 'Today' ,\n                        replies: [\n                            {from: 'John',\n                                image: '1.png',\n                                text: \"Thank you kindly\",\n                                date: 'Today'}\n                        ]},\n                        {from: 'Jenny',\n                            image: '3.jpg',\n                            text: \"I'm also going to chime in\",\n                            date: 'Today' }\n                ]}}));\n    });\n    ```", "```html\n    * { box-sizing: border-box; }\n    .conversation { width: 70ex; }\n    .message {\n        background-color:#f5f5f5;\n        padding: 5px;\n        margin:5px 0;\n        float:left;\n        clear: both;\n        width:100%;\n    }\n    .message p {\n        margin: 0 0 0.5em 0; }\n    .message .name {\n        font-weight: bold; }\n    .message img {\n        float: left;\n        margin-right: 1em}\n    .message.unread { font-weight:bold; }    \n    .message .date {\n        margin-left:1em;\n        float: right;\n        font-style: italic;\n        color: #999; }\n    .replies {\n        margin-left:3em;\n        clear:both; }\n    ```", "```html\nnpm install -g browserify@1\n```", "```html\nmkdir example && cd example\n```", "```html\nnpm install jade markdown\n```", "```html\n    var jade = require('jade');\n    module.exports = function(browserify) {\n        browserify.register('jade', function(tmpl, file) {\n            var fn =  jade.compile(tmpl, {\n                client: true,\n                filename:true,\n                path: __dirname\n            });\n            return [\"var jade = require('jade/lib/runtime.js');\",\n                    'module.exports=',fn.toString()].join('');\n        });\n    };\n    ```", "```html\n    <!DOCTYPE HTML>\n    <html>\n    <head>\n    <title>Blocks and layouts in Jade</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n    </head>\n    <body>\n    <div id=\"content\">\n    </div>\n    <script src=\"img/jquery.min.js\"></script>\n    <script type=\"text/javascript\" src=\"img/example.min.js\"></script>\n    </body>\n    </html>\n    ```", "```html\n    $(function() {    \n        var templates = {\n            'layout':require('./layout.jade'),\n            'example':require('./example.jade')\n        };\n        console.log(templates.layout.toString())\n        $('body').on('click', 'a', function() {\n            var template = templates[$(this).text().trim()];\n            $(\"#content\").html(template({}));\n        });\n        $(\"#content\").html(templates.layout({}));\n    });\n    ```", "```html\n    #header\n     | Welcome to example.jade\n    ul.menu\n      block menu\n        li\n          a layout\n        li\n          a example\n    .content\n      block content\n        div\n          p This is the default page\n    #footer\n      | Copyright notice and extra links here\n    ```", "```html\n    extends layout\n    block append menu\n      li\n        a new item\n    block content\n      :markdown\n        Different content with *markdown* support.\n        This means [linking](http://google.com) is easy.\n    ```", "```html\n    * { box-sizing: border-box; }\n    #content {\n        max-width: 800px;\n        margin: 0 auto; }\n    ul.menu {\n        background-color: #ccc;\n        margin: 0; padding:0; }\n    ul.menu li {\n        display:inline-block;\n        border-top: solid 1px #ddd;\n        border-left: solid 1px #ddd;\n        border-right: solid 1px #bbb; }\n    ul.menu li a {\n        display: inline-block;\n        cursor:pointer;\n        padding: 0.5em 1em; }\n    .content {\n        padding: 1em;\n        background-color:#f5f5f5; }\n    #header {\n        background-color:#333;\n        color: #ccc;\n        padding:0.5em;\n        font-size: 1.5em; }\n    #footer {\n        margin-top: 0.5em;}\n    ```", "```html\n    browserify -p ./browserify-jade.js example.js -o example.min.js\n\n    ```"]