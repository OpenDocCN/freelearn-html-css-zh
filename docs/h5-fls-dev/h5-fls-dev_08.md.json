["```html\n<script src=\"img/runtime.js\"></script>\n```", "```html\nswiffyobject = {\"tags\":[{\"frames\":[],\"scenes\":[{\"name\":\"Scene 1\",\"offset\":0}],\"type\":23},{\"bounds\":[{\"ymin\":0,\"ymax\":2240,\"xmin\":0,\"xmax\":10399}],\"id\":1,\"fillstyles\":[{\"transform\":[\"4738D::1056F199e20k\"],\"type\":2,\"gradient\":{\"stops\":[{\"color\":[-65536],\"offset\":[0]},{\"color\":[-256],\"offset\":[42]},{\"color\":[-16711936],\"offset\":[93]},{\"color\":[-16711681],\"offset\":[127]}\u2026.\n```", "```html\nvar swiffyElement = document.getElementById('swiffycontainer');\nvar stage = new swiffy.Stage(swiffyElement), swiffyobject);\nstage.start();\n```", "```html\npackage {\n\n  import flash.display.MovieClip;\n  import flash.events.Event;\n  import flash.events.MouseEvent;\n\n  // Setting the frame rate is important here as we calculate\n  // the users score from how many frames have passed.\n  // It's worth noting that the TimerEvent class can be used\n  // without any issue by applications converted with\n  // Google Swiffy.\n  [SWF(backgroundColor=\"0xEFEFEF\", width=\"1024\", height=\"768\", frameRate=\"30\")]\n\n  public class PlayerMoveTest extends MovieClip {\n    // Setting a static const variable, defines\n    // how many bad guy dots to add to the stage.\n    private static const BAD_GUY_COUNT:int = 10;\n\n    // The 'Player' class is a red box created and defined\n    // within an SWC included into this project.\n    private var _player:Player;\n\n    // An array to hold all of the bad guys created\n    // when the game is created.\n    private var _badGuys:Array;\n\n    private var _lifeTimer:int;\n    private var _playerTarget:Object = new Object();\n\n    /**\n     * PlayerMoveTest Constructor\n     */\n    public function PlayerMoveTest() {\n      // Start by creating and adding all of the bad\n      // guys to the game stage.\n      _badGuys = new Array();\n      for(var i:int = 0; i < BAD_GUY_COUNT; i++) {\n        // Using MovieClips instead of Sprites\n        // as Sprites are not supported by the\n        // Google Swiffy compiler.\n        var badGuy:MovieClip = new MovieClip();\n        badGuy.graphics.beginFill(0x000000, 1);\n        badGuy.graphics.drawRect(-5, -5, 10, 10);\n        badGuy.graphics.endFill();\n        badGuy.x = Math.floor(Math.random() * (1000 + 1));\n        badGuy.y = Math.floor(Math.random() * (700 + 1));\n        _badGuys.push(badGuy);\n        addChild(badGuy);\n      }\n\n// Create the users Player object\n// Again, this is created within a included SWC.\n      _player = new Player();\n      _player.x = 100;\n      _player.y = 100;\n      _playerTarget.x = _player.x;\n      _playerTarget.y = _player.y;\n      addChild(_player);\n\n      // Add a on enter frame to update the game stage.\n      this.addEventListener(Event.ENTER_FRAME, updateEnviroment, false, 0, true);\n    }\n\n/**\n * Called on every frame when the game is in a playable\n * state.\n */ \n    private function updateEnviroment(event:Event):void {\n      // Update the life timer, used for player score.\n      _lifeTimer++;\n\n      // Set the new player position target.\n      // this position is based of the current X and Y\n      // position of the user's mouse.\n      _playerTarget.x = this.mouseX - 50;\n      _playerTarget.y = this.mouseY - 50;\n\n// Calculate the distance to the current \n// player target.\n      var xDistance:int = _playerTarget.x - _player.x;\n      var yDistance:int = _playerTarget.y - _player.y;\n\n      // Update the position of the player object. Use\n      // a simple method to ease the position into the \n      // target.\n      _player.x = _playerTarget.x - (xDistance * 0.9);\n      _player.y = _playerTarget.y - (yDistance * 0.9);\n      _player.width += 0.5;\n      _player.height += 0.5;\n\n// Randomly move the position of each bad guy on\n// every frame.\n      for(var i:int = 0; i < BAD_GUY_COUNT; i++) {\n        _badGuys[i].x += Math.round(Math.random() * (15 - (-15)) + (-15));\n        _badGuys[i].y += Math.round(Math.random() * (15 - (-15)) + (-15));\n\n// Using the common hitTestObject method \n// to check and see if any of these bad guys \n// are currently touching the player object. \n        if(_player.hitTestObject(_badGuys[i])) {\n          // The player is touching a bad guy\n          // so stop the on enter frame event\n          // and alert the users score.\n          this.removeEventListener(Event.ENTER_FRAME, updateEnviroment);\n\n          trace('GAME OVER!!!');\n          trace('You lasted ' + Math.round(_lifeTimer / 30) + ' seconds.');\n        }\n      }\n    }\n  }\n}\n```", "```html\nbadGuy.graphics.beginFill(0x000000, 1);\nbadGuy.graphics.drawRect(-5, -5, 10, 10);\nbadGuy.graphics.endFill();\n```", "```html\n{\"frames\": {\n\n\"ShapeAnimation0000\":\n{\n  \"frame\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},\n  \"rotated\": false,\n  \"trimmed\": false,\n  \"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},\n  \"sourceSize\": {\"w\":100,\"h\":100}\n},\n\"ShapeAnimation0001\":\n{\n  \"frame\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},\n  \"rotated\": false,\n  \"trimmed\": false,\n  \"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},\n  \"sourceSize\": {\"w\":100,\"h\":100}\n},\n\"ShapeAnimation0002\":\n{\n  \"frame\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},\n  \"rotated\": false,\n  \"trimmed\": false,\n  \"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},\n  \"sourceSize\": {\"w\":100,\"h\":100}\n},\n\"ShapeAnimation0003\":\n{\n  \"frame\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},\n  \"rotated\": false,\n  \"trimmed\": false,\n  \"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":100,\"h\":100},\n  \"sourceSize\": {\"w\":100,\"h\":100}\n},\n```", "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>ShapeAnimation Sprite Sheet Example</title>\n\n    <style>\n      #animation {\n        width:100px;\n        height:100px;\n        overflow:hidden;\n      }\n      </style>\n\n      <script type=\"text/javascript\" src=\"img/jquery-1.9.1.min.js\"></script>\n    <script>\n      var animationData = Array();\n      var currentFrame = 0;\n\n      $(document).ready(function() {\n        // Get the Sprite Sheet JSON\n        $.getJSON('ShapeAnimation.json', function(data) {\n          // Save each of the objects into an array.\n          $.each(data['frames'], function(key, val) {\n            animationData.push(val);\n          });\n\n          // Start the animation.\n          runAnimation();\n        });\n      });\n\n      function runAnimation() {\n        // Update the CSS properties of the Sprite Sheet image.\n        $('#animation img').css('margin-left', animationData[currentFrame]['frame']['x'] * -1);\n        $('#animation img').css('margin-top', animationData[currentFrame]['frame']['y'] * -1);\n\n        // Update the frame counter and reset if needed.\n        currentFrame++;\n        if(currentFrame == animationData.length) currentFrame = 0;\n\n        // Keep calling this method every 200ms.\n        setTimeout(runAnimation, 200);\n      }\n    </script>\n  </head>\n\n  <body>\n    <div id=\"animation\">\n      <img src=\"img/ShapeAnimation.png\">\n    </div>\n  </body>\n</html>\n```", "```html\npackage {\n/**\n\u00a0* The most simple Jangaroo class on earth.*/\npublic class HelloWorld {\n\u00a0 /**\n\u00a0\u00a0 * Let the browser display a welcome message.*/\n\u00a0 public static function main():void {window.document.body.innerHTML = \"<strong>Hello World from Jangaroo!</strong>\";\n\u00a0 }\n}\n}\n```", "```html\nclass Quicksort {\n\n    static var arr = [4,8,0,3,9,1,5,2,6,7];\n\n    static function quicksort( lo : Int, hi : Int ) : Void {\n        var i = lo;\n        var j = hi;\n        var buf = arr;\n        var p = buf[(lo+hi)>>1];\n        while( i <= j ) {\n            while( arr[i] > p ) i++;\n            while( arr[j] < p ) j--;\n            if( i <= j ) {\n                var t = buf[i];\n                buf[i++] = buf[j];\n                buf[j--] = t;\n            }\n        }\n        if( lo < j ) quicksort( lo, j );\n        if( i < hi ) quicksort( i, hi );\n    }\n\n    static function main() {\n        quicksort( 0, arr.length-1 );\n        trace(arr);\n    }\n}\n```"]