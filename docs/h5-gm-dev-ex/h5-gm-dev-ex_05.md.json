["```js\n    var bg_gradient = ctx.createLinearGradient(0,0,0,ctx.canvas.height);\n    bg_gradient.addColorStop(0, \"#000000\");\n    bg_gradient.addColorStop(1, \"#555555\");\n    ctx.fillStyle = bg_gradient;\n    ctx.fillRect(0,0,ctx.canvas.width,ctx.canvas.height);\n\n    ```", "```js\ncreateLinearGradient(x1, y1, x2, y2);\n\n```", "```js\naddColorStop(position, color);\n\n```", "```js\n    function drawCircle(ctx, x, y) {\n    // prepare the radial gradients fill style\n    var circle_gradient = ctx.createRadialGradient(x-3,y- 3,1,x,y,untangleGame.circleRadius);\n    circle_gradient.addColorStop(0, \"#fff\");\n    circle_gradient.addColorStop(1, \"#cc0\");\n    ctx.fillStyle = circle_gradient;\n    // draw the path\n    ctx.beginPath();\n    ctx.arc(x, y, untangleGame.circleRadius, 0, Math.PI*2, true);\n    ctx.closePath();\n    // actually fill the circle path\n    ctx.fill();\n    }\n\n    ```", "```js\ncreateRadialGradient(x1, y1, r1, x2, y2, r2);\n\n```", "```js\n    var untangleGame = {\n    circles: [],\n    thinLineThickness: 1,\n    boldLineThickness: 5,\n    lines: [],\n    currentLevel: 0,\n    progressPercentage: 0\n    };\n\n    ```", "```js\n    // draw the title text\n    ctx.font = \"26px Arial\";\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"#ffffff\";\n    ctx.fillText(\"Untangle Game\",ctx.canvas.width/2,50);\n    // draw the level progress text\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    ctx.fillText(\"Puzzle \"+untangleGame.currentLevel+\", Completeness: \" + untangleGame.progressPercentage + \"%\", 20,ctx.canvas.height-5);\n\n    ```", "```js\nfillText(string, x, y);\n\n```", "```js\n    http://code.google.com/webfonts/family?family=Rock+Salt&subset=latin#code.\n\n    ```", "```js\n    <link href='http://fonts.googleapis.com/css?family=Rock+Salt' rel='stylesheet' type='text/css'>\n\n    ```", "```js\n    ctx.font = \"26px 'Rock Salt'\";\n\n    ```", "```js\n    http://gamedesign.cc/html5games/1260_05_example_graphics.zip\n\n    ```", "```js\n    // draw a splash screen when loading the game background\n    // draw gradients background\n    var bg_gradient = ctx.createLinearGradient(0,0,0,ctx.canvas.height);\n    bg_gradient.addColorStop(0, \"#cccccc\");\n    bg_gradient.addColorStop(1, \"#efefef\");\n    ctx.fillStyle = bg_gradient;\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // draw the loading text\n    ctx.font = \"34px 'Rock Salt'\";\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"#333333\";\n    ctx.fillText(\"loading...\",ctx.canvas.width/2,canvas.height/2);\n\n    ```", "```js\n    // load the background image\n    untangleGame.background = new Image();\n    untangleGame.background.onload = function() {\n    // setup an interval to loop the game loop\n    setInterval(gameloop, 30);\n    }\n    untangleGame.background.onerror = function() {\n    console.log(\"Error loading the image.\");\n    }\n    untangleGame.background.src = \"images/board.png\";\n\n    ```", "```js\n    // draw the image background\n    ctx.drawImage(untangleGame.background, 0, 0);\n\n    ```", "```js\n    \"circles\" : [{\"x\" : 192, \"y\" : 155},\n    {\"x\" : 353, \"y\" : 109},\n    {\"x\" : 493, \"y\" : 156},\n    {\"x\" : 490, \"y\" : 236},\n    {\"x\" : 348, \"y\" : 276},\n    {\"x\" : 195, \"y\" : 228}],\n\n    ```", "```js\n    ctx.fillText(\"Puzzle \"+untangleGame.currentLevel+\", Completeness: \" + untangleGame.progressPercentage + \"%\", 60, ctx.canvas.height- 80);\n\n    ```", "```js\n<img id=\"board\" src=\"img/board.png\">\n\n```", "```js\nvar img = document.getElementById('board');\ncontext.drawImage(img, x, y);\n\n```", "```js\nvar board = new Image();\nboard.onload = function() {\ncontext.drawImage(board, x, y);\nimages, inside canvasimages, inside canvasdrawing}\nboard.src = \"images/board.png\";\n\n```", "```js\nuntangleGame.background.onerror = function() {\nconsole.log(\"Error loading the image.\");\n}\n\n```", "```js\ndrawImage(image, x, y);\n\n```", "```js\ndrawImage(image, x, y, width, height);\n\n```", "```js\ndrawImage(image, sx, sy, sWidth, sHeight, dx, dy, width, height);\n\n```", "```js\n    <link href='http://fonts.googleapis.com/css?family=Josefin+Sans:600' rel='stylesheet' type='text/css'>\n\n    ```", "```js\n    <section id=\"page\">\n    ...\n    </section>\n\n    ```", "```js\n    html, body {\n    background: url(../images/title_bg.png) 50% 0 no-repeat, url(../ images/bg_repeat.png) 50% 0 repeat-y #889ba7;\n    margin: 0;\n    font-family: 'Josefin Sans', arial, serif;\n    color: #111;\n    }\n    #game{\n    position:relative;\n    }\n    #page {\n    width: 821px;\n    min-height: 800px;\n    margin: 0 auto;\n    padding: 0;\n    text-align: center;\n    text-shadow: 0 1px 5px rgba(60,60,60,.6);\n    }\n    header {\n    height: 88px;\n    padding-top: 36px;\n    margin-bottom: 50px;\n    font-family: \"Rock Salt\", Arial, sans-serif;\n    font-size: 14px;\n    text-shadow: 0 1px 0 rgba(200,200,200,.5);\n    color: #121;\n    }\n\n    ```", "```js\n    ctx.fillText(\"Untangle Game\",ctx.canvas.width/2,50);\n\n    ```", "```js\n    // load the guide sprite image\n    untangleGame.guide = new Image();\n    untangleGame.guide.onload = function() {\n    untangleGame.guideReady = true;\n    // setup timer to switch the display frame of the guide sprite\n    untangleGame.guideFrame = 0;\n    setInterval(guideNextFrame, 500);\n    }\n    untangleGame.guide.src = \"images/guide_sprite.png\";\n\n    ```", "```js\n    function guideNextFrame()\n    {\n    untangleGame.guideFrame++;\n    // there are only 6 frames (0-5) in the guide animation.\n    // we loop back the frame number to frame 0 after frame 5.\n    if (untangleGame.guideFrame > 5)\n    {\n    untangleGame.guideFrame = 0;\n    }\n    }\n\n    ```", "```js\n    // draw the guide animation\n    if (untangleGame.currentLevel == 0 && untangleGame.guideReady)\n    {\n    // the dimension of each frame is 80x130.\n    var nextFrameX = untangleGame.guideFrame * 80;\n    ctx.drawImage(untangleGame.guide, nextFrameX, 0, 80, 130, 325,\n    130, 80, 130);\n    }\n\n    ```", "```js\nvar nextFrameX = untangleGame.guideFrame * 80;\nctx.drawImage(untangleGame.guide, nextFrameX, 0, 80, 130, 325, 130, 80, 130);\n\n```", "```js\nfunction guideNextFrame()\n{\nuntangleGame.guideFrame++;\n// there are only 6 frames (0-5) in the guide animation.\n// we loop back the frame number to frame 0 after frame 5.\nif (untangleGame.guideFrame > 5)\n{\nuntangleGame.guideFrame = 0;\n}\n}\n\n```", "```js\n    <section id=\"layers\">\n    <canvas id=\"bg\" width=\"768\" height=\"440\">\n    Sorry, your web browser does not support canvas content.\n    </canvas>\n    <canvas id=\"guide\" width=\"768\" height=\"440\"></canvas>\n    <canvas id=\"game\" width=\"768\" height=\"440\"></canvas>\n    <canvas id=\"ui\" width=\"768\" height=\"440\"></canvas>\n    </section>\n\n    ```", "```js\n    #layers {\n    height: 440px;\n    position: relative;\n    margin: 0 auto;\n    width:768px;\n    height: 440px;\n    }\n    #layers canvas{\n    left: 50%;\n    margin-left: -384px;\n    position: absolute;\n    }\n    #guide {\n    opacity: .7;\n    }\n    #guide.fadeout {\n    opacity: 0;\n    -webkit-transition: opacity .5s linear;\n    transition: opacity .5s linear;\n    }\n    #ui {\n    -webkit-transition: opacity .3s linear;\n    transition: opacity .3s linear;\n    }\n    #ui.dim {\n    opacity: .3;\n    }\n\n    ```", "```js\n    untangleGame.layers = new Array();\n\n    ```", "```js\n    // prepare layer 0 (bg)\n    var canvas_bg = document.getElementById(\"bg\");\n    untangleGame.layers[0] = canvas_bg.getContext(\"2d\");\n    // prepare layer 1 (guide)\n    var canvas_guide = document.getElementById(\"guide\");\n    untangleGame.layers[1] = canvas_guide.getContext(\"2d\");\n    // prepare layer 2 (game)\n    var canvas = document.getElementById(\"game\");\n    var ctx = canvas.getContext(\"2d\");\n    untangleGame.layers[2] = ctx;\n    // prepare layer 3 (ui)\n    var canvas_ui = document.getElementById(\"ui\");\n    untangleGame.layers[3] = canvas_ui.getContext(\"2d\");\n\n    ```", "```js\n    $(\"#layers\").mousedown(function(e)\n    $(\"#layers\").mousemove(function(e)\n    $(\"#layers\").mouseup(function(e)\n\n    ```", "```js\n    function drawLayerBG()\n    {\n    var ctx = untangleGame.layers[0];\n    clear(ctx);\n    // draw the image background\n    ctx.drawImage(untangleGame.background, 0, 0);\n    }\n\n    ```", "```js\n    untangleGame.background.onload = function() {\n    drawLayerBG();\n    // setup an interval to loop the game loop\n    setInterval(gameloop, 30);\n    }\n\n    ```", "```js\n    function gameloop() {\n    drawLayerGuide();\n    drawLayerGame();\n    drawLayerUI();\n    }\n\n    ```", "```js\n    function drawLayerGuide()\n    {\n    var ctx = untangleGame.layers[1];\n    clear(ctx);\n    // draw the guide animation\n    if (untangleGame.guideReady)\n    {\n    // the dimension of each frame is 80x130.\n    var nextFrameX = untangleGame.guideFrame * 80;\n    ctx.drawImage(untangleGame.guide, nextFrameX, 0, 80, 130, 325, 130, 80, 130);\n    }\n    // fade out the guideline after level 0\n    if (untangleGame.currentLevel == 1)\n    {\n    $(\"#guide\").addClass('fadeout');\n    }\n    }\n\n    ```", "```js\n    function drawLayerGame()\n    {\n    // get the reference of the canvas element and the drawing context.\n    var ctx = untangleGame.layers[2];\n    // draw the game state visually\n    // clear the canvas before drawing.\n    clear(ctx);\n    // draw all remembered line\n    for(var i=0;i<untangleGame.lines.length;i++) {\n    var line = untangleGame.lines[i];\n    var startPoint = line.startPoint;\n    var endPoint = line.endPoint;\n    var thickness = line.thickness;\n    drawLine(ctx, startPoint.x, startPoint.y, endPoint.x, endPoint.y, thickness);\n    }\n    // draw all remembered circles\n    for(var i=0;i<untangleGame.circles.length;i++) {\n    var circle = untangleGame.circles[i];\n    drawCircle(ctx, circle.x, circle.y, circle.radius);\n    }\n    }\n\n    ```", "```js\n    function drawLayerUI()\n    multi-layers canvas gamemulti-layers canvas gamefour layers, dividing into{\n    var ctx = untangleGame.layers[3];\n    clear(ctx);\n    // draw the level progress text\n    ctx.font = \"26px 'Rock Salt'\";\n    ctx.fillStyle = \"#dddddd\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"bottom\";\n    ctx.fillText(\"Puzzle \"+untangleGame.currentLevel+\", Completeness: \", 60,ctx.canvas.height-80);\n    ctx.fillText(untangleGame.progressPercentage+\"%\",450, ctx.canvas.height-80);\n    // get all circles, check if the ui overlap with the game objects\n    var isOverlappedWithCircle = false;\n    for(var i in untangleGame.circles) {\n    var point = untangleGame.circles[i];\n    if (point.y > 310)\n    {\n    isOverlappedWithCircle = true;\n    }\n    }\n    if (isOverlappedWithCircle)\n    {\n    $(\"#ui\").addClass('dim');\n    }\n    else\n    {\n    $(\"#ui\").removeClass('dim');\n    }\n    }\n\n    ```", "```js\nif (untangleGame.currentLevel == 1)\n{\n$(\"#guide\").addClass('fadeout');\n}\n\n```"]