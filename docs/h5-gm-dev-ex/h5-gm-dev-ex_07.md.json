["```js\n    <link href=\"http://fonts.googleapis.com/css?family=Orbitron:400,700\" rel=\"stylesheet\" type=\"text/css\" >\n\n    ```", "```js\n    <div id=\"timer\">\n    Elapsed time: <span id=\"elapsed-time\">00:00</span>\n    </div>\n    <section id=\"game\">\n    <div id=\"cards\">\n    <div class=\"card\">\n    <div class=\"face front\"></div>\n    <div class=\"face back\"></div>\n    </div> <!-- .card -->\n    </div> <!-- #cards -->\n    </section> <!-- #game -->\n    <section id=\"popup\" class=\"hide\">\n    <div id=\"popup-bg\">\n    </div>\n    <div id=\"popup-box\">\n    <div id=\"popup-box-content\">\n    <h1>You Won!</h1>\n    <p>Your Score:</p>\n    <p><span class='score'>13</span></p>\n    </div>\n    </div>\n    </section>\n\n    ```", "```js\n    $(function(){\n    ...\n    // reset the elapsed time to 0.\n    matchingGame.elapsedTime = 0;\n    // start the timer\n    matchingGame.timer = setInterval(countTimer, 1000);\n    }\n\n    ```", "```js\n    function countTimer()\n    {\n    matchingGame.elapsedTime++;\n    // calculate the minutes and seconds from elapsed time\n    var minute = Math.floor(matchingGame.elapsedTime / 60);\n    var second = matchingGame.elapsedTime % 60;\n    // add padding 0 if minute and second is less then 10\n    if (minute < 10) minute = \"0\" + minute;\n    if (second < 10) second = \"0\" + second;\n    // display the elapsed time\n    $(\"#elapsed-time\").html(minute+\":\"+second);\n    }\n\n    ```", "```js\n    function removeTookCards()\n    {\n    $(\".card-removed\").remove();\n    // check if all cards are removed and show game over\n    if ($(\".card\").length == 0)\n    {\n    gameover();\n    }\n    }\n\n    ```", "```js\n    function gameover()\n    {\n    // stop the timer\n    clearInterval(matchingGame.timer);\n    // set the score in the game over popup\n    $(\".score\").html($(\"#elapsed-time\").html());\n    // show the game over popup\n    $(\"#popup\").removeClass(\"hide\");\n    }\n\n    ```", "```js\n    <p>\n    <small>Last Score: <span class='last-score'>20</span>\n    </small>\n    </p>\n\n    ```", "```js\n    function gameover()\n    {\n    // stop the timer\n    clearInterval(matchingGame.timer);\n    // display the elapsed time in the game over popup\n    $(\".score\").html($(\"#elapsed-time\"));\n    // load the saved last score from local storage\n    var lastElapsedTime = localStorage.getItem (\"last-elapsed-time\");\n    // convert the elapsed seconds into minute:second format\n    // calculate the minutes and seconds from elapsed time\n    var minute = Math.floor(lastElapsedTime / 60);\n    var second = lastElapsedTime % 60;\n    // add padding 0 if minute and second is less then 10\n    if (minute < 10) minute = \"0\" + minute;\n    if (second < 10) second = \"0\" + second;\n    // display the last elapsed time in game over popup\n    $(\".last-score\").html(minute+\":\"+second);\n    // save the score into local storage\n    localStorage.setItem (\"last-elapsed-time\", matchingGame.elapsedTime);\n    // show the game over popup\n    $(\"#popup\").removeClass(\"hide\");\n    }\n\n    ```", "```js\nlocalStorage.setItem(key, value);\n\n```", "```js\nlocalStorage.setItem(\"last-elapsed-time\", matchingGame.elapsedTime);\n\n```", "```js\nlocalStorage.getItem(key);\n\n```", "```js\nvar score = 13.234;\nlocalStorage.setItem(\"game-score\",score);\n// result: stored \"13.234\".\nvar gameScore = localStorage.getItem(\"game-score\");\n// result: get \"13.234\" into gameScore;\ngameScore = parseFloat(gameScore);\n// result: 13.234 floating value\n\n```", "```js\nlocalStorage.setItem(\"last-elapsed-time\", elapsedTime);\nvar lastElapsedTime = localStorage.getItem(\"last-elapsed-time\");\n\n```", "```js\nlocalStorage[\"last-elapsed-time\"] = elapsedTime;\nvar lastElapsedTime = localStorage[\"last-elapsed-time\"];\n\n```", "```js\n    <p>\n    <small>Last Score: <span class='last-score'>20</span><br>\n    Saved on: <span class='saved-time'>13/4/2011 3:14pm</span>\n    </small>\n    </p>\n\n    ```", "```js\n    function gameover()\n    {\n    // stop the timer\n    clearInterval(matchingGame.timer);\n    // display the elapsed time in the game over popup\n    $(\".score\").html($(\"#elapsed-time\"));\n    // load the saved last score and save time from local storage\n    var lastScore = localStorage.getItem(\"last-score\");\n    // check if there is no any saved record\n    lastScoreObj = JSON.parse(lastScore);\n    if (lastScoreObj == null)\n    {\n    // create an empty record if there is no any saved record\n    lastScoreObj = {\"savedTime\": \"no record\", \"score\": 0};\n    }\n    var lastElapsedTime = lastScoreObj.score;\n    // convert the elapsed seconds into minute:second format\n    // calculate the minutes and seconds from elapsed time\n    var minute = Math.floor(lastElapsedTime / 60);\n    var second = lastElapsedTime % 60;\n    local storagelocal storageobject, saving// add padding 0 if minute and second is less then 10\n    if (minute < 10) minute = \"0\" + minute;\n    if (second < 10) second = \"0\" + second;\n    // display the last elapsed time in game over popup\n    $(\".last-score\").html(minute+\":\"+second);\n    // display the saved time of last score\n    var savedTime = lastScoreObj.savedTime;\n    $(\".saved-time\").html(savedTime);\n    // get the current datetime\n    var currentTime = new Date();\n    var month = currentTime.getMonth() + 1;\n    var day = currentTime.getDate();\n    var year = currentTime.getFullYear();\n    var hours = currentTime.getHours();\n    var minutes = currentTime.getMinutes();\n    // add padding 0 to minutes\n    if (minutes < 10) minutes = \"0\" + minutes;\n    var seconds = currentTime.getSeconds();\n    // add padding 0 to seconds\n    if (seconds < 10) seconds = \"0\" + seconds;\n    var now = day+\"/\"+month+\"/\"+year+\" \"+hours+\":\"+minutes+\":\"+seconds;\n    //construct the object of datetime and game score\n    var obj = { \"savedTime\": now, \"score\": matchingGame.elapsedTime};\n    // save the score into local storage\n    localStorage.setItem(\"last-score\", JSON.stringify(obj));\n    // show the game over popup\n    $(\"#popup\").removeClass(\"hide\");\n    }\n\n    ```", "```js\nvar currentTime = new Date();\nvar month = currentTime.getMonth() + 1;\nvar day = currentTime.getDate();\nvar year = currentTime.getFullYear();\nvar hours = currentTime.getHours();\nvar minutes = currentTime.getMinutes();\nvar seconds = currentTime.getSeconds();\n\n```", "```js\nif (minutes < 10) minutes = \"0\" + minutes;\nif (seconds < 10) seconds = \"0\" + seconds;\nvar now = day+\"/\"+month+\"/\"+year+\" \"+hours+\":\"+minutes+\":\"+seconds;\n\n```", "```js\nJSON.stringify(anyObject);\n\n```", "```js\nvar jsObj = {};\njsObj.testArray = [1,2,3,4,5];\njsObj.name = 'CSS3 Matching Game';\njsObj.date = '8 May, 2011';\nJSON.stringify(jsObj);\n// result: {\"testArray\":[1,2,3,4,5],\"name\":\"CSS3 Matching Game\",\"date\":\"8 May, 2011\"}\n\n```", "```js\nJSON.parse(jsonFormattedString);\n\n```", "```js\n    <div id=\"popup-box\">\n    <div class=\"ribbon hide\">\n    <div class=\"ribbon-body\">\n    <span>New Record</span>\n    </div>\n    <div class=\"triangle\"></div>\n    </div>\n    <div id=\"popup-box-content\">\n    \u2026\n\n    ```", "```js\n    #popup-box {\n    position: relative;\n    ...\n    }\n\n    ```", "```js\n    .ribbon.hide {\n    display: none;\n    }\n    .ribbon {\n    float: left;\n    position: absolute;\n    left: -7px;\n    top: 165px;\n    z-index: 0;\n    font-size: .5em;\n    text-transform: uppercase;\n    text-align: right;\n    }\n    .ribbon-body {\n    height: 14px;\n    background: #ca3d33;\n    padding: 6px;\n    z-index: 100;\n    -webkit-box-shadow: 2px 2px 0 rgba(150,120,70,.4);\n    border-radius: 0 5px 5px 0;\n    color: #fff;\n    text-shadow: 0px 1px 1px rgba(0,0,0,.3);\n    }\n    .triangle{\n    position: relative;\n    height: 0px;\n    width: 0;\n    left: -5px;\n    top: -32px;\n    border-style: solid;\n    border-width: 6px;\n    border-color: transparent #882011 transparent transparent;\n    z-index: -1;\n    }\n\n    ```", "```js\n    if (lastElapsedTime == 0 || matchingGame.elapsedTime < lastElapsedTime)\n    {\n    $(\".ribbon\").removeClass(\"hide\");\n    }\n\n    ```", "```js\n.triangle{\nposition: relative;\nheight: 0px;\nwidth: 0;\nleft: -5px;\ntop: -32px;\nborder-style: solid;\nborder-width: 6px;\nborder-color: transparent #882011 transparent transparent;\nz-index: -1;\n}\n\n```", "```js\n    matchingGame.savingObject = {};\n    matchingGame.savingObject.deck = [];\n    // an array to store which card is removed by storing their index.\n    matchingGame.savingObject.removedCards = [];\n    // store the counting elapsed time.\n    matchingGame.savingObject.currentElapsedTime = 0;\n\n    ```", "```js\n    $(function(){\n    // shuffling the deck\n    matchingGame.deck.sort(shuffle);\n    // copying the deck into saving object.\n    matchingGame.savingObject.deck = matchingGame.deck.slice();\n    // clone 12 copies of the card DOM\n    for(var i=0;i<11;i++){\n    $(\".card:first-child\").clone().appendTo(\"#cards\");\n    }\n    ...\n    // embed the pattern data into the DOM element.\n    $(this).attr(\"data-pattern\",pattern);\n    // save the index into the DOM element, so we know which is the next card.\n    $(this).attr(\"data-card-index\",index);\n    ...\n\n    ```", "```js\n    function countTimer()\n    {\n    matchingGame.elapsedTime++;\n    // save the current elapsed time into savingObject.\n    matchingGame.savingObject.currentElapsedTime = matchingGame.elapsedTime;\n    ...\n    // save the game progress\n    saveSavingObject();\n    }\n\n    ```", "```js\n    function removeTookCards()\n    {\n    // add each removed card into the array which store which cards are removed\n    $(\".card-removed\").each(function(){\n    matchingGame.savingObject.removedCards.push ($(this).data(\"card-index\"));\n    $(this).remove();\n    });\n    // check if all cards are removed and show game over\n    if ($(\".card\").length == 0)\n    {\n    gameover();\n    }\n    }\n\n    ```", "```js\n    function gameover()\n    {\n    //at last, we clear the saved savingObject\n    localStorage.removeItem(\"savingObject\");\n    }\n\n    ```", "```js\n    function saveSavingObject()\n    {\n    // save the encoded saving object into local storage\n    localStorage[\"savingObject\"] = JSON.stringify(matchingGame.savingObject);\n    }\n\n    ```", "```js\nlocalStorage.removeItem(key);\n\n```", "```js\nvar a = [1,2,3,4,5];\nvar b = a;\na.pop();\n// result:\n// a: [1,2,3,4]\n// b: [1,2,3,4]\n\n```", "```js\nvar a = [1,2,3,4,5];\nvar b = a.slice();\na.pop();\n// result:\n// a: [1,2,3,4]\n// b: [1,2,3,4,5]\n\n```", "```js\n    $(function(){\n    // shuffling the deck\n    matchingGame.deck.sort(shuffle);\n    // re-create the saved deck\n    var savedObject = savedSavingObject();\n    if (savedObject != undefined)\n    {\n    matchingGame.deck = savedObject.deck;\n    }\n    ...\n\n    ```", "```js\n    // removed cards that were removed in savedObject.\n    if (savedObject != undefined)\n    {\n    matchingGame.savingObject.removedCards = savedObject.removedCards;\n    // find those cards and remove them.\n    for(var i in matchingGame.savingObject.removedCards)\n    {\n    $(\".card[data-card-index=\"+matchingGame.savingObject. removedCards[i]+\"]\").remove();\n    }\n    }\n    // reset the elapsed time to 0.\n    matchingGame.elapsedTime = 0;\n    // restore the saved elapsed time\n    if (savedObject != undefined)\n    {\n    matchingGame.elapsedTime = savedObject.currentElapsedTime;\n    matchingGame.savingObject.currentElapsedTime = savedObject. currentElapsedTime;\n    }\n\n    ```", "```js\n    // Returns the saved savingObject from the local storage.\n    function savedSavingObject()\n    {\n    // returns the saved saving object from local storage\n    var savingObject = localStorage[\"savingObject\"];\n    if (savingObject != undefined)\n    {\n    savingObject = JSON.parse(savingObject);\n    }\n    return savingObject;\n    }\n\n    ```", "```js\nif (savedObject != undefined)\n{\nmatchingGame.savingObject.removedCards = savedObject.removedCards;\n// find those cards and remove them.\nfor(var i in matchingGame.savingObject.removedCards)\n{\n$(\".card[data-card-index=\"+matchingGame.savingObject. removedCards[i]+\"]\").remove();\n}\n}\n\n```"]