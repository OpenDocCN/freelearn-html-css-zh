["```js\n    $ ./configure\n    $ sudo make install\n\n    ```", "```js\n    $ node --version\n\n    ```", "```js\n    v0.5.0-pre\n\n    ```", "```js\n    var ws = require(__dirname + '/lib/ws/server');\n    var server = ws.createServer();\n    server.addListener(\"connection\", function(conn){\n    // init stuff on connection\n    console.log(\"A connection established with id\",conn.id);\n    var message = \"Welcome \"+conn.id+\" joining the party. Total connection:\"+server.manager.length;\n    server.broadcast(message);\n    });\n    server.listen(8000);\n    console.log(\"WebSocket server is running.\");\n    console.log(\"Listening to port 8000.\");\n\n    ```", "```js\n    node server.js\n\n    ```", "```js\n    $ node server.js\n    WebSocket server is running.\n    Listening to port 8000.\n\n    ```", "```js\nvar ws = require(__dirname + '/lib/ws/server');\nvar server = ws.createServer();\n\n```", "```js\nserver.listen(8000);\n\n```", "```js\nserver.addListener(\"connection\", function(conn){\nconsole.log(\"A connection established with id\",conn.id);\n\u2026\n});\n\n```", "```js\nvar totalConnectedClients = server.manager.length;\n\n```", "```js\nvar message = \"a message from server\";\nserver.broadcast(message);\n\n```", "```js\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n    <meta charset=\"utf-8\">\n    <title>WebSockets demo for HTML5 Games Development: A Beginner's Guide</title>\n    <meta name=\"description\" content=\"This is a WebSockets demo for the book HTML5 Games Development: A Beginner's Guide by Makzan\">\n    <meta name=\"author\" content=\"Makzan\">\n    </head>\n    <body>\n    <script src=\"img/jquery-1.6.min.js\"></script>\n    <script src=\"img/html5games.websocket.js\"></script>\n    </body>\n    </html>\n\n    ```", "```js\n    var websocketGame = {\n    }\n    // init script when the DOM is ready.\n    $(function(){\n    // check if existence of WebSockets in browser\n    if (window[\"WebSocket\"]) {\n    // create connection\n    websocketGame.socket = new WebSocket(\"ws://127.0.0.1:8000\");\n    // on open event\n    websocketGame.socket.onopen = function(e) {\n    console.log('WebSocket connection established.');\n    };\n    // on message event\n    websocketGame.socket.onmessage = function(e) {\n    console.log(e.data);\n    };\n    // on close event\n    websocketGame.socket.onclose = function(e) {\n    console.log('WebSocket connection closed.');\n    };\n    }\n    });\n\n    ```", "```js\n    $ node server.js\n    WebSocket server is running.\n    Listening to port 8000.\n    A connection established with id 3863522640\n    A connection established with id 3863522651\n\n    ```", "```js\nvar socket = new WebSocket(url);\n\n```", "```js\n    server.addListener(\"connection\", function(conn){\n    // init stuff on connection\n    console.log(\"A connection established with id\",conn.id);\n    var message = \"Welcome \"+conn.id+\" joining the party. Total connection:\"+server.manager.length;\n    server.broadcast(message);\n    // listen to the message\n    conn.addListener(\"message\", function(message){\n    console.log(\"Got data '\"+message+\"' from connection \"+conn.id);\n    });\n    });\n\n    ```", "```js\n    <input type='text' id=\"chat-input\">\n    <input type='button' value=\"Send\" id=\"send\">\n\n    ```", "```js\n    $(\"#send\").click(sendMessage);\n    $(\"#chat-input\").keypress(function(event) {\n    if (event.keyCode == '13') {\n    sendMessage();\n    }\n    });\n    function sendMessage()\n    {\n    var message = $(\"#chat-input\").val();\n    websocketGame.socket.send(message);\n    $(\"#chat-input\").val(\"\");\n    }\n\n    ```", "```js\nwebsocketGame.socket.send(message);\n\n```", "```js\nvar message = $(\"#chat-input\").val();\nwebsocketGame.socket.send(message);\n\n```", "```js\nconn.addListener(\"message\", function(message){\nconsole.log(\"Got data '\"+message+\"' from connection \"+conn.id);\n});\n\n```", "```js\n    conn.addListener(\"message\", function(message){\n    console.log(\"Got data '\"+message+\"' from connection \"+conn.id);\n    var displayMessage = conn.id + \" says: \"+message;\n    server.broadcast(displayMessage);\n    });\n\n    ```", "```js\n    <ul id=\"chat-history\"></ul>\n\n    ```", "```js\n    socket.onmessage = function(e) {\n    $(\"#chat-history\").append(\"<li>\"+e.data+\"</li>\");\n    };\n\n    ```", "```js\n    <canvas id='drawing-pad' width='500' height='400'>\n    </canvas>\n\n    ```", "```js\n    <style>\n    canvas{position:relative;}\n    </style>\n\n    ```", "```js\n    var websocketGame = {\n    // indicates if it is drawing now.\n    isDrawing : false,\n    // the starting point of next line drawing.\n    startX : 0,\n    startY : 0,\n    }\n    // canvas context\n    var canvas = document.getElementById('drawing-pad');\n    var ctx = canvas.getContext('2d');\n\n    ```", "```js\n    // the logic of drawing on canvas\n    $(\"#drawing-pad\").mousedown(function(e) {\n    // get the mouse x and y relative to the canvas top-left point.\n    var mouseX = e.layerX || 0;\n    var mouseY = e.layerY || 0;\n    startX = mouseX;\n    startY = mouseY;\n    isDrawing = true;\n    });\n    $(\"#drawing-pad\").mousemove(function(e) {\n    // draw lines when is drawing\n    if (websocketGame.isDrawing) {\n    // get the mouse x and y relative to the canvas top-left point.\n    var mouseX = e.layerX || 0;\n    var mouseY = e.layerY || 0;\n    if (!(mouseX == websocketGame.startX && mouseY == websocketGame.startY)) {\n    drawLine(ctx, websocketGame.startX, websocketGame.startY,mouseX,mouseY,1);\n    websocketGame.startX = mouseX;\n    websocketGame.startY = mouseY;\n    }\n    }\n    });\n    $(\"#drawing-pad\").mouseup(function(e) {\n    websocketGame.isDrawing = false;\n    });\n\n    ```", "```js\n    function drawLine(ctx, x1, y1, x2, y2, thickness) {\n    ctx.beginPath();\n    ctx.moveTo(x1,y1);\n    ctx.lineTo(x2,y2);\n    ctx.lineWidth = thickness;\n    ctx.strokeStyle = \"#444\";\n    ctx.stroke();\n    }\n\n    ```", "```js\n    // Constants\n    var LINE_SEGMENT = 0;\n    var CHAT_MESSAGE = 1;\n    var ws = require(__dirname + '/lib/ws/server');\n    var server = ws.createServer();\n    server.addListener(\"connection\", function(conn){\n    // init stuff on connection\n    console.log(\"A connection established with id\",conn.id);\n    var message = \"Welcome \"+conn.id+\" joining the party. Total connection:\"+server.manager.length;\n    var data = {};\n    data.dataType = CHAT_MESSAGE;\n    data.sender = \"Server\";\n    data.message = message;\n    shared drawing whiteboardshared drawing whiteboardconnected browsers drawings, broadcastingserver.broadcast(JSON.stringify(data));\n    // listen to the message\n    shared drawing whiteboardshared drawing whiteboardconnected browsers drawings, broadcastingconn.addListener(\"message\", function(message){\n    console.log(\"Got data '\"+message+\"' from connection \"+conn.id);\n    var data = JSON.parse(message);\n    if (data.dataType == CHAT_MESSAGE) {\n    // add the sender information into the message data object\n    data.sender = conn.id;\n    }\n    server.broadcast(JSON.stringify(data));\n    });\n    });\n    server.listen(8000);\n    console.log(\"WebSocket server is running.\");\n    console.log(\"Listening to port 8000.\");\n\n    ```", "```js\n    // Contants\n    LINE_SEGMENT : 0,\n    CHAT_MESSAGE : 1,\n\n    ```", "```js\n    socket.onmessage = function(e) {\n    // check if the received data is chat message or line segment\n    console.log(\"onmessage event:\",e.data);\n    var data = JSON.parse(e.data);\n    if (data.dataType == websocketGame.CHAT_MESSAGE) {\n    $(\"#chat-history\").append(\"<li>\"+data.sender+\" said: \"+data.message+\"</li>\");\n    }\n    else if (data.dataType == websocketGame.LINE_SEGMENT) {\n    drawLine(ctx, data.startX, data.startY, data.endX, data.endY, 1);\n    }\n    };\n\n    ```", "```js\n    $(\"#drawing-pad\").mousemove(function(e) {\n    // draw lines when is drawing\n    if (websocketGame.isDrawing) {\n    // get the mouse x and y relative to the canvas top-left point.\n    var mouseX = e.layerX || 0;\n    var mouseY = e.layerY || 0;\n    if (!(mouseX == websocketGame.startX && mouseY == websocketGame.startY)) {\n    drawLine(ctx,startX,startY,mouseX,mouseY,1);\n    // send the line segment to server\n    var data = {};\n    data.dataType = websocketGame.LINE_SEGMENT;\n    data.startX = startX;\n    data.startY = startY;\n    data.endX = mouseX;\n    data.endY = mouseY;\n    websocketGame.socket.send(JSON.stringify(data));\n    websocketGame.startX = mouseX;\n    websocketGame.startY = mouseY;\n    }\n    }\n    });\n\n    ```", "```js\n    function sendMessage() {\n    var message = $(\"#chat-input\").val();\n    // pack the message into an object.\n    var data = {};\n    data.dataType = websocketGame.CHAT_MESSAGE;\n    data.message = message;\n    websocketGame.socket.send(JSON.stringify(data));\n    $(\"#chat-input\").val(\"\");\n    }\n\n    ```", "```js\n// Contants\nLINE_SEGMENT : 0,\nCHAT_MESSAGE : 1,\n\n```", "```js\nif (data.dataType == websocketGame.CHAT_MESSAGE) {\u2026}\n\n```", "```js\n// send the line segment to server\nvar data = {};\ndata.dataType = websocketGame.LINE_SEGMENT;\ndata.startX = startX;\ndata.startY = startY;\ndata.endX = mouseX;\ndata.endY = mouseY;\nwebsocketGame.socket.send(JSON.stringify(data));\n\n```", "```js\nvar data = JSON.parse(e.data);\nif (data.dataType == websocketGame.CHAT_MESSAGE) {\n$(\"#chat-history\").append(\"<li>\"+data.sender+\" said: \"+data.message+\"</li>\");\n}\nelse if (data.dataType == websocketGame.LINE_SEGMENT) {\ndrawLine(ctx, data.startX, data.startY, data.endX, data.endY, 1);\n}\n\n```", "```js\n    <input type='button' value=\"Restart\" id=\"restart\">\n\n    ```", "```js\n    // Constants\n    LINE_SEGMENT : 0,\n    CHAT_MESSAGE : 1,\n    GAME_LOGIC : 2,\n    // Constant for game logic state\n    WAITING_TO_START : 0,\n    GAME_START : 1,\n    GAME_OVER : 2,\n    GAME_RESTART : 3,\n\n    ```", "```js\n    isTurnToDraw : false,\n\n    ```", "```js\n    else if (data.dataType == websocketGame.GAME_LOGIC) {\n    if (data.gameState == websocketGame.GAME_OVER) {\n    websocketGame.isTurnToDraw = false;\n    $(\"#chat-history\").append(\"<li>\"+data.winner+\" wins! The answer is '\"+data.answer+\"'.</li>\");\n    $(\"#restart\").show();\n    }\n    if (data.gameState == websocketGame.GAME_START) {\n    // clear the canvas.\n    canvas.width = canvas.width;\n    // hide the restart button.\n    $(\"#restart\").hide();\n    // clear the chat history\n    $(\"#chat-history\").html(\"\");\n    if (data.isPlayerTurn) {\n    isTurnToDraw = true;\n    $(\"#chat-history\").append(\"<li>Your turn to draw. Please draw '\"+data.answer+\"'.</li>\");\n    }\n    else {\n    $(\"#chat-history\").append(\"<li>Game Started. Get Ready. You have one minute to guess.</li>\");\n    }\n    }\n    }\n\n    ```", "```js\n    // Constants\n    var LINE_SEGMENT = 0;\n    var CHAT_MESSAGE = 1;\n    var GAME_LOGIC = 2;\n    // Constant for game logic state\n    var WAITING_TO_START = 0;\n    var GAME_START = 1;\n    var GAME_OVER = 2;\n    var GAME_RESTART = 3;\n    var ws = require(__dirname + '/lib/ws/server');\n    var server = ws.createServer();\n    // the current turn of player index.\n    var playerTurn = 0;\n    var wordsList = ['apple','idea','wisdom','angry'];\n    var currentAnswer = undefined;\n    var currentGameState = WAITING_TO_START;\n    var gameOverTimeout;\n    server.addListener(\"connection\", function(conn){\n    // init stuff on connection\n    console.log(\"A connection established with id\",conn.id);\n    var message = \"Welcome \"+conn.id+\" joining the party. Total connection:\"+server.manager.length;\n    var data = {};\n    data.dataType = CHAT_MESSAGE;\n    data.sender = \"Server\";\n    data.message = message;\n    server.broadcast(JSON.stringify(data));\n    // send the game state to all players.\n    var gameLogicData = {};\n    gameLogicData.dataType = GAME_LOGIC;\n    gameLogicData.gameState = WAITING_TO_START;\n    server.broadcast(JSON.stringify(gameLogicData));\n    // start the game if there are 2 or more connections\n    if (currentGameState == WAITING_TO_START && server.manager.length >= 2)\n    {\n    startGame();\n    }\n    // listen to the message\n    conn.addListener(\"message\", function(message){\n    console.log(\"Got data '\"+message+\"' from connection \"+conn.id);\n    var data = JSON.parse(message);\n    if (data.dataType == CHAT_MESSAGE)\n    {\n    // add the sender information into the message data object.\n    data.sender = conn.id;\n    multiplayer draw-and-guess gamemultiplayer draw-and-guess gamebuilding}\n    server.broadcast(JSON.stringify(data));\n    // check if the message is guessing right or wrong\n    if (data.dataType == CHAT_MESSAGE)\n    {\n    if (currentGameState == GAME_START && data.message == currentAnswer)\n    {\n    var gameLogicData = {};\n    gameLogicData.dataType = GAME_LOGIC;\n    gameLogicData.gameState = GAME_OVER;\n    gameLogicData.winner = conn.id;\n    gameLogicData.answer = currentAnswer;\n    server.broadcast(JSON.stringify(gameLogicData));\n    currentGameState = WAITING_TO_START;\n    // clear the game over timeout\n    clearTimeout(gameOverTimeout);\n    }\n    }\n    if (data.dataType == GAME_LOGIC && data.gameState == GAME_RESTART)\n    {\n    startGame();\n    }\n    });\n    });\n    function startGame()\n    {\n    // pick a player to draw\n    playerTurn = (playerTurn+1) % server.manager.length;\n    // pick an answer\n    var answerIndex = Math.floor(Math.random() * wordsList.length);\n    currentAnswer = wordsList[answerIndex];\n    // game start for all players\n    multiplayer draw-and-guess gamemultiplayer draw-and-guess gamebuildingvar gameLogicData1 = {};\n    gameLogicData1.dataType = GAME_LOGIC;\n    gameLogicData1.gameState = GAME_START;\n    gameLogicData1.isPlayerTurn = false;\n    server.broadcast(JSON.stringify(gameLogicData1));\n    // game start with answer to the player in turn\n    var index = 0;\n    server.manager.forEach(function(connection){\n    if (index == playerTurn)\n    {\n    var gameLogicData2 = {};\n    gameLogicData2.dataType = GAME_LOGIC;\n    gameLogicData2.gameState = GAME_START;\n    gameLogicData2.answer = currentAnswer;\n    gameLogicData2.isPlayerTurn = true;\n    server.send(connection.id, JSON.stringify(gameLogicData2));\n    }\n    index++;\n    });\n    // game over the game after 1 minute.\n    gameOverTimeout = setTimeout(function(){\n    var gameLogicData = {};\n    gameLogicData.dataType = GAME_LOGIC;\n    gameLogicData.gameState = GAME_OVER;\n    gameLogicData.winner = \"No one\";\n    gameLogicData.answer = currentAnswer;\n    server.broadcast(JSON.stringify(gameLogicData));\n    currentGameState = WAITING_TO_START;\n    },60*1000);\n    currentGameState = GAME_START;\n    }\n    server.listen(8000);\n    console.log(\"WebSocket server is running.\");\n    console.log(\"Listening to port 8000.\");\n\n    ```", "```js\n// Constants\nvar LINE_SEGMENT = 0;\nvar CHAT_MESSAGE = 1;\nvar GAME_LOGIC = 2;\n\n```", "```js\n// Constant for game logic state\nvar WAITING_TO_START = 0;\nvar GAME_START = 1;\nvar GAME_OVER = 2;\nvar GAME_RESTART = 3;\n\n```", "```js\nvar playerTurn = 0;\n\n```", "```js\nvar gameLogicData1 = {};\ngameLogicData1.dataType = GAME_LOGIC;\ngameLogicData1.gameState = GAME_START;\ngameLogicData1.isPlayerTurn = false;\n\n```", "```js\nvar gameLogicData2 = {};\ngameLogicData2.dataType = GAME_LOGIC;\ngameLogicData2.gameState = GAME_START;\ngameLogicData2.answer = currentAnswer;\ngameLogicData2.isPlayerTurn = true;\n\n```", "```js\nserver.manager.forEach(function);\n\n```", "```js\nserver.manager.forEach(function(connection){\nconsole.log(\"This is connection\",connection.id);\n}\n}\n\n```", "```js\nserver.send(connectionID, message);\n\n```", "```js\nserver.manager.forEach(function(connection){\nif (index == playerTurn)\n{\nvar gameLogicData2 = {};\ngameLogicData2.dataType = GAME_LOGIC;\ngameLogicData2.gameState = GAME_START;\ngameLogicData2.answer = currentAnswer;\ngameLogicData2.isPlayerTurn = true;\nserver.send(connection.id, JSON.stringify(gameLogicData2));\n}\nindex++;\n});\n\n```", "```js\n    <link href='http://fonts.googleapis.com/css?family=Cabin+Sketch: bold' rel='stylesheet' type='text/css'>\n    <link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"css/drawguess.css\">\n\n    ```", "```js\n    <section id=\"game\">\n    <h1>Draw & Guess</h1>\n    ...\n    </section>\n\n    ```", "```js\n    body {\n    background: #ccd6e1;\n    font-family: 'Cabin Sketch', arial, serif;\n    }\n    #game {\n    width: 500px;\n    margin: 0 auto;\n    }\n    #game h1 {\n    text-align: center;\n    margin-bottom: 5px;\n    text-shadow: 0px 1px 0px #fff;\n    }\n    #drawing-pad {\n    border: 10px solid #fffeff;\n    background: #f1f3ef;\n    box-shadow:0px 3px 5px #333;\n    }\n    #chat-history {\n    list-style: none;\n    padding: 0;\n    }\n    #chat-history li {\n    border-bottom: 1px dashed rgba(20,20,20,.2);\n    margin: 10px 0;\n    }\n\n    ```"]