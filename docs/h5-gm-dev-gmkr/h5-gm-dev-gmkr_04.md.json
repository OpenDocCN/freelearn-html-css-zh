["```js\n    mySpeed = 4;\n    myDirection = 0;\n    isAttacking = false;\n    isWalking = false;\n    health = 100;\n    image_speed = 0.5;\n    ```", "```js\n    isWalking = false;\n    if (keyboard_check(vk_right) && place_free(x + mySpeed, y))\n    {\n        x += mySpeed;\n        myDirection = 0;\n        sprite_index = spr_Player_WalkRight;\n        isWalking = true;\n    }\n    ```", "```js\n    if (isWalking == true)\n    {\n        image_speed = 0.5;\n    } else {\n        image_speed = 0;\n    }\n    ```", "```js\n    isWalking = false;\n    if (keyboard_check(vk_right) && place_free(x + mySpeed, y))\n    {\n        x += mySpeed;\n        myDirection = 0;\n        sprite_index = spr_Player_WalkRight;\n        isWalking = true;\n    }\n    if (keyboard_check(vk_up) && place_free(x, y - mySpeed))\n    {\n        y -= mySpeed;\n        myDirection = 90;\n        sprite_index = spr_Player_WalkUp;\n        isWalking = true;\n    }\n    if (keyboard_check(vk_left) && place_free(x - mySpeed, y))\n    {\n        x -= mySpeed;\n        myDirection = 180;\n        sprite_index = spr_Player_WalkLeft;\n        isWalking = true;\n    }\n    if (keyboard_check(vk_down) && place_free(x, y + mySpeed))\n    {\n        y += mySpeed;\n        myDirection = 270;\n        sprite_index = spr_Player_WalkDown;\n        isWalking = true;\n    }\n    if (isWalking == true)\n    {\n        image_speed = 0.5;\n    } else {\n        image_speed = 0;\n    } \n    ```", "```js\n    image_angle = obj_Player.myDirection;\n    image_speed = 0.3;\n    alarm[0] = 6;\n    obj_Player.isAttacking = true;\n    ```", "```js\n    obj_Player.isAttacking = false;\n    instance_destroy();\n    ```", "```js\n    if (keyboard_check_pressed(ord('Z')) && isAttacking == false)\n    {\n        instance_create(x, y, obj_Player_Attack);\n    }\n    ```", "```js\n    global.portalA = 0;\n    global.portalB = 0;\n    global.portalC = 0;\n    global.portalD = 0;\n    global.lastRoom = C04_R01;\n    ```", "```js\n    draw_set_color(c_white);\n    draw_set_halign(fa_center);\n    draw_text(room_width/2, 360, \"Press ANY key\");\n    if (keyboard_check_pressed(vk_anykey))\n    {\n        room_goto_next();\n    }\n    ```", "```js\n    global.lastRoom = room;\n    room_goto(global.portalA);\n    ```", "```js\n    global.portalA = C04_R02;\n    global.portalB = 0;\n    global.portalC = 0;\n    global.portalD = 0;\n    ```", "```js\n    global.portalA = C04_R01;\n    global.portalB = 0;\n    global.portalC = 0;\n    global.portalD = 0;\n    ```", "```js\n    if (global.lastRoom == global.portalA)\n    {\n        obj_Player.x = obj_Portal_A_Start.x;\n        obj_Player.y = obj_Portal_A_Start.y;\n    } else if (global.lastRoom == global.portalB) {\n        obj_Player.x = obj_Portal_B_Start.x;\n        obj_Player.y = obj_Portal_B_Start.y;\n    } else if (global.lastRoom == global.portalC) {\n        obj_Player.x = obj_Portal_C_Start.x;\n        obj_Player.y = obj_Portal_C_Start.y;\n    } else if (global.lastRoom == global.portalD) {\n        obj_Player.x = obj_Portal_D_Start.x;\n        obj_Player.y = obj_Portal_D_Start.y;\n    } \n    ```", "```js\n    myRange = 100;\n    hasSpawned = false;\n    ```", "```js\n    if (instance_exists(obj_Player))\n    {  \n        if (distance_to_object(obj_Player) < myRange && hasSpawned == false)\n        {\n            ghost = instance_create(x, y, obj_Ghost);\n            ghost.myBooks = self.id;\n            sound_play(snd_GhostMoan);\n            hasSpawned = true;\n        }     \n    }\n    ```", "```js\n    if (instance_exists(ghost))\n    {\n        with (ghost)\n        {\n            instance_destroy();\n        }\n    }\n    instance_destroy();\n    ```", "```js\n    mySpeed = 2;\n    myRange = 150;\n    myBooks = 0;\n    isDissolving = false;\n    image_speed = 0.3; \n       alarm[0] = 6;\n    ```", "```js\n    sprite_index = spr_Ghost;\n    ```", "```js\n    if (instance_exists(obj_Player))\n    {\n        targetDist = distance_to_object(obj_Player)\n        if (targetDist < myRange)\n        {       \n            move_towards_point(obj_Player.x, obj_Player.y, mySpeed);\n        }   \n    }\n    ```", "```js\n    else if (targetDist > myRange && distance_to_point(myBooks.x, myBooks.y) > 4)\n    {      \n    move_towards_point(myBooks.x, myBooks.y, mySpeed);\n    }\n    ```", "```js\n    else \n    {\n    speed = 0;\n    if (isDissolving == false)\n    {\n          myBooks.hasSpawned = false;\n    sprite_index = spr_Ghost_Spawn;\n    image_speed = -1;\n    alarm[1] = 6;\n    isDissolving = true;\n    }\n    }\n    ```", "```js\n     if (instance_exists(obj_Player))\n    {\n        targetDist = distance_to_object(obj_Player)\n        if (targetDist < myRange)\n        {       \n            move_towards_point(obj_Player.x, obj_Player.y, mySpeed);\n        } else if (targetDist > myRange && distance_to_point(myBooks.x, myBooks.y) > 4) {      \n            move_towards_point(myBooks.x, myBooks.y, mySpeed);\n        } else {\n            speed = 0;\n            if (isDissolving == false)\n            {\n                myBooks.hasSpawned = false;\n                sprite_index = spr_Ghost_Spawn;\n                image_speed = -1;\n                alarm[1] = 6;\n                isDissolving = true;\n            }\n        }\n    }\n    ```", "```js\n    instance_destroy();\n    ```", "```js\n    instance_destroy();\n    ```", "```js\n    health -= 5;\n    myBooks.hasSpawned = false;\n    instance_create(x, y, obj_Ghost_Dead);\n    instance_destroy();\n    ```", "```js\n    mySpeed = 2;\n    canGrow = false;\n    isBig = false;\n    isAttacking = false;\n    image_speed = 0.5;\n    sound_play(snd_Brawl);\n    sound_loop(snd_Brawl);\n    path_start(pth_Brawl_01, mySpeed, 1, true);\n    ```", "```js\n    image_angle = direction;\n    if (isBig == true)\n    {\n        path_speed = mySpeed * 2;\n    } else {\n        path_speed = mySpeed;\n    }\n    ```", "```js\n    if (instance_exists(obj_Player))\n    {\n        if (distance_to_object(obj_Player) <= 200) \n        {\n            if (canGrow == false)\n            {\n                if (!collision_line(x, y, obj_Player.x, obj_Player.y, obj_Wall, false, true))\n                {\n                    sprite_index = spr_Brawl_Change;\n                    alarm[0] = 12;\n                    canGrow = true;\n                }      \n            }\n        }\n    }\n    ```", "```js\n    sprite_index = spr_Brawl_Large;\n    isBig = true;\n    ```", "```js\n    else \n    {\n    if (canGrow == true)\n    {\n    sprite_index = spr_Brawl_Change;\n    alarm[1] = 12;\n    canGrow = false;\n    }\n    }\n    ```", "```js\n    image_angle = direction;\n    if (isBig == true)\n    {\n        path_speed = mySpeed * 2;\n    } else {\n        path_speed = mySpeed;\n    }\n\n    if (instance_exists(obj_Player))\n    {\n        if (distance_to_object(obj_Player) <= 200) \n        {\n            if (canGrow == false)\n            {\n                if (!collision_line(x, y, obj_Player.x, obj_Player.y, obj_Wall, false, true))\n                {\n                    sprite_index = spr_Brawl_Change;\n                    alarm[0] = 12;\n                    canGrow = true;\n                }      \n            }\n        } \n        else \n        {\n            if (canGrow == true)\n            {\n                sprite_index = spr_Brawl_Change;\n                alarm[1] = 12;\n                canGrow = false;\n            }\n        }\n    }\n    ```", "```js\n    sprite_index = spr_Brawl_Small;\n    isBig = false;\n    ```", "```js\n    if (isAttacking == false)\n    {\n        health -= 10;\n        alarm[2] = 60;\n        isAttacking = true;\n    }\n    ```", "```js\n    isAttacking = false;\n    ```", "```js\n    image_speed = 0;\n    image_index = 0;\n    ```", "```js\n    mySpeed = 4;\n    isChasing = false;\n    isWaiting = false;\n    isAvoiding = false;\n    isAttacking = false;\n    image_speed = 0.3;\n    ```", "```js\n    myPath = path_add();\n    myPathGrid = mp_grid_create(0, 0, room_width/32, room_height/32, 32, 32);\n    mp_grid_add_instances(myPathGrid, obj_Wall, false);\n    ```", "```js\n    nextLocation = irandom(instance_number(obj_Trophy)-1);\n    target = instance_find(obj_Trophy, nextLocation);\n    currentLocation = nextLocation;\n    ```", "```js\n    mp_grid_path(myPathGrid, myPath, x, y, target.x, target.y, false);\n    path_start(myPath, mySpeed, 0, true);\n    ```", "```js\n    mySpeed = 4;\n    isChasing = false;\n    isWaiting = false;\n    isAvoiding = false;\n    isAttacking = false;\n    image_speed = 0.3;\n\n    myPath = path_add();\n    myPathGrid = mp_grid_create(0, 0, room_width/32, room_height/32, 32, 32);\n    mp_grid_add_instances(myPathGrid, obj_Wall, false);\n\n    nextLocation = irandom(instance_number(obj_Trophy)-1);\n    target = instance_find(obj_Trophy, nextLocation);\n    currentLocation = nextLocation;\n\n    mp_grid_path(myPathGrid, myPath, x, y, target.x, target.y, false);\n    path_start(myPath, mySpeed, 0, true); \n    ```", "```js\n    if (direction > 45 && direction <= 135) { sprite_index = spr_Coach_WalkUp; }\n    else if (direction > 135 && direction <= 225) { sprite_index = spr_Coach_WalkLeft; }\n    else if (direction > 225 && direction <= 315) { sprite_index = spr_Coach_WalkDown; }\n    else { sprite_index = spr_Coach_WalkRight; }\n    ```", "```js\n    targetDist = distance_to_object(obj_Player);\n    if (targetDist < 150  && targetDist > 16)\n    {\n        canSee = collision_line(x, y, obj_Player.x, obj_Player.y, obj_Wall, false, false)\n        if (canSee == noone)\n        {\n            path_end();\n            mp_potential_step(obj_Player.x, obj_Player.y, 4, all);\n            isChasing = true;\n        }\n     }\n    ```", "```js\n    else if (canSee != noone && isChasing == true)\n    {\n        alarm[0] = 60;\n        isWaiting = true;\n        isChasing = false;\n    }\n    ```", "```js\n    while (nextLocation == currentLocation)\n    {\n        nextLocation = irandom(instance_number(obj_Trophy)-1);\n    }\n\n    target = instance_find(obj_Trophy, nextLocation);\n    currentLocation = nextLocation;\n\n    mp_grid_path(myPathGrid, myPath, x, y, target.x, target.y, false);\n    path_start(myPath, mySpeed, 1, false);\n\n    isWaiting = false;\n    ```", "```js\n    image_speed = 0.3;\n    alarm[0] = 6;\n    isHit = false;\n    ```", "```js\n    instance_destroy();\n    ```", "```js\n    if (isHit == false)\n    {\n        health -= 15;\n        isHit = true;\n    }\n    ```", "```js\n    else if (targetDist <= 16)\n    {\n        if (isAttacking == false)\n        {\n            swing = instance_create(x, y, obj_Coach_Attack);\n            swing.image_angle = direction;\n            alarm[1] = 90;\n            isAttacking = true;\n        }\n    }\n    ```", "```js\n    isAttacking = false;\n    ```", "```js\n    else \n    {\n        if (isWaiting == false)\n        {\n            if (distance_to_object(target) <= 8) \n            {\n                alarm[0] = 60;\n                path_end();\n                isWaiting = true;\n            }\n        }\n    }\n    ```", "```js\n    if (isAvoiding == true)\n    {\n         mp_potential_step (target.x, target.y, 4, all);\n    }\n    ```", "```js\n     if (distance_to_object(obj_Coach) <= 32 && isAvoiding == false)\n     {\n         path_end();\n         isAvoiding = true;\n     }\n     else if (distance_to_object(obj_Coach) > 32 && isAvoiding == true)\n     {\n         mp_grid_path(myPathGrid, myPath, x, y, target.x, target.y, false);\n         path_start(myPath, mySpeed, 1, true);\n         isAvoiding = false;\n     }\n    ```", "```js\n    if (place_meeting(x, y, obj_Coach))\n    {\n        x = xprevious;\n        y = yprevious;\n        mp_potential_step(target.x, target.y, 4, all);\n    }\n    ```", "```js\n    if (direction > 45 && direction <= 135) { sprite_index = spr_Coach_WalkUp; }\n    else if (direction > 135 && direction <= 225) { sprite_index = spr_Coach_WalkLeft; }\n    else if (direction > 225 && direction <= 315) { sprite_index = spr_Coach_WalkDown; }\n    else { sprite_index = spr_Coach_WalkRight; }\n\n    targetDist = distance_to_object(obj_Player);\n    if (targetDist < 150  && targetDist > 16)\n    {\n        canSee = collision_line(x, y, obj_Player.x, obj_Player.y, obj_Wall, false, false)\n        if (canSee == noone)\n        {\n            path_end();\n            mp_potential_step(obj_Player.x, obj_Player.y, 4, all);\n            isChasing = true;\n        }\n        else if (canSee != noone && isChasing == true)\n        {\n            alarm[0] = 60;\n            isWaiting = true;\n            isChasing = false;\n        }\n    }\n    else if (targetDist <= 16)\n    {\n        if (isAttacking == false)\n        {\n            swing = instance_create(x, y, obj_Coach_Attack);\n            swing.image_angle = direction;\n            alarm[1] = 90;\n            isAttacking = true;\n        }\n    }\n    else \n    {\n        if (isWaiting == false)\n        {\n            if (distance_to_object(target) <= 8)\n            {\n                alarm[0] = 60;\n                path_end();\n                isWaiting = true;\n            }\n            if (isAvoiding == true)\n            {\n                mp_potential_step(target.x, target.y, 4, all);\n            }\n            if (distance_to_object(obj_Coach) <= 32 && isAvoiding == false)\n            {\n                path_end();\n                isAvoiding = true;\n            }\n            else if (distance_to_object(obj_Coach) > 32 && isAvoiding == true)\n            {\n                mp_grid_path(myPathGrid, myPath, x, y, target.x, target.y, false);\n                path_start(myPath, mySpeed, 1, true);\n                isAvoiding = false;\n            }\n        }\n    }\n    if (place_meeting(x, y, obj_Coach))\n    {\n        x = xprevious;\n        y = yprevious;\n        mp_potential_step(target.x, target.y, 4, all);\n    }\n    ```", "```js\n    draw_healthbar(0, 0, 200, 16, health, c_black, c_red, c_green, 0, true, true);\n\n    if (health <= 0)\n    {\n        with (obj_Player) { instance_destroy(); }\n        room_goto(TitleScreen);\n        instance_destroy();\n    }\n    ```"]