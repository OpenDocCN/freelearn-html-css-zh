["```js\n    if (place_free( x, y + vspeed + 1))\n    {\n        vspeed  += 1;\n    } else {    \n        move_contact_solid(direction, MAXGRAVITY);\n        vspeed = 0;\n    }\n    ```", "```js\n    vspeed = min(vspeed, MAXGRAVITY);\n    ```", "```js\n    switch (action)\n    {\n        case IDLE :\n            sprite_index = myIdle;\n            image_speed = 0.1;\n        break;\n    }\n    ```", "```js\n        case IDLEUP :\n            sprite_index = myIdleUp;\n            image_speed = 0.1;\n        break;\n        case IDLEDOWN :\n            sprite_index = myIdleDown;\n            image_speed = 0.1;\n        break;\n        case RUN :\n            sprite_index = myRun;\n            image_speed = 0.5;\n        break; \n        case RUNUP :\n            sprite_index = myRunUp;\n            image_speed = 0.5;\n        break; \n        case RUNDOWN :\n            sprite_index = myRunDown;\n            image_speed = 0.5;\n        break; \n        case INAIR :\n            sprite_index = myInAir;\n            image_speed = 0.5;\n        break; \n        case DAMAGE :\n            sprite_index = myDamage;\n            image_speed = 0.5;\n        break; \n    ```", "```js\n    image_xscale = facing;\n    ```", "```js\n    if (place_free(x - mySpeed, y))\n    {\n        canGoLeft = true;\n    } else {\n        canGoLeft = false;\n        hspeed = 0;\n    }\n\n    if (place_free(x + mySpeed, y))\n    {\n        canGoRight = true;\n    } else {\n        canGoRight = false;\n        hspeed = 0;\n    }\n    ```", "```js\n    if (!place_free(x, y+1))\n    {\n        isOnGround = true;\n        vspeed = 0;\n        action = IDLE;\n    } else {\n        isOnGround = false;\n    }\n    ```", "```js\n    if (!place_free(x, y)) \n    { \n        x = xprevious;\n        y = yprevious;\n        move_contact_solid(direction, MAXGRAVITY);\n        vspeed = 0;\n    }\n    ```", "```js\n    if (place_free(x - mySpeed, y))\n    {\n        canGoLeft = true;\n    } else {\n        canGoLeft = false;\n        hspeed = 0;\n    }\n\n    if place_free(x + mySpeed, y)\n    {\n        canGoRight = true;\n    } else {\n        canGoRight = false;\n        hspeed = 0;\n    }\n\n    if (!place_free(x, y+1))\n    {\n        isOnGround = true;\n        vspeed = 0;\n        action = IDLE;\n    } else {\n        isOnGround = false;\n    }\n\n    if (!place_free(x, y)) \n    { \n        x = xprevious;\n        y = yprevious;\n        move_contact_solid(direction, MAXGRAVITY);\n        vspeed = 0;\n    }\n    ```", "```js\nkeyLeft  = keyboard_check(vk_left);\nkeyRight  = keyboard_check(vk_right);\nkeyDown  = keyboard_check(vk_down);\nkeyUp  = keyboard_check(vk_up);\nkeyJump = keyboard_check(ord('X'));\nkeyShoot = keyboard_check(ord('Z'));\n```", "```js\n    myIdle = spr_Player_Idle;\n    myIdleUp = spr_Player_IdleUp;\n    myIdleDown = spr_Player_IdleDown;\n    myRun = spr_Player_Run;\n    myRunUp = spr_Player_RunUp;\n    myRunDown = spr_Player_RunDown;\n    myInAir = spr_Player_InAir;\n    myDamage = spr_Player_Damage;\n    ```", "```js\n    mySpeed = 8;\n    myAim = 0;\n    facing = RIGHT;\n    action = IDLE;\n    isDamaged = false;\n    canFire = true;\n    ```", "```js\n    scr_Collision_Forecasting();\n    scr_Keyboard_Input();\n    ```", "```js\n    scr_Gravity();\n\n    if (keyLeft && canGoLeft) \n    {\n        if (hspeed > -mySpeed) { hspeed -= 1; }\n        facing = LEFT;\n        myAim = 180;\n    }\n    if (keyRight && canGoRight) \n    {\n        if (hspeed < mySpeed) { hspeed += 1; }\n        facing = RIGHT;\n        myAim = 0;\n    }\n    ```", "```js\n    if (!keyLeft && !keyRight) \n    {\n        if (hspeed >= 1) { hspeed -= 1; }\n        if (hspeed <= -1) { hspeed += 1; }\n    }\n    ```", "```js\n    if (keyUp) \n    { \n        action = IDLEUP; \n        myAim = 45;\n    } else if (keyDown) {   \n        action = IDLEDOWN; \n        myAim = 315;\n    } else { \n        action = IDLE;\n        if (facing == LEFT) { myAim = 180; }\n        if (facing == RIGHT) { myAim = 0; }\n    }\n    ```", "```js\n    if (keyLeft && canGoLeft)\n    {\n        hspeed = -mySpeed;\n        facing = LEFT;\n        if (keyUp) \n        { \n            action = RUNUP; \n            myAim = 150; \n        } else if (keyDown) {\n            action = RUNDOWN;\n            myAim = 205; \n        } else { \n            action = RUN;\n            myAim = 180;\n        }\n    }\n    ```", "```js\n    if (keyJump && isOnGround)\n    {\n        vspeed = -MAXGRAVITY;\n        action = INAIR;\n    }\n    ```", "```js\n    if (!keyLeft && !keyRight)\n    {\n        if (hspeed >= 1) { hspeed -= 1; }\n        if (hspeed <= -1) { hspeed += 1; }\n\n        if (keyUp) \n        { \n            action = IDLEUP; \n            myAim = 45;\n        } else if (keyDown) {   \n            action = IDLEDOWN; \n            myAim = 315;\n        } else { \n            action = IDLE;\n            if (facing == LEFT) { myAim = 180; }\n            if (facing == RIGHT) { myAim = 0; }\n        }\n    }\n    if (keyLeft && canGoLeft)\n    {\n        hspeed = -mySpeed;\n        facing = LEFT;\n        if (keyUp) \n        { \n            action = RUNUP; \n            myAim = 150; \n        } else if (keyDown) { \n            action = RUNDOWN; \n            myAim = 205; \n        } else { \n            action = RUN; \n            myAim = 180; \n        }\n    }\n    if (keyRight && canGoRight)\n    {\n        hspeed = mySpeed;\n        facing = RIGHT;\n        if (keyUp) \n        { \n            action = RUNUP; \n            myAim = 30;\n        } else if (keyDown) { \n            action = RUNDOWN; \n            myAim = 335;\n        } else { \n            action = RUN; \n            myAim = 0;\n        }\n    }\n    if (keyJump && isOnGround)\n    {\n        vspeed = -MAXGRAVITY;\n        action = INAIR;\n    }\n    ```", "```js\n    if (keyShoot && canFire)  \n    {\n        bullet = instance_create(x + (8 * facing), y-32, obj_Bullet) \n        bullet.speed = 16;\n        bullet.direction = myAim;\n     bullet.image_angle = myAim;\n        alarm[0] = 10;\n        canFire = false;\n    }\n    ```", "```js\n    if (isOnGround)\n    {\n        scr_Player_GroundControls();\n    } else {\n        scr_Player_AirControls();\n    }\n    scr_Player_Attack();\n    scr_Animation_Control();\n    ```", "```js\n    canFire = true;\n    ```", "```js\n    if (obj_Player.y < y) \n    {\n        solid = true;\n    } else {\n        solid = false;\n    }\n    ```", "```js\n    if (obj_Player.action != DAMAGE)\n    {\n        health -= myDamage;\n        with (obj_Player) \n        { \n            y -= 1;\n            vspeed = -MAXGRAVITY;\n            hspeed = 8 * -facing;\n            action = DAMAGE;\n            isDamaged = true; \n        }\n    }\n    ```", "```js\n    myDamage = 5;\n    ```", "```js\n    scr_Damage();\n    instance_destroy();\n    ```", "```js\n    action = IDLE;\n    facing = RIGHT;\n    tipOfGun = sprite_width;\n    canFire = false;\n    delay = 90;\n    alarm[0] = delay;\n\n    myIdle = spr_Gun_Idle;\n    myRun = spr_Gun_Run;\n    ```", "```js\n    scr_Animation_Control();\n\n    if (image_index > image_number-1)\n    {\n        action = IDLE;\n    }\n\n    if (canFire) \n    {\n        action = RUN;\n        alarm[1] = 5;\n        canFire = false;\n    }\n\n    image_angle = point_direction(x, y, obj_Player.x, obj_Player.y);\n    ```", "```js\n    canFire = true;\n    ```", "```js\n    myX = x + lengthdir_x(tipOfGun, image_angle);\n    myY = y + lengthdir_y(tipOfGun, image_angle); \n    bullet = instance_create(myX, myY, obj_Gun_Bullet);\n    bullet.speed = 16;\n    bullet.direction = image_angle;\n    alarm[0] = delay;\n    ```", "```js\n    if (isOnGround)\n    {\n        isDamaged = false;\n    } else {\n        scr_Gravity();\n    }\n    ```", "```js\n    if (isDamaged)\n    {\n     scr_Player_Damage();\n    } else {\n        if (isOnGround)\n        {\n            scr_Player_GroundControls();\n        } else {\n            scr_Player_AirControls();\n        }\n        scr_Player_Attack(); \n    }\n    scr_Animation_Control();\n    ```", "```js\n    myDamage = 10;\n    hspeed = -24;\n    ```", "```js\n    myHealth = 20;\n    action = IDLEDOWN;\n    facing = RIGHT;\n    canFire = false;\n\n    myIdleUp = spr_Cannon_IdleUp;\n    myIdleDown = spr_Cannon_IdleDown;\n    myRunUp = spr_Cannon_RunUp;\n    myRunDown = spr_Cannon_RunDown;\n    myDamage = spr_Cannon_Damage;\n    ```", "```js\n    scr_Animation_Control();\n\n    if (image_index > image_number-1)\n    {\n        if (action == RUNUP) { action = IDLEUP;}\n        else if (action == RUNDOWN) { action = IDLEDOWN;} \n    }\n\n    if (canFire) \n    {\n        action = RUNUP;\n        alarm[0] = 60;\n        canFire = false;\n    }\n\n    if (myHealth <= 0)\n    {\n        instance_destroy();\n    }\n    ```", "```js\n    instance_create(x, y, obj_Cannonball);\n    action = RUNDOWN;\n    ```", "```js\n    if (action == IDLEUP)\n    {\n        myHealth -= 10;\n        action = DAMAGE;\n        with (other) {instance_destroy();}\n    }\n    ```", "```js\n    isPhase_01 = true;\n    isPhase_02 = false;\n    isPhase_03 = false;\n    isBossDefeated = false;\n\n    boss_X = 672;\n    gun = instance_create(32, 32, obj_Gun);\n    cannonA = instance_create(boss_X, 64, obj_Cannon);\n    cannonB = instance_create(boss_X, 192, obj_Cannon);\n    cannonC = instance_create(boss_X, 320, obj_Cannon); \n    ```", "```js\n    if (instance_exists(cannonB)) { cannonB.canFire = true;}\n    ```", "```js\n    if (instance_exists(cannonA)) { cannonA.canFire = true; }\n    if (instance_exists(cannonC)) { cannonC.canFire = true; }\n    ```", "```js\n    timeline_index = tm_Boss_Phase01;\n    timeline_running = true;\n    timeline_loop = true;\n    ```", "```js\n    myDamage = 20;\n    myLaserCannon = 0; \n    image_xscale = room_width / 8;\n    ```", "```js\n    x = myLaserCannon.x;\n    y = myLaserCannon.y;\n    ```", "```js\n    myHealth = 50;\n    mySpeed = 2;\n    myBuffer = 64;\n    action = IDLE;\n    facing = RIGHT;\n    canFire = false;\n\n    myIdle = spr_LaserCannon _Idle;\n    myRun = spr_LaserCannon _Run;\n    myDamage = spr_LaserCannon _Damage;\n    ```", "```js\n    scr_Animation_Control();\n\n    if (image_index > image_number-1)\n    {\n        action = IDLE;\n    }\n\n    if (canFire) \n    {\n        action = RUN;\n        alarm[0] = 5;\n        canFire = false;\n    }\n\n    if (myHealth <= 0)\n    {\n        instance_destroy();\n    }\n    ```", "```js\n    if (y < myBuffer)\n    {\n        vspeed = mySpeed;\n    }\n    if (y > room_height - myBuffer)\n    {\n        vspeed = -mySpeed;\n    } \n    ```", "```js\n    beam = instance_create(x, y, obj_LaserBeam);\n    beam.myLaserCannon = self.id;\n    ```", "```js\n    if (obj_Boss.isPhase_02)\n    {\n        myHealth -= 5;\n        action = DAMAGE;\n        with (other) { instance_destroy(); }\n    }\n    ```", "```js\n    laser = instance_create(boss_X, 352, obj_LaserCannon);\n    ```", "```js\n    laser.canFire = true;\n    ```", "```js\n    with (laser.beam) { instance_destroy(); }\n    ```", "```js\n    if (!instance_exists(obj_Cannon) && !isPhase_02)\n    {\n        laser.vspeed = laser.mySpeed;\n        timeline_index = tm_Boss_Phase02;\n        timeline_position = 0;\n        gun.delay = 45;\n        isPhase_02 = true;\n    }\n    ```", "```js\n    myHealth = 100;\n    action = IDLE;\n    facing = RIGHT;\n\n    myIdle = spr_BossCore_Idle;\n    myDamage = spr_BossCore_Damage;\n    ```", "```js\n    scr_Animation_Control();\n\n    if (action == DAMAGE) \n    {\n        if (image_index > image_number-1)\n        {\n            action = IDLE;\n        }\n    }\n\n    if (myHealth <= 0)\n    {\n        instance_destroy();\n    }\n    ```", "```js\n    if (obj_Boss.isPhase_03 && action == IDLE)\n    {\n        myHealth -= 2;\n        action = DAMAGE;\n        with (other) { instance_destroy(); }\n    }\n    ```", "```js\n    isShielding = true;\n    openPosition = y-64;\n    mySpeed = 2;\n    ```", "```js\n    isShielding = true;\n    openPosition = y+64;\n    mySpeed = 2;\n    ```", "```js\n    if (isShielding && y < ystart) { y += mySpeed; }\n    if (!isShielding && y > openPosition) { y -= mySpeed; } \n    ```", "```js\n    if (isShielding && y > ystart) { y -= 2; }\n    if (!isShielding && y < openPosition) { y += 2; }\n    ```", "```js\n    if (obj_Boss.isPhase_03)\n    {\n        with (other) { instance_destroy(); }\n    }\n    ```", "```js\n    core = instance_create(boss_X, 272, obj_BossCore);\n    shieldUpper = instance_create(boss_X, 272, obj_Shield_Upper);\n    shieldLower = instance_create(boss_X, 272, obj_Shield_Lower);\n    ```", "```js\n    shieldUpper.isShielding = false;\n    shieldLower.isShielding = false; \n    gun.delay = 10;\n    ```", "```js\n    gun.delay = -1;\n    ```", "```js\n    gun.delay = 10;\n    ```", "```js\n    shieldUpper.isShielding = true;\n    shieldLower.isShielding = true; \n    gun.delay = 45;\n    ```", "```js\n    if (!instance_exists(obj_LaserCannon) && !isPhase_03)\n    {\n        timeline_index = tm_Boss_Phase03;\n        timeline_position = 0;\n        isPhase_03 = true;\n    }\n    ```", "```js\n    if (!instance_exists(obj_BossCore) && !isBossDefeated)\n    {\n        timeline_running = false;\n        with (gun) { instance_destroy(); }\n        isBossDefeated = true;\n    }\n    ```"]