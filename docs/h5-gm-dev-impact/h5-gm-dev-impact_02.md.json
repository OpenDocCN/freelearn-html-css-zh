["```js\n    this.loadLevel(LevelLevel1);\n    ```", "```js\n    'game.levels.level1',\n    'game.levels.myfirstepiclevel',\n    ```", "```js\n    this.loadLevel(LevelMyfirstepiclevel1);\n    ```", "```js\nthis.loadLevel(LevelInside);\n```", "```js\nig.module(\n  'game.entities.void'\n)\n.requires(\n  'impact.entity'\n)\n.defines(function(){\n  EntityVoid = ig.Entity.extend({\n  _wmDrawBox: true,_wmBoxColor: 'rgba(128, 28, 230, 0.7)',_wmScalable: true,size: {x: 8, y: 8},update: function(){}});\n});\n```", "```js\nEntityVoid = ig.Entity.extend({\n```", "```js\n _wmDrawBox: true,\n```", "```js\n_wmBoxColor: 'rgba(128, 28, 230, 0.7)',\n```", "```js\n_wmScalable: true ,\n```", "```js\nsize: {x: 8, y: 8},\n```", "```js\nupdate: function(){}\n```", "```js\ncollides: ig.Entity.COLLIDES.NEVER,\ntype: ig.Entity.TYPE.B,\ncheckAgainst: ig.Entity.TYPE.A,\n```", "```js\n//checkAgainst: ig.Entity.TYPE.A\n```", "```js\nanimSheet: new ig.AnimationSheet('media/COIN.png',16,16),\n```", "```js\n  init: function(x, y , settings){\n    this.parent(x,y,settings);\n    this.addAnim('idle',1,[0]);\n  }\n```", "```js\n  check: function(other){\n    ig.game.addCoin();   // give the player a coin when picked up\n    this.kill();     //disappear if you are picked up\n  }\n```", "```js\n    if(ig.input.state('up') || ig.input.pressed('tbUp')){\n      this.vel.y = -100;\n      this.currentAnim = this.anims.up;\n      this.lastPressed = 'up';\n    }else if(ig.input.state('down') || ig.input.pressed('tbDown')){\n      this.vel.y = \u00a0100;\n      this.currentAnim = this.anims.down;\n      this.lastPressed = 'down';\n    }\n    else if(ig.input.state('left') || ig.input.pressed('tbLeft')){\n      this.vel.x = -100;\n      this.currentAnim = this.anims.left;\n      this.lastPressed = 'left';\n    }\n    else if(ig.input.state('right')||ig.input.pressed('tbRight')){\n      this.vel.x = 100;\n      this.currentAnim = this.anims.right;\n      this.lastPressed = 'right';\n    }\n```", "```js\n    if(!ig.ua.mobile){\n    ig.input.bind(ig.KEY.UP_ARROW, 'up');\n    ig.input.bind(ig.KEY.DOWN_ARROW,'down');\n    ig.input.bind(ig.KEY.LEFT_ARROW,'left');\n    ig.input.bind(ig.KEY.RIGHT_ARROW,'right');\n    // fight\n    ig.input.bind(ig.KEY.SPACE,'attack');\n    ig.input.bind(ig.KEY.CTRL,'block');\n```", "```js\nig.input.bind(ig.KEY.MOUSE1,'attack');\n```", "```js\n    if(ig.ua.mobile){\n      // controls are different on a mobile device\n      ig.input.bindTouch( '#buttonLeft', 'tbLeft' );\n      ig.input.bindTouch( '#buttonRight', 'tbRight' );\n      ig.input.bindTouch( '#buttonUp', 'tbUp' );\n      ig.input.bindTouch( '#buttonDown', 'tbDown' );\n      ig.input.bindTouch( '#buttonJump', 'changeWeapon' );\n      ig.input.bindTouch( '#buttonShoot', 'attack' );\n    }\n```", "```js\n<div class=\"button\" id=\"buttonLeft\"></div>\n<div class=\"button\" id=\"buttonRight\"></div>\n<div class=\"button\" id=\"buttonUp\"></div>\n<div class=\"button\" id=\"buttonDown\"></div>\n<div class=\"button\" id=\"buttonShoot\"></div>\n<div class=\"button\" id=\"buttonJump\"></div>\n```", "```js\nig.input.bindTouch('#buttonLeft', 'tbLeft' );\n```", "```js\nthis.pos.x = 100;\nthis.pos.y = 100;\n```", "```js\nif(ig.input.state('up') || ig.input.pressed('tbUp')){\n      this.vel.y = -100;this.currentAnim = this.anims.up;\n      this.lastPressed = 'up';\n}\n```", "```js\nif(ig.input.state('up') || ig.input.pressed('tbUp')){\n      this.vel.y = -25;\n      this.currentAnim = this.anims.up;\n      this.lastPressed = 'up';\n}\nelse if(ig.input.state('down') || ig.input.pressed('tbDown')){\n      this.vel.y = 400;\n      this.currentAnim = this.anims.down;\n      this.lastPressed = 'down';\n}\n```", "```js\n    if(ig.input.state('accelerate')){\n      this.accel.x = 1;\n      this.accel.y = 1;\n    }\n    if(ig.input.state('slow_down')){\n      this.accel.x = -1;\n      this.accel.y = -1;\n    }\n```", "```js\nmaxVel:{x:200,y:200},\n```", "```js\nzIndex:999,\n```", "```js\nig.game.sortEntitiesDeferred() ;\n```", "```js\nanimSheet: new ig.AnimationSheet('media/player.png',32,48),\n```", "```js\nthis.addAnim('idle',1,[0]);\nthis.addAnim('down',0.1,[0,1,2,3,2,1,0]);\nthis.addAnim('left',0.1,[4,5,6,7,6,5,4]);\nthis.addAnim('right',0.1,[8,9,10,11,10,9,8]);\nthis.addAnim('up',0.1,[12,13,14,15,14,13,12]);\n```", "```js\nthis.addAnim('idle',100,[0]);\nthis.addAnim('down',0.5,[0,1,2,3,2,1,0]);\n```", "```js\nelse if(ig.input.state('left') || ig.input.pressed('tbLeft')){\nthis.vel.x = -100;\nthis.currentAnim = this.anims.right;\nthis.lastPressed = 'right';\n}\n```", "```js\nig.game.spawnEntity('EntityProjectile',this.pos.x,this.pos.y,{direction:this.lastPressed})\n```", "```js\nif(spawnpoint) {\nig.game.spawnEntity(EntityPlayer, spawnpoint.pos.x,spawnpoint.pos.y);\nig.game.player = ig.game.getEntitiesByType( EntityPlayer )[0]\n}\n```", "```js\nif(this.lifetime <=100){this.lifetime +=1;}else{this.kill();}\n```", "```js\nthis.range = 100;\n```", "```js\nif(this.lifetime <=this.range){this.lifetime+=1;}else{this.kill();}\n```", "```js\ncheck: function(other){\n    if(other.name == 'enemy'){other.receiveDamage(100,this);}\n    this.kill();\n    this.parent();\n  }\n```", "```js\n health: 400,\n```", "```js\nif(other.name == 'enemy'){other.receiveDamage(-100,this);}\n```", "```js\n<canvas id=\"canvas\"></canvas>\n```", "```js\n ig.main('#canvas', OpenScreen, 60, 640, 480, 1);\n```", "```js\nig.main('#canvas', OpenScreen, 60, 320, 240, 2);\n```", "```js\nvar gameviewport= ig.game.screen;\nif(ig.input.state('camera_right')) {gameviewport.x = gameviewport.x + 2;}\nelse if(ig.input.state('camera_left')) {gameviewport.x = gameviewport.x - 2;}\nelse if(ig.input.state('camera_up'))\t{gameviewport.y = gameviewport.y - 2;}\nelse if(ig.input.state('camera_down')) {gameviewport.y = gameviewport.y + 2;} \n```", "```js\nvar gameviewport= ig.game.screen;\nvar gamecanvas= ig.system;\nvar player = this.getEntitiesByType( EntityPlayer )[0];\ngameviewport.x = player.pos.x - gamecanvas.width /2;\ngameviewport.y = player.pos.y - gamecanvas.height /2;\n```", "```js\ngameviewport.x = player.pos.x;\ngameviewport.y = player.pos.y;\n```", "```js\nvar play_music = true;\nvar music = ig.music;\nmusic.add(\"media/music/backgroundMusic.ogg\");\nmusic.volume = 0.0;\nmusic.play();\n```", "```js\n  if (ig.input.pressed('music_down')){ig.music.volume -= 0.1;}\n  if (ig.input.pressed('music_louder')){ig.music.volume += 0.1;}\n  if (ig.input.pressed('music_off')){ig.music.stop();}\n```", "```js\n  this.walksound = new ig.Sound('media/music/snowwalk.ogg');\n  this.walksound_status = false;\n  this.walksound.volume = 1;\n```", "```js\nif(this.vel.x == 0 && this.vel.y == 0){\n  this.walksound.stop();\n  this.walksound_status = false;\n}\nelse if(this.walksound_status == false){\n  this.walksound.play();\n  this.walksound_status = true;\n}\n```", "```js\nBouncyGame = ig.Box2DGame.extend({\n    gravity:3,\n```", "```js\n.requires(\n  'plugins.box2d.entity'\n)\n.defines(function(){\n  EntityBoxPlayer = ig.Box2DEntity.extend({\n```", "```js\nif(ig.input.state('up')){\n  this.body.ApplyForce( new b2.Vec2(0,-200),this.body.GetPosition() );\n}\n```", "```js\nThis.restitution = 1;\n```"]