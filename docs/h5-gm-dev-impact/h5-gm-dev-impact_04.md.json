["```js\n    MyGame = ig.Game.extend({ \n    ```", "```js\n    MyGame = ig.Box2DGame.extend({\n    ```", "```js\n    .requires(\n      'impact.game',\n      'impact.font',\n      'plugins.box2d.game'\n    )\n    ```", "```js\n    'game.levels.testsetup'\n    ```", "```js\n    init: function() {\n        this.loadLevel( LevelTestsetup );\n      },\n    ```", "```js\n      var x = ig.system.width/2,\n        y = ig.system.height/2;\n        this.font.draw( 'It Works!', x, y, ig.Font.ALIGN.CENTER);\n    ```", "```js\n    .requires(\n      'impact.game',\n      'impact.font',\n      'plugins.box2d.game',\n\n      'game.levels.testsetup',\n      'game.levels.level1'\n    )\n    ```", "```js\n        init: function() {\n        // Initialize your game here; bind keys etc.\n        this.loadLevel( LevelLevel1 );\n      },\n    ```", "```js\n    ig.module(\n      'game.entities.player'\n    )\n    .requires(\n      'plugins.box2d.entity'\n    )\n    .defines(function(){\n      EntityPlayer = ig.Box2DEntity.extend({\n      });\n    });\n    ```", "```js\nEntityPlayer = ig.Box2DEntity.extend({\n  size: {x: 16, y:24},\n  name: 'player',\n  animSheet: new ig.AnimationSheet( 'media/player.png', 16, 24 ),\n  init: function( x, y, settings ) {\n    this.parent( x, y, settings );\n    this.addAnim( 'idle', 1, [0] );\n    this.addAnim( 'fly', 0.07, [1,2] );\n  } \n});\n```", "```js\ninit: function() {\n    // Bind keys\n    ig.input.bind(ig.KEY.LEFT_ARROW, 'left' );\n    ig.input.bind( ig.KEY.RIGHT_ARROW, 'right' );\n    ig.input.bind( ig.KEY.X, fly);\n//Load Level\n    this.loadLevel( LevelLevel1 );\n  },\n```", "```js\nupdate: function() {\n  // move left or right\n  if( ig.input.state('left') ) {\n    this.body.ApplyForce( new b2.Vec2(-20,0),this.body.GetPosition() );\n    this.flip = true;\n  }\n  else if( ig.input.state('right') ) {\n    this.body.ApplyForce( new b2.Vec2(20,0),this.body.GetPosition() );\n    this.flip = false;\n  }\n  // jetpack\n  if( ig.input.state('fly') ) {\n    this.body.ApplyForce( new b2.Vec2(0,-60),this.body.GetPosition() );\n    this.currentAnim = this.anims.fly;\n  }\n  else {\n    this.currentAnim = this.anims.idle;\n  }\n  this.currentAnim.flip.x = this.flip;\n  this.parent();\n}\n```", "```js\nMyGame = ig.Box2DGame.extend({\n  gravity: 100,\n```", "```js\nthis.body.SetXForm(this.body.GetPosition(), 0);\n```", "```js\nupdate: function() {\n    this.parent();\n    var player = this.getEntitiesByType( EntityPlayer )[0];\n    if( player ) {\n      this.screen.x = player.pos.x - ig.system.width/2;\n      this.screen.y = player.pos.y - ig.system.height/2;\n    }\n},\n```", "```js\n    ig.module(\n      'game.entities.enemy'\n    )\n    .requires(\n      'plugins.box2d.entity'\n    )\n    .defines(function(){\n    EntityEnemy = ig.Box2DEntity.extend({\n    size: {x: 16, y:24},\n    name: 'enemy',\n    animSheet: new ig.AnimationSheet( 'media/enemy.png', 16, 24),\n    init: function( x, y, settings ) {\n      this.parent( x, y, settings );\n      // Add the animations\n      this.addAnim( 'idle', 1, [0] );\n      this.addAnim( 'fly', 0.07, [1,2] );\n      }\n    })\n    });\n    ```", "```js\n    'game.entities.enemy'\n    ```", "```js\nthis.loadLevel( LevelLevel1 );\nthis.spawnEntity('EntityEnemy',300,30,null);\n```", "```js\n    ig.module(\n      'game.entities.projectile'\n    )\n    .requires(\n      'plugins.box2d.entity'\n    )\n    .defines(function(){\n      EntityProjectile = ig.Box2DEntity.extend({\n      size: {x: 8, y: 4},\n      lifetime:60,\n      name: 'projectile',\n      animSheet: new ig.AnimationSheet( 'media/projectile.png', 8, 4),\n      init: function( x, y, settings ) {\n        this.parent( x, y, settings );\n        this.addAnim( 'idle', 1, [0] );\n      }\n    });\n    });\n    ```", "```js\nig.input.bind(ig.KEY.C, 'shoot' );\n```", "```js\nif(ig.input.pressed('shoot') ) {\n  var x = this.pos.x + (this.flip ? -0 : 6);\n  var y = this.pos.y + 6;\n  ig.game.spawnEntity( EntityProjectile, x, y, {flip:this.flip} );\n}\n```", "```js\nthis.currentAnim.flip.x = settings.flip;\nvar velocity = (settings.flip ? -10 : 10);\nthis.body.ApplyImpulse( new b2.Vec2(velocity,0),\nthis.body.GetPosition() );\n```", "```js\nupdate: function(){\n  this.lifetime -=1;\n  if(this.lifetime< 0){this.kill();}\n  this.parent();\n}\n```", "```js\ncheck: function(other){\n  other.receiveDamage(10);\n  this.kill();\n}\n```", "```js\n    type: ig.Entity.TYPE.B,\n    ```", "```js\n    checkAgainst: ig.Entity.TYPE.B,\n    ```", "```js\n    ig.module(\n      'game.entities.bomb'\n    )\n    .requires(\n      'plugins.box2d.entity'\n    )\n    .defines(function(){\n    EntityBomb = ig.Box2DEntity.extend({\n      size: {x: 24, y: 10},\n      type: ig.Entity.TYPE.A,\n      checkAgainst: ig.Entity.TYPE.B,\n      animSheet: new ig.AnimationSheet( 'media/bomb.png', 24, 10 ),\n      lifespan: 100,\n      init: function( x, y, settings ) {\n        this.parent( x, y, settings );\n        // Add the animations\n        this.addAnim( 'idle', 1, [0] );\n        this.currentAnim = this.anims.idle;\n      }\n    });\n    });\n    ```", "```js\nexplosion:\nfunction(minblastzone,maxblastzone,blastdamage,blastforcex,blastforcey){\n  varEnemyList= ig.copy(ig.game.entities);\n  var i = 0;\n  //check every entity\n  while(typeofEnemyList[i] != 'undefined'){\n    Enemy = EnemyList[i];\n    //calculate distance to entity\n    distance = Math.sqrt((this.pos.x - Enemy.pos.x)*(this.pos.x -Enemy.pos.x) + (this.pos.y - Enemy.pos.y)*(this.pos.y -Enemy.pos.y));\n    //adjust blastdirection depending on entity position\n    if(this.pos.x - Enemy.pos.x< 0){adjustedblastforcex =blastforcex}\n    else{adjustedblastforcex = - blastforcex}\n    if(this.pos.y - Enemy.pos.y< 0){adjustedblastforcey = blastforcey}\n    else{adjustedblastforcey = - blastforcey}//if within blastzone: blow up the targetif(minblastzone< distance && distance <maxblastzone){Enemy.body.ApplyImpulse(newb2.Vec2(adjustedblastforcex,adjustedblastforcey),this.body.GetPosition());\n      Enemy.receiveDamage(blastdamage,this);}\n      i++;\n    }\n}\n```", "```js\nupdate: function(){\n  //projectiles disappear after 100 frames\n  this.lifespan -= 1;\n  if(this.lifespan< 0){\n    this.explosion(0,40,70,200,100);\n    this.explosion(40,200,20,100,50);\n    this.kill();\n  }\n  this.parent();\n},\n```", "```js\nhealth: 100\n```", "```js\ncheck: function(other){\n    other.receiveDamage(30);\n    this.explosion(0,40,70,200,100);\n    this.explosion(40,200,20,100,50);\n    this.kill();\n}\n```", "```js\n    ig.input.bind(ig.KEY.V, 'bomb');\n    ```", "```js\n    if (ig.input.pressed('bomb')){\n      var x = this.pos.x + (this.flip ? 0 : 8 );\n      var y = this.pos.y + 25;\n      ig.game.spawnEntity(EntityBomb,x,y, {flip:this.flip});\n    }\n    ```", "```js\n    this.currentAnim.flip.x = settings.flip;\n    ```", "```js\nupdate: function(){\n  var players = ig.game.getEntitiesByType('EntityPlayer');\n  var player = players[0];\n  // both distance on x axis and y axis are calculated\n  var distanceX = this.pos.x - player.pos.x;\n  var sign = Math.abs(distanceX)/distanceX;\n  var distanceY = this.pos.y - player.pos.y;\n  //try to move without flying, fly if necessary\n  var col = ig.game.collisionMap.trace( this.pos.x, this.pos.y,player.pos.x, player.pos.y,16,8 );\n  if (Math.abs(distanceX) < 110){\n    var fY = distanceY> 0 ? -50: 0;\n    this.body.ApplyForce( new b2.Vec2(sign * -20,fY),this.body.GetPosition() );\n    if(distanceY>= 0){this.currentAnim = this.anims.fly;}\n    else{this.currentAnim = this.anims.idle;}\n  }\n  this.body.SetXForm(this.body.GetPosition(), 0);\n  if (distanceX> 0){this.currentAnim.flip.x = true;}\n  else{this.currentAnim.flip.x = false;}\n  this.parent();\n  }\n```", "```js\n    type: ig.Entity.TYPE.B,\n    checkAgainst: ig.Entity.TYPE.A,\n    cooldowncounter: 0,\n    ```", "```js\n    this.cooldowncounter ++;\n    ```", "```js\n    check: function(other){\n      if (this.cooldowncounter> 60){\n        other.receiveDamage(10,this);\n        this.cooldowncounter = 0;\n      }\n    }\n    ```", "```js\n    ig.module(\n      'game.entities.crate'\n    )\n    .requires(\n      'plugins.box2d.entity'\n    )\n    .defines(function(){\n    EntityCrate = ig.Box2DEntity.extend({size: {x: 8, y: 8},\n      health: 2000,\n      name: 'crate',\n      type: ig.Entity.TYPE.B,checkAgainst: ig.Entity.TYPE.A,\n      animSheet: new ig.AnimationSheet( 'media/crate.png', 8, 8),\n      init: function( x, y, settings ) {\n        this.addAnim( 'idle', 1, [0] );\n        this.parent( x, y, settings );\n      }\n    });\n    });\n    ```", "```js\n    ig.module(\n      'game.entities.healthcrate'\n    )\n    .requires('game.entities.crate'\n    ).defines(function(){\n    EntityHealthcrate = EntityCrate.extend({\n      name: 'healthcrate',\n      animSheet: new ig.AnimationSheet( 'media/healthcrate.png', 8, 8),\n      check: function(other){\n        if(other.name == 'player'){\n          other.health = \u00a0other.health + 100;\n          this.kill();\n        }\n      }\n    })\n    });\n    ```", "```js\n    'game.entities.healthcrate'\n    ```", "```js\n    .defines(function(){\n    GameInfo = new function(){\n     this.score = 0;\n    },\n    MyGame = ig.Box2DGame.extend({\n    ```", "```js\n    increaseScore: function(points){\n      //increase score by certain amount of points\n      GameInfo.score +=points;\n    }\n    ```", "```js\n      kill: function(){\n        ig.game.increaseScore(100);\n        this.parent();\n      }\n    ```", "```js\nig.module(\n  'game.entities.levelchange'\n)\n.requires(\n  'impact.entity'\n)\n.defines(function(){ \nEntityLevelchange = ig.Entity.extend({\n  _wmDrawBox: true,\n  _wmBoxColor: 'rgba(0, 0, 255, 0.7)',\n  _wmScalable: true,\n  size: {x: 8, y: 8},\n  level: null,\n  triggeredBy: function( entity, trigger ) {\n    if(this.level) { \n      varlevelName = this.level.replace(/^(Level)?(\\w)(\\w*)/, function( m, l, a, b ) {\n        return a.toUpperCase() + b;\n        });\n      var oldplayer = ig.game.getEntitiesByType( EntityPlayer )[0];\n      ig.game.loadLevel( ig.global['Level'+levelName] );\n      var newplayer = ig.game.getEntitiesByType( EntityPlayer )[0];\n      newplayer = oldplayer;\n    }\n  },\n  update: function(){}\n});\n});\n```", "```js\n    'game.levels.level2',\n    'game.entities.trigger',\n    'game.entities.levelchange'\n    ```", "```js\n    ig.module(\n      'game.entities.boss'\n    )\n    .requires(\n      'game.entities.enemy'\n    )\n    .defines(function(){\n      EntityBoss = EntityEnemy.extend({\n      name: 'boss',\n      size: {x: 32, y:48},\n      health: 200,\n      animSheet: new ig.AnimationSheet( 'media/Boss.png', 32,48 )\n    });\n    });\n    ```", "```js\n    'game.entities.boss'\n    ```", "```js\n    ig.module(\n      'game.entities.bossbullet'\n    )\n    .requires(\n      'game.entities.projectile'\n    )\n    .defines(function(){\n      EntityBossbullet = EntityProjectile.extend({\n      name: 'bossbullet',\n      checkAgainst: ig.Entity.TYPE.A,\n      animSheet: new ig.AnimationSheet( 'media/bossbullet.png',8, 4 )\n      });\n    });\n    ```", "```js\n    update: function(){\n      var players = ig.game.getEntitiesByType('EntityPlayer');\n      var player = players[0];\n      // both distance on x axis and y axis are calculated\n      var distanceX = this.pos.x - player.pos.x;\n      var sign = Math.abs(distanceX)/distanceX;\n      var distanceY = this.pos.y - player.pos.y;\n      //try to move without flying, fly if necessary\n      if (Math.abs(distanceX) < 1000 &&Math.abs(distanceX)>100){\n        var fY = distanceY> 0 ? -350: 0;\n        this.body.ApplyForce( new b2.Vec2(sign * -50,fY),this.body.GetPosition() );\n        if(distanceX>0){this.flip = true;}\n        else {this.flip = false;}\n        if (Math.random() > 0.9){\n          var x = this.pos.x + (this.flip ? -6 : 6 );\n          var y = this.pos.y + 6;\n          ig.game.spawnEntity( EntityBossbullet, x, y,{flip:this.flip} );\n        }\n        if(distanceY>= 0){this.currentAnim = this.anims.fly;}\n        else{this.currentAnim = this.anims.idle;}\n      }\n      else if (Math.abs(distanceX) <= 100){\n        if(Math.random() > 0.9){\n          var x = this.pos.x + (this.flip ? -6 : 6 );\n          var y = this.pos.y + 6;\n          ig.game.spawnEntity( EntityBossbullet, x, y,{flip:this.flip} );\n        }\n      }\n      this.body.SetXForm(this.body.GetPosition(), 0);\n      if (distanceX> 0){this.currentAnim.flip.x = true;}\n      else{this.currentAnim.flip.x = false;}\n      this.cooldowncounter ++;\n      this.parent();\n    }\n    ```"]