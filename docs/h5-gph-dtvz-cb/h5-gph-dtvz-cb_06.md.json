["```js\n    <body onLoad=\"init();\" style=\"background:#fafafa\">\n        <h1>Users Changed between within a year</h1>\n        <div class=\"graphicLayers\" >\n          <canvas id=\"base\" class=\"canvasLayer\" width=\"550\" height=\"400\"> </canvas>\n\n          <canvas id=\"i2011\" class=\"canvasLayer\" width=\"550\" height=\"400\"> </canvas>\n          <canvas id=\"i2010\" class=\"canvasLayer\" width=\"550\" height=\"400\"> </canvas>\n          <canvas id=\"i2009\" class=\"canvasLayer\" width=\"550\" height=\"400\"> </canvas>\n\n      </div>\n      <div class=\"controllers\">\n      2009 : <input type=\"radio\" name=\"i2009\" value=\"-1\" /> off\n            <input type=\"radio\" name=\"i2009\" value=\"0\" /> line\n            <input type=\"radio\" name=\"i2009\" value=\"1\" select=\"1\" /> full ||\n        2010 : <input type=\"radio\" name=\"i2010\" value=\"-1\" /> off\n            <input type=\"radio\" name=\"i2010\" value=\"0\" /> line\n            <input type=\"radio\" name=\"i2010\" value=\"1\" select=\"1\" /> full ||\n        2011 : <input type=\"radio\" name=\"i2011\" value=\"-1\" /> off\n            <input type=\"radio\" name=\"i2011\" value=\"0\" /> line\n            <input type=\"radio\" name=\"i2011\" value=\"1\" select=\"1\" /> full\n      </div>\n    </body>\n    </html>\n    ```", "```js\n    <head>\n        <title>Line Chart</title>\n        <meta charset=\"utf-8\" />\n        <style>\n        .graphicLayers {\n        \tposition: relative;\t\n        \tleft:100px\n        }\n\n        .controllers {\n          position: relative;\t\n          left:100px;\n          top:400px;\n\n        }\n\n        .canvasLayer{\n          position: absolute; \n          left: 0; \n          top: 0; \n        }\n        </style>\n      <script src=\"img/06.01.layers.js\"></script>\t\t\n      </head>\n    ```", "```js\n    window.onload = init;\n\n    function init(){\n    ```", "```js\n    var CHART_PADDING = 20;\n    var wid;\n    var hei;\n    var context;\n\n    ```", "```js\n    var a2011 = [38,65,85,111,131,160,187,180,205,146,64,212];\n    var a2010 = [212,146,205,180,187,131,291,42,98,61,74,69];\n    var a2009 = [17,46,75,60,97,131,71,52,38,21,84,39];\n\n    var chartInfo= { y:{min:0, max:300, steps:5,label:\"users\"},\n            x:{min:1, max:12, steps:11,label:\"months\"}\n          };\n\n    var HIDE_ELEMENT = -1;\n    var LINE_ELEMENT = 0;\n    var FILL_ELEMENT = 1;\n\n    var elementStatus={i2009:FILL_ELEMENT,i2010:FILL_ELEMENT,i2011:FILL_ELEMENT};\n\n    var barData = {\n            i2009:{\n              status:\tFILL_ELEMENT,\n              style: \"#E3675C\",\n              label: \"/2009\",\n              data:[17,46,75,60,97,131,71,52,38,21,84,39]\n            },\n            i2010:{\n              status:\tFILL_ELEMENT,\n              style: \"#FFDE89\",\n              label: \"/2010\",\n              data:[212,146,205,180,187,131,291,42,98,61,74,69]\n            },\n            i2011:{\n              status:\tFILL_ELEMENT,\n              style: \"#B1DDF3\",\n              label: \"/2011\",\n              data:[38,65,85,111,131,160,187,180,205,146,64,212]\n            }\n\n          };\n    ```", "```js\n    function init(){\n      var can = document.getElementById(\"bar\");\n\n      wid = can.width;\n      hei = can.height;\n      context = can.getContext(\"2d\");\n\n      drawChart();\n\n      var radios ;\n      for(var id in elementStatus){\n        radios = document.getElementsByName(id);\n        for (var rid in radios){\n           radios[rid].onchange = onChangedRadio;\n          if(radios[rid].value == elementStatus[id] ) radios[rid].checked = true;\t \n        }\n\n      }\n\n    }\n\n    function drawChart(){\n     var can = document.getElementById(\"base\");\n\n     wid = can.width;\n     hei = can.height;\n     var context = can.getContext(\"2d\");\n    ...\n    ```", "```js\n    function init(){\n      drawChart();\n\n      var radios ;\n     for(var id in barData){\n        radios = document.getElementsByName(id);\n        for (var rid in radios){\n           radios[rid].onchange = onChangedRadio;\n     if(radios[rid].value == barData[id].status ) radios[rid].checked = true; \n        }\n\n      }\n\n    }\n    ```", "```js\n     if(elementStatus.i2011>-1) addLine(context,formatData(a2011, \"/2011\",\"#B1DDF3\"),\"#B1DDF3\",elementStatus.i2011==1);\n     if(elementStatus.i2010>-1) addLine(context,formatData(a2010, \"/2010\",\"#FFDE89\"),\"#FFDE89\",elementStatus.i2010==1);\n     if(elementStatus.i2009>-1) addLine(context,formatData(a2009, \"/2009\",\"#E3675C\"),\"#E3675C\",elementStatus.i2009==1);\n      changeLineView(\"i2011\",barData.i2011.status);\n      changeLineView(\"i2010\",barData.i2010.status);\n      changeLineView(\"i2009\",barData.i2009.status);\n    ```", "```js\n    function onChangedRadio(e){\n      changeLineView(e.target.name,e.target.value);\n    }\n    ```", "```js\n    function changeLineView(id,value){\n      barData[id].status = value;\n      var dataSource = barData[id];\n\n      can = document.getElementById(id);\n      context = can.getContext(\"2d\");\n      context.clearRect(0,0,wid,hei);\n      if( dataSource.status!=HIDE_ELEMENT){\n        context.beginPath();\n        addLine(context,formatData(dataSource.data, dataSource.label,dataSource.style),dataSource.style,dataSource.status==1);\n      }\n    }\n    ```", "```js\nvar can = document.getElementById(\"base\");\n```", "```js\nchangeLineView(\"i2011\",barData.i2011.status);\nchangeLineView(\"i2010\",barData.i2010.status);\nchangeLineView(\"i2009\",barData.i2009.status); \n```", "```js\nvar barData = {\n        i2009:{...},\n        i2010:{...},\n        i2011:{...}\t\n\n      };\n```", "```js\nfunction changeLineView(id,value){\n  barData[id].status = value;\n  var dataSource = barData[id];\n\n  can = document.getElementById(id);\n  context = can.getContext(\"2d\");\n  context.clearRect(0,0,wid,hei);\n  if( dataSource.status!=HIDE_ELEMENT){\n    context.beginPath();\n    addLine(context,formatData(dataSource.data, dataSource.label,dataSource.style),dataSource.style,dataSource.status==1);\n  }\n}\n```", "```js\ncan = document.getElementById(id);\n```", "```js\n  changeLineView(\"i2011\",barData.i2011.status);\n  changeLineView(\"i2010\",barData.i2010.status);\n  changeLineView(\"i2009\",barData.i2009.status);\n```", "```js\n  for(var id in barData){\n    changeLineView(id,barData[id].status);\n  }\n```", "```js\n<div id=\"chartContainer\" class=\"graphicLayers\" >\n      <canvas id=\"base\" class=\"canvasLayer\" width=\"550\" height=\"400\"> </canvas>\n\n <canvas id=\"i2011\" class=\"canvasLayer\" width=\"550\" height=\"400\">      </canvas>\n <canvas id=\"i2010\" class=\"canvasLayer\" width=\"550\" height=\"400\">      </canvas>\n <canvas id=\"i2009\" class=\"canvasLayer\" width=\"550\" height=\"400\">      </canvas>\n\n  </div>\n```", "```js\nvar chartContainer = document.getElementById(\"chartContainer\");\n\n  for(var id in barData){\n can = document.createElement(\"canvas\");\n can.id=id;\n can.width=wid;\n can.height=hei; \n can.setAttribute(\"class\",\"canvasLayer\");\n chartContainer.appendChild(can);\n\n    changeLineView(id,barData[id].status);\n\n  }\n\n}\n```", "```js\n<div id=\"chartContainer\" class=\"controllers\">\n 2009 : <input type=\"radio\" name=\"i2009\" value=\"-1\" /> off\n <input type=\"radio\" name=\"i2009\" value=\"0\" /> line\n <input type=\"radio\" name=\"i2009\" value=\"1\" select=\"1\" /> full ||\n 2010 : <input type=\"radio\" name=\"i2010\" value=\"-1\" /> off\n <input type=\"radio\" name=\"i2010\" value=\"0\" /> line\n <input type=\"radio\" name=\"i2010\" value=\"1\" select=\"1\" /> full ||\n 2011 : <input type=\"radio\" name=\"i2011\" value=\"-1\" /> off\n <input type=\"radio\" name=\"i2011\" value=\"0\" /> line\n <input type=\"radio\" name=\"i2011\" value=\"1\" select=\"1\" /> full\n  </div>\n```", "```js\nfunction appendRadioButton(container, id,value,text){\n  var radioButton = document.createElement(\"input\");\n  radioButton.setAttribute(\"type\", \"radio\");\n  radioButton.setAttribute(\"value\", value);\n  radioButton.setAttribute(\"name\", id);\n\n  container.appendChild(radioButton);\n\n  container.innerHTML += text;\n}\n```", "```js\nfunction init(){\n  drawChart();\n\n var radContainer = document.getElementById(\"controllers\");\n\n var hasLooped= false;\n for(var id in barData){\n\n radContainer.innerHTML += (hasLooped ? \" || \":\"\") + barData[id].label +\": \" ;\n\n appendRadioButton(radContainer,id,-1,\" off \");\n appendRadioButton(radContainer,id,0,\" line \");\n appendRadioButton(radContainer,id,1,\" full \");\n hasLooped = true;\n\n }\n\n  var radios ;\n  for(id in barData){\n    radios = document.getElementsByName(id);\n    for (var i=0; i<radios.length; i++){\n       radios[i].onchange = onChangedRadio;\n      if(radios[i].value == barData[id].status ){\n         radios[i].checked = true;\t \n      }\n    }\n  }\n\n}\n```", "```js\n    function LineChart(chartInfo,barData){\n      this.chartInfo = chartInfo;\n      this.barData = barData;\n\n      this.HIDE_ELEMENT = -1;\n      this.LINE_ELEMENT = 0;\n      this.FILL_ELEMENT = 1;\n      this.CHART_PADDING = 20;\n\n      this.wid;\n      this.hei;\n\n      drawChart();\n\n      var radContainer = document.getElementById(\"controllers\");\n\n      var hasLooped= false;\n      for(var id in barData){\n\n        radContainer.innerHTML += (hasLooped ? \" || \":\"\") + barData[id].label +\": \" ;\n\n        appendRadioButton(radContainer,id,-1,\" off \");\n        appendRadioButton(radContainer,id,0,\" line \");\n        appendRadioButton(radContainer,id,1,\" full \");\n        hasLooped = true;\n\n      }\n\n      var radios ;\n      for(id in barData){\n        radios = document.getElementsByName(id);\n        for (var i=0; i<radios.length; i++){\n           radios[i].onchange = onChangedRadio;\n          if(radios[i].value == barData[id].status ){\n             radios[i].checked = true;\t \n          }\n        }\n      }\n\n    }\n    ```", "```js\n    LineChart.prototype.drawChart =function(){...}\n    LineChart.prototype.appendRadioButton = function(container, id,value,text){...}\n    LineChart.prototype.onChangedRadio = function (e){...}\n    LineChart.prototype.changeLineView = function(id,value){...}\n    LineChart.prototype.fillChart = function (context, chartInfo){...}\n    LineChart.prototype.addLine = function(context,data,style,isFill){ ...}\n    LineChart.prototype.formatData = function(data , labelCopy , style){...}\n    ```", "```js\n    LineChart.prototype.drawChart =function(){\n      var can = document.getElementById(\"base\");\n\n     this.wid = can.width;\n     this.hei = can.height;\n      var context = can.getContext(\"2d\");\n\n      context.lineWidth = 1;\n      context.fillStyle = \"#eeeeee\";\n      context.strokeStyle = \"#999999\";\n      context.fillRect(0,0,this.wid,this.hei);\n\n      context.font = \"10pt Verdana, sans-serif\";\n      context.fillStyle = \"#999999\";\n\n      context.moveTo(this.CHART_PADDING,this.CHART_PADDING);\n     context.rect(this.CHART_PADDING,this.CHART_PADDING,this.wid-this.CHART_PADDING*2,this.hei-this.CHART_PADDING*2);\n      context.stroke();\n      context.strokeStyle = \"#cccccc\";\n      this.fillChart(context,this.chartInfo);\n\n      var chartContainer = document.getElementById(\"chartContainer\");\n\n      for(var id in this.barData){\n        can = document.createElement(\"canvas\");\n        can.id=id;\n     can.width=this.wid;\n     can.height=this.hei; \n        can.setAttribute(\"class\",\"canvasLayer\");\n        chartContainer.appendChild(can);\n     this.changeLineView(id,this.barData[id].status);\n\n      }\n\n    }\n    //continue and update all methods of our new object\n    ```", "```js\n    LineChart.prototype.bind = function(scope, fun){\n       return function () {\n            fun.apply(scope, arguments);\n        };\n\n    }\n    ```", "```js\n    for (var i=0; i<radios.length; i++){\n     radios[i].onchange = this.bind(this, this.onChangedRadio);\n       if(radios[i].value == barData[id].status ){\n             radios[i].checked = true;\t \n          }\n        }\n\n    ```", "```js\n    window.onload = init;\n\n    function init(){\n      var chartInfo= { y:{min:0, max:300, steps:5,label:\"users\"},\n            x:{min:1, max:12, steps:11,label:\"months\"}\n          };\n\n      var barData = {\n            i2011:{\n              status:\tFILL_ELEMENT,\n              style: \"#B1DDF3\",\n              label: \"2011\",\n              data:[38,65,85,111,131,160,187,180,205,146,64,212]\n            },\n            i2010:{\n              status:\tFILL_ELEMENT,\n              style: \"#FFDE89\",\n              label: \"2010\",\n              data:[212,146,205,180,187,131,291,42,98,61,74,69]\n            },\t\n\n            i2009:{\n              status:\tFILL_ELEMENT,\n              style: \"#E3675C\",\n              label: \"2009\",\n              data:[17,46,75,60,97,131,71,52,38,21,84,39]\n            }\n\n          };\n\n      chart = new LineChart(chartInfo,barData);\t\n    }\n    ```", "```js\nfunction MyFirstObject(){\n //constructor code\n}\n```", "```js\nfunction MyFirstObject(){\n this.a = \"value\";\n}\n```", "```js\nthis.sampleVar;\n```", "```js\nnew LineChart(chartInfo,barData);\n```", "```js\nvar can = document.getElementById(\"base\");\n\n  this.wid = can.width;\n  this.hei = can.height;\n  this.baseCanvas = can.getContext(\"2d\");\n```", "```js\nLineChart.prototype.drawChart =function(){\n  var context = this.baseCanvas;\n...\n  this.fillChart();\n```", "```js\nLineChart.prototype.fillChart = function (){ \n  var context = this.baseCanvas;\n  var chartInfo = this.chartInfo;\n```", "```js\n<div id=\"chartContainer\" class=\"graphicLayers\" >\n <canvas id=\"base\" class=\"canvasLayer\" width=\"550\" height=\"400\"> </canvas>\n\n\t</div>\n <div id=\"controllers\" class=\"controllers\">\n\n </div>\n\n```", "```js\n.controllers {\n      position: absolute;\t\n      left:0;\n      top:400px;\n\n    }\n```", "```js\nfunction LineChart(chartInfo,barData,divID){\n  this.chartInfo = chartInfo;\n  this.barData = barData;\n\n  this.HIDE_ELEMENT = -1;\n  this.LINE_ELEMENT = 0;\n  this.FILL_ELEMENT = 1;\n  this.CHART_PADDING = 20;\n  this.BASE_ID = divID;\n\n var chartContainer = document.getElementById(divID);\n var\tcan = document.createElement(\"canvas\");\n can.width=chartInfo.width;\n can.height=chartInfo.height; \n can.setAttribute(\"class\",\"canvasLayer\");\n chartContainer.appendChild(can);\n\n  this.wid = can.width;\n  this.hei = can.height;\n this.baseCanvas = can.getContext(\"2d\");\n\n  this.drawChart();\n\n var\tdiv = document.createElement(\"div\");\n div.setAttribute(\"class\",\"controllers\");\n chartContainer.appendChild(div);\n var radContainer = div;\n\n  var hasLooped= false;\n  for(var id in barData){\n\n    radContainer.innerHTML += (hasLooped ? \" || \":\"\") + barData[id].label +\": \" ;\n\n    this.appendRadioButton(radContainer,id,-1,\" off \");\n    this.appendRadioButton(radContainer,id,0,\" line \");\n    this.appendRadioButton(radContainer,id,1,\" full \");\n    hasLooped = true;\n\n  }\n\n  var radios ;\n  for(id in barData){\n    radios = document.getElementsByName(id);\n    for (var i=0; i<radios.length; i++){\n       radios[i].onchange = this.bind(this, this.onChangedRadio);\n      if(radios[i].value == barData[id].status ){\n         radios[i].checked = true;\t \n      }\n    }\n  }\n\n}\n```", "```js\n  new LineChart(chartInfo,barData,\"chartContainer\");\t \n```", "```js\nLineChart.prototype.extractID = function(str){\n  return  str.split(this.BASE_ID + \"_\")[1];\n}\n\nLineChart.prototype.wrapID = function(str){\n  return  this.BASE_ID + \"_\"+str;\n}\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Line Chart</title>\n    <meta charset=\"utf-8\" />\n    <style>\n #chartContainer {\n position: relative; \n left:100px\n }\n #chartContainer2{\n position: relative; \n left:700px\n }\n    .controllers {\n      position: absolute;\t\n      left:0;\n      top:400px;\n\n    }\n    .canvasLayer{\n      position: absolute; \n      left: 0; \n      top: 0; \n    }\n    </style>\n  <script src=\"img/06.02.objects.optimized.js\"></script>\t\t\n  </head>\n  <body style=\"background:#fafafa\">\n    <h1>Users Changed between within a year</h1>\n <div id=\"chartContainer\" class=\"graphicLayers\" >\n\n </div>\n <div id=\"chartContainer2\" class=\"graphicLayers2\" >\n\n </div> \n  </body>\n</html>\n```", "```js\n new LineChart(chartInfo,barData,\"chartContainer\"); \n new LineChart(chartInfo,barData,\"chartContainer2\"); \n\n```", "```js\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Line Chart</title>\n        <meta charset=\"utf-8\" />\n        <style>\n        #chartContainer {\n        \tposition: relative;\t\n        \tleft:100px\n        }\n     #chartContainer2{\n     position: relative; \n     left:700px\n     }\n\n        .controllers {\n          position: absolute;\t\n          left:0;\n          top:400px;\n\n        }\n\n        .canvasLayer{\n          position: absolute; \n          left: 0; \n          top: 0; \n        }\n        </style>\n      <script src=\"img/06.02.objects.optimized.js\"></script>\t\t\n      </head>\n      <body style=\"background:#fafafa\">\n        <h1>Users Changed between within a year</h1>\n        <div id=\"chartContainer\" class=\"graphicLayers\" >\n\n      </div>\n     <div id=\"chartContainer2\" class=\"graphicLayers2\" >\n\n     </div> \n      </body>\n    </html>\n    ```", "```js\n    function Animator(refreshRate){\n      this.animQue = [];\n      this.refreshRate = refreshRate || 50; //if nothing set 20 FPS\n      this.interval = 0;\n    }\n    ```", "```js\n    Animator.prototype.add = function(obj,property, from,to,time,delay){\n      obj[property] = from;\n      this.animQue.push({obj:obj,\n                p:property,\n                crt:from,\n                to:to,\n                stepSize: (to-from)/(time*1000/this.refreshRate),\n                delay:delay*1000 || 0});\n\n      if(!this.interval){ //only start interval if not running already\n        this.interval = setInterval(this._animate,this.refreshRate,this);\t\n      }\n\n    }\n    ```", "```js\n    Animator.prototype._animate = function(scope){\n      var obj;\n      var data;\n\n      for(var i=0; i<scope.animQue.length; i++){\n          data = scope.animQue[i];\n\n          if(data.delay>0){\n            data.delay-=scope.refreshRate;\n          }else{\n            obj = data.obj;\n            if(data.crt<data.to){\n              data.crt +=data.stepSize;\n              obj[data.p] = data.crt;\n            }else{\n              obj[data.p] = data.to;\t\n              scope.animQue.splice(i,1);\n              --i;\n            }\n          }\n\n      }\n\n      if(\tscope.animQue.length==0){\n        clearInterval(scope.interval);\n        scope.interval = 0; //so when next animation starts we can start over\n      }\n    }\n    ```", "```js\n    function LineChart(chartInfo,barData,divID){\n    ...\n     this.animator = new Animator(50);\n\n      var chartContainer =this.mainDiv;\n      var\tcan = document.createElement(\"canvas\");\n        can.width=chartInfo.width;\n          can.height=chartInfo.height; \n        can.setAttribute(\"class\",\"canvasLayer\");\n      chartContainer.appendChild(can);\n     this.animator.add(can.style,\"opacity\",0,1,.5,.2);\n\n    ... \n\n      var\tdiv = document.createElement(\"div\");\n        div.setAttribute(\"class\",\"controllers\");\n      chartContainer.appendChild(div);\n\n     this.animator.add(div.style,\"opacity\",0,1,.4,2.2);\n    ...\n\n    ```", "```js\n     var delay = .75;\n      for(var id in this.barData){\n        can = document.createElement(\"canvas\");\n        can.id=this.wrapID(id);\n            can.width=this.wid;\n            can.height=this.hei; \n        can.setAttribute(\"class\",\"canvasLayer\");\n        chartContainer.appendChild(can);\n        this.changeLineView(id,this.barData[id].status);\n\n     this.animator.add(can.style,\"opacity\",0,1,1,delay);\n     delay+=.5;\n\n      }\n    ```", "```js\nfunction Animator(refreshRate){\n  this.animQue = [];\n  this.refreshRate = refreshRate || 50; //if nothing set 20 FPS\n  this.interval = 0;\n}\n```", "```js\nAnimator.prototype.add = \n    function(obj,property, from,to,time,delay){}\n```", "```js\n  this.animQue.push({obj:obj,\n            p:property,\n            crt:from,\n            to:to,\n            stepSize: (to-from)/(time*1000/this.refreshRate),\n            delay:delay*1000 || 0});\n```", "```js\nif(!this.interval){ //only start interval if not running already\n    this.interval = setInterval(this._animate,this.refreshRate,this);\n  }\n```", "```js\n    }else{\n      obj[data.p] = data.to;\t\n      scope.animQue.splice(i,1);\n      --i;\n    }\n    ```", "```js\n  if(\tscope.animQue.length==0){\n    clearInterval(scope.interval);\n    scope.interval = 0; //reset interval variable\n  }\n```", "```js\n    LineChart.prototype.createLegend = function (){\n      var\tcan = document.createElement(\"canvas\");\n        can.width=70;\n          can.height=100; \n        can.setAttribute(\"class\",\"canvasLayer\");\n      chartContainer.appendChild(can);\n\n      this.legend = can;\n      this.updateLegend();\n      can.style.opacity = 0;\n    }\n    ```", "```js\n    LineChart.prototype.updateLegend = function(){\n      var wid = this.legend.width;\n      var hei = this.legend.height;\n      var context = this.legend.getContext(\"2d\");\n      context.fillStyle = \"rgba(255,255,255,.7)\";\n      context.strokeStyle = \"rgba(150,150,150,.7)\";\n      context.fillRect(0,0,wid,hei);\n      context.strokeRect(5,5,wid-10,hei-10);\n\n      var nextY= 10;\n      var space = (hei-10 - this.chartInfo.bars * nextY) / this.chartInfo.bars;\n      for(var id in this.barData){\n        context.fillStyle = this.barData[id].style;\n        context.fillRect(10,nextY,10,10);\n        context.fillText(this.barData[id].label,25, nextY+9);\n        nextY+=10+space;\n\n      }\n      this.legend.style.left = this.wid +\"px\";\n\n    }\n    ```", "```js\n    LineChart.prototype.onMouseMoveArea = function(e){\n      this.legend.style.top = (e.layerY) +\"px\";\n\n    }\n\n    LineChart.prototype.fadeInLegend = function(){\n      this.animator.add(this.legend.style,\"opacity\",this.legend.style.opacity,1,.5);\t\n    }\n\n    LineChart.prototype.fadeOutLegend = function(){\n      this.animator.add(this.legend.style,\"opacity\",this.legend.style.opacity,0,.5);\t\n    }\n    ```", "```js\n    \tthis.drawChart();\n\n    this.createLegend();\n    this.mainDiv.onmousemove = this.bind(this,this.onMouseMoveArea);\n    this.mainDiv.onmouseover = this.bind(this,this.fadeInLegend);\n    this.mainDiv.onmouseout = this.bind(this,this.fadeOutLegend);\n\n    ```", "```js\n    this.chartInfo.bars = 0;\n      for(var id in this.barData){\n     this.chartInfo.bars++;\n        can = document.createElement(\"canvas\");\n        can.id=this.wrapID(id);\n            can.width=this.wid;\n            can.height=this.hei; \n        can.setAttribute(\"class\",\"canvasLayer\");\n        chartContainer.appendChild(can);\n        this.changeLineView(id,this.barData[id].status);\n\n        this.animator.add(can.style,\"opacity\",0,1,1,delay);\n        delay+=.5;\n\n      }\n    ```", "```js\nAnimator.prototype.find= function(obj,property){\n  for(var i=0; i<this.animQue.length; i++){\n    if(this.animQue[i].obj == obj && this.animQue[i].p == property) return i;\t\n\n  }\n\n  return -1;\n}\n```", "```js\nAnimator.prototype.add = function(obj,property, from,to,time,delay){\n  obj[property] = from;\n\n var index = this.find(obj,property);\n  if(index!=-1) this.animQue.splice(index,1);\n  this.animQue.push({obj:obj,\n            p:property,\n            crt:from,\n            to:to,\n            stepSize: (to-from)/(time*1000/this.refreshRate),\n            delay:delay*1000 || 0});\n\n  if(!this.interval){ //only start interval if not running already\n    this.interval = setInterval(this._animate,this.refreshRate,this);\t\n  }\n\n}\n```", "```js\n      this.drawChart();\n\n      this.createLegend();\n      this.mainDiv.onmousemove = this.bind(this,this.onMouseMoveArea);\n      this.mainDiv.onmouseover = this.bind(this,this.fadeInLegend);\n      this.mainDiv.onmouseout = this.bind(this,this.fadeOutLegend);\n    ```", "```js\n    LineChart.prototype.createLegend = function (){\n      var\tcan = document.createElement(\"canvas\");\n        can.width=90;\n          can.height=100; \n        can.setAttribute(\"class\",\"canvasLayer\");\n      chartContainer.appendChild(can);\n\n      this.legend = can;\n      this.updateLegend(null,-1);\n      can.style.left = this.wid +\"px\";\n    }\n    ```", "```js\n    LineChart.prototype.updateLegend = function(ren,currentXIndex){\n      var ren = ren || this.barData;\t\n      var wid = this.legend.width;\n      var hei = this.legend.height;\n      var context = this.legend.getContext(\"2d\");\n      context.fillStyle = \"rgba(255,255,255,.7)\";\n      context.strokeStyle = \"rgba(150,150,150,.7)\";\n      context.fillRect(0,0,wid,hei);\n      context.strokeRect(5,5,wid-10,hei-10);\n\n      var nextY= 10;\n      var space = (hei-10 - this.chartInfo.bars * nextY) / this.chartInfo.bars;\n      var isXIndex = currentXIndex !=-1;\n      for(var id in ren){\n        context.fillStyle = this.barData[id].style;\n        context.fillRect(10,nextY,10,10);\n        context.fillText(this.barData[id].label + (isXIndex ? (\":\"+ this.barData[id].data[currentXIndex] ):\"\"),25, nextY+9);\n        nextY+=10+space;\n\n      }\n\n    }\n    ```", "```js\n    LineChart.prototype.onMouseMoveArea = function(e){\n      var pixelData;\n      var barCanvas;\n\n      var chartX = e.layerX-this.CHART_PADDING;\n      var chartWid = \tthis.wid -this.CHART_PADDING*2;\n      var currentXIndex = -1;\n      if(chartX>=0 && chartX<= chartWid){\n        currentXIndex = Math.round(chartX/this.chartInfo.x.stepSize)\t\n      }\n\n      var renderList = {};\n      var count = 0;\n      for(var id in this.barData){\n        barCanvas = this.barData[id].canvas;\t\t\n        pixelData = barCanvas.getImageData(e.layerX, e.layerY, 1, 1).data\n\n        if( pixelData[3]){\n           count++;\n           renderList[id] = true; //there is content on this layer now\n        }\n      }\n\n      if(!count) renderList = this.barData;\n\n      this.updateLegend(renderList,currentXIndex);\n    }\n    ```", "```js\n    stepSize = rangeLength/steps;\n    this.chartInfo.x.stepSize = chartWidth/steps;\n\n    ```", "```js\n    for(var id in this.barData){\n        this.chartInfo.bars++;\n        can = document.createElement(\"canvas\");\n        can.id=this.wrapID(id);\n            can.width=this.wid;\n            can.height=this.hei;\n        can.setAttribute(\"class\",\"canvasLayer\");\n        chartContainer.appendChild(can);\n     this.barData[id].canvas =can.getContext(\"2d\"); \n        this.changeLineView(id,this.barData[id].status);\n\n        this.animator.add(can.style,\"opacity\",0,1,1,delay);\n        delay+=.5;\n\n      }\n    ```", "```js\nvar chartX = e.layerX-this.CHART_PADDING;\nvar chartWid = \tthis.wid -this.CHART_PADDING*2;\n```", "```js\nvar currentXIndex = -1;\n\tif(chartX>=0 && chartX<= chartWid){\n\t\tcurrentXIndex = Math.round(chartX/this.chartInfo.x.stepSize);\t\n\t}\n```", "```js\nvar renderList = {};\n  var count = 0;\n  for(var id in this.barData){\n    barCanvas = this.barData[id].canvas;\t\t\n    pixelData = barCanvas.getImageData(e.layerX, e.layerY, 1, 1).data;\n\n    if( pixelData[3]){\n       count++;\n       renderList[id] = true; //there is content on this layer now\n    }\n  }\n```", "```js\nif(!count) renderList = this.barData;\nthis.updateLegend(renderList,currentXIndex);\n```", "```js\nvar ren = ren || this.barData;\n```", "```js\nvar isXIndex = currentXIndex !=-1;\n for(var id in ren){\n    context.fillStyle = this.barData[id].style;\n    context.fillRect(10,nextY,10,10);\n context.fillText(this.barData[id].label + (isXIndex ? (\":\"+ this.barData[id].data[currentXIndex] ):\"\"),25, nextY+9);\n    nextY+=10+space;\n\n  }\n```"]