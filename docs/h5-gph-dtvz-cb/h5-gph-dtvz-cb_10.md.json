["```js\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Google Maps Markers and Events</title>\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n        <style>\n          html { height: 100% }\n          body { height: 100%; margin: 0; padding: 0 }\n          #map { height: 100%; width:100%; position:absolute; top:0px; left:0px }\n        </style>\n      <script src=\"img/jquery.min.js\"></script>\n        <script src=\"img/js?key=AIzaSyAywwIFJPo67Yd4vZgPz4EUSVu10BLHroE&sensor=true\">\n        </script>\n        <script src=\"img/10.01.socielmap.js\"></script>\n      </head>\n     <body onload=\"init();\">\n        <div id=\"map\"></div>\n      </body>\n    </html>\n    ```", "```js\n    function init(){\n     //all code here\n    }\n    ```", "```js\n    var BASE_CENTER = new google.maps.LatLng(48.516817734860105,13.005318750000015 );\n    ```", "```js\n    var aGray =  [\n        {\n          stylers: [{saturation: -100}]\n        }\n      ];\n\n      var grayStyle = new google.maps.StyledMapType(aGray,{name: \"Black & White\"});\n    ```", "```js\n    var map = new google.maps.Map(document.getElementById(\"map\"),{\n        center: BASE_CENTER,\n        zoom: 6,\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        disableDefaultUI: true,\n\n      });\n    ```", "```js\n     map.mapTypes.set('grayStyle', grayStyle);\n     map.setMapTypeId('grayStyle');\n    ```", "```js\n    google.maps.event.addListener(map, 'click', function(e) {\n        //console.log(e.latLng);\n          var searchKeyWord = 'html5';\n          var geocode=e.latLng.lat() + \",\" + e.latLng.lng()+\",50km\";\n          var searchLink = 'http://search.twitter.com/search.json?q='+ searchKeyWord+ '&geocode=' + geocode +\"&result_type=recent&rpp=1\";\n\n          $.getJSON(searchLink, function(data) {\n            showTweet(data.results[0],e.latLng);\n        });\n\n        });\n    ```", "```js\n    function showTweet(obj,latLng){\n          if(!obj) obj = {text:'No tweet found in this area for this topic'};\n          console.log(obj);\n\n          var marker = new google.maps.Marker({\n                map: map,\n                position: latLng,\n                title:obj.text    });\n\n      }\n    ```", "```js\ngoogle.maps.event.addListener(map, 'click', function(e) {\n    //console.log(e.latLng);\n var searchKeyWord = 'html5';\n var geocode=e.latLng.lat() + \",\" + e.latLng.lng()+\",50km\";\n      var searchLink = 'http://search.twitter.com/search.json?q='+ searchKeyWord+ '&geocode=' + geocode +\"&result_type=recent&rpp=1\";\n```", "```js\n$.getJSON(searchLink, function(data) {\n        showTweet(data.results[0],e.latLng);\n    });\n```", "```js\nif(!obj) obj = {text:'No tweet found in this area for this topic'};\n```", "```js\nvar marker = new google.maps.Marker({\n            map: map,\n            position: latLng,\n            title:obj.text    });\n```", "```js\n    function showTweet(obj,latLng){\n          if(!obj) obj = {text:'No tweet found in this area for this topic'};\n          console.log(obj);\t\n\n     var marker = new TwitterMarker({\n     map: map,\n     position: latLng,\n     tweet: obj,\n     title:obj.text    }); \n\n      }\n    ```", "```js\n    function TwitterMarker(opt){\n      var strTweet = this.buildTwitterHTML(opt.tweet);\n      this.infoWindow = new google.maps.InfoWindow({\n          maxWidth:300,\n          content:strTweet\n      });\n\n      this.setValues(opt);\n      this.infoWindow.open(this.map,this);\n      google.maps.event.addListener(this, 'click', this.onMarkerClick);\n    }\n    ```", "```js\n    TwitterMarker.prototype = new google.maps.Marker();\n    ```", "```js\n    TwitterMarker.prototype.onMarkerClick=function(evt){\n      this.isOpen=!this.isOpen;\n      if(this.isOpen)\n        this.infoWindow.close();\n      else\n        this.infoWindow.open(this.map,this);\n\n    }\n    ```", "```js\n    TwitterMarker.prototype.buildTwitterHTML = function(twt){\n      var str;\n      if(twt.from_user_name){\n       str =\t  \"<span><img style='float: left' src='\"+twt.profile_image_url+\"' />\"+\n             \"<b>\" +twt.from_user_name + \"</b><br/><a href ='http://twitter.com/\"\n            + twt.from_user + \"'>@\"+twt.from_user+\"</a><br/> \"\n            + twt.location + \"</span>\"\n            + \"<p>\"+twt.text+\"</p>\";\n      }else{\n        str=\"The 50 Kilometer radius around this point did not message this value\";\n      }\n      return str;\n    }\n    ```", "```js\nTwitterMarker.prototype = new google.maps.Marker();\n```", "```js\n function TwitterMarker(opt){\n  var strTweet = this.buildTwitterHTML(opt.tweet)\n  this.infoWindow = new google.maps.InfoWindow({\n      maxWidth:300,\n      content:strTweet\n  });\n```", "```js\nTwitterMarker.prototype.onMarkerClick=function(evt){\n  this.isOpen=!this.isOpen;\n```", "```js\nthis.isOpen = is not this.isOpen\n```", "```js\n  if(this.isOpen)\n    this.infoWindow.close();\n  else\n    this.infoWindow.open(this.map,this);\n}\n```", "```js\nTwitterMarker.prototype.buildTwitterHTML = function(twt){\n  var str;\n  if(twt.from_user_name){\n   //build custom message\n   /*notice we are validating based on checking if the twitter has a property (any of the properties would work) */\n  }else{\n    //the error message\n    str=\"The 50 Kilometer radius around this point did not message this value\";\n  }\n  return str;\n}\n```", "```js\n    var searchLink = 'http://search.twitter.com/search.json?q='+ searchKeyWord+ '&geocode=' + geocode +\"&result_type=recent&rpp=100\";\n\n    ```", "```js\n      google.maps.event.addListener(map, 'click', function(e) {\n        //console.log(e.latLng);\n          var searchKeyWord = 'html5';\n          var geocode=e.latLng.lat() + \",\" + e.latLng.lng()+\",50km\";\n          var searchLink = 'http://search.twitter.com/search.json?q='+ searchKeyWord+ '&geocode=' + geocode +\"&result_type=recent&rpp=100\";\n\n          $.getJSON(searchLink, function(data) {\n     showTweet(data.results,e.latLng);\n        });\n\n        });\n\n      function showTweet(a,latLng){\n          if(!a) a = [{text:'No tweet found in this area for this topic'}];\n          //console.log(obj);\t\n\n          var marker = new TwitterMarker({\n                map: map,\n                position: latLng,\n                tweet: a,\n                title:a[0].text    });\t\t\t\n\n      }\n    }\n    ```", "```js\n     function TwitterMarker(opt){\n     this.count = opt.tweet.length;\n     this.crnt = 0;\n     this.id = TwitterMarker.aMarkers.push(this);\n     this.aTweets = opt.tweet;\n      var strTweet = this.buildTwitterHTML(opt.tweet[0])\n      this.infoWindow = new google.maps.InfoWindow({\n          maxWidth:300,\n          content:strTweet\n      });\n\n      this.setValues(opt);\n      this.infoWindow.open(this.map,this);\n      google.maps.event.addListener(this, 'click', this.onMarkerClick);\n    }\n    ```", "```js\n    TwitterMarker.prototype = new google.maps.Marker();\n    TwitterMarker.aMarkers= [];\n\n    ```", "```js\n    TwitterMarker.prototype.buildTwitterHTML = function(twt){\n      var str;\n      if(twt.from_user_name){\n       str =\t  \"<span><img style='float: left' src='\"+twt.profile_image_url+\"' />\"+\n             \"<b>\" +twt.from_user_name + \"</b><br/><a href ='http://twitter.com/\"\n            + twt.from_user + \"'>@\"+twt.from_user+\"</a><br/> \"\n            + twt.location + \"</span>\"\n            + \"<p>\"+twt.text+\"</p>\";\n\n     if(this.count>1){\n     str+=\"<span style='absolute; bottom: 0;\n     right: 0px; width:80px'>\";\n     if(this.crnt!=0) str+=\"<a href='javascript:TwitterMarker.aMarkers[\"+(this.id-1)+\"].prev();'>&lt;</a> \";\n     str+= (this.crnt+1) + \" of \" + this.count;\n     if(this.crnt<(this.count-1)) str+= \"<a href='javascript:TwitterMarker.aMarkers[\"+(this.id-1)+\"].next();'>&gt;</a> \";\n     str+= \"</span>\" \n     }\n      }else{\n        str=\"The 50 Kilometer radius around this point did not message this value\";\n      }\n      return str;\n    }\n    ```", "```js\n    TwitterMarker.prototype.next =function(){\n      this.infoWindow.close();\n      this.infoWindow.content = this.buildTwitterHTML(this.aTweets[++this.crnt]);\n      this.infoWindow.open(this.map,this);\n      return false;\t\n    }\n\n    TwitterMarker.prototype.prev =function(){\n      this.infoWindow.close();\n      this.infoWindow.content = this.buildTwitterHTML(this.aTweets[--this.crnt]);\n      this.infoWindow.open(this.map,this);\n      return false;\t\n    }\n    ```", "```js\nTwitterMarker.aMarkers= [];\n```", "```js\nthis.id = TwitterMarker.aMarkers.push(this);\n```", "```js\nif(this.count>1){\n\n}\n```", "```js\nif(this.crnt!=0) str+=\"<a href='javascript:TwitterMarker.aMarkers[\"+(this.id-1)+\"].prev();'>&lt;</a> \";\n```", "```js\nTwitterMarker.aMarkers[\"+(this.id-1)+\"].prev();\n```", "```js\nTwitterMarker.aMarkers[0].prev();\n```", "```js\nif(this.crnt<(this.count-1)) str+= \"<a href='javascript:TwitterMarker.aMarkers[\"+(this.id-1)+\"].next();'>&gt;</a> \";\n\n```", "```js\nTwitterMarker.prototype.next =function(){\n  this.infoWindow.close();\n  this.infoWindow.content = this.buildTwitterHTML(this.aTweets[++this.crnt]);\n  this.infoWindow.open(this.map,this);\n  return false;\t\n}\n\nTwitterMarker.prototype.prev =function(){\n  this.infoWindow.close();\n this.infoWindow.content = this.buildTwitterHTML(this.aTweets[--this.crnt]);\n  this.infoWindow.open(this.map,this);\n  return false;\t\n}\n```", "```js\n    function showTweet(a,latLng){\n          if(!a) a = [{text:'No tweet found in this area for this topic'}];\n          //console.log(obj);\t\n\n          var marker = new TwitterMarker({\n                map: map,\n                position: latLng,\n                tweet: a,\n                title:a[0].text,\n                icon:\"img/bird.png\"    });\t\t\t\n\n      }\n    ```", "```js\n    function TwitterMarker(opt){\n      this.count = opt.tweet.length;\n     this.mc = new MarkerCounter(opt);\n      this.crnt = 0;\n    ...\n    ```", "```js\n    function MarkerCounter(opt) {\n        this.radius = 15;\n        this.opacity = (opt.tweet.length) /100;\n        this.opt = opt;\n        this.setMap(opt.map);\n      }\n    ```", "```js\n    MarkerCounter.prototype = new google.maps.OverlayView();\n    ```", "```js\n    MarkerCounter.prototype.onAdd = function() {\n      var div = document.createElement('div');\n        div.style.border = \"none\";\n        div.style.borderWidth = \"0px\";\n        div.style.position = \"absolute\";\n\n      this.canvas = document.createElement(\"CANVAS\");\n        this.canvas.width = this.radius*2;\n      this.canvas.height = this.radius*2;\n\n        this.context = this.canvas.getContext(\"2d\");\n      div.appendChild(this.canvas);\n      this.div_ = div;\n\n        var panes = this.getPanes();\n      \tpanes.overlayLayer.appendChild(div);\n\n     }\n    ```", "```js\n     MarkerCounter.prototype.draw = function() {\n        var radius = this.radius;\n        var context = this.context;\n      context.clearRect(0,0,radius*2,radius*2);\n\n      context.fillStyle = \"rgba(73,154,219,\"+this.opacity+\")\";\n      context.beginPath();\n        context.arc(radius,radius, radius, 0, Math.PI*2, true);\n      context.closePath();\n      context.fill();\n      var projection = this.getProjection();\n      var point = projection.fromLatLngToDivPixel(this.opt.position);\n\n        this.div_.style.left = (point.x - radius) + 'px';\n        this.div_.style.top = (point.y - radius) + 'px';\n\n      };\n    ```", "```js\nvar marker = new TwitterMarker({\n            map: map,\n            position: latLng,\n            tweet: a,\n            title:a[0].text,\n icon:\"img/bird.png\"    });\n\n```", "```js\nthis.setValues(opt);\n```", "```js\nfunction MarkerCounter(opt) {\n    this.radius = 15;\n    this.opacity = (opt.tweet.length) /100;\n    this.opt = opt;\n this.setMap(opt.map);\n  }\n\n  MarkerCounter.prototype = new google.maps.OverlayView();\n```", "```js\nMarkerCounter.prototype.onAdd = function() {\n  var div = document.createElement('div');\n    div.style.border = \"none\";\n    div.style.borderWidth = \"0px\";\n    div.style.position = \"absolute\";\n\n  this.canvas = document.createElement(\"CANVAS\");\n    this.canvas.width = this.radius*2;\n  this.canvas.height = this.radius*2;\n\n    this.context = this.canvas.getContext(\"2d\");\n  div.appendChild(this.canvas);\n  this.div_ = div;\n    var panes = this.getPanes();\n    panes.overlayLayer.appendChild(div);\n  }\n```", "```js\nvar projection = this.getProjection();\n\tvar point = projection.fromLatLngToDivPixel(this.opt.position);\n\n    this.div_.style.left = (point.x - radius) + 'px';\n    this.div_.style.top = (point.y - radius) + 'px';\n```", "```js\nfunction showTweet(a,latLng){\n      var marker = new TwitterMarker({\n            map: map,\n            position: latLng,\n            tweet: a,\n title:a.length? a[0].text : 'No tweet found in this area for this topic' ,\n            icon:\"img/bird.png\"    });\t\t\t\n\n  }\n```", "```js\ncondition?true outcome:false outcome;\n```", "```js\nfunction TwitterMarker(opt){\n if(!opt.tweet || !opt.tweet.length){\n opt.icon = \"img/x.png\"; \n }else{\n\n    this.count = opt.tweet.length;\n    this.mc = new MarkerCounter(opt);\n    this.crnt = 0;\n    this.id = TwitterMarker.aMarkers.push(this);\n    this.aTweets = opt.tweet;\n    var strTweet = this.buildTwitterHTML(opt.tweet[0])\n    this.infoWindow = new google.maps.InfoWindow({\n        maxWidth:300,\n        content:strTweet\n    });\n\n    this.infoWindow.open(this.map,this);\n    google.maps.event.addListener(this, 'click', this.onMarkerClick);\n\n }\n this.setValues(opt);\n}\n```", "```js\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Google Maps Markers and Events</title>\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\" />\n        <link href='http://fonts.googleapis.com/css?family=Yellowtail' rel='stylesheet' type='text/css'>\n        <style>\n          html { height: 100% }\n          body { height: 100%; margin: 0; padding: 0 }\n          #map { height: 100%; width:100%; position:absolute; top:0px; left:0px }\n\n          .overlay {\n            background: #000000 scroll;\n            height: 100%;\n            left: 0;\n            opacity: 0;\n            position: absolute;\n            top: 0;\n            width: 100%;\n            z-index: 50;\n        }\n        .overlayBox {\n            left: -9999em;\n            opacity: 0;\n            position: absolute;\n            z-index: 51;\n            text-align:center;\n            font-size:32px;\n            color:#ffffff;\n            font-family: 'Yellowtail', cursive;\n        }\n        </style>\n      <script src=\"img/jquery.min.js\"></script>\n        <script src=\"img/js?key=AIzaSyBp8gVrtxUC2Ynjwqox7I0dxrqjtCYim-8&sensor=false\"></script>\n        <script src=\"img/jsapi\"></script>\n\n        <script src=\"img/10.05.travel.js\"></script>\n      </head>\n      <body>\n        <div id=\"map\"></div>\n      </body>\n    </html>\n    ```", "```js\n     google.load('visualization', '1.0');\n    google.setOnLoadCallback(init);\n    ```", "```js\n    function init() {\n      var BASE_CENTER = new google.maps.LatLng(48.516817734860105,13.005318750000015 );\n\n      map = new google.maps.Map(document.getElementById(\"map\"),{\n        center: BASE_CENTER,\n        mapTypeId: google.maps.MapTypeId.SATELLITE,\n        disableDefaultUI: true,\n\n      });\n      var query = new google.visualization.Query(\n          'https://spreadsheets.google.com/tq?key=0Aldzs55s0XbDdERJVlYyWFJISFN3cjlqU1JnTGpOdHc');\n        query.send(onTripDataReady);\n\n    }\n    ```", "```js\n    function onTripDataReady(response){\n      var gmt = new GoogleMapTraveler(response.g.D,map);\t\n    }\n    ```", "```js\n    function GoogleMapTraveler(aData,map){\n      this.latLong; //will be used to store current location\n      this.zoomLevel; //to store current zoom level\n      this.currentIndex=0;\n      this.data = aData; //locations\n      this.map = map;\n\n      //this.setPosition(0,2);\n      this.animator = new Animator(30);\n\n      this.pathPoints = [this.getPosition(0,1)]; //start with two points at same place.\n\n      var lineSymbol = {\n            path: 'M 0,-1 0,1',\n            strokeOpacity: .6,\n            scale: 2\n          };\n\n        this.lines = new google.maps.Polyline({\n            path: this.pathPoints,\n            strokeOpacity: 0,\n            strokeColor: \"#FF0000\",\n            icons: [{\n              icon: lineSymbol,\n              offset: '0',\n              repeat: '20px'\n            }],\n            map: map\n          });\n\n      this.traveler = new Traveler(this.map,this.getPosition(0,1));\n      this.nextPathPoint(1);\n\n    }\n    ```", "```js\n      GoogleMapTraveler.prototype.getPosition = function (index,amount){\n      var lat=0;\n      var lng=0;\n      for(var i=0; i<amount; i++){\n        lat+= parseFloat(this.data[index+i].c[0].v);\n        lng+= parseFloat(this.data[index+i].c[1].v);\n\n      }\n      var ll=new google.maps.LatLng(\n                lat/amount,\n                lng/amount);\n      return ll;\n    }\n    ```", "```js\n    GoogleMapTraveler.prototype.setPosition = function(index,amount){\n      this.currentFocus = index;\n\n      var lat=0;\n      var lng=0;\n      for(var i=0; i<amount; i++){\n        lat+= parseFloat(this.data[index+i].c[0].v);\n        lng+= parseFloat(this.data[index+i].c[1].v);\n\n      }\n      var ll=new google.maps.LatLng(\n                lat/amount,\n                lng/amount);\n\n      if(this.data[index].c[2])this.map.setZoom(this.data[index].c[2].v);\n      this.map.setCenter(ll);\n\n    }\n    ```", "```js\n    GoogleMapTraveler.prototype.nextPathPoint = function(index){\n      this.setPosition(index-1,2);\n      this.pathPoints.push(this.getPosition(index-1,1)); //add last point again\n      var currentPoint = this.pathPoints[this.pathPoints.length-1];\n      var point = this.getPosition(index,1);\n\n      //console.log(index,currentPoint,point,this.getPosition(index,1));\n      this.animator.add(currentPoint,\"Za\",currentPoint.Za,point.Za,1);\n      this.animator.add(currentPoint,\"Ya\",currentPoint.Ya,point.Ya,1);\n      this.animator.add(this.traveler.ll,\"Za\",this.traveler.ll.Za,point.Za,2,0.75);\n      this.animator.add(this.traveler.ll,\"Ya\",this.traveler.ll.Ya,point.Ya,2,0.75);\n\n     this.animator.onUpdate = this.bind(this,this.renderLine);\n     this.animator.onComplete = this.bind(this,this.showOverlayCopy);//show copy after getting to destination\n    }\n    ```", "```js\n    GoogleMapTraveler.prototype.renderLine = function(){\n      this.lines.setPath(this.pathPoints);\n      if(this.traveler.isReady)this.traveler.refreshPosition();\n    }\n    ```", "```js\n    GoogleMapTraveler.prototype.bind = function(scope, fun){\n       return function () {\n            fun.apply(scope, arguments);\n        };\n    }\n    ```", "```js\n    function Traveler(map,ll) {\n      this.ll = ll;\n        this.radius = 15;\n        this.innerRadius = 10;\n        this.glowDirection = -1;\n        this.setMap(map);\n        this.isReady = false;\n\n      }\n\n      Traveler.prototype = new google.maps.OverlayView();\n\n      Traveler.prototype.onAdd = function() {\n      this.div = document.createElement(\"DIV\");\n      this.canvasBG = document.createElement(\"CANVAS\");\n        this.canvasBG.width = this.radius*2;\n      this.canvasBG.height = this.radius*2;\n      this.canvasFG = document.createElement(\"CANVAS\");\n        this.canvasFG.width = this.radius*2;\n      this.canvasFG.height = this.radius*2;\n\n      this.div.style.border = \"none\";\n      this.div.style.borderWidth = \"0px\";\n      this.div.style.position = \"absolute\";\n\n      this.canvasBG.style.position = \"absolute\";\n      this.canvasFG.style.position = \"absolute\";\n\n      this.div.appendChild(this.canvasBG);\n      this.div.appendChild(this.canvasFG);\n\n        this.contextBG = this.canvasBG.getContext(\"2d\");\n        this.contextFG = this.canvasFG.getContext(\"2d\");\n\n      var panes = this.getPanes();\n        panes.overlayLayer.appendChild(this.div);\n\n      }\n\n      Traveler.prototype.draw = function() {\n        var radius = this.radius;\n        var context = this.contextBG;\n\n      context.fillStyle = \"rgba(73,154,219,.4)\";\n      context.beginPath();\n        context.arc(radius,radius, radius, 0, Math.PI*2, true);\n      context.closePath();\n      context.fill();\n\n      context = this.contextFG;\n      context.fillStyle = \"rgb(73,154,219)\";\n      context.beginPath();\n        context.arc(radius,radius, this.innerRadius, 0, Math.PI*2, true);\n      context.closePath();\n      context.fill();\n\n        var projection = this.getProjection();\n\n        this.updatePosition(this.ll);\n        this.canvasBG.style.opacity = 1;\n        this.glowUpdate(this);\n        setInterval(this.glowUpdate,100,this);\n        this.isReady = true;\n\n      };\n\n      Traveler.prototype.refreshPosition=function(){\n        this.updatePosition(this.ll);\t\n      }\n\n      Traveler.prototype.updatePosition=function(latlng){\n        var radius = this.radius;\n        var projection = this.getProjection();\n      var point = projection.fromLatLngToDivPixel(latlng);\n        this.div.style.left = (point.x - radius) + 'px';\n        this.div.style.top = (point.y - radius) + 'px';\t\n      }\n\n      Traveler.prototype.glowUpdate=function(scope){ //endless loop\n        scope.canvasBG.style.opacity = parseFloat(scope.canvasBG.style.opacity) + scope.glowDirection*.04;\n        if(scope.glowDirection==1 && scope.canvasBG.style.opacity>=1) scope.glowDirection=-1;\n        if(scope.glowDirection==-1 && scope.canvasBG.style.opacity<=0.1) scope.glowDirection=1;\n      }\n    ```", "```js\n    function Animator(refreshRate){\n     this.onUpdate = function(){};\n     this.onComplete = function(){};\n      this.animQue = [];\n      this.refreshRate = refreshRate || 35; //if nothing set 35 FPS\n      this.interval = 0;\n    }\n\n    Animator.prototype.add = function(obj,property, from,to,time,delay){\n      obj[property] = from;\n\n      this.animQue.push({obj:obj,\n                p:property,\n                crt:from,\n                to:to,\n                stepSize: (to-from)/(time*1000/this.refreshRate),\n                delay:delay*1000 || 0});\n\n      if(!this.interval){ //only start interval if not running already\n        this.interval = setInterval(this._animate,this.refreshRate,this);\t\n      }\n\n    }\n\n    Animator.prototype._animate = function(scope){\n      var obj;\n      var data;\n\n      for(var i=0; i<scope.animQue.length; i++){\n          data = scope.animQue[i];\n\n          if(data.delay>0){\n            data.delay-=scope.refreshRate;\n          }else{\n            obj = data.obj;\n     if((data.stepSize>0 && data.crt<data.to) ||\n     (data.stepSize<0 && data.crt>data.to)){\n\n              data.crt = data.crt + data.stepSize;\n              obj[data.p] = data.crt;\n            }else{\n              obj[data.p] = data.to;\t\n              scope.animQue.splice(i,1);\n              --i;\n            }\n          }\n\n      }\n     scope.onUpdate();\n      if(\tscope.animQue.length==0){\n        clearInterval(scope.interval);\n        scope.interval = 0; //reset interval variable\n     scope.onComplete();\n      }\n    }\n\n    ```", "```js\n<link href='http://fonts.googleapis.com/css?family=Yellowtail' rel='stylesheet' type='text/css'>\n```", "```js\n.overlayBox {\n       ...\n        font-family: 'Yellowtail', cursive;\n    }\n```", "```js\nvar query = new google.visualization.Query(\n      'https://spreadsheets.google.com/tq?key=0Aldzs55s0XbDdERJVlYyWFJISFN3cjlqU1JnTGpOdHc');\n    query.send(onTripDataReady);\n```", "```js\nthis.nextPathPoint(1);\n```", "```js\nthis.setPosition(index-1,2);\n```", "```js\nthis.pathPoints.push(this.getPosition(index-1,1)); //add last point again\n```", "```js\nvar currentPoint = this.pathPoints[this.pathPoints.length-1];\nvar point = this.getPosition(index,1);\n```", "```js\nthis.animator.add(currentPoint,\"Za\",currentPoint.Za,point.Za,1);\nthis.animator.add(currentPoint,\"Ya\",currentPoint.Ya,point.Ya,1);\nthis.animator.add(this.traveler.ll,\"Za\",this.traveler.ll.Za,point.Za,2,0.75);\nthis.animator.add(this.traveler.ll,\"Ya\",this.traveler.ll.Ya,point.Ya,2,0.75);\n```", "```js\nthis.animator.onUpdate = this.bind(this,this.renderLine);\n  this.animator.onComplete = this.bind(this,this.showOverlayCopy);//show copy after getting to destination\n```", "```js\nthis.lines.setPath(this.pathPoints);\nif(this.traveler.isReady)this.traveler.refreshPosition();\n```", "```js\nGoogleMapTraveler.prototype.hideOverlayCopy = function(){\n  //update index now that we are done with initial element\n  this.currentIndex++;\n  ...\n\n  //as long as the slide is not over go to the next.\n  if(this.data.length>this.currentIndex+1)this.nextPathPoint(this.currentIndex+1); \n}\n```", "```js\n Traveler.prototype.updatePosition=function(latlng){\n    var radius = this.radius;\n    var projection = this.getProjection();\n  var point = projection.fromLatLngToDivPixel(latlng);\n    this.div.style.left = (point.x - radius) + 'px';\n    this.div.style.top = (point.y - radius) + 'px';\t\n  }\n```", "```js\nTraveler.prototype.refreshPosition=function(){\n    this.updatePosition(this.ll);\t\n  }\n```", "```js\nfunction Animator(refreshRate){\n  this.onUpdate = function(){};\n  this.onComplete = function(){};\n```"]