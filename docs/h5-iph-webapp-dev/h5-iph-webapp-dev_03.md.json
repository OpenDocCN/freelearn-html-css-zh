["```html\nAddType audio/mpeg mp3\nAddType audio/mp4 m4a\nAddType audio/ogg ogg\nAddType audio/ogg oga\nAddType audio/webm webma\nAddType audio/wav wav\n```", "```html\n<audio controls>\n    <source src=\"img/mymusic.mp3\" type='audio/mpeg; codecs=\"mp3\"'/>\n    <p>Audio is not supported in your browser.</p>\n</audio>\n```", "```html\nvar App = window.App || {};\nApp.MediaElement = (function(window, document, $){\n  'use strict';\n\n  var _defaults = {\n'callbacks': {\n...\n}\n  };\n\n  function MediaElement(options) { ... }\n  function attachEvents() { ... }\n\nMediaElement.prototype.onCanPlay = function(e, ele) { ... }\nMediaElement.prototype.onSeeking = function(e, ele) { ... }\nMediaElement.prototype.onSeeked = function(e, ele) { ... }\nMediaElement.prototype.onEnded = function(e, ele) { ... }\nMediaElement.prototype.onPlay = function(e, ele) { ... }\nMediaElement.prototype.onPause = function(e, ele) { ... }\nMediaElement.prototype.onLoadedData = function(e, ele) { ... }\nMediaElement.prototype.onLoadedMetaData = function(e, ele) { ... }\nMediaElement.prototype.onTimeUpdate = function(e, ele) { ... }\nMediaElement.prototype.getDefaults = function() { ... ;\nMediaElement.prototype.toString = function() { ... };\nMediaElement.prototype.play = function() { ... }\nMediaElement.prototype.pause = function() { ... }\nMediaElement.prototype.stop = function() { ... }\nMediaElement.prototype.mute = function() { ... };\nMediaElement.prototype.unmute = function() { ... };\n\n  return MediaElement;\n\n}(window, document, Zepto)); \n```", "```html\nnew App.MediaElement({\n    'element': someElement,\n    'callbacks': {\n        'onCanPlay': function(){ console.log('onCanPlay'); },\n        'onSeeking': function(){ console.log('OVERRIDE :: onSeeking'); },\n        'onSeeked': function(){ console.log('OVERRIDE :: onSeeked'); },\n        'onEnded': function(){ console.log('OVERRIDE :: onEnded'); },\n        'onPlay': function(){ console.log('OVERRIDE :: onPlay'); },\n        'onPause': function(){ console.log('OVERRIDE :: onPause'); },\n        'onLoadedData': function(){ console.log('OVERRIDE :: onLoadedData'); },\n        'onLoadedMetaData': function(){ console.log('OVERRIDE :: onLoadedMetaData'); },\n        'onTimeUpdate': function(){ console.log('OVERRIDE :: onTimeUpdate'); }\n    }\n});\n```", "```html\nvar App = window.App || {};\n\nApp.Audio = (function(window, document, $){\n  'use strict';\n\n  var _defaults = {\n    'element': 'audio',\n    'name': 'Audio'\n  };\n\n  function Audio(options) {\n    this.options = $.extend({}, _defaults, options);\n\n        this.element = this.options.element;\n        this.$element = $(this.element);\n\n        attachEvents.call(this);\n  }\n\n    function attachEvents() { }\n\n  Audio.prototype.getDefaults = function() { ... };\n\n  Audio.prototype.toString = function() { ... };\n\n  return Audio;\n\n}(window, document, Zepto));\n```", "```html\nthis.audioElement = document.getElementsByTagName('audio')[0];\nthis.$audioElement = $(this.audioElement);\n```", "```html\nthis.mediaElement = new App.MediaElement({\n    'element': this.audioElement,\n    'callbacks': {\n        'onCanPlay': function(){ ... },\n        'onSeeking': function(){ ... },\n        'onSeeked': function(){ ... },\n        'onEnded': function(){ ... },\n        'onPlay': function(){ ... },\n        'onPause': function(){ ... },\n        'onLoadedData': function(){ ... },\n        'onLoadedMetaData': function(){ ... },\n        'onTimeUpdate': function(){ ... }\n    }\n});\n```", "```html\n<div class=\"audio-container\">\n    <audio controls preload>\n        <source src=\"img/sample.mp3\" type='audio/mpeg; codecs=\"mp3\"'/>\n        <p>Audio is not supported in your browser.</p>\n    </audio>\n</div>\n```", "```html\n<div class=\"audio-container\">\n    <audio controls preload>\n        <source src=\"img/nintendo.mp3\" type='audio/mpeg; codecs=\"mp3\"'/>\n        <p>Audio is not supported in your browser.</p>\n    </audio>\n    <select>\n        <option value=\"sample1.mp3\" selected>Sample1</option>\n        <option value=\"sample2.mp3\">Sample2</option>\n        <option value=\"sample3.mp3\">Sample3</option>\n    </select>\n</div>\n```", "```html\nvar that = this;\nthis.$element\n    on('change', 'select', function(e) { onSelectChange.call(that, e); });\n```", "```html\nfunction onSelectChange(e) {\n    var $tempAudioElement;\n    // Stop the song from playing\n    this.mediaElement.stop();\n    // Store the element temporarily\n    $tempAudioElement = this.$audioElement.clone();\n    // Now remove the element\n    this.$audioElement.remove();\n    // Remove from memory\n    //-----\n    delete this.mediaElement;\n    delete this.audioElement;\n    delete this.$audioElement;\n    //-----\n\n    // Change the temporary audio source\n    $tempAudioElement.\n        find('source').\n            attr('src', '../assets/' + e.target.selectedOptions[0].value);\n\n    // Now attach it to the DOM\n    this.$element.prepend($tempAudioElement);\n    // Reset the audioElement\n    this.audioElement = document.getElementsByTagName('audio')[0];\n    this.$audioElement = $(this.audioElement);\n    // Reset the mediaElement\n    this.mediaElement = new App.MediaElement({\n        'element': this.audioElement,\n        'callbacks': {\n            'onCanPlay': function(){ ... },\n            'onSeeking': function(){ ... },\n            'onSeeked': function(){ ... },\n            'onEnded': function(){ ... },\n            'onPlay': function(){ ... },\n            'onPause': function(){ ... },\n            'onLoadedData': function(){ ... },\n            'onLoadedMetaData': function(){ ... },\n            'onTimeUpdate': function(){ ... }\n        }\n    });\n}\n```", "```html\nfunction setAudioElement() {\n    return this;\n}\n```", "```html\nthis.audioElement = document.getElementsByTagName('audio')[0];\nthis.$audioElement = $(this.audioElement);\n\nthis.mediaElement = new App.MediaElement({\n        'element': this.audioElement,\n        'callbacks': {\n            'onCanPlay': function(){ ... },\n            'onSeeking': function(){ ... },\n            'onSeeked': function(){ ... },\n            'onEnded': function(){ ... },\n            'onPlay': function(){ ... },\n            'onPause': function(){ ... },\n            'onLoadedData': function(){ ... },\n            'onLoadedMetaData': function(){ ... },\n            'onTimeUpdate': function(){ ... }\n        }\n});\n```", "```html\nfunction Audio(options) {\n    // Customizes the option\n    this.options = $.extend({}, _defaults, options);\n    //Cache the main element\n    this.element = this.options.element;\n    this.$element = $(this.element);\n    // Sets the audio element objects\n    setAudioElement.call(this);\n    attachEvents.call(this);\n}\n```", "```html\nfunction onSelectChange(e) {\n    ....\n    // Now attach it to the DOM\n    this.$element.prepend($tempAudioElement);\n\n   setAudioElement.call(this);\n}\n```", "```html\n<script>\n    new App.Audio({\n        'element': document.querySelector('.audio-container')\n    });\n</script>\n```", "```html\n<audio preload>\n    <source src=\"img/sample1.mp3\" type='audio/mpeg; codecs=\"mp3\"'/>\n    <p>Audio is not supported in your browser.</p>\n</audio>\n```", "```html\n<div class=\"media-controls\">\n    <div class=\"mc-state\">\n        <button class=\"mc-play mc-state-play\">Play</button>\n        <button class=\"mc-pause mc-state-pause\">Pause</button>\n    </div>\n</div>\n```", "```html\nthis.$element.\n    find('.media-controls').\n        on('click', '.mc-play', function() { that.mediaElement.play(); }).\n        on('click', '.mc-pause', function(){ that.mediaElement.pause(); });\n```", "```html\n<div class=\"mc-state\">\n    <button class=\"mc-play mc-state-play\">Play</button>\n    <button class=\"mc-pause mc-state-pause\">Pause</button>\n    <button class=\"mc-sequential mc-sequential-off mc-state-sequential\">Sequential Off</button>\n</div>\n```", "```html\nvar _defaults = {\n    'element': 'audio',\n    'name': 'Audio',\n    'sequential': false\n};\n```", "```html\nfunction handleOnAudioEnded(Audio) {\n    if(Audio.options.sequential) {\n        var $select = Audio.$element.find('select'), $next;\n\n        // Go to next in playlist\n        $next = $select.\n            find('option[selected]').\n                removeAttr('selected').\n                    next().\n                        attr('selected', 'selected');\n\n        // Change the Selected Index\n        $select[0].selectedIndex = $next.index();\n\n        // Must be made on the audio element itself\n        Audio.audioElement.src = '../assets/' + $select.val();\n        Audio.audioElement.load();\n        Audio.audioElement.play();\n    }\n}\n```", "```html\nthis.mediaElement = new App.MediaElement({\n    'element': this.audioElement,\n    'callbacks': {\n        ...\n        'onEnded': function(){ handleOnAudioEnded(that); },\n        ...\n    }\n});\n```", "```html\nthis.$element.\n    find('.media-controls').\n        on('click', '.mc-play', function() { that.mediaElement.play(); }).\n        on('click', '.mc-pause', function() { that.mediaElement.pause(); }).\n        on('click', '.mc-sequential', function(e) { handleSequentialClick(e, that); });\n```", "```html\nfunction handleSequentialClick(e, Audio) {\n    var $this = $(e.target);\n\n    if(!Audio.options.sequential) {\n        Audio.options.sequential = true;\n        $this.\n            removeClass('mc-sequential-off').\n            addClass('mc-sequential-on').\n            text('Sequential On');\n    } else {\n        Audio.options.sequential = false;\n        $this.\n            removeClass('mc-sequential-on').\n            addClass('mc-sequential-off').\n            text('Sequential Off');\n    }\n}\n```"]