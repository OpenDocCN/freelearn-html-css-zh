- en: Chapter 3. Interactive Media with Mobile Events
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章。使用移动事件的交互媒体
- en: 'In this chapter, we will cover:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Moving an element with touch events
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用触摸事件移动元素
- en: Detecting and handling orientation event
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测和处理方向事件
- en: Rotating an HTML element with gesture events
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用手势事件旋转HTML元素
- en: Making a carousel with swipe events
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用滑动事件制作轮播图
- en: Manipulating image zoom with gesture events
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用手势事件操作图像缩放
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: One of the biggest differences between mobile and desktop is the way in which
    we interact with the screen. On a desktop screen, we use a mouse to move and click
    events to control the interaction. On a mobile screen, the interaction comes from
    touch and gesture events. In this chapter, we will see some of the events that
    are unique to touch screens (for example, two finger events) and how you can leverage
    these features to build something unique for mobile.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 移动和桌面之间最大的区别之一是我们与屏幕交互的方式。在桌面屏幕上，我们使用鼠标移动和点击事件来控制交互。在移动屏幕上，交互来自触摸和手势事件。在本章中，我们将看到一些触摸屏独有的事件（例如，双指事件），以及您如何利用这些功能来为移动构建独特的东西。
- en: Moving an element with touch events
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用触摸事件移动元素
- en: 'Target device: cross-browser'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 目标设备：跨浏览器
- en: On a mobile screen, we interact with elements using touch events. Because of
    that, we can move an HTML element on the screen with our fingers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动屏幕上，我们使用触摸事件与元素进行交互。因此，我们可以用手指在屏幕上移动HTML元素。
- en: Getting ready
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this example, we will be using jQuery. First, let's create a new HTML file,
    and name it `ch03r01.html`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将使用jQuery。首先，让我们创建一个新的HTML文件，并将其命名为`ch03r01.html`。
- en: How to do it...
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In your HTML document, use the following code:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的HTML文档中，使用以下代码：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now let's see how it renders in Opera:![How to do it...](img/1963_03_08.jpg)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在让我们看看它在Opera中的渲染：![如何做...](img/1963_03_08.jpg)
- en: How it works...
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: First, we register the square `div` with a `touchmove` event.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们注册一个带有`touchmove`事件的正方形`div`。
- en: You can detect the touch position relative to the page which is `touch.pageX`
    and `touch.pageY` in our example. We use the finger position minus half the width
    and height of the square `div` element, so it feels like we are moving with the
    `div` center as the registration point.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以检测相对于页面的触摸位置，即在我们的例子中是`touch.pageX`和`touch.pageY`。我们使用手指位置减去正方形`div`元素宽度和高度的一半，这样就感觉像我们是以`div`中心作为注册点移动。
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We apply the x and y values to the square element using CSS position. This is
    the 'moving' action.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用CSS位置将x和y值应用于正方形元素。这就是'移动'动作。
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There's more...
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'You may have realized that, at the top of this example, there is one line as
    follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经意识到，在这个例子的顶部，有一行如下：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now you might be wondering what it does. Mobile Safari does not allow the `e.touches`
    and `e.changedTouches` properties on event objects to be copied to another object.
    You can get around this issue by using `e.originalEvent`. You could read more
    about it here:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可能想知道它是做什么的。移动Safari不允许将`e.touches`和`e.changedTouches`属性复制到另一个对象上的事件对象。您可以通过使用`e.originalEvent`来解决这个问题。您可以在这里阅读更多关于它的信息：
- en: '[http://www.the-xavi.com/articles/trouble-with-touch-events-jquery](http://www.the-xavi.com/articles/trouble-with-touch-events-jquery).'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.the-xavi.com/articles/trouble-with-touch-events-jquery](http://www.the-xavi.com/articles/trouble-with-touch-events-jquery)。'
- en: jQuery mobile events
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: jQuery移动事件
- en: 'jQuery mobile is a set of components. If you want to dig into all the mobile-related
    events, you can find them at:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery移动是一组组件。如果您想深入了解所有与移动相关的事件，您可以在这里找到它们：
- en: '[https://github.com/shichuan/jquery-mobile/blob/master/js/jquery.mobile.event.js](http://github.com/shichuan/jquery-mobile/blob/master/js/jquery.mobile.event.js).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/shichuan/jquery-mobile/blob/master/js/jquery.mobile.event.js](http://github.com/shichuan/jquery-mobile/blob/master/js/jquery.mobile.event.js)。'
- en: Zepto
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Zepto
- en: 'Zepto is a more lightweight alternative to jQuery that you could consider using
    if your main target is WebKit-based browsers. You can find out more about it at:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Zepto是一个比jQuery更轻量级的替代品，如果您的主要目标是基于WebKit的浏览器，您可以考虑使用它。您可以在这里了解更多信息：
- en: '[https://github.com/madrobby/zepto](http://github.com/madrobby/zepto).'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/madrobby/zepto](http://github.com/madrobby/zepto)。'
- en: Safari's guide on mobile event handling
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Safari关于移动事件处理的指南
- en: 'For the official reference, you could visit Safari''s online guide at:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 官方参考资料，请访问Safari的在线指南：
- en: '[http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html).'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html)。'
- en: See also
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Redrawing a canvas with orientation events*'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用方向事件重绘画布*'
- en: '*Rotating an HTML element with gesture events*'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用手势事件旋转HTML元素*'
- en: '*Making a carousel with swipe events*'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用滑动事件制作轮播图*'
- en: '*Manipulating image zoom with gesture events*'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用手势事件操作图像缩放*'
- en: Detecting and handling orientation event
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测和处理方向事件
- en: 'Target device: cross-browser'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 目标设备：跨浏览器
- en: On mobile browsers, if your site is built based on a fluid layout, it shouldn't
    be affected by orientation change. But for a highly interactive site, sometimes
    you may want to handle orientation change in a special way.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动浏览器上，如果您的网站是基于流体布局构建的，它不应受方向变化的影响。但对于一个高度互动的网站，有时您可能希望以特殊的方式处理方向变化。
- en: Getting ready
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create a new HTML file, and name it `ch03r02.html`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的HTML文件，并将其命名为`ch03r02.html`。
- en: How to do it...
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Now let's start creating the HTML and Script to detect and handle orientation
    event.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们开始创建HTML和脚本来检测和处理方向事件。
- en: 'Enter the following code:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下代码：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, render this code in your mobile browser and rotate the screen to view in
    both portrait and landscape mode. In portrait mode, the text output will be 'PORTAIT'.![How
    to do it...](img/1963_03_03.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在您的移动浏览器中渲染此代码，并旋转屏幕以在纵向和横向模式下查看。在纵向模式下，文本输出将是'PORTAIT'。![如何做...](img/1963_03_03.jpg)
- en: When we rotate the screen to landscape mode, the text will be 'LANDSCAPE'.![How
    to do it...](img/1963_03_04.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们将屏幕旋转到横向模式时，文本将显示为'LANDSCAPE'。![如何做...](img/1963_03_04.jpg)
- en: How it works...
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: By listening to `window.onorientationchange` event, we could get the `orientationchange`
    event, when it occurs; we get the `event.orientation` parsed to the function to
    output the result.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过监听`window.onorientationchange`事件，我们可以在发生时获取`orientationchange`事件；我们将`event.orientation`传递给函数以输出结果。
- en: There's more...
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: At times, you may want to lock the orientation of the screen if let's say when
    building a game. For a native application, this can be easy, but for a web app,
    this can be a bit difficult to achieve.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您可能希望锁定屏幕的方向，比如在构建游戏时。对于原生应用程序来说，这很容易，但对于Web应用程序来说，这可能有点难以实现。
- en: Let's create a one-page screen that locks to only landscape mode. Note that
    this is a proof-of-concept, and to create really sophisticated apps or game requires
    more calculation and handling.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个只能锁定在横向模式的单页面屏幕。请注意，这只是一个概念验证，要创建真正复杂的应用程序或游戏需要更多的计算和处理。
- en: Create a document and name it `ch03r02_b.html`, and enter the following code
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个文档，并将其命名为`ch03r02_b.html`，然后输入以下代码
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Now if you render the page in your browser, you will see the following screen.
    In portrait mode, it suggests to the user the game/application is designed to
    be viewed in landscape mode:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您在浏览器中呈现页面，您将看到以下屏幕。在纵向模式下，它建议用户游戏/应用程序是设计为横向模式查看的：
- en: '![There''s more...](img/1963_03_05.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/1963_03_05.jpg)'
- en: 'When you rotate the screen from portrait to landscape mode, it looks normal:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当您将屏幕从纵向旋转到横向时，它看起来很正常：
- en: '![There''s more...](img/1963_03_06.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![还有更多...](img/1963_03_06.jpg)'
- en: 'In this example, we used `transform:rotate` from CSS3 to rotate the screen
    to 90 degrees when viewed in portrait mode:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用CSS3的`transform:rotate`将屏幕旋转90度，以便在纵向模式下查看：
- en: '[PRE6]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The mode the user is in can be determined by `window.orientation`. There are
    four values: -90, 0, 90, 180\. The device is in landscape mode when the degree
    is -90 and 90\. And it''s in portrait mode when the degree is 0 and 180.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 用户所处的模式可以通过`window.orientation`确定。有四个值：-90、0、90、180。当度数为-90和90时，设备处于横向模式。当度数为0和180时，设备处于纵向模式。
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: With this, you can determine the orientation of the screen.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，您可以确定屏幕的方向。
- en: Safari's native support
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Safari的原生支持
- en: 'For the official reference, you could visit Safari''s online guide at:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 有关官方参考，请访问Safari的在线指南：
- en: '[http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html).'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html)。'
- en: Web versus native
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Web与原生
- en: Although mobile web is catching up, if you are developing a highly interactive
    application, always keep in mind that even the slowest native app still performs
    faster than an HTML app. If you are deciding to use HTML5 to build an app, you
    also have to keep all the hacks and browser inconsistencies in mind.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管移动Web正在迎头赶上，但如果您正在开发高度交互式的应用程序，请始终记住，即使是最慢的原生应用程序的性能也比HTML应用程序更快。如果您决定使用HTML5构建应用程序，还必须牢记所有的黑客和浏览器不一致性。
- en: See also
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Moving an element with touch events*'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用触摸事件移动元素*'
- en: '*Rotating an HTML element with gesture events*'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用手势事件旋转HTML元素*'
- en: '*Making a carousel with swipe events*'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用滑动事件创建旋转木马*'
- en: '*Zooming an image with gesture events*'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用手势事件缩放图像*'
- en: Rotating an HTML element with gesture events
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用手势事件旋转HTML元素
- en: 'Target device: iOS, Android, Symbian'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 目标设备：iOS，Android，Symbian
- en: On Mobile Safari, you can detect the degrees of rotation when people use two
    fingers to do a rotation on the screen. Because of that, we can use our fingers
    to rotate an element on the screen!
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动Safari上，当人们用两根手指在屏幕上进行旋转时，你可以检测旋转的角度。因此，我们可以使用手指在屏幕上旋转一个元素！
- en: Getting ready
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Let's create an HTML document and name it `ch03r03.html`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个HTML文档，并将其命名为`ch03r03.html`。
- en: How to do it...
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Add the following code to `ch03r03.html` and render it in your mobile browser:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码添加到`ch03r03.html`中，并在您的移动浏览器中呈现它：
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now use two fingers to rotate the box and you will see something like this:![How
    to do it...](img/1963_03_07.jpg)
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在用两根手指旋转框，你会看到类似这样的东西：![如何做...](img/1963_03_07.jpg)
- en: How it works...
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'In this example, we rotate the element when there is an `ongesturechange` event
    triggered. We get the rotation degree by using the following value:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，当触发`ongesturechange`事件时，我们旋转元素。我们通过以下值获取旋转角度：
- en: '[PRE9]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: There's more...
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You may have noticed that we also listen to `ongestureend` event, because if
    the user has previously rotated, this script will remember the last rotated angle
    and continue to rotate from there.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，我们还监听`ongestureend`事件，因为如果用户之前已经旋转过，此脚本将记住上次旋转的角度，并继续从那里旋转。
- en: Safari event handling
  id: totrans-94
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Safari事件处理
- en: 'For the official reference, you could visit Safari''s online guide at:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 有关官方参考，请访问Safari的在线指南：
- en: '[http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html).'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html](http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/HandlingEvents/HandlingEvents.html)。'
- en: CSS3 transforms
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CSS3转换
- en: 'In this example, we used CSS3''s transforms feature. You can find more information
    about WebKit and CSS transform at WebKit''s blog at:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用了CSS3的转换功能。您可以在WebKit的博客上找到有关WebKit和CSS转换的更多信息：
- en: '[http://www.webkit.org/blog/130/css-transforms/](http://www.webkit.org/blog/130/css-transforms/).'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.webkit.org/blog/130/css-transforms/](http://www.webkit.org/blog/130/css-transforms/).'
- en: Drawbacks of the scale bug fix
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缩放错误修复的缺点
- en: In this example, we used `maximum-scale=1.0` to prevent zooming when using a
    gesture event. This will cause some accessibility drawbacks, so use a rotate event
    only if you are building a highly interactive web application. Try to avoid it
    when building a mobile website.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用了`maximum-scale=1.0`来防止在使用手势事件时进行缩放。这会导致一些无法访问的缺点，因此只有在构建高度交互式的Web应用程序时才使用旋转事件。在构建移动网站时尽量避免使用它。
- en: See also
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Moving an element with touch events*'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用触摸事件移动元素*'
- en: '*Redrawing a canvas with orientation events*'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用方向事件重绘画布*'
- en: '*Rotating an HTML element with gesture events*'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用手势事件旋转HTML元素*'
- en: Zooming an image with gesture events
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用手势事件缩放图像
- en: Making a carousel with swipe events
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用滑动事件制作一个旋转木马
- en: One of the common features of mobile devices is swiping. When you browse photos
    in your photo gallery, you swipe left and right to navigate from one picture to
    another. On Android devices, you swipe down to unlock the phone. On a mobile browser,
    you can use swipe as well.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 移动设备的一个常见功能是滑动。当你在照片库中浏览照片时，你可以向左和向右滑动以从一张图片导航到另一张图片。在Android设备上，你可以向下滑动解锁手机。在移动浏览器上，你也可以使用滑动。
- en: Getting ready
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: First, let's create an HTML document and name it `ch03r04.html.`
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们创建一个HTML文档并命名为`ch03r04.html`。
- en: How to do it...
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Enter the following code:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下代码：
- en: '[PRE10]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Once you've entered the code in the page, swipe left and right of the viewing
    area, and you can see the boxes being scrolled horizontally:![How to do it...](img/1963_03_01.jpg)
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你在页面中输入了代码，左右滑动查看区域，你就可以看到盒子在水平滚动：![How to do it...](img/1963_03_01.jpg)
- en: How it works...
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'We have used a couple of HTML5 techniques in this example. First, we used jQuery
    Mobile to detect the swipe event. When we use our finger to swipe the page to
    the left or right, an event listener is assigned:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这个例子中使用了一些HTML5技术。首先，我们使用jQuery Mobile来检测滑动事件。当我们用手指向左或向右滑动页面时，会分配一个事件监听器：
- en: '[PRE11]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'When the swipe events are detected, jQuery animation `.animate()` is used to
    create the moving effect:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当检测到滑动事件时，使用jQuery动画`.animate()`来创建移动效果：
- en: '[PRE12]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: There's more...
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'In this example, we used a CSS3 technique for the circle buttons. You can draw
    an entire circle using just pure CSS3:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用了CSS3技术来制作圆形按钮。你可以只用纯CSS3画出一个完整的圆：
- en: '[PRE13]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In this example, we define the width and height of the document to be 10 px,
    and the border radius to be 5 px. Now you can have a perfect circle in just a
    couple of lines of CSS!
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们定义文档的宽度和高度为10像素，边框半径为5像素。现在你可以用几行CSS代码画出一个完美的圆！
- en: Zepto framework and swipe events
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Zepto框架和滑动事件
- en: You can use the Zepto framework to do something similar. It has events such
    as `swipe, swipeLeft, swipeRight, swipeUp, swipeDown`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用Zepto框架做类似的事情。它有事件，如`swipe, swipeLeft, swipeRight, swipeUp, swipeDown`。
- en: YUI and gesture events
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YUI和手势事件
- en: 'YUI has gesture events which you can use to create swipe events. You can read
    more about this here: Supporting A Swipe Left Gesture:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: YUI有手势事件，你可以使用它们来创建滑动事件。你可以在这里阅读更多关于这个的信息：支持向左滑动手势：
- en: '[http://yuiblog.com/sandbox/yui/3.3.0pr3/examples/event/ swipe-gesture.html](http://yuiblog.com/sandbox/yui/3.3.0pr3/examples/event/)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://yuiblog.com/sandbox/yui/3.3.0pr3/examples/event/ swipe-gesture.html](http://yuiblog.com/sandbox/yui/3.3.0pr3/examples/event/)'
- en: Dive into the source
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 深入源码
- en: 'Events in jQuery mobile are built in a modular way. Those who want to learn
    how jQuery made the swipe event can visit:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery移动中的事件是以模块化方式构建的。想要了解jQuery如何创建滑动事件的人可以访问：
- en: '[https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.event.js](http://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.event.js).
    The part related to swipe events is under:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.event.js](http://github.com/jquery/jquery-mobile/blob/master/js/jquery.mobile.event.js)。与滑动事件相关的部分在：'
- en: '[PRE14]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Vertical, horizontal, and distance threshold are calculated for the event calculation.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 垂直、水平和距离阈值被用于事件计算。
- en: See also
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Moving an element with touch events*'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用触摸事件移动元素*'
- en: '*Redrawing a canvas with orientation events*'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用方向事件重绘画布*'
- en: '*Rotating an HTML element with gesture events*'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用手势事件旋转HTML元素*'
- en: '*Zooming an image with gesture events*'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用手势事件缩放图像*'
- en: Zooming an image with gesture events
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用手势事件缩放图像
- en: On the iPhone, you can resize an element based on zoom detection. On gesture
    change, you could get the value of the scale factor, and zoom HTML elements based
    on it.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在iPhone上，你可以根据缩放检测调整元素的大小。在手势改变时，你可以获得缩放因子的值，并根据它来缩放HTML元素。
- en: Getting ready
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Create an HTML document and name it `ch03r05.html`.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个HTML文档并命名为`ch03r05.html`。
- en: How to do it...
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Enter the following code:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 输入以下代码：
- en: '[PRE15]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: How it works...
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this example, we assign the element we want to scale with the `ongesturechange`
    event. The scale factor is determined by the `e.target.scale:`
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用`ongesturechange`事件来分配我们想要缩放的元素。缩放因子由`e.target.scale:`确定。
- en: '[PRE16]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: There's more...
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Gesture events can be tricky, so using them properly is very important. For
    a two finger multi-touch gesture, the events occur in the following sequence:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 手势事件可能很棘手，因此正确使用它们非常重要。对于双指多点触摸手势，事件发生的顺序如下：
- en: '`touchstart` for finger 1\. Sent when the first finger touches the surface.'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`touchstart` 用于第一根手指。当第一根手指触摸表面时发送。'
- en: '`gesturestart`. Sent when the second finger touches the surface.'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`gesturestart`。当第二根手指触摸表面时发送。'
- en: '`touchstart` for finger 2\. Sent immediately after `gesturestart` when the
    second finger touches the surface.'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`touchstart` 用于第二根手指。在第二根手指触摸表面后立即发送`gesturestart`。'
- en: '`gesturechange` for current gesture. Sent when both fingers move while still
    touching the surface.'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`gesturechange` 用于当前手势。当两根手指仍然触摸表面时移动时发送。'
- en: '`gestureend`. Sent when the second finger lifts from the surface.'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`gestureend`。当第二根手指从表面抬起时发送。'
- en: '`touchend` for finger 2\. Sent immediately after `gestureend` when the second
    finger lifts from the surface.'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`touchend` 用于第二根手指。在第二根手指从表面抬起后立即发送`gestureend`。'
- en: '`touchend` for finger 1\. Sent when the first finger lifts from the surface.'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`touchend` 用于第一根手指。当第一根手指从表面抬起时发送。'
- en: Official iOS Safari guide on GestureEvent
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 官方iOS Safari手势事件指南
- en: 'There is an official iPhone Safari guide that explains the details of `GestureEvent`
    class on Safari:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个官方的iPhone Safari指南，详细解释了Safari上的`GestureEvent`类的细节：
- en: '[http://developer.apple.com/library/safari/#documentation/UserExperience/Reference/GestureEventClassReference/GestureEvent/GestureEvent.html](http://developer.apple.com/library/safari/#documentation/UserExperience/Reference/GestureEventClassReference/GestureEvent/GestureEvent.html).'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.apple.com/library/safari/#documentation/UserExperience/Reference/GestureEventClassReference/GestureEvent/GestureEvent.html](http://developer.apple.com/library/safari/#documentation/UserExperience/Reference/GestureEventClassReference/GestureEvent/GestureEvent.html).'
- en: YUI gesture events
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: YUI手势事件
- en: 'YUI from Yahoo! has a cross-browser solution for gesture events, but only supports
    one-finger events. You can find out more about it at:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 来自Yahoo!的YUI具有跨浏览器的手势事件解决方案，但只支持单指事件。您可以在以下网址找到更多信息：
- en: '[http://developer.yahoo.com/yui/3/event/#gestures](http://developer.yahoo.com/yui/3/event/#gestures).'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.yahoo.com/yui/3/event/#gestures](http://developer.yahoo.com/yui/3/event/#gestures).'
- en: Google Maps and gesture events
  id: totrans-164
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Google地图和手势事件
- en: 'One example of a site that relies heavily on the two fingers gesture event
    is Google Maps on Mobile Safari:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 一个依赖于双指手势事件的网站的例子是移动Safari上的Google地图：
- en: '![Google Maps and gesture events](img/1963_03_02.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![Google地图和手势事件](img/1963_03_02.jpg)'
- en: See also
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参阅
- en: '*Moving an element with touch events*'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用触摸事件移动元素*'
- en: '*Redrawing a canvas with orientation events*'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用方向事件重绘画布*'
- en: '*Rotating an HTML element with gesture events*'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用手势事件旋转HTML元素*'
- en: '*Making a carousel*'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*制作一个旋转木马*'
