["```html\nvar myWorker = new Worker(\"myWorker.js\");\n```", "```html\nmyWorker.addEventListener(\"message\", function (event) {\n  alert(\"Message from worker: \" + event.data);\n}, false);\n```", "```html\nmyWorker.postMessage(\"start\");\n```", "```html\nself.addEventListener(\"message\", function (event) {\n  // Handle message\n}, false);\n```", "```html\nself.postMessage(\"started\");\n```", "```html\nself.close();\n```", "```html\nimportScripts(\"script1.js\", \"script2.js\");\n```", "```html\n<div id=\"main\">\n    <div>\n        <label for=\"your-name\">Please enter your name: </label>\n        <input type=\"text\" id=\"your-name\"/>\n        <button id=\"submit\">Submit</button>\n    </div>\n    <div id=\"response\" class=\"hidden\">\n        The web worker says: <span></span>\n    </div>\n</div>\n```", "```html\nfunction executeWorker()\n{\n    var name = $(\"#your-name\").val();\n    var worker = new Worker(\"helloWorker.js\");\n    worker.addEventListener(\"message\", function(event) {\n        $(\"#response\").fadeIn()\n            .children(\"span\").text(event.data);\n    });\n    worker.postMessage(name);\n}\n```", "```html\nself.addEventListener(\"message\", function(event) {\n    sayHello(event.data);\n});\nfunction sayHello(name)\n{\n    self.postMessage(\"Hello, \" + name);\n}\n```", "```html\nfunction MandelbrotGenerator(canvasWidth, canvasHeight, left, top,right, bottom)\n    {\n```", "```html\n    var scalarX = (right - left) / canvasWidth,\n        scalarY = (bottom - top) / canvasHeight,\n        maxIterations = 1000,\n        abort = false,\n        inSetColor = { r: 0x00, g: 0x00, b: 0x00 },\n        colors = [ /* array of color objects */ ];\n```", "```html\nfunction getMandelbrotX(x)\n{\n    return scalarX * x + left;\n}\nfunction getMandelbrotY(y)\n{\n    return scalarY * y + top;\n}\n```", "```html\nthis.draw = function(imageData)\n{\n    abort = false;\n\n    for (var y = 0; y < canvasHeight; y++)\n    {\n        var my = getMandelbrotY(y);\n        for (var x = 0; x < canvasWidth; x++)\n        {\n            if (abort) return;\n            var mx = getMandelbrotX(x);\n            var iteration = getIteration(mx, my);\n            var color = getColor(iteration);\n            setPixel(imageData, x, y, color);\n        }\n    }\n};\n```", "```html\nfunction getIterations(x0, y0)\n{\n    var x = 0,\n        y = 0,\n        iteration = 0;\n    do\n    {\n        iteration++;\n        if (iteration >= maxIterations) return -1;\n        var xtemp = x * x - y * y + x0;\n        y = 2 * x * y + y0;\n        x = xtemp;\n    }\n    while (x * x + y * y < 4);\n\n    return iteration;\n}\n```", "```html\nfunction getColor(iteration)\n{\n    if (iteration < 0) return inSetColor;\n    return colors[iteration % colors.length];\n}\n```", "```html\nfunction setPixel(imageData, x, y, color)\n{\n    var d = imageData.data;\n    var index = 4 * (canvasWidth * y + x);\n    d[index] = color.r;\n    d[index + 1] = color.g;\n    d[index + 2] = color.b;\n    d[index + 3] = 255; // opacity\n}\n```", "```html\n<canvas width=\"640\" height=\"480\"></canvas>\n```", "```html\n<button class=\"draw\"\n    data-settings=\"[-2, -2, 2, 2]\">Draw Full</button>\n<button class=\"draw\"\n    data-settings=\"[-0.225, -0.816, -0.197, -0.788]\">Preset 1\n</button>\n<button class=\"draw\"\n    data-settings=\"[-1.18788, -0.304, -1.18728, -0.302]\">Preset 2\n</button>\n```", "```html\nfunction MandelbrotApp()\n{\n    var version = \"9.2\",\n        canvas = $(\"canvas\")[0],\n        context = canvas.getContext(\"2d\");\n```", "```html\nfunction drawMandelbrot(left, top, right, bottom)\n{\n    setStatus(\"Drawing...\");\n    var imageData =\n        context.getImageData(0, 0, canvas.width, canvas.height);\n    var generator = new MandelbrotGenerator(canvas.width, canvas.height, \n        left, top, right, bottom);\n    generator.draw(imageData);\n    context.putImageData(imageData, 0, 0)\n    setStatus(\"Finished.\");\n}\n```", "```html\nthis.start = function()\n{\n    $(\"#app header\").append(version);\n\n    $(\"button.draw\").click(function() {\n        var data = $(this).data(\"settings\");\n        drawMandelbrot(data[0], data[1], data[2], data[3]);\n    });\n\n    setStatus(\"ready\");\n};\n```", "```html\n<input type=\"checkbox\" id=\"use-worker\" checked />\n<label for=\"use-worker\">Use web worker</label>\n```", "```html\n<button id=\"stop\">Stop Drawing</button>\n```", "```html\nimportScripts(\"mandelbrotGenerator.js\");\n```", "```html\nself.addEventListener(\"message\", function(e)\n{\n    var data = e.data;\n    var generator = new MandelbrotGenerator(data.width, data.height,\n        data.left, data.top, data.right, data.bottom);\n    generator.draw(data.imageData);\n    self.postMessage(data.imageData);\n    self.close();\n});\n```", "```html\nfunction drawMandelbrot(left, top, right, bottom)\n{\n    if (worker) return;\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    setStatus(\"Drawing...\");\n\n    var useWorker = $(\"#use-worker\").is(\":checked\");\n    if (useWorker)\n    {\n        startWorker(left, top, right, bottom);\n    }\n    else\n    {\n        /* Draw without worker */\n    }\n}\n```", "```html\nfunction startWorker(left, top, right, bottom)\n{\n    worker = new Worker(\"mandelbrotWorker.js\");\n    worker.addEventListener(\"message\", function(e)\n    {\n        context.putImageData(e.data, 0, 0)\n        worker = null;\n        setStatus(\"Finished.\");\n    );\n\n    var imageData =\n        context.getImageData(0, 0, canvas.width, canvas.height);\n    worker.postMessage({\n        imageData: imageData,\n        width: canvas.width,\n        height: canvas.height,\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n    });\n}\n```", "```html\nfunction stopWorker()\n{\n    if (worker)\n    {\n        worker.terminate();\n        worker = null;\n        setStatus(\"Stopped.\");\n    }\n}\n```", "```html\nworker.addEventListener(\"error\", function(e)\n{\n    alert(\"Error in worker: \" + e.filename + \", line:\" + e.lineno + \", \" + e.message);\n});\n```", "```html\nvar console = {\n    log: function(msg)\n    {\n        self.postMessage({\n            type: \"log\",\n            message: msg\n        });\n    }\n};\n```", "```html\nworker.addEventListener(\"message\", function(e)\n{\n    if (e.data.type == \"log\")\n    {\n        console.log(e.data.message);\n    }\n});\n```"]