- en: Chapter 2. HTML5 Typography
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。HTML5排版
- en: Now that we have our environment set up, we're ready to take a deep dive into
    the actual code behind HTML5\. This is where the book begins to take off, since
    no matter how much theory you learn, it's very difficult to master a programming
    language without some keyboard time.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的环境已经设置好，我们准备深入研究HTML5背后的实际代码。这是本书开始起飞的地方，因为无论你学习了多少理论，要掌握一门编程语言都很难没有一些键盘时间。
- en: The game we'll be developing in this chapter will be a typing game, with some
    emphasis in the typography aspect of it. Again, I remind you that the focus of
    this book is not to teach game development, but rather to teach you all about
    HTML5\. Thus, the general approach we'll take to coding the games will not necessarily
    be most optimal for general game development, although all of the games covered
    in the book will perform fairly well in most major browsers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中我们将开发一个打字游戏，重点是其排版方面。再次提醒你，本书的重点不是教授游戏开发，而是教授你关于HTML5的一切。因此，我们将采取的一般方法来编写游戏的代码并不一定是最适合一般游戏开发的，尽管本书涵盖的所有游戏在大多数主要浏览器中都表现得相当不错。
- en: The game
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏
- en: For lack of creativity, and to steer away from a possible lawsuit from a grumpy
    game company, we'll name this first game simply `Typography Game`. I know, that's
    not the most impressive game you've heard of, but at least it does a great job
    of explaining what the game is generally about.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 出于缺乏创意，并且为了避免可能的来自一个脾气暴躁的游戏公司的诉讼，我们将这个第一个游戏简单地命名为`Typography Game`。我知道，这不是你听说过的最令人印象深刻的游戏，但至少它很好地解释了这个游戏大致是关于什么的。
- en: 'The overall storyline for the game, as well as its general point, goes as follows:
    correctly type a phrase that is shown to you word-by-word, and win your dream
    boat. If you don''t type each character correctly and fast enough then **Snooty
    McSnootington** wins the boat and you lose the game skills.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏的整体故事情节以及其一般要点如下：正确地输入一个逐字显示给你的短语，就可以赢得你梦想的船。如果你不能正确且足够快地输入每个字符，那么**Snooty
    McSnootington**就会赢得船，你就输掉了游戏技能。
- en: '![The game](img/6029OT_03_01.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![游戏](img/6029OT_03_01.jpg)'
- en: It's hard to convey all the details about this user interface from a single
    screenshot, but the waves in that beautiful ocean are actually very smoothly animated,
    as well as the boat, which floats freely and is tossed about by the waves. Also,
    although there are exactly six images in the entire game, all of the components
    used in this game are DOM elements. The boat, the waves, and the characters are
    done using divs, images, and other semantic HTML5 elements. All of the animations
    are done using native CSS3 features.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 从单个截图中很难传达关于这个用户界面的所有细节，但是那美丽的海洋中的波浪实际上是非常平滑地动画，船也是自由漂浮并被波浪摇动。此外，虽然整个游戏中只有六张图片，但是游戏中使用的所有组件都是DOM元素。船、波浪和字符都是使用div、图片和其他语义HTML5元素完成的。所有的动画都是使用原生CSS3功能完成的。
- en: The rest of the chapter will list all of the HTML, CSS, and JavaScript features
    used in the game, show examples of how to use them, and how they were used in
    the game. The coding style used is geared towards simplicity, so don't mind the
    global variables, the inconsistent use of object oriented principles, and the
    overall rudimentary graphics. With the basic HTML5 concepts in place, you can
    take the game to the next level by applying whatever additional improvements you
    may feel are necessary to make the game more polished or scalable from a development
    perspective.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的其余部分将列出游戏中使用的所有HTML、CSS和JavaScript功能，展示如何使用它们以及它们在游戏中的使用方式。所使用的编码风格旨在简单，所以不要在全局变量、不一致的面向对象原则使用以及整体基本的图形上介意。有了基本的HTML5概念，你可以通过应用任何额外的改进来使游戏更加完善或从开发的角度来说更具可扩展性。
- en: 'We''ll organize the game into three separate files: an `index.html` file, where
    we''ll host all of the HTML structures and bring together the other two files,
    namely a CSS file and a JavaScript file. This should be a pretty standard file
    structure but feel free to adjust things to best fit your needs and habits.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将游戏组织成三个单独的文件：一个`index.html`文件，我们将在其中托管所有的HTML结构并整合其他两个文件，即一个CSS文件和一个JavaScript文件。这应该是一个相当标准的文件结构，但请随意调整以最好地满足你的需求和习惯。
- en: 'Following the file structure convention we created last chapter when we built
    our web portal, we''ll need to create a directory inside the root directory of
    our project, and call it typography. Inside this directory, we''ll create the
    following files and directories:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 按照上一章我们建立网页门户时创建的文件结构约定，我们需要在项目的根目录内创建一个名为typography的目录。在这个目录内，我们将创建以下文件和目录：
- en: '`packt/typography`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packt/typography`'
- en: '`packt/typography/index.html`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packt/typography/index.html`'
- en: '`packt/typography/fonts`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packt/typography/fonts`'
- en: '`packt/typography/css`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packt/typography/css`'
- en: '`packt/typography/css/style.css`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packt/typography/css/style.css`'
- en: '`packt/typography/js`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packt/typography/js`'
- en: '`packt/typography/main.js`'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packt/typography/main.js`'
- en: '`packt/typography/img`'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`packt/typography/img`'
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: I'll walk you through the process of finding and downloading custom fonts, when
    we get to that section later in the chapter. As for the images, you can draw or
    buy your own, or download the same ones I drew for the game from the website `http://www.CHANGE-THIS-FOR-A-REAL-WEBSITE`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我将带你走过在本章后面的部分找到并下载自定义字体的过程。至于图片，你可以自己绘制或购买，或者从网站`http://www.CHANGE-THIS-FOR-A-REAL-WEBSITE`下载我为游戏绘制的相同图片。
- en: Game elements
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 游戏元素
- en: 'There were nine HTML5 elements used in this game. Each will be explained within
    its main category of either HTML, CSS, or JavaScript. The game itself is composed
    of roughly 15 elements, as depicted in the illustrations as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个游戏中使用了九个HTML5元素。每个元素将在其主要类别（HTML、CSS或JavaScript）中进行解释。游戏本身由大约15个元素组成，如下图所示：
- en: '![Game elements](img/6029OT_03_03.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![游戏元素](img/6029OT_03_03.jpg)'
- en: The main game screen, with a subtle options widget as part of it.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 主游戏界面，带有微妙的选项小部件。
- en: After a game is finished, whether or not the player wins the game, a score board
    is shown, where the player is given the opportunity to enter his or her name as
    well as start a new game.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏结束后，无论玩家是否赢得游戏，都会显示一个记分板，玩家有机会输入他或她的名字，以及开始新游戏。
- en: '![Game elements](img/6029OT_03_04.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![游戏元素](img/6029OT_03_04.jpg)'
- en: The preceding screenshot shows a messaging widget to indicate that the player
    has won or lost, as well as a leaderboard widget.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示了一个消息小部件，指示玩家已经赢了或输了，以及一个排行榜小部件。
- en: 'In order for us to easily identify each of the major visual game components,
    we''ll list them as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 为了我们能够轻松识别每个主要的视觉游戏组件，我们将列出它们如下：
- en: The options widget
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选项小部件
- en: This widget allows the player to select a preset difficulty level. Selecting
    a harder difficulty level will make the enemy move faster across his track towards
    the boat. Additionally, we could have made it so that the phrases that the player
    would need to type would be harder or easier based on the difficulty setting.
    However, we have left this implementation detail as an exercise to the reader.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这个小部件允许玩家选择预设的难度级别。选择更难的难度级别会使敌人在他的轨道上更快地移动到船上。此外，我们可以使玩家需要输入的短语根据难度设置更难或更容易。然而，我们把这个实现细节留给读者作为练习。
- en: The game title
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏标题
- en: This text based widget simply displays the main title of the game. Note that
    the type face used there is pure text (no images), using a custom web font. Its
    only purpose is to decorate the user interface.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这个基于文本的小部件只是显示游戏的主标题。请注意，那里使用的字体是纯文本（没有图像），使用自定义网络字体。它的唯一目的是装饰用户界面。
- en: Boat
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 船
- en: This animated widget serves the purpose of strengthening the user interface
    by helping to tell the story of the game. The boat is a simple HTML element (`div`),
    with a background image representing the boat. The animated path that the boat
    follows is done strictly in CSS, and is managed completely by the browser.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这个动画小部件的目的是通过帮助讲述游戏故事来加强用户界面。船是一个简单的HTML元素（`div`），具有代表船的背景图像。船所遵循的动画路径严格由CSS完成，并完全由浏览器管理。
- en: Sky
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 天空
- en: This section of HTML is used to encapsulate all the elements located on the
    top half of the user interface, as well as to make it possible to animate the
    sky. As the game goes on, the color of the sky changes subtly, so as to emulate
    the setting and rising of the sun.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分HTML用于封装用户界面顶部的所有元素，并使其可能对天空进行动画处理。随着游戏的进行，天空的颜色会微妙地变化，以模拟太阳的升起和落下。
- en: Waves
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 波浪
- en: There is a section of HTML classed as *ocean*, which is a section that encapsulates
    the area where the waves are stored. Each wave (there are two in use in this case)
    is a `div` element with a width of 100 percent, and a background image that represents
    the wave. This background image is repeated throughout the entire width of the
    `div` element, and is animated through CSS in order to give the illusion of motion,
    following a pattern of waves in the ocean.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个被分类为*海洋*的HTML部分，它封装了存储波浪的区域。每个波浪（在这种情况下有两个）都是一个宽度为100%的`div`元素，并且具有代表波浪的背景图像。这个背景图像在整个`div`元素的宽度上重复，并通过CSS进行动画处理，以产生运动的错觉，遵循海洋中的波浪模式。
- en: Tracks
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 轨道
- en: This widget is a section of HTML that encapsulates the individual track widgets,
    along with the player that uses that track.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这个小部件是一个HTML部分，封装了各个轨道小部件，以及使用该轨道的玩家。
- en: Players
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 玩家
- en: 'Each of those icons represent the individual players in this game. To keep
    things as simple as possible, there are only two players in the game: you (the
    hero), and Mr. Snooty McSnootington (the enemy). Additionally, we could have very
    easily added functionality to the options widget to allow the player to choose
    specific icons for both, the hero and the enemy, since the code that controls
    what icons are used is a simple CSS class that can be added to or removed from
    the icon objects.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这些图标代表游戏中的个别玩家。为了尽可能简单，游戏中只有两个玩家：你（英雄）和Snooty McSnootington先生（敌人）。此外，我们可以很容易地在选项小部件中添加功能，允许玩家为英雄和敌人选择特定的图标，因为控制所使用的图标的代码是一个简单的CSS类，可以添加到图标对象中或从中删除。
- en: The main container
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主容器
- en: This section of HTML holds the elements that control the game, which is everything
    below the sky widget.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分HTML包含控制游戏的元素，即天空小部件下方的所有内容。
- en: Words to write
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 要写的单词
- en: Here is where we display the words that the user must type when the game starts.
    Behind the scenes, this is a simple block-level HTML element, whose only purpose
    is just to display a few words.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们显示用户在游戏开始时必须输入的单词。在幕后，这是一个简单的块级HTML元素，其唯一目的只是显示几个单词。
- en: Words written
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 已写的单词
- en: Although, this widget is identical to the words to write widget (with slightly
    different styling, of course), this widget is a bit more dynamic, as it will respond
    to user actions. When a user presses a key on the keyboard, that input will be
    displayed there. If the character typed matches the expected character based on
    whatever is shown in the Words to write widget, then the character is displayed
    in white. If the character is incorrect, it'll be displayed in red, with a line
    through it, indicating very strongly that a mistake was made. The user can use
    the *Backspace* key to delete any or all characters displayed in this widget.
    As each correct character is typed in, the hero will move to the right proportionally
    to the percentage of characters entered, relative to the total amount to be typed.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这个小部件与写字小部件相同（当然样式略有不同），但这个小部件更加动态，因为它会响应用户的操作。当用户在键盘上按键时，输入会显示在那里。如果输入的字符与写字小部件中显示的期望字符匹配，那么字符将显示为白色。如果字符不正确，它将显示为红色，并带有一条线，非常明显地表明出现了错误。用户可以使用*退格*键删除在此小部件中显示的任何或所有字符。当输入每个正确的字符时，英雄将按比例向右移动，与要输入的字符总数相对应。
- en: The message container
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 消息容器
- en: This section of HTML is displayed atop a semitransparent element to give the
    appearance of an overlay box. The widget is primarily meant to be a generic communication
    tool, through which we can inform the player of events, such as letting them know
    that the game is over, or that he or she won or lost the game. Additionally, we
    have added four other elements to it in order to make the game more engaging.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分HTML显示在一个半透明的元素顶部，以呈现覆盖框的外观。该小部件主要用于作为一种通用的通信工具，通过它我们可以通知玩家事件，比如让他们知道游戏结束了，或者他们赢了或输了游戏。此外，我们还添加了其他四个元素，以使游戏更具吸引力。
- en: The message title
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 消息标题
- en: Very similar in styling and purpose to main game title widget, this element
    simply notifies the user of the contents of the rest of the message container
    widget.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这个元素在样式和目的上与主游戏标题小部件非常相似，它只是简单地通知用户其余消息容器小部件的内容。
- en: The new champion form
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新冠军表单
- en: The idea behind this form is to simulate those old-school leaderboards used
    in old arcade games. Once you win a game against Mr. Snooty McSnootington, you
    are given the opportunity to enter your name and e-mail address to be shown in
    the leaderboard as in the following screenshot. Of course, that information is
    symbolic, and only serves the purpose of illustrating how we can use HTML5's web
    forms. The information generated by the form is not saved anywhere, and thus,
    it goes away after each page refresh (or when the game is closed or navigated
    away from). Again, it would be a trivial task to either email the contents of
    that form, save it to a backend server, or even stored it locally in the browser,
    through any one of the many persistence or storage APIs that we'll discuss in
    [Chapter 4](ch04.html "Chapter 4. Using HTML5 to Catch a Snake"), *Using HTML5
    to Catch a snake*, later in the book.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这种形式背后的想法是模拟旧式街机游戏中使用的老式排行榜。一旦你赢得了与Snooty McSnootington先生的比赛，你就有机会输入你的姓名和电子邮件地址，以便在排行榜中显示，如下面的屏幕截图所示。当然，这些信息是象征性的，只是为了说明我们如何使用HTML5的网络表单。表单生成的信息不会保存在任何地方，因此，在每次页面刷新后（或者游戏关闭或导航离开时），信息就会消失。再次强调，要么将该表单的内容发送到电子邮件，将其保存到后端服务器，或者甚至在浏览器中本地存储，都是一项微不足道的任务，通过我们将在书的后面讨论的许多持久性或存储API中的任何一个。
- en: Leaderboard
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 排行榜
- en: Any data entered in the new champion form (provided that the data entered is
    valid) is displayed here. The number next to each name simply shows the order
    that each name was entered. The asterisk to the right of the name indicates the
    difficulty level that the game was played (level 1—easy; in this particular case).
    For a more engaging experience, we could have kept track of how long it took the
    player to complete the game, how many mistakes were made, or somehow calculate
    an overall score and display it here. The reason we chose a full name and an email
    address was to show how to perform form validation in HTML5\. This alone is probably
    the most powerful and exciting feature of HTML5 used in this game. What used to
    take developers hundreds of lines of code, and often lots of repeated code, now
    only takes a couple of HTML attributes that the browser enforces.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在新冠军表单中输入的任何数据（假设输入的数据有效）都会显示在这里。每个名称旁边的数字只是显示每个名称输入的顺序。名称右侧的星号表示游戏的难度级别（在这种特殊情况下为1级-简单）。为了获得更有吸引力的体验，我们可以追踪玩家完成游戏所花费的时间，犯了多少错误，或者以某种方式计算出总体得分并在这里显示。我们选择全名和电子邮件地址的原因是为了展示如何在HTML5中执行表单验证。这可能是本游戏中使用的HTML5最强大和令人兴奋的功能。开发者过去需要数百行代码，而且经常有大量重复的代码，现在只需要几个HTML属性，浏览器就会强制执行。
- en: Game controls
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 游戏控制
- en: Finally, the message container widget includes controls that allows the player
    to start a new game.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，消息容器小部件包括控件，允许玩家开始新游戏。
- en: Note
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In order to make the code more concise and easier to explain, we'll be aiming
    at less portable code, where the only requirement will be that the code runs properly
    in at least one browser.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使代码更简洁，更易于解释，我们将致力于更少的可移植代码，唯一的要求是代码至少在一个浏览器中正确运行。
- en: Most of the APIs used are indeed very portable (meaning that the code executes
    the same in most major browsers), but certainly not all of it, especially any
    experimental CSS APIs that require vendor prefixes. For maximum compatibility
    with the following examples, I recommend you use the latest version of Google
    **Chrome** or Google **Chromium**, or at least any webkit-based browser, such
    as Apple Safari.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分使用的API确实非常可移植（意味着代码在大多数主要浏览器中执行相同），但肯定不是全部，特别是任何需要供应商前缀的实验性CSS API。为了与以下示例最大兼容性，我建议您使用最新版本的谷歌Chrome或谷歌Chromium，或者至少使用任何基于webkit的浏览器，比如苹果Safari。
- en: The reason for this approach, first and foremost, is to simplify the teaching
    process. There's no need to explain a given feature, then show code example that
    is 99 percent identical, but differs only in the first part of the feature name,
    which is the vendor name. The reasoning behind selecting webkit as the browser
    engine of choice is also very simple; we had to choose something, so why not webkit?
    Besides, Google Chrome and Apple Safari have great market penetration, as well
    as an incredible set of tools to help us in the development process (such as Google
    Chrome's Developer Tools).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 采用这种方法的原因首先是为了简化教学过程。没有必要解释一个给定的功能，然后展示代码示例，该示例与之前的功能名称的第一部分不同，但在99%的情况下是相同的，这是供应商名称。选择webkit作为首选浏览器引擎的原因也非常简单；我们必须选择一些东西，那为什么不选择webkit呢？此外，谷歌Chrome和苹果Safari在市场上有很大的渗透率，以及一套令人难以置信的工具，可以帮助我们进行开发（例如谷歌Chrome的开发者工具）。
- en: 'Finally, the *nine* HTML5 elements used in the game, along with their corresponding
    category:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，游戏中使用的*九*个HTML5元素，以及它们对应的类别：
- en: HTML
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML
- en: Both of the HTML features used in this game can be used in JavaScript or by
    the browser directly. The web form elements and attributes add great functionality
    to the browser out of the box, while the data attributes are more meaningful when
    tied to the JavaScript. In the game of our `Typography Game`, we have built these
    elements within a context that made sense, but we could certainly have used other
    techniques (such as storing the data represented by the data attributes strictly
    in code), or used the elements and attributes we did use in different ways.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这个游戏中使用的HTML功能可以在JavaScript中或直接由浏览器使用。Web表单元素和属性在浏览器中提供了很好的功能，而数据属性在与JavaScript绑定时更有意义。在我们的“排版游戏”中，我们在有意义的上下文中构建了这些元素，但我们当然可以使用其他技术（例如严格在代码中存储数据属性所代表的数据），或者以不同的方式使用我们使用的元素和属性。
- en: The web form
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Web表单
- en: The new form API added in HTML5 is one of the most visible additions to the
    language. With it you have access to 13 new input types, as well as countless
    new attributes that make form development fast, fun, and fascinating. Most of
    the additions will probably look familiar to you visually, since the effects that
    they add natively to the browser had already been done for a long time. These
    effects include things such as placeholder text, form validation, auto focusing
    fields, and so on so forth.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5中添加的新表单API是语言中最显著的增加之一。通过它，您可以访问13种新的输入类型，以及无数新的属性，使表单开发快速、有趣和迷人。大多数增加的功能在视觉上可能会让您感到熟悉，因为它们在浏览器中的本地效果已经存在很长时间了。这些效果包括占位文本、表单验证、自动对焦字段等等。
- en: Two of the 13 new input types were used in the game, along with a handful of
    attributes for each of them, including form validation and field placeholders.
    Following is a brief explanation of how these elements were used in the game.
    An in-depth discussion of how they work and how to use them is found the the next
    section.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中使用了13种新的输入类型中的两种，以及每种输入类型的一些属性，包括表单验证和字段占位符。以下是这些元素在游戏中的简要说明。关于它们的工作原理和如何使用它们的深入讨论可以在下一节中找到。
- en: Range input
  id: totrans-69
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 范围输入
- en: The new range input type is a slider that allows the user to select a value
    by moving the slider horizontally. In the game, we used the range input as a means
    to select a difficulty level. The range specified in this game is from 1 to 3,
    with 1 being the easiest difficulty level and 3 being the toughest.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 新的范围输入类型是一个滑块，允许用户通过水平移动滑块来选择数值。在游戏中，我们使用范围输入作为选择难度级别的手段。该游戏中指定的范围是从1到3，1表示最容易的难度级别，3表示最困难的难度级别。
- en: '![Range input](img/6029OT_03_05.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![范围输入](img/6029OT_03_05.jpg)'
- en: The container that holds the input type range uses CSS to toggle the options
    menu and fade it out when not in use.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 包含范围输入类型的容器使用CSS在不使用时切换选项菜单并使其淡出。
- en: Email input
  id: totrans-73
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 电子邮件输入
- en: The email input type looks exactly the same as the old text input type, but
    with a few benefits. First, when used in a mobile device, the input type hints
    to the operating system what kind of information it expects, in which case the
    operating system can display a special keyboard to the user. For example, if the
    user attempts to enter data into a number input type, where only numbers are allowed,
    a mobile operating system can display a keyboard that only has numbers. In the
    case of the email type, the keyboard displayed is normally one that includes the
    **@** symbol which makes it easier and more convenient for the user to enter the
    information into the web form.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件输入类型看起来与旧的文本输入类型完全相同，但具有一些好处。首先，在移动设备上使用时，输入类型提示操作系统它期望的信息类型，此时操作系统可以向用户显示特殊的键盘。例如，如果用户尝试输入数据到只允许数字的数字输入类型中，移动操作系统可以显示只有数字的键盘。在电子邮件类型的情况下，通常显示的键盘包括**@**符号，这使用户更容易更方便地输入信息到网络表单中。
- en: The second benefit of using the email input type, which is also a benefit to
    desktop users, is that the browser itself can validate the data entered by the
    user. If the field is set to be validated and the data in the field does not match
    the basic format of an email address, the browser will tell the user that there
    is a problem and the form will not be submitted.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 使用电子邮件输入类型的第二个好处，也是对桌面用户的好处，是浏览器本身可以验证用户输入的数据。如果字段设置为验证，并且字段中的数据不符合电子邮件地址的基本格式，浏览器将告诉用户存在问题，表单将无法提交。
- en: In the game, we use this feature whenever a player wins, by asking the user
    to enter his or her full name and email address. That information is used in a
    leaderboard, like you have probably seen in older games. While the user is not
    forced to enter any of the information asked for in the form, if the user does
    choose to input any information the data will be validated automatically by the
    browser.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏中，每当玩家获胜时，我们会要求用户输入他或她的全名和电子邮件地址。这些信息将用于排行榜，就像您可能在旧游戏中看到的那样。虽然用户不被强制输入表单中要求的任何信息，但如果用户选择输入任何信息，浏览器将自动验证数据。
- en: The exciting thing about automatic form validation is that you can customize
    your form through the HTML attributes included, making only required fields validated,
    what the error message says, and so on so forth. Also, even if the user disables
    JavaScript functionality in the browser the form will still be validated and handled
    by the browser. Of course, as you well know, one of the main rules about taking
    input from the user is that you should never trust the user and always validate
    and sanitize any, and all user input in the server as well.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 自动表单验证的令人兴奋之处在于，您可以通过包括的HTML属性自定义表单，仅验证必填字段，错误消息的内容等等。此外，即使用户在浏览器中禁用了JavaScript功能，表单仍将由浏览器验证和处理。当然，您很清楚，从用户那里获取输入的主要规则之一是您永远不应信任用户，并始终在服务器上验证和清理任何和所有用户输入。
- en: '![Email input](img/6029OT_03_07.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![电子邮件输入](img/6029OT_03_07.jpg)'
- en: If no data is entered or is in the wrong format, the browser will tell you about
    it and keep the form from being submitted.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有输入数据或格式错误，浏览器会告诉你，并阻止表单提交。
- en: Data attributes
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据属性
- en: As part of the effort, for more semantic document structure, HTML5 allows us
    to create our own, custom element attributes. Before HTML5, most browsers simply
    ignored element attributes that it did not understand (for example, a custom attribute
    made specially for one's application) but the downsides to this practice included
    the fact that the document could not be validated, the behavior was somewhat unpredictable,
    and there was a chance that a new release of the language introduced attributes
    of the same name, thus making your old custom attributes invalid. Now, we can
    safely create custom attributes for elements and none of the downsides just mentioned
    would apply.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 作为努力的一部分，为了更语义化的文档结构，HTML5允许我们创建自己的自定义元素属性。在HTML5之前，大多数浏览器简单地忽略了它不理解的元素属性（例如，专门为某个应用程序制作的自定义属性），但这种做法的缺点包括文档无法验证，行为有些不可预测，还有可能语言的新版本引入了同名的属性，从而使旧的自定义属性无效。现在，我们可以安全地为元素创建自定义属性，上述提到的任何缺点都不适用。
- en: In our game, we used data attributes to do two things, namely to specify the
    minimum speed that a player can move across the track and to specify that a generic
    button should trigger a new game (so that any button with that data attribute
    did not need any extra logic within JavaScript in order to act like a special
    button).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的游戏中，我们使用数据属性来做两件事，即指定玩家可以在赛道上移动的最小速度，并指定一个通用按钮应该触发一个新游戏（因此，具有该数据属性的任何按钮都不需要在JavaScript中额外的逻辑来表现得像一个特殊按钮）。
- en: CSS
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CSS
- en: Since this game was intended to show off the more visual aspects of HTML5, we
    focused most of our efforts in making the interface of the game a real eye-candy.
    Since CSS is all about that visual presentation, most of the featured employed
    fall under this category.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个游戏旨在展示HTML5更多的视觉方面，我们大部分的努力都集中在使游戏界面成为真正的眼睛糖果。由于CSS主要关注视觉呈现，大多数采用的特色都属于这个类别。
- en: Web fonts
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络字体
- en: Prior to HTML5's ability to handle custom fonts, web designers and developers
    were limited to a handful of type faces that could be used in a website or web
    application. Over time, there were a few solutions developed to solve this problem,
    but none were particularly impressive and most (if not all) broke some of the
    browser's functionality. For example, one common technique to display custom text
    involved the use of JavaScript to dynamically replace each character in a string
    with an actual image of that character using the custom font. The problems with
    this approach included the fact that one needed to create and manage all of those
    images. The user had to download all of those images, and worst of all, the resulting
    text could not be selected, copied, resized, and the color could not be changed.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML5能够处理自定义字体之前，网页设计师和开发人员只能使用少数几种字体在网站或Web应用程序中使用。随着时间的推移，出现了一些解决这个问题的解决方案，但没有一个特别令人印象深刻，大多数（如果不是全部）都破坏了一些浏览器的功能。例如，一种常见的显示自定义文本的技术涉及使用JavaScript动态替换字符串中的每个字符，使用自定义字体的实际图像。这种方法的问题包括需要创建和管理所有这些图像。用户必须下载所有这些图像，最糟糕的是，生成的文本无法被选择、复制、调整大小，颜色也无法更改。
- en: Now we can simply specify the name of a font, along with the actual font file,
    which the browser can download if the user's operating system doesn't have that
    font installed and use just as any other font.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以简单地指定字体的名称，以及实际的字体文件，如果用户的操作系统没有安装该字体，浏览器可以下载并像任何其他字体一样使用。
- en: In the game, we use three different custom fonts to create just the right visual
    effect and make the texts in the game match the desired visual theme. The three
    fonts used are open source fonts, which can be downloaded from the internet and
    used for free. The fonts used were Lemon, Mystery Quest, and Fredericka the Great.
    Amazing names, don't you agree?
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏中，我们使用了三种不同的自定义字体来创建恰到好处的视觉效果，并使游戏中的文本与期望的视觉主题相匹配。使用的三种字体都是开源字体，可以从互联网上免费下载和使用。使用的字体是Lemon，Mystery
    Quest和Fredericka the Great。这些名字很棒，你同意吗？
- en: '![Web fonts](img/6029OT_03_08.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![网络字体](img/6029OT_03_08.jpg)'
- en: Prior to looking for some fonts for the game, I had no idea that these fonts
    existed. Best of all, it only took me a couple of minutes to go through a large
    collection of open source fonts (from Google's Web Fonts tool) and find just what
    I wanted.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在寻找游戏的一些字体之前，我不知道这些字体的存在。最重要的是，我只花了几分钟时间浏览了大量的开源字体（来自Google的Web字体工具），找到了我想要的。
- en: Since a font file is an external asset just like anything else that is downloaded
    from the server, there is a period of time between the time the browser starts
    downloading a font file and the time when the page is ready to be rendered. Different
    browsers handle this situation differently. For example, webkit hides the text
    until the font asset is ready. Other browsers may render the text with a fallback
    or default font until the web font file is ready, then swap the fonts and re-render
    the text.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 由于字体文件是从服务器下载的外部资产，因此在浏览器开始下载字体文件和页面准备好渲染之间存在一段时间。不同的浏览器处理这种情况的方式不同。例如，webkit会隐藏文本，直到字体资产准备就绪。其他浏览器可能会使用备用或默认字体渲染文本，直到网络字体文件准备就绪，然后切换字体并重新渲染文本。
- en: Transitions
  id: totrans-92
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过渡
- en: A CSS transition attribute tells the browser what attributes it applies to and
    how long the transition should last. Once those properties change, the browser
    will interpolate the beginning and end states and generate a very smooth transition
    for the duration specified. Of course, this can only be applied to attributes
    represented by some numerical value, such as font size, background color (represented
    by either an RGB or HSL value, or a hexadecimal number, all of which can be converted
    to percentages), element position, and so on. Values that do not get smoothly
    interpolated in CSS transitions include font-family, background images, or any
    other attribute that don't have in-between values, such as display block and display
    none.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: CSS过渡属性告诉浏览器它适用于哪些属性以及过渡应持续多长时间。一旦这些属性发生变化，浏览器将插值开始和结束状态，并在指定的持续时间内生成非常平滑的过渡效果。当然，这只能应用于由某些数值表示的属性，例如字体大小，背景颜色（由RGB或HSL值或十六进制数表示，所有这些都可以转换为百分比），元素位置等。在CSS过渡中不会平滑插值的值包括字体系列，背景图像或任何其他没有中间值的属性，例如显示块和显示无。
- en: In the game, the only uses of transition were with the options menu, the message
    container, and in moving the players across the tracks. The options menu is set
    to be pushed off the left side of the screen and the main icon that represents
    it is 75 percent transparency. Once the user hovers the mouse over that icon,
    it transitions to zero percent transparency (fully visible) and the rest of the
    menu transitions onto its left side to move to the right until its left edge snaps
    to the left edge of the browser.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏中，过渡的唯一用途是选项菜单，消息容器以及将玩家移动到轨道上。选项菜单设置为从屏幕左侧推出，代表它的主图标为75％的透明度。一旦用户将鼠标悬停在该图标上，它的透明度就会过渡到零（完全可见），并且菜单的其余部分会过渡到其左侧，向右移动，直到其左边缘与浏览器的左边缘对齐。
- en: The message container uses a similar effect, and that it is always positioned
    at the top of the screen, its width being 100 percent the window viewport and
    its height is set to zero by default (when the container is `closed`). When we
    want to display a message to the user, add the CSS class `open` to the container
    widget which sets the container's height to 100 percent, thus triggering a smooth
    transition that simulates a slide-in effect.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 消息容器使用类似的效果，它始终位于屏幕顶部，其宽度默认为窗口视口的100％，高度默认设置为零（当容器处于“关闭”状态时）。当我们想向用户显示消息时，将CSS类“open”添加到容器小部件中，将容器的高度设置为100％，从而触发平滑过渡，模拟滑入效果。
- en: 'Finally, we used transitions to move the players from right to left within
    the tracks to which they are each bound. This was a very easy task to accomplish,
    even though the hero and the enemy are controlled slightly different. The way
    the enemy moves is simple: at every tick of the game timer we increment the enemy''s
    horizontal position (by changing its left style attribute) by whatever value is
    set in its data-speed data attribute. The smooth transition between the two points
    is handled by the browser. The way the hero moves is similar, with the exception
    that the data-speed is always set to zero (otherwise it''d be moving automatically
    without the user having to type anything) and at each key press we check whether
    the character typed in was what was expected, in which case we advance the hero
    a percentage of the way to the end of the track, which is relative to the percentage
    of characters typed in properly and relative to the total amount of characters.
    For example, if the user correctly typed in the tenth character of a phrase that
    has 100 characters, then we move the hero 10 percent of the way across its track.
    Both, the hero and the enemy, have checks in place so that they can''t be moved
    beyond the width of their respective tracks.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们使用过渡效果将玩家从右侧移动到各自绑定的轨道上。这是一个非常容易实现的任务，尽管英雄和敌人的控制方式略有不同。敌人移动的方式很简单：在游戏计时器的每个滴答声中，我们通过改变其左侧样式属性来增加敌人的水平位置，增加的数值是其数据速度数据属性中设置的。两点之间的平滑过渡由浏览器处理。英雄的移动方式类似，唯一的区别是数据速度始终设置为零（否则它会自动移动，而无需用户输入任何内容），每次按键按下时，我们都会检查用户输入的字符是否符合预期，如果是，则英雄会相对于正确输入的字符的百分比和总字符数的百分比向轨道的末端前进。例如，如果用户正确输入了具有100个字符的短语的第十个字符，那么我们将英雄移动到其轨道的10％处。英雄和敌人都有检查机制，以防止它们被移动超出各自轨道的宽度。
- en: Animations
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 动画
- en: 'Probably the most powerful feature of CSS3, the animation attribute, allows
    for named keyframe animation very similar to the formerly popular Adobe Flash.
    The way it works is incredibly simple: you create an animation sequence, give
    it a name, and specify one or more CSS attributes to be applied at each keyframe.
    Each keyframe represents a moment in time when those attributes should be added
    to whatever element you associate with that animation sequence. Then, every moment
    in time between two keyframes are smoothly interpolated by the browser and the
    illusion of animation is achieved.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3最强大的功能可能是动画属性，它允许命名关键帧动画，非常类似于以前流行的Adobe Flash。它的工作方式非常简单：您创建一个动画序列，给它一个名称，并指定一个或多个CSS属性，以便在每个关键帧上应用。每个关键帧代表这些属性应该添加到您将其与动画序列关联的任何元素上的时间点。然后，浏览器会平滑地插值两个关键帧之间的每个时间点，并实现动画的幻觉。
- en: In the game, we use animations to give life to the ocean waves, to move the
    boat in its path, and to make the sky fade darker and lighter with the passing
    of time, thus simulating the rising and setting of the sun. Although this may
    seem like a complicated task, animating elements is so easy that the main limitation
    you're likely to run into may be creativity. If you're somewhat familiar with
    CSS and how to use it to apply various styles to elements, then learning and using
    the animation API should be a natural next step.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏中，我们使用动画来赋予海浪生命，让船在其航道上移动，并随着时间的推移使天空变暗和变亮，从而模拟太阳的升起和落下。虽然这可能看起来是一项复杂的任务，但动画元素是如此简单，以至于你可能遇到的主要限制可能是创造力。如果你对CSS和如何使用它来为元素应用各种样式有一定了解，那么学习和使用动画API应该是一个自然的下一步。
- en: '![Animations](img/6029OT_03_09.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![动画](img/6029OT_03_09.jpg)'
- en: Each animated object was nothing more than a `div` element with a background
    image set to it. The waves' background image was set to repeat about the x axis,
    whereas the boat's background image was set to no-repeat. The boat's width and
    height was set to match the image it represented, whereas the waves had a different
    height set for each of them (the wave positioned behind everything was a bit taller
    so that it could be seen behind the other wave), but with a width of 100 percent,
    so that it always fills the width of the monitor viewing the app, no matter how
    wide that monitor is. At the end of this animation cycle, the objects follow that
    same path, but in reverse, making the animation seem continuous and always smooth.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 每个动画对象都只是一个带有背景图像的`div`元素。波浪的背景图像设置为在x轴上重复，而船的背景图像设置为不重复。船的宽度和高度设置为与其代表的图像相匹配，而每个波浪的高度设置不同（位于一切之后的波浪略高一些，以便它可以在另一组波浪后面看到），但宽度设置为100％，以便始终填充查看应用程序的监视器的宽度，无论该监视器有多宽。在动画周期结束时，对象沿着相同的路径，但是反向移动，使得动画看起来连续而且始终平滑。
- en: The easiest element to animate was the sky, since it only had two keyframes.
    At the first keyframe, the `div` element that represented the sky was set to have
    a light blue color for its background. The last keyframe changed that background
    color to a slightly darker blue. For a more dramatic effect, we could have had
    this last keyframe define a very dark color for the background. For an even more
    drastic effect representing this night fall, we could also have added another
    `div` on top of this sky element, with its background image being a transparent
    image with white dots scattered about it. Each dot would represent a star. Then,
    at the same pace that the sky gets darker, we set the opacity of this element
    to become more visible (less transparent), so that it animates from fully transparent
    to fully opaque. The final effect would be that as the sky gets darker, then stars
    would appear.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最容易动画化的元素是天空，因为它只有两个关键帧。在第一个关键帧中，代表天空的`div`元素的背景被设置为浅蓝色。最后一个关键帧将背景颜色更改为略深的蓝色。为了获得更加戏剧性的效果，我们可以让最后一个关键帧为背景定义一个非常深的颜色。为了更加戏剧性地表示夜晚降临，我们还可以在这个天空元素的顶部添加另一个`div`，其背景图像是一个带有散布的白点的透明图像。每个点代表一颗星星。然后，以与天空变暗相同的速度，我们将这个元素的不透明度设置为更加可见（不透明度更低），以便从完全透明到完全不透明进行动画。最终效果是随着天空变暗，星星会出现。
- en: 'The boat was animated with three keyframes: the first placed it at some position
    slightly above the waves, the second moved it to the right and up, and the third
    keyframe moved it significantly higher, and a bit to the left. The trick to making
    the animation between these points seem somewhat natural, and more like something
    would move on the ocean in real life, is to make the distance the object moves
    between two different keyframes different. For example, the horizontal distance
    the boat moves between the first and second keyframe is different than the horizontal
    displacement used between the second and third keyframes. The vertical displacement
    between those keyframes are even more drastic. If the distances were all the same,
    our eye would get used to the same familiar pattern of motion, and the animation
    would soon appear too repetitive and uninteresting.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 船只使用了三个关键帧进行动画：第一个将其放置在略高于海浪的某个位置，第二个将其向右上移动，第三个关键帧将其移动得更高，稍微向左移动。使得动画在这些点之间看起来有些自然，并且更像是真实生活中海洋中的运动的技巧是使得物体在两个不同关键帧之间移动的距离不同。例如，船在第一个和第二个关键帧之间移动的水平距离与第二个和第三个关键帧之间使用的水平位移不同。这些关键帧之间的垂直位移更加激烈。如果所有距离都相同，我们的眼睛会习惯于相同的运动模式，动画很快会显得太重复和无聊。
- en: Animating the waves was equally easy. Although there were two sets of waves,
    they both use the same animation set. The only difference is that the set of waves
    positioned behind the other (the back wave) was set to move slower, so that it
    looked like it was farther away, and the animations didn't seem to be the same.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 动画波浪同样容易。虽然有两组波浪，它们都使用相同的动画设置。唯一的区别是，位于另一组波浪后面的波浪（后面的波浪）设置为移动速度较慢，以便看起来它离得更远，动画看起来不同。
- en: All that was animated in these wave elements (remember, a wave element is just
    a `div` with a repeating background image) was the position of the background
    image. The `div` elements themselves were always static and absolutely positioned
    atop each other. Since the elements were transparent wherever their background
    images were transparent, we were able to apply a background color to the element
    holding all three of these elements (both waves and the boat), which we set to
    be the sky element, which animated the background color.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些波浪元素中进行的所有动画（记住，波浪元素只是一个带有重复背景图像的`div`）只是背景图像的位置。`div`元素本身始终是静态的，并且绝对定位在彼此之上。由于元素在其背景图像透明的地方是透明的，我们能够将背景颜色应用于包含这三个元素的元素（波浪和船），我们将其设置为天空元素，从而使背景颜色动画化。
- en: Although the final result looks fun and slightly complex, the work required
    to put this sort of thing together is really no more complicated or difficult
    than setting up any other design using plain CSS, especially because this is nothing
    more than plain old CSS.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管最终结果看起来有趣且稍微复杂，但组合这种东西所需的工作实际上并不比使用纯CSS设置任何其他设计更复杂或困难，特别是因为这只是纯粹的旧CSS。
- en: Note
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: At the time of this writing, there were a handful of tools aimed at helping
    developers create and manage keyframe animations. While many of these tools were
    free and many are completely cloud-based (written using HTML5 technologies), if
    you're looking for an enterprise level tool to help you build professional animations
    truly similar to what we're used to seeing with Adobe Flash, you'll need to invest
    in some cash in more advanced and fine tuned tools. Although some of these tools
    may not be the best option for a developer on a budget (or one with no budget
    at all), their quality and power are normally orders of magnitude beyond whatever
    any of the free tools can provide.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，有一些旨在帮助开发人员创建和管理关键帧动画的工具。虽然许多这些工具是免费的，许多完全基于云（使用HTML5技术编写），但如果您正在寻找一个企业级工具，以帮助您构建与Adobe
    Flash中看到的类似的专业动画，那么您需要投资一些现金来获得更先进和精细调整的工具。尽管其中一些工具可能不是预算有限的开发人员（或根本没有预算的开发人员）的最佳选择，但它们的质量和功能通常远远超出任何免费工具可以提供的范围。
- en: If you're only developing for fun, or for the learning experience, the plethora
    of free tools available online should be more than enough to get you going with
    CSS3 keyframe animations. However, if your goal is to build high-end applications
    and you need the high precision and control over the animations, then a professional
    tool might be well worth your investment.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您只是为了好玩或学习经验而开发，那么在线可用的大量免费工具应该足够让您开始使用CSS3关键帧动画。然而，如果您的目标是构建高端应用程序，并且需要对动画进行高精度和控制，那么专业工具可能是值得投资的。
- en: One particularly popular free web-based CSS animation generator can be found
    at [http://www.css3maker.com/](http://www.css3maker.com/). On the other hand,
    Adobe makes a terrific product called Adobe Edge Animate, which can be purchased
    at [http://html.adobe.com/edge/animate/](http://html.adobe.com/edge/animate/).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一个特别受欢迎的免费基于Web的CSS动画生成器可以在[http://www.css3maker.com/](http://www.css3maker.com/)找到。另一方面，Adobe推出了一款名为Adobe
    Edge Animate的出色产品，可以在[http://html.adobe.com/edge/animate/](http://html.adobe.com/edge/animate/)上购买。
- en: The text shadows
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本阴影
- en: This new text attribute in CSS allows you to simulate a shadow effect around
    text. Behind the scenes, what the browser really does is create a copy of the
    text that the shadow is being applied to, then displace it behind the original
    text based on the values you specify as the vertical and horizontal offset. You
    can also tell the browser how much to blur this "shadow" version of the text by
    specifying a values between zero and whatever integer value you desire. After
    a point, depending on the size of the original text, the blur is so high that
    the text is virtually invisible, so supplying very large numbers can be counter
    productive.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: CSS中的这个新文本属性允许您在文本周围模拟阴影效果。在幕后，浏览器真正做的是创建文本的副本，然后根据您指定的垂直和水平偏移值将其位移在原始文本的后面。您还可以告诉浏览器通过指定介于零和您所需的任何整数值之间的值来模糊这个“阴影”版本的文本。在某一点上，取决于原始文本的大小，模糊度很高，以至于文本几乎是看不见的，因此提供非常大的数字可能是适得其反的。
- en: The only instance in the game where text shadow is used is in the message container's
    title. Since the rest of the user interface for the game used pretty flat graphics
    with very subtle or no gradients at all, I thought I'd use text shadows to add
    a solid, lighter shadow to give continuation to the theme of flat, single dimensional
    graphics.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中唯一使用文本阴影的情况是在消息容器的标题中。由于游戏的其余用户界面使用了非常平坦的图形，几乎没有渐变，我认为我可以使用文本阴影来添加一个坚实的、较浅的阴影，以延续平面、单维度图形的主题。
- en: '![The text shadows](img/6029OT_03_10.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![文本阴影](img/6029OT_03_10.jpg)'
- en: The CSS3 text shadow API allows you to specify an arbitrary number of displaced
    and blurred copies of a text string.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: CSS3文本阴影API允许您指定文本字符串的任意数量的位移和模糊副本。
- en: The box shadows
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 框阴影
- en: Similar to text shadows, box shadows place one or more boxes behind a particular
    element, with a vertical and horizontal offset specified as parameters, with a
    third parameter being the amount of blur to be applied to the shadow. You can
    specify solid colors or use the optional alpha channel in order to add varying
    levels of opacity to it. Alternatively, the shadow can be applied to the inside
    of the container to which it is bound. Note that any box shadow applied to elements,
    if they're placed behind the box, are placed outside the border, if one is available,
    ignoring any margin the element may have. Shadows placed inside an element are
    placed just inside the border, if one is present, ignoring any padding added to
    the element.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 与文本阴影类似，框阴影在特定元素的后面放置一个或多个框，指定为参数的垂直和水平偏移量，第三个参数是要应用于阴影的模糊量。您可以指定纯色或使用可选的alpha通道，以添加不同级别的不透明度。或者，阴影可以应用于其绑定的容器的内部。请注意，如果元素的任何框阴影被放置在框的后面，它们将被放置在边框的外部，如果有的话，忽略元素可能具有的任何边距。放置在元素内部的阴影将被放置在边框的内部，如果有的话，忽略添加到元素的任何填充。
- en: In the game, there are two instances of a CSS box shadow. One shows off the
    traditional shadow behind an element, and is applied to the message container.
    The other instance of box shadow in the game is applied to the tracks that hold
    each player. In this case, the shadow is intended to convey the effect that the
    tracks are pressed in into the page, which is done by using the attribute that
    places the shadow inside the box. If the shadow is placed outside the box, the
    effect given is that of the box being stacked over the page.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏中，有两个CSS盒子阴影的实例。一个显示了元素后面的传统阴影，并应用于消息容器。游戏中另一个盒子阴影的实例应用于容纳每个玩家的轨道。在这种情况下，阴影旨在传达轨道被按入页面的效果，这是通过使用将阴影放置在框内的属性来实现的。如果阴影放在框外，给出的效果是框叠加在页面上。
- en: '![The box shadows](img/6029OT_03_11.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![盒子阴影](img/6029OT_03_11.jpg)'
- en: The white line on the bottom of each track is just a bottom border, but the
    same effect could have been accomplished by adding a second box shadow.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 每个轨道底部的白线只是一个底部边框，但可以通过添加第二个盒子阴影来实现相同的效果。
- en: The border radius
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 边框半径
- en: Before the border radius property was available, the same effect it provides
    could be achieved by positioning images of rounded corners to the corners of elements.
    This was a tedious task to do and the final effect was rarely as impressive as
    intended. With the CSS3 border radius property, we can apply an arbitrary amount
    of roundness to one or more corners of a `container` element.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在边框半径属性可用之前，可以通过将圆角图像定位到元素的角落来实现它提供的相同效果。这是一项繁琐的任务，最终效果很少如预期那样令人印象深刻。有了CSS3的边框半径属性，我们可以将任意数量的圆角应用于一个或多个`container`元素的角落。
- en: Note
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Keep in mind that, although it is possible to make a `container` element look
    completely round by specifying a border radius value to all four corners large
    enough proportional to each side's length, the element is still a rectangle to
    the browser. In other words, if you float two or more elements that have been
    made to look round through CSS, they will behave like rectangles and not circles.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，尽管可以通过为所有四个角指定足够大的边框半径值使`container`元素看起来完全圆形，但对于浏览器来说，该元素仍然是一个矩形。换句话说，如果您浮动两个或更多通过CSS制作成圆形的元素，它们将像矩形而不是圆形一样行为。
- en: The flow of elements and text in HTML5 is still rectangular based, although
    there are experimental APIs that allow us to specify arbitrary shapes through
    which text flows. For more information about these particular CSS APIs (called
    **regions** and **exclusions**), see [Chapter 6](ch06.html "Chapter 6. Adding
    Features to Your Game"), *Adding Features to Your Games*.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: HTML5中元素和文本的流动仍然是基于矩形的，尽管有一些实验性的API允许我们通过指定任意形状来流动文本。有关这些特定的CSS API（称为**regions**和**exclusions**）的更多信息，请参见[第6章](ch06.html
    "第6章。为您的游戏添加功能")，*为您的游戏添加功能*。
- en: There was only one use of CSS border radius in the game, which was on the right
    side of the navigation options widget. The API allows us to specify which specific
    side to apply a border radius to, and to demonstrate this feature, only two of
    the four sides of the container were rounded.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中只使用了一次CSS边框半径，即在导航选项小部件的右侧。该API允许我们指定要应用边框半径的特定边，并为了演示这一特性，容器的四个边中只有两个被圆角化。
- en: The player icons could have been more HTML5-ish instead of just being a transparent
    image applied to the background of the element. One possibility could be to have
    each icon be a rectangular image, which we could apply to the background of the
    container representing each player, then we could have used border radius to make
    the element look completely circular. An optional box shadow could also have been
    added to create the same shadow effect achieved by the photo editing software
    used to create the images. One benefit of using this technique would be that the
    native effects would scale much better, meaning that if you zoom the page in or
    out, the image will eventually look distorted and pixelated, whereas any border
    radius, box shadow, or borders added to the element would always look smooth and
    fresh.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 玩家图标本可以更符合HTML5的风格，而不仅仅是将透明图像应用于元素的背景。一种可能性是将每个图标都作为矩形图像，然后将其应用于代表每个玩家的容器的背景，然后我们可以使用边框半径使元素看起来完全圆形。还可以添加可选的盒子阴影，以创建与用于创建图像的照片编辑软件实现的相同阴影效果。使用这种技术的一个好处是，原生效果会更好地缩放，这意味着如果您放大或缩小页面，图像最终看起来会变形和像素化，而对元素添加的任何边框半径、盒子阴影或边框始终会看起来平滑和清新。
- en: JavaScript
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript
- en: Although the logic that drives this game is fairly simple, and quite a bit limited,
    there is still a decent amount of JavaScript code in order to make the game work.
    Since we're trying to focus on HTML5 features, we'll only look at one particular
    API used in the code that can more or less be considered HTML5\. This is the **selectors
    API** , which was first drafted by the W3C back on May of 2006.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管驱动这个游戏的逻辑相当简单，而且相当受限，但为了使游戏运行，仍需要相当多的JavaScript代码。由于我们试图专注于HTML5的特性，我们只会看一下代码中使用的一个可以更多或少被视为HTML5的特定API。这就是**选择器API**，它是由W3C于2006年5月首次起草的。
- en: Query selectors
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 查询选择器
- en: If you have been doing any web development at all in the last several years,
    you've certainly heard or, used, and have fallen in love with the popular JavaScript
    library jQuery. Among its many powerful features, one of jQuery's most useful
    tools is its amazing DOM selector API, which allows you to retrieve the DOM elements
    by simply using CSS selectors and pseudo selectors, as opposed to using the limited
    `document.getElementById()`, `document.getElementsByClassName()`, and `document.getElementsByName()`
    methods, among other equally limited ones.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在过去几年中进行过任何网页开发，您肯定听说过或使用过并爱上了流行的JavaScript库jQuery。在其众多强大功能中，jQuery最有用的工具之一是其令人惊叹的DOM选择器API，它允许您仅使用CSS选择器和伪选择器而不是使用有限的`document.getElementById()`、`document.getElementsByClassName()`和`document.getElementsByName()`等方法来检索DOM元素。
- en: The good news is that this powerful nodes selector API is now all native to
    modern browsers. Since the feature is native to the browser, it is much faster
    and more stable. Furthermore, since the feature is native to the browser, there
    is no need to import a library to handle the task.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，这个强大的节点选择器API现在完全是现代浏览器的本机功能。由于该功能是浏览器的本机功能，因此速度更快，更稳定。此外，由于该功能是浏览器的本机功能，因此无需导入库来处理任务。
- en: This game, as well as all the others described in this book, uses the new selectors
    API level 1\. Since there are no visual elements that can be seen form query selectors,
    we'll deepen the discussion about its usage in the next section, where we'll also
    take a look at some code examples.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这个游戏，以及本书中描述的所有其他游戏，都使用了新的选择器API级别1。由于没有可见的元素可以从查询选择器中看到，我们将在下一节深入讨论其用法，同时还将看一些代码示例。
- en: API usage
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: API使用
- en: Now that we've discussed what all of the game elements are and how each HTML5
    feature was used to fulfill that role, let's take a deeper look at how to make
    the most out of each of these APIs. For each of the following APIs, we'll provide
    a more concrete definition of the feature, what its intended use is, and a code
    example will follow. You may also refer to the complete source code attached at
    the end of the chapter in order to fill the gap between the code sample and how
    that feature fits in with the rest of the game code base. It is also recommended
    that you code along and play with the various settings and values in order to
    experiment with and more fully understand each API.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了所有游戏元素以及每个HTML5功能是如何用来实现这一角色的，让我们更深入地了解如何充分利用这些API。对于以下每个API，我们将提供该功能的更具体定义，其预期用途是什么，并将跟随一个代码示例。您还可以参考附在本章末尾的完整源代码，以填补代码示例与该功能如何与游戏代码基础的其他部分配合的差距。还建议您跟着编码，并尝试各种设置和值，以便实验和更全面地理解每个API。
- en: Web forms
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Web表单
- en: The new HTML5 web forms API adds 13 new input types that allows for a much more
    flexible and powerful experience. What's more, web forms are also able to validate
    themselves requiring zero JavaScript intervention.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 新的HTML5 Web表单API添加了13种新的输入类型，可以实现更灵活、更强大的体验。更重要的是，Web表单还能够自行验证，无需任何JavaScript干预。
- en: New input types
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 新的输入类型
- en: 'The following are the new input types defined in the new web forms chapter
    of the HTML5 specification:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是HTML5规范中新的Web表单章节中定义的新输入类型：
- en: Date
  id: totrans-140
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期
- en: The date input type allows the user to select a specific date from a browser-supplied
    calendar. The specific format and styling of this calendar is unique to the browser
    and platform used. The data that results from a date selection is of the form
    `YYYY-MM-DD`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型允许用户从浏览器提供的日历中选择特定的日期。此日历的特定格式和样式是与使用的浏览器和平台相关的。日期选择结果的数据格式为`YYYY-MM-DD`。
- en: '[PRE0]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The optional attributes `min` and `max` can be used to force validation of
    the date selected by the user to be within a given range. Other valid attributes
    for the `date` input type include the following:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 可选属性`min`和`max`可用于强制验证用户选择的日期在给定范围内。日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是字符串）：通过与属性关联的字符串值标识特定字段'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`，`""`或空）：指定该元素被禁用，无法接收控制'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user, so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，因此将来可以由浏览器自动完成用户提示时输入的存储值'
- en: '`autofocus` (acceptable values include `autofocus`, "", or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`，`""`或空）：指定元素在文档加载完成后必须立即接收焦点'
- en: '`min` (value must be a valid date in the form of "yyyy-mm-dd"): Specifies the
    lowest date allowed to be selected by the user'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min`（值必须是形式为"yyyy-mm-dd"的有效日期）：指定用户可以选择的最低日期'
- en: '`max` (value must be a valid date in the form of "yyyy-mm-dd"): Specifies the
    highest date allowed to be selected by the user'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max`（值必须是形式为"yyyy-mm-dd"的有效日期）：指定用户可以选择的最高日期'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`，`""`或空）：指定该元素的值不能被用户更改'
- en: '`step` (acceptable values include `any` or any positive integer): Specifies
    how the value attribute of the element is to change'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`step`（可接受的值包括`any`或任何正整数）：指定元素的值属性如何更改'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`，`""`或空）：指定该元素必须具有有效值，以便允许表单提交'
- en: '`value` (value must be a valid date in the form of "yyyy-mm-dd"): Specifies
    the actual date represented by this element'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是形式为"yyyy-mm-dd"的有效日期）：指定由该元素表示的实际日期'
- en: Month
  id: totrans-154
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 月
- en: The month input type allows the user to select a specific month and year from
    a browser-supplied calendar. The specific format and styling of this calendar
    is unique to the browser and platform used. The data that results from a date
    selection is of the form `YYYY-MM`.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 月份输入类型允许用户从浏览器提供的日历中选择特定的月份和年份。此日历的特定格式和样式是与使用的浏览器和平台相关的。日期选择结果的数据格式为`YYYY-MM`。
- en: '[PRE1]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是字符串）：通过与属性关联的字符串值标识特定字段'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`、`""`或空）：指定该元素已禁用，不能接收控制'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便将来可以由浏览器自动完成用户的提示输入的存储值'
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`、`""`或空）：指定在文档完成加载后，元素必须立即获得焦点'
- en: '`min` (value must be a valid date in the form of "yyyy-mm"): Specifies the
    lowest date allowed to be selected by the user'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min`（值必须是形式为“yyyy-mm”的有效日期）：指定用户可以选择的最早日期'
- en: '`max` (value must be a valid date in the form of "yyyy-mm"): Specifies the
    highest date allowed to be selected by the user'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max`（值必须是形式为“yyyy-mm”的有效日期）：指定用户可以选择的最高日期'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`、`""`或空）：指定此元素的值不能被用户更改'
- en: '`step` (acceptable values include `any` or any positive integer): Specifies
    how the value attribute of the element is to change'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`step`（可接受的值包括`any`或任何正整数）：指定元素的值属性如何更改'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`、`""`或空）：指定此元素必须具有有效值，以便允许表单提交'
- en: '`value` (value must be a valid date in the form of "yyyy-mm"): Specifies the
    actual date represented by this element'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是形式为“yyyy-mm”的有效日期）：指定由此元素表示的实际日期'
- en: Week
  id: totrans-168
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 周
- en: The week input type allows the user to select a specific week of a year from
    a browser-supplied calendar. The specific format and styling of this calendar
    is unique to the browser and platform used. The data that results from a date
    selection is of the form `YYYY-Www` (for example, 2013-W05).
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 周输入类型允许用户从浏览器提供的日历中选择一年中的特定周。此日历的特定格式和样式是独特的，取决于所使用的浏览器和平台。日期选择的结果数据形式为`YYYY-Www`（例如，2013-W05）。
- en: '[PRE2]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是字符串）：通过与属性关联的字符串值标识特定字段'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`、`""`或空）：指定该元素已禁用，不能接收控制'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便将来可以由浏览器自动完成用户的提示输入的存储值'
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`、`""`或空）：指定在文档完成加载后，元素必须立即获得焦点'
- en: '`min` (value must be a valid date in the form of "yyyy-Www", where "ww" must
    be a two digit representation of the week number): Specifies the lowest date allowed
    to be selected by the user'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min`（值必须是形式为“yyyy-Www”的有效日期，其中“ww”必须是周数的两位数字表示）：指定用户可以选择的最早日期'
- en: '`max` (value must be a valid date in the form of "yyyy-Www", where "ww" must
    be a two digit representation of the week number): Specifies the highest date
    allowed to be selected by the user'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max`（值必须是形式为“yyyy-Www”的有效日期，其中“ww”必须是周数的两位数字表示）：指定用户可以选择的最高日期'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`、`""`或空）：指定此元素的值不能被用户更改'
- en: '`step` (acceptable values include `any` or any positive integer): Specifies
    how the value attribute of the element is to change'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`step`（可接受的值包括`any`或任何正整数）：指定元素的值属性如何更改'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`、`""`或空）：指定此元素必须具有有效值，以便允许表单提交'
- en: '`value` (value must be a valid date in the form of "yyyy-Www", where "ww" must
    be a two digit representation of the week number): Specifies the actual date represented
    by this element'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是形式为“yyyy-Www”的有效日期，其中“ww”必须是周数的两位数字表示）：指定由此元素表示的实际日期'
- en: Time
  id: totrans-182
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 时间
- en: The time input type allows the user to select a specific time of day. The data
    in this element is of the form `HH:MM:SS.Ms`.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 时间输入类型允许用户选择一天中的特定时间。此元素中的数据格式为`HH:MM:SS.Ms`。
- en: '[PRE3]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是字符串）：通过与属性关联的字符串值标识特定字段'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`、`""`或空）：指定该元素已禁用，不能接收控制'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便将来可以由浏览器自动完成用户的提示输入的存储值'
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`、`""`或空）：指定元素在文档加载完成后必须立即获得焦点'
- en: '`min` (value must be a valid partial time in the form of "HH:MM:SS.Mss", "HH:MM:SS",
    or "HH:MM"): Specifies the lowest date allowed to be selected by the user'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min`（值必须是部分时间的有效形式，如"HH:MM:SS.Mss"、"HH:MM:SS"或"HH:MM"）：指定用户可以选择的最低日期'
- en: '`max` (value must be a valid partial time in the form of "HH:MM:SS.Mss", "HH:MM:SS",
    or "HH:MM"): Specifies the highest date allowed to be selected by the user'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max`（值必须是部分时间的有效形式，如"HH:MM:SS.Mss"、"HH:MM:SS"或"HH:MM"）：指定用户可以选择的最高日期'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`、`""`或空）：指定此元素的值不能被用户更改'
- en: '`step` (acceptable values include `any` or any positive integer): Specifies
    how the value attribute of the element is to change'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`step`（可接受的值包括`any`或任何正整数）：指定元素的值属性如何更改'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`、`""`或空）：指定此元素必须具有有效值，以便允许提交表单'
- en: '`value` (value must be a valid partial time in the form of "HH:MM:SS.Mss",
    "HH:MM:SS", or "HH:MM"): Specifies the actual date represented by this element'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是部分时间的有效形式，如"HH:MM:SS.Mss"、"HH:MM:SS"或"HH:MM"）：指定此元素表示的实际日期'
- en: Datetime
  id: totrans-196
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期时间
- en: The datetime input type allows the user to select a specific date and time (including
    time zone) from a browser-supplied calendar. The specific format and styling of
    this calendar is unique to the browser and platform used. The data that results
    from a date selection is of the form `YYYY-MM-DDTHH:MM:SS-UTC`.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 日期时间输入类型允许用户从浏览器提供的日历中选择特定日期和时间（包括时区）。此日历的特定格式和样式对于所使用的浏览器和平台是独特的。日期选择结果的数据形式为`YYYY-MM-DDTHH:MM:SS-UTC`。
- en: '[PRE4]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是字符串）：通过与属性关联的字符串值标识特定字段'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`、`""`或空）：指定该元素被禁用，不能接收控制'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便将来可以由浏览器自动完成用户的提示输入的存储值'
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`、`""`或空）：指定元素在文档加载完成后必须立即获得焦点'
- en: '`min` (value must be a valid date time, as defined in the RFC 3339): Specifies
    the lowest date allowed to be selected by the user'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min`（值必须是有效的日期时间，如RFC 3339中定义）：指定用户可以选择的最低日期'
- en: '`max` (value must be a valid date time, as defined in the RFC 3339): Specifies
    the highest date allowed to be selected by the user'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max`（值必须是有效的日期时间，如RFC 3339中定义）：指定用户可以选择的最高日期'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`、`""`或空）：指定此元素的值不能被用户更改'
- en: '`step` (acceptable values include `any` or any positive integer): Specifies
    how the value attribute of the element is to change'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`step`（可接受的值包括`any`或任何正整数）：指定元素的值属性如何更改'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`、`""`或空）：指定此元素必须具有有效值，以便允许提交表单'
- en: '`value` (value must be a valid date time, as defined in the RFC 3339): Specifies
    the actual date represented by this element'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是有效的日期时间，如RFC 3339中定义）：指定此元素表示的实际日期'
- en: Datetime-local
  id: totrans-210
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 日期时间本地
- en: The datetime-local input type allows the user to select a specific date and
    time (not including time zone) from a browser-supplied calendar. The specific
    format and styling of this calendar is unique to the browser and platform used.
    The data that results from a date selection is of the form `YYYY-MM-DDTHH:MM:SS`.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 日期时间本地输入类型允许用户从浏览器提供的日历中选择特定日期和时间（不包括时区）。此日历的特定格式和样式对于所使用的浏览器和平台是独特的。日期选择结果的数据形式为`YYYY-MM-DDTHH:MM:SS`。
- en: '[PRE5]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是字符串）：通过与属性关联的字符串值标识特定字段'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`、`""`或空）：指定该元素被禁用，不能接收控制'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便将来可以由浏览器自动完成用户提示的存储值'
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`，`""`或空）：指定文档完成加载后元素必须立即接收焦点'
- en: '`min` (value must be a valid partial time in the form of "YYYY-MM-DDTHH:MM:SS.Mss",
    "YYYY-MM-DDTHH:MM:SS", or "YYYY-MM-DDTHH:MM"): Specifies the lowest date allowed
    to be selected by the user'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`min`（值必须是有效的部分时间，格式为“YYYY-MM-DDTHH:MM:SS.Mss”，“YYYY-MM-DDTHH:MM:SS”或“YYYY-MM-DDTHH:MM”）：指定用户可以选择的最低日期'
- en: '`max` (value must be a valid partial time in the form of "YYYY-MM-DDTHH:MM:SS.Mss",
    "YYYY-MM-DDTHH:MM:SS", or "YYYY-MM-DDTHH:MM"): Specifies the highest date allowed
    to be selected by the user'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max`（值必须是有效的部分时间，格式为“YYYY-MM-DDTHH:MM:SS.Mss”，“YYYY-MM-DDTHH:MM:SS”或“YYYY-MM-DDTHH:MM”）：指定用户可以选择的最高日期'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`，`""`或空）：指定此元素的值不能被用户更改'
- en: '`step` (acceptable values include `any` or any positive integer): Specifies
    how the value attribute of the element is to change'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`step`（可接受的值包括`any`或任何正整数）：指定元素的值属性如何更改'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`，`""`或空）：指定此元素必须具有有效值，以便允许提交表单'
- en: '`value` (value must be a valid partial time in the form of "YYYY-MM-DDTHH:MM:SS.Mss",
    "YYYY-MM-DDTHH:MM:SS", or "YYYY-MM-DDTHH:MM"): Specifies the actual date represented
    by this element'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是有效的部分时间，格式为“YYYY-MM-DDTHH:MM:SS.Mss”，“YYYY-MM-DDTHH:MM:SS”或“YYYY-MM-DDTHH:MM”）：指定此元素表示的实际日期'
- en: Color
  id: totrans-224
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 颜色
- en: The color input type allows the user to select a specific color from a browser-supplied
    color picker. The specific format and styling of this color picker widget is unique
    to the browser and platform used. Although some implementations of the widget
    may provide values in different format (RGB or HSL), the data that results from
    a color selection is a hexadecimal representation of the color in the form `#RRGGBB`.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色输入类型允许用户从浏览器提供的颜色选择器中选择特定颜色。此颜色选择器小部件的特定格式和样式是独特的，取决于所使用的浏览器和平台。尽管小部件的某些实现可能以不同格式（RGB或HSL）提供值，但从颜色选择结果的数据是颜色的十六进制表示形式，格式为`#RRGGBB`。
- en: '[PRE6]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是字符串）：通过与属性关联的字符串值标识特定字段。'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`，`""`或空）：指定元素已禁用，无法接收控制。'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动完成（可接受的值包括“on”或“off”）：指定浏览器是否应存储用户输入的值，以便将来可以由浏览器自动完成用户提示的存储值。
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`，`""`或空）：指定文档完成加载后元素必须立即接收焦点。'
- en: '`value` (value must be a valid hexadecimal color with exactly seven characters
    in length and of the form "#rrggbb" or "#RRGGBB"): Specifies the actual color
    represented by this element. Keywords, such as Color, are not allowed.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是有效的十六进制颜色，长度为七个字符，格式为“#rrggbb”或“#RRGGBB”）：指定此元素表示的实际颜色。不允许使用关键字，如Color。'
- en: Email
  id: totrans-233
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 电子邮件
- en: The email input type allows the user to input an e-mail address. In mobile devices
    where a digital keyboard is provided for data entry, this input type hints to
    the system that the keyboard to be provided should be the most appropriate for
    entering an e-mail address.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件输入类型允许用户输入电子邮件地址。在提供数字键盘进行数据输入的移动设备上，此输入类型提示系统提供最适合输入电子邮件地址的键盘。
- en: '[PRE7]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是字符串）：通过与属性关联的字符串值标识特定字段。'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`，`""`或空）：指定元素已禁用，无法接收控制。'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便将来可以由浏览器自动完成用户提示的存储值。'
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`，`""`或空）：指定文档完成加载后元素必须立即接收焦点。'
- en: '`maxlength` (value must be a non-negative integer): Specifies the maximum length
    of characters that the element can contain.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`maxlength`（值必须是非负整数）：指定元素可以包含的最大字符数。'
- en: '`pattern` (value must be a valid regular expression pattern as defined by ECMA
    262): Specifies a pattern that the browser must validate the specified input against.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pattern`（值必须是由ECMA 262定义的有效正则表达式模式）：指定浏览器必须根据指定的输入验证的模式。'
- en: '`size` (value must be a positive integer): Specifies the maximum number of
    characters displayed by the element, although more characters may be allowed to
    be entered.'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`（值必须是正整数）：指定元素显示的最大字符数，尽管可能允许输入更多字符。'
- en: '`placeholder` (value must be a string): Specifies a string to be shown to the
    user as a hint as to what information the field expects. This string disappears
    when data is entered into the field and is shown when the field becomes empty.'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`placeholder`（值必须是字符串）：指定要显示给用户作为提示的字符串，以指示字段期望的信息。当数据输入到字段中时，此字符串消失，并在字段变为空时显示。'
- en: '`multiple` (acceptable values include `multiple`, `""`, or empty): Specifies
    that multiple values are allowed in this element.'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`multiple`（可接受的值包括`multiple`、`""`或空）：指定此元素允许多个值。'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`、`""`或空）：指定此元素的值不能被用户更改。'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit.'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`、`""`或空）：指定此元素必须具有有效值，以便允许提交表单。'
- en: '`value` (value must be a valid e-mail address and must adhere to any further
    restrictions specified by the pattern attribute, if any): Specifies the actual
    e-mail address represented by this element or a comma-separated list of valid
    e-mail addresses when the multiple attribute is present.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是有效的电子邮件地址，并且必须遵守模式属性指定的任何进一步限制）：指定此元素表示的实际电子邮件地址，或者当存在多个属性时，指定有效电子邮件地址的逗号分隔列表。'
- en: Note
  id: totrans-249
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Note
- en: 'For those not familiar with JavaScript''s regular expression language, or who
    need a refresher, following is a summary of the syntax:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不熟悉JavaScript正则表达式语言或需要复习的人，以下是语法的摘要：
- en: '`[rodig]` (brackets): used to match anything found within the brackets. For
    example: match any one of the letters within the brackets.'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '`[rodig]`（括号）：用于匹配括号内找到的任何内容。例如：匹配括号内的任一字母。'
- en: '`[^rodig]` (negative brackets): Used to match anything not found within the
    brackets. For example, match any character except one of the letters within the
    brackets.'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '`[^rodig]`（负括号）：用于匹配括号内未找到的任何内容。例如，匹配括号内字母之外的任何字符。'
- en: '`[D-M]` (range): Used to match a range of characters or numbers. For example,
    match any characters between the capital letters D and M.'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '`[D-M]`（范围）：用于匹配一系列字符或数字。例如，匹配大写字母D和M之间的任何字符。'
- en: '`(me|you|us)` (pipe): Used to match alternative options. For example, match
    either of the words within the parenthesis.'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`(me|you|us)`（管道）：用于匹配备选选项。例如，匹配括号内的任一单词。'
- en: '`.` (period): Match any characters, expect for a new line character or a line
    terminator character.'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '`.`（句号）：匹配任何字符，除了换行符或行终止符。'
- en: '`\w` (word character): Match any letter, number, or an underscore.'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`\w`（单词字符）：匹配任何字母、数字或下划线。'
- en: '`\W` (non-word character): Match any character that is not a word characters.'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '`\W`（非单词字符）：匹配任何不是单词字符的字符。'
- en: '`\d` (digit): Match any single digit.'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '`\d`（数字）：匹配任何单个数字。'
- en: '`\D` (non-digit): Match any non-digit character.'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`\D`（非数字）：匹配任何非数字字符。'
- en: '`\s` (space): Match a white space.'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '`\s`（空格）：匹配空格。'
- en: '`\S` (non-space): Match any character that''s not a space character.'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '`\S`（非空格）：匹配任何不是空格字符的字符。'
- en: '`\b` (word boundary): Find a match at the beginning or end of a word.'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '`\b`（单词边界）：在单词的开头或结尾找到匹配。'
- en: '`\B` (non-word boundary): Find a match that is not a word boundary.'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`\B`（非单词边界）：查找不是单词边界的匹配。'
- en: '`\0` (null character): Matches the NULL character in a string.'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`\0`（空字符）：匹配字符串中的空字符。'
- en: '`\n` (new line character): Matches the new line character.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '`\n`（换行符）：匹配换行符。'
- en: '`\f` (form feed character): Matches the form feed character.'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`\f`（换页符）：匹配换页符。'
- en: '`\r` (return carriage character): Matches the form carriage character.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`\r`（回车符）：匹配回车符。'
- en: '`\t` (tab character): Matches the tab character.'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`\t`（制表符）：匹配制表符。'
- en: '`\v` (vertical tab): Matches a vertical tab character.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '`\v`（垂直制表符）：匹配垂直制表符字符。'
- en: '`+` (plus quantifier): Matches the previous expression or character one or
    more times.'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '`+`（加号量词）：匹配前一个表达式或字符一次或多次。'
- en: '`*` (star quantifier): Matches the previous expression or character zero or
    more times.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '`*`（星号量词）：匹配前一个表达式或字符零次或多次。'
- en: '`?` (question mark quantifier): Matches the previous expression or character
    zero or one time.'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`?`（问号量词）：匹配前一个表达式或字符零次或一次。'
- en: '`{3,5}` (bracket quantifier): Matches the previous expression a minimum and
    maximum of times respectively. If the maximum digit is missing, the matches will
    continue until a non-match is found. For example: \d{1,} matches one or more digits.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`{3,5}`（括号量词）：分别匹配前一个表达式的最小和最大次数。如果最大数字缺失，匹配将继续直到找到一个非匹配。例如：\d{1,} 匹配一个或多个数字。'
- en: '`^` (hat modifier): Matches an expression at the beginning of a string.'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`^`（尖角修饰符）：在字符串的开头匹配表达式。'
- en: '`$` (dollar modifier): Matches an expression at the end of a string.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '`$`（美元修饰符）：在字符串的末尾匹配表达式。'
- en: Number
  id: totrans-276
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Number
- en: The number input type allows the user to select number from any mechanism provided
    by the browser or to simply enter a numerical value if only a standard input field
    is provided by the browser. The value is validated by the browser to ensure that
    a number is indeed entered by the user. In mobile devices, where a digital keyboard
    is provided for data entry, this input type hints to the system that the keyboard
    to be provided should be the most appropriate for entering numbers.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 数字输入类型允许用户从浏览器提供的任何机制中选择数字，或者如果浏览器只提供标准输入字段，则只需输入数字值。浏览器会验证该值，以确保用户确实输入了数字。在移动设备上，数字键盘用于数据输入，该输入类型提示系统应提供最适合输入数字的键盘。
- en: '[PRE8]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute.'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称（值必须是字符串）：通过与属性关联的字符串值标识特定字段。
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control.'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用（可接受的值包括`disabled`，`""`或空）：指定该元素被禁用，不能接收控制。
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user.'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动完成（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便在用户提示时浏览器可以自动完成将来输入的存储值。
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading.'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动对焦（可接受的值包括`autofocus`，`""`或空）：指定元素在文档加载完成后必须立即获得焦点。
- en: '`min` (value must be a floating point number): Specifies the lowest number
    allowed to be selected by the user.'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小值（值必须是浮点数）：指定用户可以选择的最小数字。
- en: '`max` (value must be a floating point number): Specifies the highest number
    allowed to be selected by the user.'
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大值（值必须是浮点数）：指定用户可以选择的最大数字。
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user.'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只读（可接受的值包括`readonly`，`""`或空）：指定该元素的值不能被用户更改。
- en: '`placeholder` (value must be a string): Specifies a string to be shown to the
    user as a hint as to what information the field expects. This string disappears
    when data is entered into the field and is shown when the field becomes empty.'
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 占位符（值必须是字符串）：指定要显示给用户的字符串，作为字段期望的信息提示。当数据输入到字段中时，该字符串消失，并在字段变为空时显示。
- en: '`step` (acceptable values include `any` or any positive integer): Specifies
    how the value attribute of the element is to change.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步长（可接受的值包括`any`或任何正整数）：指定元素的值属性如何改变。
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必填（可接受的值包括`required`，`""`或空）：指定该元素必须具有有效值，以便允许表单提交。
- en: '`value` (value must be a floating point number): Specifies the actual floating
    point number represented by this element.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 值（值必须是浮点数）：指定由该元素表示的实际浮点数。
- en: Range
  id: totrans-291
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 范围
- en: The range input type allows the user to select a number from a specified range
    using a browser-supplied slider widget. The specific format and styling of this
    slider widget is unique to the browser and platform used. The data that results
    from a range selection is a floating point number.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 范围输入类型允许用户使用浏览器提供的滑块小部件从指定范围中选择一个数字。范围选择的具体格式和样式是独特的，取决于所使用的浏览器和平台。范围选择的结果数据是一个浮点数。
- en: '[PRE9]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute.'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 名称（值必须是字符串）：通过与属性关联的字符串值标识特定字段。
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control.'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用（可接受的值包括`disabled`，`""`或空）：指定该元素被禁用，不能接收控制。
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user.'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动完成（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便在用户提示时浏览器可以自动完成将来输入的存储值。
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading.'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动对焦（可接受的值包括`autofocus`，`""`或空）：指定元素在文档加载完成后必须立即获得焦点。
- en: '`min` (value must be a floating point number): Specifies the lowest number
    allowed to be selected by the user.'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最小值（值必须是浮点数）：指定用户可以选择的最小数字。
- en: '`max` (value must be a floating point number): Specifies the highest number
    allowed to be selected by the user.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大值（值必须是浮点数）：指定用户可以选择的最大数字。
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user.'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只读（可接受的值包括`readonly`，`""`或空）：指定该元素的值不能被用户更改。
- en: '`placeholder` (value must be a string): Specifies a string to be shown to the
    user as a hint as to what information the field expects. This string disappears
    when data is entered into the field, and is shown when the field becomes empty.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 占位符（值必须是字符串）：指定要显示给用户的字符串，作为字段期望的信息提示。当数据输入到字段中时，该字符串消失，并在字段变为空时显示。
- en: '`step` (acceptable values include `any` or any positive integer): Specifies
    how the value attribute of the element is to change.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步长（可接受的值包括`any`或任何正整数）：指定元素的值属性如何改变。
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`、`""`或空）：指定该元素必须具有有效值，以便允许表单提交。'
- en: '`value` (value must be a floating point number): Specifies the actual floating
    point number represented by this element.'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是浮点数）：指定由该元素表示的实际浮点数。'
- en: Search
  id: totrans-306
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 搜索
- en: The search input type allows the user to enter a string intended for a search.
    Overall, the search input type looks and behaves very much like a regular text
    input type. Some browsers might add miscellaneous behavior to this field, such
    as built-in icons or widgets to instantly clear the field, but none of these are
    officially part of the specification.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索输入类型允许用户输入用于搜索的字符串。总体而言，搜索输入类型看起来和行为非常像常规文本输入类型。一些浏览器可能会为该字段添加杂项行为，例如内置图标或小部件，以立即清除字段，但这些都不是规范的一部分。
- en: '[PRE10]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute.'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是一个字符串）：通过与属性关联的字符串值标识特定字段。'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled, and cannot receive control.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`、`""`或空）：指定该元素已禁用，无法接收控制。'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便将来可以由浏览器自动完成用户提示的存储值。'
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`、`""`或空）：指定给浏览器，元素在文档完成加载后必须立即获得焦点。'
- en: '`maxlength` (value must be a non-negative integer): Specifies the maximum length
    of characters that the element can contain.'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`maxlength`（值必须是非负整数）：指定元素可以包含的字符的最大长度。'
- en: '`pattern` (value must be a valid regular expression pattern as defined by ECMA
    262): Specifies a pattern that the browser must validate the specified input against.'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pattern`（值必须是由ECMA 262定义的有效正则表达式模式）：指定浏览器必须根据指定的输入验证模式。'
- en: '`size` (value must be a positive integer): Specifies the maximum number of
    characters displayed by the element although more characters may be allowed to
    be entered.'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`（值必须是正整数）：指定元素显示的最大字符数，尽管可能允许输入更多字符。'
- en: '`placeholder` (value must be a string): Specifies a string to be shown to the
    user as a hint as to what information the field expects. This string disappears
    when data is entered into the field and is shown when the field becomes empty.'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`placeholder`（值必须是一个字符串）：指定要显示给用户的字符串，作为字段期望的信息的提示。当数据输入到字段中时，此字符串消失，并在字段变为空时显示。'
- en: '`multiple` (acceptable values include `multiple`, `""`, or empty): Specifies
    that multiple values are allowed in this element.'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`multiple`（可接受的值包括`multiple`、`""`或空）：指定此元素允许多个值。'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user.'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`、`""`或空）：指定该元素的值不能被用户更改。'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit.'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`、`""`或空）：指定该元素必须具有有效值，以便允许表单提交。'
- en: '`value` (value must be a string with no line feed or carriage return character):
    Specifies the actual search query represented by this element.'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是一个没有换行符或回车字符的字符串）：指定由该元素表示的实际搜索查询。'
- en: Tel
  id: totrans-322
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 电话
- en: The tel input type allows the user to enter a telephone number.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 电话输入类型允许用户输入电话号码。
- en: '[PRE11]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute.'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是一个字符串）：通过与属性关联的字符串值标识特定字段。'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled and cannot receive control.'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`、`""`或空）：指定该元素已禁用，无法接收控制。'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user.'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便将来可以由浏览器自动完成用户提示的存储值。'
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading.'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`、`""`或空）：指定给浏览器，元素在文档完成加载后必须立即获得焦点。'
- en: '`maxlength` (value must be a non-negative integer): Specifies the maximum length
    of characters that the element can contain.'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`maxlength`（值必须是非负整数）：指定元素可以包含的字符的最大长度。'
- en: '`pattern` (value must be a valid regular expression pattern as defined by ECMA
    262): Specifies a pattern that the browser must validate the specified input against.'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pattern`（值必须是由ECMA 262定义的有效正则表达式模式）：指定浏览器必须根据指定的输入验证模式。'
- en: '`size` (value must be a positive integer): Specifies the maximum number of
    characters displayed by the element although more characters may be allowed to
    be entered.'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`（值必须是正整数）：指定元素显示的最大字符数，尽管可能允许输入更多字符。'
- en: '`placeholder` (value must be a string): Specifies a string to be shown to the
    user as a hint as to what information the field expects. This string disappears
    when data is entered into the field and is shown when the field becomes empty.'
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`placeholder`（值必须是字符串）：指定要显示给用户的字符串，作为字段期望的信息的提示。当数据输入到字段中时，此字符串消失，并在字段变为空时显示。'
- en: '`multiple` (acceptable values include `multiple`, `""`, or empty): Specifies
    that multiple values are allowed in this element.'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`multiple`（可接受的值包括`multiple`，`""`或空）：指定此元素允许多个值。'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user.'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`，`""`或空）：指定此元素的值不能被用户更改。'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit.'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`，`""`或空）：指定此元素必须具有有效值，以便允许表单提交。'
- en: '`value` (value must be a string with no line feed or carriage return character):
    Specifies the actual phone number represented by this element.'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是没有换行符或回车符的字符串）：指定此元素表示的实际电话号码。'
- en: Url
  id: totrans-338
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 网址
- en: The url input type allows the user to enter a website url.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: url输入类型允许用户输入网站网址。
- en: '[PRE12]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Other valid attributes for the date input type include the following:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 日期输入类型的其他有效属性包括以下内容：
- en: '`name` (value must be a string): Identifies a particular field by the string
    value associated with the attribute.'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`（值必须是字符串）：通过与属性关联的字符串值标识特定字段。'
- en: '`disabled` (acceptable values include `disabled`, `""`, or empty): Specifies
    that the element is disabled, and cannot receive control.'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled`（可接受的值包括`disabled`，`""`或空）：指定元素已禁用，不能接收控制。'
- en: '`autocomplete` (acceptable values include `on` or `off`): Specifies whether
    the browser should store values entered by the user so inputting a stored value
    in the future can be automatically completed by the browser upon hint by user.'
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autocomplete`（可接受的值包括`on`或`off`）：指定浏览器是否应存储用户输入的值，以便将来可以由用户提示时由浏览器自动完成存储的值。'
- en: '`autofocus` (acceptable values include `autofocus`, `""`, or empty): Specifies
    to the browser that the element must receive focus immediately after the document
    finishes loading.'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`autofocus`（可接受的值包括`autofocus`，`""`或空）：指定向浏览器，元素必须在文档完成加载后立即获得焦点。'
- en: '`maxlength` (value must be a non-negative integer): Specifies the maximum length
    of characters that the element can contain.'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`maxlength`（值必须是非负整数）：指定元素可以包含的最大字符长度。'
- en: '`pattern` (value must be a valid regular expression pattern as defined by ECMA
    262): Specifies a pattern that the browser must validate the specified input against.'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pattern`（值必须是由ECMA 262定义的有效正则表达式模式）：指定浏览器必须根据指定的输入验证模式进行验证。'
- en: '`size` (value must be a positive integer): Specifies the maximum number of
    characters displayed by the element although more characters may be allowed to
    be entered.'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size`（值必须是正整数）：指定元素显示的最大字符数，尽管可能允许输入更多字符。'
- en: '`placeholder` (value must be a string): Specifies a string to be shown to the
    user as a hint as to what information the field expects. This string disappears
    when data is entered into the field and is shown when the field becomes empty.'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`placeholder`（值必须是字符串）：指定要显示给用户的字符串，作为字段期望的信息的提示。当数据输入到字段中时，此字符串消失，并在字段变为空时显示。'
- en: '`multiple` (acceptable values include `multiple`, `""`, or empty): Specifies
    that multiple values are allowed in this element.'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`multiple`（可接受的值包括`multiple`，`""`或空）：指定此元素允许多个值。'
- en: '`readonly` (acceptable values include `readonly`, `""`, or empty): Specifies
    that the value of this element cannot be changed by the user.'
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly`（可接受的值包括`readonly`，`""`或空）：指定此元素的值不能被用户更改。'
- en: '`required` (acceptable values include `required`, `""`, or empty): Specifies
    that this element must have a valid value in order for the form to be allowed
    to submit.'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required`（可接受的值包括`required`，`""`或空）：指定此元素必须具有有效值，以便允许表单提交。'
- en: '`value` (value must be a string with no line feed or carriage return character):
    Specifies the actual url represented by this element.'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`value`（值必须是没有换行符或回车符的字符串）：指定此元素表示的实际网址。'
- en: Form validation
  id: totrans-354
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 表单验证
- en: Although a form submission will automatically validate data inserted into the
    form and alert the user of any possible errors, there is a nicely defined API
    that gives us much more control over the validation process and reporting, than
    just the default.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管表单提交将自动验证插入表单的数据并提醒用户可能的错误，但是有一个明确定义的API，可以让我们更多地控制验证过程和报告，而不仅仅是默认的。
- en: Validity state object
  id: totrans-356
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 有效状态对象
- en: 'Each `form` element has an object attached to it of type **ValidityState**
    , which contains a list of properties related to the validation status of that
    node. You can access this object directly from a `form` element and inspect its
    properties manually:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 每个“form”元素都附有一个类型为**ValidityState**的对象，其中包含与该节点的验证状态相关的属性列表。您可以直接从“form”元素访问此对象，并手动检查其属性：
- en: '[PRE13]'
  id: totrans-358
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: With these properties, we're able to inspect each `form` element and really
    customize the validation routine for the form. However, seeing that automatic
    validation is such an attractive feature designed to save time and effort, we'll
    focus on the functionality that can best help us with respect to this auto validation.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 具有这些属性，我们能够检查每个“form”元素，并真正定制表单的验证程序。然而，鉴于自动验证是一个旨在节省时间和精力的吸引人的功能，我们将专注于可以最好地帮助我们实现自动验证的功能。
- en: Custom validation
  id: totrans-360
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 自定义验证
- en: 'One of the properties of **ValidState** is the Boolean `customError`, which
    specifies whether a custom error message has been set to the field element or
    if the browser is to display a generic error message for this element in case
    the form does not validate. To set a custom error message, we can call the `setCustomValidity()`
    method of the `form` element itself and assign a message for the browser to use
    when needed, as follows:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '**ValidState**的属性之一是布尔值`customError`，它指定了是否为字段元素设置了自定义错误消息，或者浏览器是否要显示一个通用的错误消息，以防表单不通过验证。要设置自定义错误消息，我们可以调用`form`元素本身的`setCustomValidity()`方法，并在需要时为浏览器分配一条消息，如下所示：'
- en: '[PRE14]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Custom validation](img/6029OT_03_12.jpg)'
  id: totrans-363
  prefs: []
  type: TYPE_IMG
  zh: '![自定义验证](img/6029OT_03_12.jpg)'
- en: The first entry in the form just seen is invalid because it doesn't contain
    the string `packtpub.com`. The second form is valid because it conforms to the
    pattern specified. Note the customized error message on the first form, which
    is guaranteed to be the same in any browser that supports the features, as opposed
    to having a generic error message which can vary from browser to browser.
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 刚刚看到的表单中的第一个条目是无效的，因为它不包含字符串`packtpub.com`。第二个表单是有效的，因为它符合指定的模式。请注意第一个表单上的自定义错误消息，这在任何支持这些特性的浏览器中都是相同的，而不是具有可能因浏览器而异的通用错误消息。
- en: Used in the game
  id: totrans-365
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在游戏中使用
- en: There were two separate instances in the game where the web forms API was used.
    The first was in the game options widget, where a range input type was used to
    allow the user to select the difficulty of the game, and the other was used in
    the new champion form, allowing the user to enter his or her full name along with
    an email address.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中有两个单独的实例使用了Web表单API。第一个是在游戏选项小部件中，使用了范围输入类型，允许用户选择游戏的难度，另一个是在新冠军表单中使用，允许用户输入他/她的全名以及电子邮件地址。
- en: '[PRE15]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here we set up a basic range input, specifying the maximum value as `3`. By
    default, most browsers will set the value for the `step`, `min`, and `value` attributes
    all to `1`, but just to be safe, we'll specify those values in case a browser
    handles that differently in case the attributes aren't specified.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们设置了一个基本的范围输入，指定最大值为`3`。默认情况下，大多数浏览器会将`step`、`min`和`value`属性的值都设置为`1`，但为了安全起见，我们将在这里指定这些值，以防某个浏览器在这些属性未指定的情况下处理方式有所不同。
- en: '[PRE16]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Normally, you'll want to have two separate fields in your forms when asking
    for a first and last name. However, asking for a full name in a single field makes
    the field a great candidate for a custom pattern attribute.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当要求名字时，您会希望在表单中有两个单独的字段来分别输入名字和姓氏。然而，在单个字段中要求输入全名，使得该字段成为自定义模式属性的一个很好的候选项。
- en: The pattern used to validate a full name in this case is pretty simple; we look
    that the input as a word between 2 and 16 word characters (letters, and in this
    case possibly even numbers), followed by a single white space, which is in turn
    followed by another word of length greater than two, but less than 16 characters.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下用于验证全名的模式非常简单；我们将输入视为2到16个单词字符（字母，在这种情况下甚至可能是数字）之间的一个单词，后面跟着一个单个的空格，然后是另一个长度大于2但小于16个字符的单词。
- en: A placeholder string is added to both `input field` elements to avoid the need
    for extra labels in the form. This way the form can be nice and concise, yet descriptive
    enough that the user is never confused about what the form is asking.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免在表单中需要额外的标签，我们向两个`输入字段`元素添加了占位符字符串。这样，表单既可以简洁，又足够描述，用户永远不会困惑于表单在问什么。
- en: Data attributes
  id: totrans-373
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据属性
- en: When you need to need to store data in an HTML element and there is no other
    attribute that would be more appropriate to hold that data, the HTML5 specification
    provides a special attribute for this very situation. Although the specification
    specifically refers to this attribute a `custom data` attribute, most people simply
    call them as the `data` attributes.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要在HTML元素中存储数据，而没有其他更适合保存该数据的属性时，HTML5规范提供了一个特殊的属性来处理这种情况。尽管规范特别将这个属性称为`自定义数据`属性，但大多数人简单地称之为`data`属性。
- en: The way these `custom data` attributes work is very simple. Simply create the
    attribute name of your choice starting the name keyword with the prefix `data-`,
    then using any keyword of your choice that is at least one character in length.
    The only restriction is that the keyword must not contain any uppercase letters,
    although all HTML element attributes get lowercased automatically by default.
    You may add an arbitrary amount of such custom attributes to a single element.
    Finally, any `custom data` attributes may have any value of your choice, have
    the empty string as its value, or be empty, in either case the attribute is considered
    to have the value true (and the value false in its absence).
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '`自定义数据`属性的工作方式非常简单。只需创建您选择的属性名称，以`data-`前缀开始名称关键字，然后使用您选择的任何长度至少为一个字符的关键字。唯一的限制是关键字不能包含任何大写字母，尽管所有HTML元素属性默认会自动转换为小写。您可以向单个元素添加任意数量的这样的自定义属性。最后，任何`自定义数据`属性都可以具有您选择的任何值，将空字符串作为其值，或者为空，在任何情况下该属性都被认为具有值true（在其缺失的情况下为false）。'
- en: '[PRE17]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: In the example code just seen, we have some DOM node that happens to be an `input`
    tag and represents the score for some game. The first two sample data attributes,
    `data-is-high-score` and `data-score-to-beat`, are good examples. Just by looking
    at the names chosen for each attribute, we can infer the context in which they
    were meant to be used.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 在刚刚看到的示例代码中，我们有一些DOM节点，碰巧是一个`input`标签，代表了某个游戏的得分。前两个示例数据属性，`data-is-high-score`和`data-score-to-beat`，都是很好的例子。仅仅通过观察每个属性的名称，我们就可以推断它们应该被用在什么样的上下文中。
- en: The first attribute is meant to hold a Boolean value that represents whether
    or not the score displayed by the heading element is a new high score. Since it
    currently holds the value false, then obviously the current score is not yet a
    new high score.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个属性用于保存一个布尔值，表示标题元素显示的分数是否是新的最高分。由于它当前的值是false，显然当前的分数还不是新的最高分。
- en: The second attribute stores the current high score, meaning that if the player
    gets a score higher than that value, his or her score will become a new high score
    and the attribute `data-is-high-score` should be updated to hold the value true.
    Keep in mind that these attributes are static and meaningless and the logic of
    your application is in charge of adding meaning to them based on their context
    as well as handling any updates to them, such as the example described previously.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个属性存储当前的最高分，这意味着如果玩家得分高于该值，他或她的分数将成为新的最高分，并且属性“data-is-high-score”应该更新为true。请记住，这些属性是静态的和无意义的，您的应用程序逻辑负责根据它们的上下文赋予它们意义，并处理对它们的任何更新，例如前面描述的示例。
- en: Finally, note the third `data` attribute example. This is not a very practical
    use of data attributes because there exists another HTML element attribute that
    exists for that very purpose, namely, to specify that an element is disabled.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，注意第三个“数据”属性示例。这不是数据属性的一个非常实际的用法，因为存在另一个HTML元素属性，专门用于指定元素是否被禁用。
- en: 'To add, remove, and check for an element''s attributes and their values programmatically,
    you can use the following JavaScript APIs:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 要以编程方式添加、删除和检查元素的属性及其值，可以使用以下JavaScript API：
- en: '[PRE18]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Used in the game
  id: totrans-383
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在游戏中使用
- en: There were a couple of usages of custom `data attributes` in the game with different
    purposes and for different reasons. As mentioned previously, one use was to specify
    a player's current speed. Two other instances of the attribute were used to identify
    and distinguish a player from the other and to group separate buttons that were
    intended to behave the same way.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏中有几个不同目的和不同原因使用自定义“数据属性”的用法。如前所述，一个用途是指定玩家当前的速度。另外两个属性的用途是用于识别和区分一个玩家与另一个玩家，并将打算以相同方式行为的不同按钮分组。
- en: Note
  id: totrans-385
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: While the official specification states that you should always use the most
    appropriate attribute to store data in a DOM element, you should also keep in
    mind that the line that separates a possible `custom data` attribute and some
    other existing attribute may at times become gray. When this happens, you should
    prioritize your specific needs and goals.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然官方规范规定应始终使用最合适的属性在DOM元素中存储数据，但您还应该记住，可能会有时候可能会变得模糊，这时您应该优先考虑您的具体需求和目标。
- en: For example, if you are trying to use a `custom data` attribute to name a group
    of related elements, the question might arise that a simple CSS class can achieve
    the same result. Some people might argue that since CSS classes already exist
    and their purpose is to group related elements, others may also argue that if
    no specific style is shared among these elements, then use of such a custom data
    attribute is well justified. However, the overruling factor should be the specific
    application goals and needs, so if, for example, adding a symbolic CSS class to
    group these elements would make it confusing, since no real corresponding CSS
    class exists, then the use of the custom data attribute is indeed well justified.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您尝试使用“自定义数据”属性来命名一组相关元素，可能会出现一个问题，即简单的CSS类可以实现相同的结果。有人可能会认为，由于CSS类已经存在，它们的目的是将相关元素分组，其他人可能会认为，如果这些元素之间没有共享特定样式，那么使用这样的自定义数据属性是完全合理的。然而，最终的决定因素应该是特定的应用程序目标和需求，因此，例如，如果向这些元素添加一个符号CSS类会使其变得混乱，因为没有真正对应的CSS类存在，那么使用自定义数据属性的确是合理的。
- en: '[PRE19]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Note that each span element inside the `div.track` element has both, a data
    attribute of name, which distinguishes the hero player from the enemy player,
    and a data attribute of speed, which specifies how much each element moves by
    on each tick of the game timer. Whether that number represents pixels, percentages,
    or any other unit is irrelevant, since both players have the value set to zero,
    meaning that they move nothing per timer cycle.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`div.track`元素内的每个span元素都具有名称数据属性，用于区分英雄玩家和敌人玩家，以及速度数据属性，用于指定每个元素在游戏计时器的每个滴答中移动多少。无论该数字代表像素、百分比还是其他单位，都是无关紧要的，因为两个玩家的值都设置为零，这意味着它们在每个计时器周期中都不移动。
- en: Whether the data attribute name could be better represented by a CSS class can
    be argued in either direction. In this case, I chose to use a data attribute because
    then the styling can be independent of anything, and that concern can be delegated
    to another part of the application without any hesitation.
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 数据属性名称是否可以通过CSS类更好地表示可以在任何方向上进行辩论。在这种情况下，我选择使用数据属性，因为这样样式可以独立于任何内容，这个问题可以委托给应用程序的另一部分，而不会有任何犹豫。
- en: '[PRE20]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Here we have two separate buttons that share the same data attribute `intent
    = "play"`. With that attribute present, and that value assigned, we can then some
    JavaScript logic to handle those, and any other buttons, making their behavior
    predictable and universal.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有两个分开的按钮，它们共享相同的数据属性“intent = "play"”。有了这个属性，以及分配的值，我们可以使用一些JavaScript逻辑来处理这些按钮，以及其他任何按钮，使它们的行为可预测和通用。
- en: '[PRE21]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Query selectors
  id: totrans-394
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询选择器
- en: There are two different, yet very similar, APIs as part of the new selectors
    interface. One selects a collection of elements that match the query used and
    the other only matches one. If multiple nodes are matched by a query used in the
    single selector version, only the first occurrence is returned.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 作为新选择器接口的一部分，有两种不同但非常相似的API。一个选择与使用的查询匹配的元素集合，另一个只匹配一个。如果单个选择器版本中的查询匹配了多个节点，则只返回第一个出现的节点。
- en: To use this interface, you call the appropriate function on the document object
    and supply a string representing a CSS query. Now you can stop selecting an element
    by its ID, then navigating weird sub paths, in order to finally get to the element
    you want to target programmatically.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此接口，您需要在文档对象上调用适当的函数，并提供表示CSS查询的字符串。现在，您可以停止通过其ID选择元素，然后导航到奇怪的子路径，最终以编程方式定位要目标的元素。
- en: Note
  id: totrans-397
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Before this feature was available, it was common for developers to clutter their
    document structure with ID and class attributes just to make targeting those elements
    programmatically a bit easier. While using CSS expressions to target specific
    nodes may be easy enough that you may feel that you no longer need to add a unique
    ID or a class to an element just so it's easier to target that element through
    code, keep in mind that long CSS expressions might be so complex that the performance
    of your application might be compromised because of the time it takes to navigate
    to those elements. Remember that the shorter the CSS query, the easier it is for
    the browser to match the elements involved.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 在此功能可用之前，开发人员通常会在其文档结构中添加ID和类属性，以使通过代码定位这些元素变得更加容易。虽然使用CSS表达式来定位特定节点可能很容易，以至于您可能会觉得不再需要向元素添加唯一ID或类，以便通过代码更容易地定位该元素，但请记住，长的CSS表达式可能会非常复杂，以至于应用程序的性能可能会因为导航到这些元素所需的时间而受到影响。请记住，CSS查询越短，浏览器匹配涉及的元素就越容易。
- en: 'Consider the following code snippet from the game, where we try to register
    a click event listener to the image element found inside a navigation menu holding
    the game options:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑游戏中的以下代码片段，我们尝试向包含游戏选项的导航菜单中找到的图像元素注册点击事件侦听器：
- en: '[PRE22]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You will note that the demonstration of the old way of selecting elements uses
    a very defensive programming style. While trivial selections may not need such
    paranoiac measures, a large application would definitely benefit from such an
    approach in case a particular element is not found in the DOM, and an event listener
    is attempted to be added to a variable holding a null reference. Either way, you
    can see how the new selectors API solves this problem in this particular situation,
    since no matter what other elements are possibly added to, or taken away from
    that `#navOptions` subtree, the CSS query used in the `querySelector("#navOptions
    img")` statement would still hold true, whereas `nav.children[1]` might not refer
    to the same element, should the structure of `#navOptions` change.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 您将注意到，演示选择元素的旧方法使用了非常防御性的编程风格。虽然微不足道的选择可能不需要这样的偏执措施，但是一个大型应用程序肯定会从这种方法中受益，以防DOM中找不到特定元素，并且尝试向保存空引用的变量添加事件侦听器。无论如何，您可以看到新的选择器API如何解决了这个特定情况下的问题，因为无论`#navOptions`子树中可能添加或删除了哪些其他元素，`querySelector("#navOptions
    img")`语句中使用的CSS查询仍然有效，而`nav.children[1]`可能不再引用相同的元素，如果`#navOptions`的结构发生变化。
- en: Also, you will note that the call to `querySelector` will return null if no
    elements are matched with the CSS query provided. When using the `querySelectorAll`
    interface, remember that a list will be returned whenever a match is found, whether
    one or more elements are selected. Thus, if only a single element is matched,
    you would still need to index into the result set in order to match the only element
    returned.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果使用`querySelectorAll`接口，如果未使用提供的CSS查询匹配任何元素，则`querySelector`的调用将返回null。当使用`querySelectorAll`接口时，请记住每当找到匹配时都会返回一个列表，无论选择了一个还是多个元素。因此，如果只匹配了一个元素，您仍然需要索引到结果集中，以匹配返回的唯一元素。
- en: '[PRE23]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Used in the game
  id: totrans-404
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在游戏中使用
- en: As mentioned previously, every node selection was done using query selectors
    in the game. It is worth mentioning that it is not possible to register an event
    listener to a collection of nodes at once. You will need to iterate through the
    entire list (or at least a part of it) in order to touch one or more individual
    nodes in the list.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，游戏中的每个节点选择都是使用查询选择器完成的。值得一提的是，不可能一次向一组节点注册事件侦听器。您需要遍历整个列表（或至少部分列表）以触及列表中的一个或多个单独节点。
- en: '[PRE24]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: If you attempt to call any function that would normally call on an individual
    node directly on a result set from a `querySelectorAll` call, you will get a `TypeError`
    since the function called is applied to the array element and not each and all
    of its elements.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您尝试调用通常会直接在`querySelectorAll`调用的结果集上调用的任何函数，您将收到`TypeError`，因为调用的函数应用于数组元素而不是每个元素。
- en: Web fonts
  id: totrans-408
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Web字体
- en: The new web fonts API is particularly exciting and liberating to all those web
    developers out there who have had to rely on images in order to make the web truly
    beautiful up until now.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 新的Web字体API对所有那些直到现在都不得不依赖图像才能使网络真正美丽的Web开发人员来说特别令人兴奋和解放。
- en: To use custom fonts, we use the CSS property `@font-face` and specify a few
    attributes, such as the name of the font and the font file, which the browser
    will follow and download to the client much like it does with assets such as images,
    videos, and sound files that are called by the client.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用自定义字体，我们使用CSS属性`@font-face`并指定一些属性，例如字体的名称和字体文件，浏览器将遵循并下载到客户端，就像它对客户端调用的图像、视频和声音文件等资源一样。
- en: '[PRE25]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The only caveat with web fonts is that not all browsers support the same font
    types. The solution, though simple, can be a bit of a pain, since it involves
    uploading the different file format to your server then specifying each and all
    of them in the font-face declaration. When a browser comes across your custom
    font declaration, it can then download the file format that it can handle and
    serve that to the client.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: Web字体的唯一注意事项是并非所有浏览器都支持相同的字体类型。虽然解决方案很简单，但可能有点麻烦，因为它涉及将不同的文件格式上传到您的服务器，然后在font-face声明中指定每一个。当浏览器遇到您的自定义字体声明时，它可以下载它可以处理的文件格式并将其提供给客户端。
- en: '[PRE26]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: As of this writing, Google Chrome, Firefox 3.6, and Microsoft Internet Explorer
    9 accept the `.woff` font files, while Safari, Opera, and Android support the
    `.ttf` files. Apple's iOS only supports the `.svg` font files.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 截至目前，Google Chrome，Firefox 3.6和Microsoft Internet Explorer 9接受`.woff`字体文件，而Safari，Opera和Android支持`.ttf`文件。苹果的iOS只支持`.svg`字体文件。
- en: Alternatively, you can encode the entire font file into a `Data-URI` string
    and embed that into your CSS.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以将整个字体文件编码为`Data-URI`字符串并将其嵌入到您的CSS中。
- en: '[PRE27]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Note
  id: totrans-417
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'One great resource for free, open source, web fonts is Google''s Web Fonts
    project. There you can find a directly with several hundred different font files
    that you can search from and import right into your projects. Each file is hosted
    on Google servers, which means that the availability of these fonts is very high
    and the delivery speed is Google fast. What''s more, through their service, once
    you find a font that you''d like to import into your project, Google provides
    you with three options to import it: a standard link `rel="stylesheet"` tag, a
    CSS `@import` statement, or a JavaScript alternative. Either choice you make,
    the font file that eventually gets served to your end users is the exact format
    that the requesting browser supports. This way you don''t need to specify the
    multiple `src: url` attributes in your CSS file.'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '一个很好的免费开源网络字体资源是Google的Web字体项目。在那里，您可以找到一个直接包含数百种不同字体文件的资源，您可以从中搜索并直接导入到您的项目中。每个文件都托管在Google服务器上，这意味着这些字体的可用性非常高，交付速度也非常快。更重要的是，通过他们的服务，一旦您找到一个想要导入到您的项目中的字体，Google会为您提供三种导入选项：标准链接`rel="stylesheet"`标签，CSS`@import`语句或JavaScript替代方案。无论您做出哪种选择，最终提供给最终用户的字体文件都是请求浏览器支持的确切格式。这样，您就不需要在CSS文件中指定多个`src:
    url`属性。'
- en: Transitions
  id: totrans-419
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 过渡
- en: CSS transitions is a great and simple way to add that special effect to any
    existing website. It is likely that your existing projects already use some sort
    of state change to elements based on different events, such as a hover effect,
    which may cause elements to change size, color, or position.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: CSS过渡是向任何现有网站添加特殊效果的一种很好且简单的方法。很可能您现有的项目已经使用了某种基于不同事件的元素状态变化，比如悬停效果，这可能会导致元素改变大小、颜色或位置。
- en: By adding a CSS transition attribute to these elements, you can more closely
    control the various states between the `original` state and the `final` state.
    For example, if a link is set to have a blue color by default and the font color
    changes to purple when the user moves the mouse cursor over that text, a CSS transition
    would cause the text to smoothly and gradually change the blue into the purpose
    color, instead of simply changing the color property in the blink of an eye.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 通过向这些元素添加CSS过渡属性，您可以更加精确地控制`原始`状态和`最终`状态之间的各种状态。例如，如果链接默认设置为蓝色，当用户将鼠标光标移动到文本上时，字体颜色变为紫色，CSS过渡会使文本平滑地逐渐从蓝色变为紫色，而不是在眨眼之间改变颜色属性。
- en: Remember, only properties that can possibly have intermediate states can transition
    between states. Normally, you can determine if that is the case with a particular
    attribute by looking at the value assigned to the attribute. If the value is a
    number, such as 10px, 2.5em, or 50%, then you can be sure that a transition property
    would result in an incremental change into the `final` state. Since colors are
    ultimately represented by numbers, whether they're hexadecimal values or something
    else, we are able to apply transition properties to colors as well.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，只有可能具有中间状态的属性才能在状态之间过渡。通常，您可以通过查看分配给属性的值来确定特定属性是否具有中间状态。如果值是一个数字，比如10px、2.5em或50%，那么您可以确定过渡属性会导致逐渐变化到`最终`状态。由于颜色最终都是由数字表示的，无论是十六进制值还是其他值，我们也可以将过渡属性应用到颜色上。
- en: '[PRE28]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: In this example, the element with the `ID` property of `navOptions` is given
    a transition attribute. By default, that element has a left position of `-230px`,
    a patting of `10px`, and no background color. Then we define a class called `open`,
    and specifically associate it with the name `#navOptions` element. This class
    specify different values for the left, padding, and background properties. Thus,
    whenever the `#navOptions` element gets assigned to the class `.open`, those three
    properties will change gradually from the default into the new values.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，具有`navOptions`属性的元素被赋予了一个过渡属性。默认情况下，该元素的左侧位置为`-230px`，填充为`10px`，没有背景颜色。然后我们定义了一个名为`open`的类，并将其与`#navOptions`元素具体关联。这个类为左侧、填充和背景属性指定了不同的值。因此，每当`#navOptions`元素被分配到类`.open`时，这三个属性将从默认值逐渐变化为新值。
- en: 'Note that the transition property is assigned with a browser-specific prefix.
    This was done for simplicity, but in your production code you might want to check
    the status of each browser in regards to that specific property, and specify all
    values possibly needed, along with a plain, non-prefixed version for when the
    prefix is removed from a browser:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，过渡属性分配了一个特定于浏览器的前缀。这是为了简单起见，但在您的生产代码中，您可能希望检查每个浏览器关于该特定属性的状态，并指定可能需要的所有值，以及在浏览器删除前缀时的纯粹的非前缀版本：
- en: '[PRE29]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The example just seen uses short hand to define all four possible properties,
    but they can also be declared individually:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 刚才看到的示例使用简写来定义所有四个可能的属性，但它们也可以单独声明：
- en: '[PRE30]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'In short hand, the order of these parameters are: `property`, `duration`, `timing
    function`, and `delay`. You can also specify multiple properties in the same declaration
    by using a comma-separated list of properties:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 简写中，这些参数的顺序是：`属性`、`持续时间`、`时间函数`和`延迟`。您还可以通过使用逗号分隔的属性列表在同一声明中指定多个属性：
- en: '[PRE31]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note that you can have any arbitrary number of properties specified, or simply
    use the keyword `all`. Also, as shown in the previous example, not all values
    need to be the same (each property can have a different duration, timing function,
    or delay). The default delay is `0` (meaning that the transition starts right
    away as soon as the property change is triggered), and the default value for the
    timing function is ease.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您可以指定任意数量的属性，或者简单地使用关键字`all`。另外，如前面的示例所示，并非所有值都需要相同（每个属性可以具有不同的持续时间、时间函数或延迟）。默认延迟为`0`（意味着一旦触发属性更改，过渡就会立即开始），时间函数的默认值为ease。
- en: Animations
  id: totrans-432
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动画
- en: The animations API is somewhat similar to the transitions API, but the main
    difference is that we get to specify two or more keyframes and the browser transitions
    between these keyframes. A keyframe is simply a point in time, with a series of
    properties specified for that particular point.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 动画API与过渡API有些相似，但主要区别在于我们可以指定两个或更多个关键帧，浏览器在这些关键帧之间进行过渡。关键帧就是时间点，为该特定时间点指定了一系列属性。
- en: To use a CSS animation, you'll first need to create a named keyframe sequence,
    specify all the properties for each keyframe, then assign that keyframe sequence
    to some element. Similar to transitions, when you specify the keyframe sequence
    to an element, you also specify the configurations for that sequence, such as
    animation name, duration, timing function, delay, iteration count (how many times
    to play the entire keyframe sequence), direction (whether the animation plays
    from the first keyframe to the last or from the last to the first), and the play
    state (indicating whether the animation is running or paused).
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用CSS动画，首先需要创建一个命名的关键帧序列，为每个关键帧指定所有属性，然后将该关键帧序列分配给某个元素。与过渡类似，当您将关键帧序列指定给一个元素时，您还要指定该序列的配置，如动画名称、持续时间、定时函数、延迟、迭代次数（播放整个关键帧序列的次数）、方向（动画是从第一个关键帧到最后一个关键帧播放，还是从最后一个关键帧到第一个关键帧播放），以及播放状态（指示动画是运行还是暂停）。
- en: To set up a keyframe sequence, simply use the `@keyframes` keyword, followed
    by a string identifying that sequence.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 设置关键帧序列，只需使用`@keyframes`关键字，后面跟着标识该序列的字符串。
- en: '[PRE32]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Then, in a way slightly different from other CSS properties, we nest other
    expressions inside this declaration, where each sub-expression is an individual
    keyframe declaration. Since each keyframe is a point in time (where the total
    time is specify when the animation sequence is applied to an element, as we''ll
    see shortly), we specify each keyframe in one of two ways: we can either specify
    a percentage of the time for when a keyframe is called into action, or we can
    use the keywords `from` and `to`, indicating the point in time when 0 percent
    and 100 percent of the total animation time has elapsed.'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，与其他CSS属性略有不同，我们在这个声明中嵌套其他表达式，其中每个子表达式都是一个单独的关键帧声明。由于每个关键帧都是一个时间点（在应用动画序列到元素时指定总时间，我们很快就会看到），我们可以以两种方式之一指定每个关键帧：我们可以指定时间的百分比，以确定何时调用关键帧，或者我们可以使用`from`和`to`关键字，指示已经过去了总动画时间的0％和100％的时间点。
- en: '[PRE33]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Note that the `from` keyword behaves the exact same way as 0 percent and the
    `to` keyword the same as 100 percent. Whether to use one over the other is purely
    a matter of preference.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`from`关键字的行为与0％完全相同，`to`关键字与100％完全相同。使用其中一个纯粹是个人偏好的问题。
- en: '[PRE34]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Needless to say, the same issues regarding vendor prefixes apply to the animations
    interface.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 毋庸置疑，与动画接口相关的供应商前缀问题也适用。
- en: '[PRE35]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The text shadow
  id: totrans-443
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文本阴影
- en: The text shadow interface is much simpler to use than the transition or animation
    APIs since it only has four basic parameters, but can be equally as powerful in
    adding beautiful visual elements to make the user experience great. The parameters
    are the horizontal and vertical offset of the shadow relative to where the text
    is, the amount of blur to apply to the shadow, and finally, the color of the shadow,
    which can have the optional alpha channel for added opacity.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 文本阴影接口比过渡或动画API更简单，因为它只有四个基本参数，但在增加美观的视觉元素方面同样强大。这些参数是阴影相对于文本的水平和垂直偏移量，要应用到阴影的模糊程度，最后是阴影的颜色，可以具有可选的alpha通道以增加不透明度。
- en: '[PRE36]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Multiply shadows may be added to the same element by adding them in a comma-separated
    listed:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过逗号分隔的列表添加多个阴影到同一个元素中：
- en: '[PRE37]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Also, text shadows may be added to custom fonts embedded onto the page through
    HTML5''s web fonts:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，文本阴影可以添加到通过HTML5的Web字体嵌入到页面中的自定义字体：
- en: '[PRE38]'
  id: totrans-449
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The box shadow
  id: totrans-450
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盒子阴影
- en: Box shadows are identical to text shadow, except for a few very important distinctions.
    First and for most, they are not applied to text but only to box elements. You
    could in fact apply a box-shadow property to a text element (such as a `p` tag,
    h1, h2, h3, and so on), but the effect would be drastically different. While the
    text shadow effect, essentially, simply renders an offset and blurred copy of
    the text to which the shadow is applied, a box shadow effect is simply a copy
    of the rectangle created by the elements width, height, margin, and border which
    is rendered with the specified color, offset, and blur values assigned in CSS.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 盒子阴影与文本阴影相同，只是有一些非常重要的区别。首先，它们不适用于文本，而只适用于盒子元素。实际上，您可以将盒子阴影属性应用到文本元素（如`p`标签、h1、h2、h3等），但效果会截然不同。文本阴影效果本质上只是渲染应用了阴影的文本的偏移和模糊副本，而盒子阴影效果只是元素的宽度、高度、边距和边框创建的矩形的副本，以CSS中指定的颜色、偏移和模糊值渲染。
- en: '[PRE39]'
  id: totrans-452
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: Again, just like with text shadows, we can apply multiple box shadows to the
    same element through a comma-separated list of shadow declarations.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 与文本阴影一样，我们可以通过逗号分隔的阴影声明列表向同一个元素应用多个盒子阴影。
- en: '[PRE40]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: If you apply multiple shadows as just shown, any subsequent shadows should be
    drawn behind shadows drawn earlier, should they so happen to overlap. For example,
    the following set of shadows would display as a single, red shadow, since the
    red (`#cc0000`) was declared first and they both just so happen to cover the same
    area. Should the shadows have any amount of blur, the effect would be a mixture
    of the shadows. Since in this particular example, the shadows are completely solid,
    no blending takes place and the shadow in front takes precedence (since it's drawn
    higher in the rendering stack).
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 如果像刚才展示的那样应用多个阴影，任何后续的阴影都应该绘制在先前绘制的阴影后面，如果它们碰巧重叠。例如，以下一组阴影将显示为单个红色阴影，因为红色（`#cc0000`）首先声明，并且它们恰好覆盖相同的区域。如果阴影有任何程度的模糊，效果将是阴影的混合。由于在这个特定的例子中，阴影完全实心，不会发生混合，前面的阴影优先（因为它在渲染堆栈中绘制得更高）。
- en: '[PRE41]'
  id: totrans-456
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: There is also a fourth value that can be specified in a box shadow, which specifies
    the spread (or size) of the shadow. The default value is zero, which means the
    blur will begin right at the edge of the container created by the containing element.
    The effect created by a shadow spread is similar to a border placed between the
    blur of the shadow and the container created by the containing element.
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 还有第四个值可以在盒子阴影中指定，它指定了阴影的扩散（或大小）。默认值为零，这意味着模糊将从包含元素创建的容器的边缘开始。阴影扩散产生的效果类似于放置在模糊和包含元素创建的容器之间的边框。
- en: Finally, the optional `inset` keyword tells the browser to draw the shadow from
    the border of the container inwards, as opposed to from the border (or where the
    border would be, had there been a border width greater than zero) outwards in
    the direction of the horizontal and vertical offsets.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，可选的“inset”关键字告诉浏览器从容器的边框向内绘制阴影，而不是从边框（或者如果边框宽度大于零，则从边框的位置）向外沿水平和垂直偏移方向绘制。
- en: '[PRE42]'
  id: totrans-459
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Note that in a multiple shadow declaration, each shadow can specify its own
    rendering orientation.
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在多重阴影声明中，每个阴影都可以指定自己的渲染方向。
- en: '[PRE43]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: The border radius
  id: totrans-462
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边框半径
- en: The border radius property allows us to round the corners of the container formed
    by an element's dimensions. If there is any content where the rounding of the
    corner reduces the physical area of the container, that content is not drawn.
    Finally, the border radius declaration can be specified by a single value, where
    that value is applied to all corners (observe that here we refer to corners, not
    sides, as in a border declaration), by supplying four different values (where
    the corners would be targeted in the order top-left, top-right, bottom-right,
    and bottom-left), or by targeting each corner individually.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 边框半径属性允许我们使元素尺寸形成的容器的角落变圆。如果有任何内容使角落的圆弧减少了容器的物理区域，那么该内容就不会被绘制。最后，边框半径声明可以通过单个值指定，其中该值应用于所有角落（请注意，这里我们指的是角落，而不是边，如边框声明中所述），通过提供四个不同的值（角落的顺序为左上，右上，右下和左下），或者通过单独定位每个角落。
- en: '[PRE44]'
  id: totrans-464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The code
  id: totrans-465
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: Now that you are familiar with the HTML5 APIs used in this fun game, let's look
    under the covers and see how the game was put together. Due to brevity and ease
    of explanation, only the main portions of the source code for this game will be
    listed or explained here. Be sure to download the complete source code for the
    game at the book's website.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经熟悉了在这个有趣游戏中使用的HTML5 API，让我们来看看游戏是如何组合起来的。由于简洁和易于解释，这里只列出或解释了这个游戏源代码的主要部分。请务必在本书网站上下载游戏的完整源代码。
- en: The HTML structure
  id: totrans-467
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HTML结构
- en: The first component of this game was the HTML structure. The main pieces of
    it are the tracks where each player moves, along with each individual player,
    and the containers that show the text that needs to be typed by the user. There
    is also a second container that displays whatever text the player actually types
    in. For customization, there is an input type range that allows the player to
    change the difficulty level of the game, which for all practical purposes, only
    increases the speed attribute of the enemy player.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 这个游戏的第一个组件是HTML结构。它的主要部分是轨道，每个玩家移动的地方，以及显示用户需要输入的文本的容器。还有一个第二个容器，显示玩家实际输入的文本。为了定制，有一个输入类型范围，允许玩家改变游戏的难度级别，这在实际上只增加了敌方玩家的速度属性。
- en: '[PRE45]'
  id: totrans-469
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Other elements only add to the experience, either visually (through animations
    and other visual components) or with more interaction. But these are the basic
    game components without which the game cannot work.
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 其他元素只是为了增加体验，要么是视觉上（通过动画和其他视觉组件），要么是通过更多的交互。但这些是基本的游戏组件，没有它们游戏就无法运行。
- en: JavaScript and logic
  id: totrans-471
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JavaScript和逻辑
- en: The logic for this game is separated into three very basic components, namely,
    a `Player` class that encapsulates the behavior of each player, a game loop function
    that is called at a regular interval based on a game timer, and a few global functions
    that encapsulate various pieces of logic used throughout the life cycle of the
    application.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 这个游戏的逻辑分为三个非常基本的组件，即一个“Player”类，封装了每个玩家的行为，一个游戏循环函数，根据游戏计时器定期调用，以及一些全局函数，封装了应用程序生命周期中使用的各种逻辑片段。
- en: The `Player` class holds a reference to the DOM nodes that represent the player,
    the track where the player runs, and defines some basic behavior to control the
    player.
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: “Player”类持有一个引用，表示玩家的DOM节点，玩家奔跑的轨道，并定义了一些基本行为来控制玩家。
- en: '[PRE46]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: In the global scope, we create two instances of this player class, one representing
    the hero of the game and the other the enemy that we try to defeat.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 在全局范围内，我们创建了这个玩家类的两个实例，一个代表游戏的英雄，另一个代表我们试图击败的敌人。
- en: '[PRE47]'
  id: totrans-476
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: When the game starts, we initialize some code, which is among a few other things,
    means that we determine how fast the game timer is to run, how fast the enemy
    player is to move, what phrase the user is to type in, and most importantly, we
    register a keyboard event on the body element of our HTML structure. In other
    words, we listen to every key press anywhere on the page, so that we can detect
    what the user has typed in after the game has begun.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏开始时，我们初始化一些代码，这意味着我们确定游戏计时器的运行速度，敌方玩家的移动速度，用户要输入的短语，最重要的是，我们在HTML结构的body元素上注册了一个键盘事件。换句话说，我们监听页面上任何地方的每次按键，以便在游戏开始后检测用户输入的内容。
- en: This is probably the most complex function in the game because we have to handle
    every key press by ourselves. This means that we need to take into account whether
    or not the user has pressed a key while holding the *Shift* key (in which case
    they have entered a capital letter), or whether a special key combination was
    pressed. For example, if the user presses the *Backspace* key, by default the
    browser will respond to this event by navigating the web page back to the last
    page navigated. Obviously, we don't want the browser to navigate away from our
    game. Instead we want the last character typed in by the user to be deleted. Thus,
    small details such as this must be taken into account.
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是游戏中最复杂的功能，因为我们必须自己处理每次按键。这意味着我们需要考虑用户是否按下了*Shift*键（在这种情况下，他们输入了大写字母），或者是否按下了特殊的键组合。例如，如果用户按下*Backspace*键，默认情况下浏览器会通过将网页导航回上次导航的页面来响应此事件。显然，我们不希望浏览器离开我们的游戏。相反，我们希望删除用户输入的最后一个字符。因此，诸如此类的细节必须考虑在内。
- en: Finally, at each letter typed in by the user, we must check whether that letter
    was the same letter we were expecting (the correct letter) or whether the user
    has typed in a wrong letter. Based on this decision, we output to the screen the
    letter just typed, along with some HTML that allows us to render that letter differently
    based on whether or not it was the right key.
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，对于用户输入的每个字母，我们必须检查该字母是否是我们期望的相同字母（正确的字母），或者用户是否输入了错误的字母。根据这个决定，我们将刚刚输入的字母输出到屏幕上，并附上一些HTML，使我们能够根据是否是正确的键来以不同的方式呈现该字母。
- en: '[PRE48]'
  id: totrans-480
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: At every tick of the main game timer, which we can make faster or slower based
    on the difficulty that the player has selected, we call our main game loop, which
    performs some basic tasks. First we move each player, then check if any of them
    has reached the end of their track. This is done by calling each player's `isFinished()`
    function, defined by the `Player` class. If that is the case, then we know that
    the game is over. If that is so, we unregister the keyboard event we had bound
    to the body element, so that we no longer inspect any keyboard input from the
    user. After we've determined that the game is over, we determine if the user has
    actually won or lost the game. If they have won, we record their victory. If they
    have lost, we tell them so, and allow them to play a new game. If the game is
    not yet over, we simply wait for the game loop to run again.
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 在主游戏计时器的每个滴答声中，我们可以根据玩家选择的难度使其变快或变慢，我们调用我们的主游戏循环，执行一些基本任务。首先我们移动每个玩家，然后检查他们是否到达了赛道的终点。这是通过调用每个玩家的`isFinished()`函数来完成的，该函数由`Player`类定义。如果是这种情况，那么我们知道游戏结束了。如果是这样，我们取消绑定到body元素的键盘事件，这样我们就不再检查用户的任何键盘输入。在确定游戏结束后，我们确定用户是否实际赢得或输掉了游戏。如果他们赢了，我们记录他们的胜利。如果他们输了，我们告诉他们，并允许他们玩新游戏。如果游戏还没有结束，我们只需等待游戏循环再次运行。
- en: '[PRE49]'
  id: totrans-482
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Summary
  id: totrans-483
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we finally jumped off the spring board we set up in the previous
    chapter, and dove headfirst into the very deep world of HTML5 game development.
    We started out by setting up the project structure used in constructing this game
    and discussed the main goals and objectives of the game. Next, we looked at each
    of the components used in the game and discussed how and why they were used. Finally,
    we look a deeper look at each of the HTML5 APIs, that make up each of these components,
    and looked at some code examples to make them work.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们终于跳出了上一章设立的跳板，直接投入了HTML5游戏开发的深邃世界。我们首先建立了用于构建此游戏的项目结构，并讨论了游戏的主要目标和目的。接下来，我们查看了游戏中使用的每个组件，并讨论了它们的使用方式和原因。最后，我们深入研究了构成这些组件的每个HTML5
    API，并查看了一些代码示例来使它们工作。
- en: Since the complete source code for the game is fairly lengthy, we only took
    a brief peek at the main structure of the code, so that when you download the
    full source from Packt's website, the code looks somewhat familiar to you. Again,
    I want to remind you that because the focus of this book is not game development
    but rather HTML5, the methods and techniques used to make this game may or may
    not be the most optimal approach to game development. Although, the way this game
    was coded in pure HTML5, it works and performs great in any modern webkit-based
    browser. A discussion in game development as well as more sophisticated techniques
    is beyond the scope of the book.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 由于游戏的完整源代码相当冗长，我们只是简要地查看了代码的主要结构，这样当您从Packt的网站下载完整的源代码时，代码对您来说会有些熟悉。再次提醒您，因为本书的重点不是游戏开发，而是HTML5，用于制作此游戏的方法和技术可能不是最优化的游戏开发方法。尽管如此，这款游戏是纯HTML5编码的，在任何现代的基于webkit的浏览器中都能很好地运行和表现。游戏开发的讨论以及更复杂的技术超出了本书的范围。
