["```html\n      android avd\n\n```", "```html\nnpm install -g ios-sim\nnpm install -g ios-deploy\n\n```", "```html\nionic start -a \"Example 14\" -i app.example.fourteen example14 tabs --v2\n\n```", "```html\nionic platform add android\n\n```", "```html\nionic emulate android\n\n```", "```html\nionic run android\n\n```", "```html\nionic run android\n\n```", "```html\nionic platform add ios\n\n```", "```html\nionic run ios\n\n```", "```html\nionic plugin add org.apache.cordova.camera\n\n```", "```html\nionic plugin add cordova-plugin-camera\n\n```", "```html\nionic plugin rm org.apache.cordova.camera\n\n```", "```html\nionic plugin rm cordova-plugin-camera\n\n```", "```html\nionic plugin ls\n\n```", "```html\nionic plugin search scanner barcode\n\n```", "```html\n      ionic start -a \"Example 15\" -i app.example.fifteen \n      example15 blank --v2\n\n```", "```html\n      ionic plugin search battery status\n\n```", "```html\n       ionic plugin add cordova-plugin-battery-status.\n\n```", "```html\nionic plugin ls\n\n```", "```html\nnpm install --save @ionic-native/battery-status\n\n```", "```html\nimport { NgModule, ErrorHandler } from '@angular/core'; \nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular'; \nimport { MyApp } from './app.component'; \nimport { HomePage } from '../pages/home/home'; \n\nimport { StatusBar } from '@ionic-native/status-bar'; \nimport { SplashScreen } from '@ionic-native/splash-screen'; \nimport { BatteryStatus } from '@ionic-native/battery-status'; \n\n@NgModule({ \n  declarations: [ \n    MyApp, \n    HomePage \n  ], \n  imports: [ \n    IonicModule.forRoot(MyApp) \n  ], \n  bootstrap: [IonicApp], \n  entryComponents: [ \n    MyApp, \n    HomePage \n  ], \n  providers: [ \n    StatusBar, \n    SplashScreen, \n    BatteryStatus, \n    {provide: ErrorHandler, useClass: IonicErrorHandler} \n  ] \n}) \nexport class AppModule {}\n\n```", "```html\nimport { Component } from '@angular/core'; \nimport { BatteryStatus } from 'ionic-native'; \nimport { Platform } from 'ionic-angular'; \n\n@Component({ \n  selector: 'page-home', \n  templateUrl: 'home.html' \n}) \nexport class HomePage { \n  level: Number; \n  isPlugged: Boolean; \n\n  constructor(platform: Platform) { \n    platform.ready().then(() => { \n      BatteryStatus.onChange().subscribe( \n        (status) => { \n          this.level = status.level; \n          this.isPlugged = status.isPlugged; \n        } \n      ); \n    }); \n  } \n}\n\n```", "```html\n<ion-header> \n    <ion-navbar> \n        <ion-title> \n            Battery Status \n        </ion-title> \n    </ion-navbar> \n</ion-header> \n<ion-content padding> \n    <h2>level : {{level}}</h2> \n    <h2>isPluggedIn : {{isPlugged}}</h2> \n</ion-content>\n\n```", "```html\nionic serve\n\n```", "```html\nNative: tried calling StatusBar.styleDefault, but Cordova is not \navailable. \nMake sure to include cordova.js or run in a device/simulator\n\n```", "```html\nionic platform add android\n\n```", "```html\nionic platform add ios\n\n```", "```html\nionic plugin add https://github.com/apache/cordova-plugin-\nwhitelist.git\n\n```", "```html\n<allow-navigation href=\"http://example.com/*\" />\n\n```", "```html\n<allow-navigation href=\"http://*/*\" /> \n<allow-navigation href=\"https://*/*\" /> \n<allow-navigation href=\"data:*\" />\n\n```", "```html\n<allow-intent href=\"sms:*\" />\n\n```", "```html\n<allow-intent href=\"https://*/*\" />\n\n```", "```html\n<!-- Allow XHRs via https only --> \n<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self' https:\">\n\n```", "```html\nionic start -a \"Example 16\" -i app.example.sixteen example16 blank --v2\n\n```", "```html\nionic plugin add cordova-plugin-device\n\n```", "```html\nnpm install --save @ionic-native/device\n\n```", "```html\nimport { NgModule, ErrorHandler } from '@angular/core'; \nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular'; \nimport { MyApp } from './app.component'; \nimport { HomePage } from '../pages/home/home'; \n\nimport { StatusBar } from '@ionic-native/status-bar'; \nimport { SplashScreen } from '@ionic-native/splash-screen'; \nimport { Device } from '@ionic-native/device'; \n\n@NgModule({ \n  declarations: [ \n    MyApp, \n    HomePage \n  ], \n  imports: [ \n    IonicModule.forRoot(MyApp) \n  ], \n  bootstrap: [IonicApp], \n  entryComponents: [ \n    MyApp, \n    HomePage \n  ], \n  providers: [ \n    StatusBar, \n    SplashScreen, \n    Device, \n    { provide: ErrorHandler, useClass: IonicErrorHandler } \n  ] \n}) \nexport class AppModule { }\n\n```", "```html\nimport { Component } from '@angular/core'; \nimport { Device } from '@ionic-native/device'; \nimport { Platform } from 'ionic-angular'; \n\n@Component({ \n  selector: 'page-home', \n  templateUrl: 'home.html' \n}) \nexport class HomePage { \n  cordova: String; \n  model: String; \n  devicePlatform: String; \n  uuid: String; \n  version: String; \n  manufacturer: String; \n  isVirtual: Boolean; \n  serial: String; \n\n  constructor(private platform: Platform, \n    private device: Device) { \n    platform.ready().then(() => { \n      let device = this.device; \n      this.cordova = device.cordova; \n      this.model = device.model; \n      this.devicePlatform = device.platform; \n      this.uuid = device.uuid; \n      this.version = device.version; \n      this.manufacturer = device.manufacturer; \n      this.isVirtual = device.isVirtual; \n      this.serial = device.serial; \n    }); \n  } \n}\n\n```", "```html\n<ion-header> \n  <ion-navbar> \n    <ion-title> \n      Ionic Blank \n    </ion-title> \n  </ion-navbar> \n</ion-header> \n\n<ion-content padding> \n  <table> \n    <tr> \n      <td>cordova</td> \n      <td>{{cordova}}</td> \n    </tr> \n    <tr> \n      <td>model</td> \n      <td>{{model}}</td> \n    </tr> \n    <tr> \n      <td>platform</td> \n      <td>{{platform}}</td> \n    </tr> \n    <tr> \n      <td>uuid</td> \n      <td>{{uuid}}</td> \n    </tr> \n    <tr> \n      <td>version</td> \n      <td>{{version}}</td> \n    </tr> \n    <tr> \n      <td>manufacturer</td> \n      <td>{{manufacturer}}</td> \n    </tr> \n    <tr> \n      <td>isVirtual</td> \n      <td>{{isVirtual}}</td> \n    </tr> \n    <tr> \n      <td>serial</td> \n      <td>{{serial}}</td> \n    </tr> \n  </table> \n</ion-content>\n\n```", "```html\nionic start -a \"Example 17\" -i \napp.example.seventeen example17 blank --v2\n\n```", "```html\nionic plugin add cordova-plugin-x-toast\n\n```", "```html\nnpm install --save @ionic-native/toast\n\n```", "```html\nimport { NgModule, ErrorHandler } from '@angular/core'; \nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular'; \nimport { MyApp } from './app.component'; \nimport { HomePage } from '../pages/home/home'; \n\nimport { StatusBar } from '@ionic-native/status-bar'; \nimport { SplashScreen } from '@ionic-native/splash-screen'; \nimport { Toast } from '@ionic-native/toast'; \n\n@NgModule({ \n  declarations: [ \n    MyApp, \n    HomePage \n  ], \n  imports: [ \n    IonicModule.forRoot(MyApp) \n  ], \n  bootstrap: [IonicApp], \n  entryComponents: [ \n    MyApp, \n    HomePage \n  ], \n  providers: [ \n    StatusBar, \n    SplashScreen, \n    Toast, \n    {provide: ErrorHandler, useClass: IonicErrorHandler} \n  ] \n}) \nexport class AppModule {}\n\n```", "```html\nionic platform add ios\n\n```", "```html\nionic platform add android\n\n```", "```html\nimport { Component } from '@angular/core'; \nimport { Toast } from '@ionic-native/toast'; \nimport { Platform } from 'ionic-angular'; \n\n@Component({ \n  selector: 'page-home', \n  templateUrl: 'home.html' \n}) \nexport class HomePage { \n\n  constructor(private platform: Platform, private toast: Toast) { \n    platform.ready().then(() => { \n      toast.show(\"I'm a toast\", '5000', 'center').subscribe( \n        (toast) => { \n          console.log(toast); \n        } \n      ); \n  }); \n  } \n\n}\n\n```", "```html\nionic emulate ios or ionic emulate android\n\n```", "```html\nionic start -a \"Example 18\" -i app.example.eightteen example18 blank --v2\n\n```", "```html\nionic plugin add cordova-plugin-dialogs\n\n```", "```html\nnpm install --save @ionic-native/dialogs\n\n```", "```html\nimport { NgModule, ErrorHandler } from '@angular/core'; \nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular'; \nimport { MyApp } from './app.component'; \nimport { HomePage } from '../pages/home/home'; \n\nimport { StatusBar } from '@ionic-native/status-bar'; \nimport { SplashScreen } from '@ionic-native/splash-screen'; \nimport { Dialogs } from '@ionic-native/dialogs'; \n\n@NgModule({ \n  declarations: [ \n    MyApp, \n    HomePage \n  ], \n  imports: [ \n    IonicModule.forRoot(MyApp) \n  ], \n  bootstrap: [IonicApp], \n  entryComponents: [ \n    MyApp, \n    HomePage \n  ], \n  providers: [ \n    StatusBar, \n    SplashScreen, \n    Dialogs, \n    {provide: ErrorHandler, useClass: IonicErrorHandler} \n  ] \n}) \nexport class AppModule {}\n\n```", "```html\nionic platform add ios\n\n```", "```html\nionic platform add android\n\n```", "```html\nimport { Component } from '@angular/core'; \nimport { Dialogs } from '@ionic-native/dialogs'; \nimport { Platform } from 'ionic-angular'; \n\n@Component({ \n  selector: 'page-home', \n  templateUrl: 'home.html' \n}) \nexport class HomePage { \n  name: String; \n\n  constructor(private dialogs: Dialogs, private platform: Platform) { \n    platform.ready().then(() => { \n      dialogs \n        .prompt('Name Please?', 'Identity', ['Cancel', 'Ok'], 'John \n        McClane') \n        .then((result) => { \n          if (result.buttonIndex == 2) { \n            this.name = result.input1; \n          } \n        }); \n    }); \n  } \n}\n\n```", "```html\n<ion-header> \n    <ion-navbar> \n        <ion-title> \n            Reveal Your Identity \n        </ion-title> \n    </ion-navbar> \n</ion-header> \n<ion-content padding> \n    Hello {{name}}!! \n</ion-content>\n\n```", "```html\n    ionic emulate ios or ionic emulate android\n\n```", "```html\nionic start -a \"Example 19\" -i \napp.example.nineteen example19 blank --v2\n\n```", "```html\nionic plugin add de.appplant.cordova.plugin.local-notification\n\n```", "```html\nnpm install --save @ionic-native/local-notifications\n\n```", "```html\nimport { NgModule, ErrorHandler } from '@angular/core'; \nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular'; \nimport { MyApp } from './app.component'; \nimport { HomePage } from '../pages/home/home'; \n\nimport { StatusBar } from '@ionic-native/status-bar'; \nimport { SplashScreen } from '@ionic-native/splash-screen'; \nimport { LocalNotifications } from '@ionic-native/local-notifications'; \n\n@NgModule({ \n  declarations: [ \n    MyApp, \n    HomePage \n  ], \n  imports: [ \n    IonicModule.forRoot(MyApp) \n  ], \n  bootstrap: [IonicApp], \n  entryComponents: [ \n    MyApp, \n    HomePage \n  ], \n  providers: [ \n    StatusBar, \n    SplashScreen, \n    LocalNotifications, \n    {provide: ErrorHandler, useClass: IonicErrorHandler} \n  ] \n}) \nexport class AppModule {}\n\n```", "```html\nionic platform add ios\n\n```", "```html\nionic platform add android\n\n```", "```html\nimport { Component } from '@angular/core'; \nimport { LocalNotifications } from '@ionic-native/local-notifications'; \nimport { Platform } from 'ionic-angular'; \n\n@Component({ \n  selector: 'page-home', \n  templateUrl: 'home.html' \n}) \nexport class HomePage { \n  defaultText: String = 'Hello World'; \n\n  constructor(private localNotifications: LocalNotifications, private platform: Platform) { } \n\n  triggerNotification(notifText) { \n    this.platform.ready().then(() => { \n\n      notifText = notifText || this.defaultText; \n      this.localNotifications.schedule({ \n        id: 1, \n        text: notifText, \n      }); \n    }); \n  } \n\n}\n\n```", "```html\n<ion-header> \n    <ion-navbar> \n        <ion-title> \n            Local Notification \n        </ion-title> \n    </ion-navbar> \n</ion-header> \n<ion-content padding> \n    <div class=\"list\"> \n        <label class=\"item item-input\"> \n            <span class=\"input-label\">Enter Notification text</span> \n            <input type=\"text\" #notifText [ngModel]=\"defaultText\"> \n        </label> \n        <label class=\"item item-input\"> \n            <button ion-button color=\"dark\" (click)=\" \n            triggerNotification(notifText.value)\">Notify</button> \n        </label> \n    </div> \n</ion-content>\n\n```", "```html\nionic server android\n\n```", "```html\nionic server ios\n\n```", "```html\nionic start -a \"Example 20\" -i app.example.twenty example20 blank --v2\n\n```", "```html\nionic plugin add cordova-plugin-geolocation\n\n```", "```html\nnpm install --save @ionic-native/geolocation\n\n```", "```html\nimport { NgModule, ErrorHandler } from '@angular/core'; \nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular'; \nimport { MyApp } from './app.component'; \nimport { HomePage } from '../pages/home/home'; \n\nimport { StatusBar } from '@ionic-native/status-bar'; \nimport { SplashScreen } from '@ionic-native/splash-screen'; \nimport { Geolocation } from '@ionic-native/geolocation'; \n\n@NgModule({ \n  declarations: [ \n    MyApp, \n    HomePage \n  ], \n  imports: [ \n    IonicModule.forRoot(MyApp) \n  ], \n  bootstrap: [IonicApp], \n  entryComponents: [ \n    MyApp, \n    HomePage \n  ], \n  providers: [ \n    StatusBar, \n    SplashScreen, \n    Geolocation, \n    {provide: ErrorHandler, useClass: IonicErrorHandler} \n  ] \n}) \nexport class AppModule {}\n\n```", "```html\nionic platform add ios\n\n```", "```html\nionic platform add android\n\n```", "```html\nimport { Component } from '@angular/core'; \nimport { Platform } from 'ionic-angular'; \nimport { Geolocation } from '@ionic-native/geolocation'; \n\n@Component({ \n  selector: 'page-home', \n  templateUrl: 'home.html' \n}) \nexport class HomePage { \n  latitude: Number = 0; \n  longitude: Number = 0; \n  accuracy: Number = 0; \n\n  constructor(private platform: Platform, \n    private geolocation: Geolocation) { \n    platform.ready().then(() => { \n      geolocation.getCurrentPosition().then((position) => { \n        this.latitude = position.coords.latitude; \n        this.longitude = position.coords.longitude; \n        this.accuracy = position.coords.accuracy; \n      }); \n    }); \n  } \n}\n\n```", "```html\n<ion-header> \n    <ion-navbar> \n        <ion-title> \n            Ionic Blank \n        </ion-title> \n    </ion-navbar> \n</ion-header> \n<ion-content padding> \n    <ul class=\"list\"> \n        <li class=\"item\"> \n            Latitude : {{latitude}} \n        </li> \n        <li class=\"item\"> \n            Longitude : {{longitude}} \n        </li> \n        <li class=\"item\"> \n            Accuracy : {{accuracy}} \n        </li> \n    </ul> \n</ion-content>\n\n```", "```html\nionic emulate ios\n\n```", "```html\nionic emulate android\n\n```"]