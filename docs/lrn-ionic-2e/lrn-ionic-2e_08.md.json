["```html\nionic start -a \"TodoApp-v1\" -i app.example.todoapp_v1 todoapp_v1  blank\n\n```", "```html\nangular.module('starter') \n.service('LS', function($window) { // local storage \n    this.set = function(key, value) { \n        // http://stackoverflow.com/a/23656919/1015046 \n        $window.localStorage.setItem(key, \n        $window.angular.toJson(value)); \n    } \n\n    this.get = function(key) { \n        return $window.JSON.parse($window.localStorage.getItem(key)); \n    } \n\n    this.remove = function(key) { \n        $window.localStorage.removeItem(key); \n    } \n})\n\n```", "```html\n// snipp \n.service('LN', function($ionicPlatform, $cordovaLocalNotification) { // local notifications \n    var i = 1; \n    this.show = function(text) { \n        $ionicPlatform.ready(function() { \n            var notifPromise = $cordovaLocalNotification.schedule({ \n                id: i++, \n                title: 'Todo App', \n                text: text \n            }) \n            return notifPromise; \n        }); \n    } \n})\n\n```", "```html\n// snipp \n.service('IP', function ($http) { \n    this.get = function(){ \n        return $http.get('https://api.ipify.org/?format=json'); \n    } \n})\n\n```", "```html\n// snipp \n.service('AUTH', function(LS) { \n    var LS_AUTH_KEY = 'auth'; \n    this.login = function(user) { \n        if (user.email === 'a@a.com', user.password === 'a') { \n            LS.set(LS_AUTH_KEY, true); \n            return true; \n        } else { \n            return false; \n        } \n    } \n\n    this.isAuthenticated = function() { \n        return !!LS.get(LS_AUTH_KEY); \n    } \n\n    this.logout = function() { \n        LS.remove(LS_AUTH_KEY); \n    } \n\n}) \n\n.service('TODOS', function(LS) { \n    var LS_TODOS_KEY = 'todos'; \n\n    this.set = function(todos) { \n        LS.set(LS_TODOS_KEY, todos); \n    } \n\n    this.get = function() { \n        return LS.get(LS_TODOS_KEY) || []; \n    } \n});\n\n```", "```html\n.config(function($stateProvider, $urlRouterProvider) { \n    $stateProvider \n        .state('login', { \n            url: '/login', \n            templateUrl: 'templates/login.html', \n            controller: 'LoginCtrl' \n        }) \n        .state('home', { \n            url: '/home', \n            templateUrl: 'templates/home.html', \n            controller: 'HomeCtrl' \n        }); \n    // if none of the above states are matched, use this as the fallback \n    $urlRouterProvider.otherwise('/login'); \n});\n\n```", "```html\nangular.module('starter') \n\n.controller('LoginCtrl', function($scope, AUTH, $state, $ionicHistory, $ionicPopup) { \n\n    // check Auth before proceeding \n    if (AUTH.isAuthenticated()) { \n        $state.go('home'); \n    } \n\n    // hardcode the test user \n    $scope.user = { \n        email: 'a@a.com', \n        password: 'a' \n    } \n\n    $scope.login = function() { \n        if (AUTH.login($scope.user)) { \n            // remove all views in stack \n            // this way when the user clicks on the  \n            // back button on the home page \n            // we do not show the login screen again \n            $ionicHistory.clearHistory(); \n            $state.go('home'); \n        } else { \n            $ionicPopup.alert({ \n                title: 'LOGIN FAILED', \n                template: 'Either the email or password is invalid.' \n            }); \n        }; \n    } \n})\n\n```", "```html\n// snipp \n\n.controller('HomeCtrl', function($scope, $state, AUTH, TODOS, $ionicHistory, $ionicPopup, $ionicListDelegate, LN) { \n\n    $scope.todo = {}; \n    // check Auth before proceeding \n    if (!AUTH.isAuthenticated()) { \n        $state.go('login'); \n    } \n\n    // fetch todos on load \n    $scope.todos = TODOS.get(); \n\n    $scope.add = function() { \n        //reset \n        $scope.todo.text = ''; \n        var addTodoPopup = $ionicPopup.show({ \n            template: '<input type=\"text\" ng-model=\"todo.text\">', \n            title: 'Add Todo', \n            subTitle: 'Enter a Todo To Do', \n            scope: $scope, \n            buttons: [ \n                { text: 'Cancel' }, { \n                    text: '<b>Save</b>', \n                    type: 'button-positive', \n                    onTap: function(e) { \n                        // validation \n                        if (!$scope.todo.text) { \n                            e.preventDefault(); \n                        } else { \n                            return $scope.todo.text; \n                        } \n                    } \n                } \n            ] \n        }); \n\n        addTodoPopup.then(function(text) { \n            if (text) { \n                var todo = { \n                    text: text, \n                    isCompleted: false \n                }; \n\n                $scope.todos.push(todo); \n                // save it to LS \n                TODOS.set($scope.todos); \n                LN.show('Todo Created'); \n            } \n        }); \n    } \n\n    $scope.update = function(todo) { \n        todo.isCompleted = !todo.isCompleted; \n        $ionicListDelegate.closeOptionButtons(); \n        // update LS \n        TODOS.set($scope.todos); \n        LN.show('Todo Updated'); \n    } \n\n    $scope.delete = function($index, todo) { \n\n        var deleteConfirmPopup = $ionicPopup.confirm({ \n            title: 'Delete Todo', \n            template: 'Are you sure you want to delete \"' + todo.text + \n            '\"? ' \n        }); \n\n        deleteConfirmPopup.then(function(res) { \n            if (res) { \n                $scope.todos.splice($index, 1); \n                // update LS \n                TODOS.set($scope.todos); \n                LN.show('Todo Deleted'); \n            } \n        }); \n    } \n\n    $scope.logout = function() { \n        AUTH.logout(); \n        $ionicHistory.clearHistory(); \n        $state.go('login'); \n    } \n});\n\n```", "```html\n<ion-view view-> \n    <ion-content> \n        <div class=\"list\"> \n            <label class=\"item item-input\"> \n                <span class=\"input-label\">Username</span> \n                <input type=\"email\" ng-model=\"user.email\" \n                placeholder=\"Enter your email\"> \n            </label> \n            <label class=\"item item-input\"> \n                <span class=\"input-label\">Password</span> \n                <input type=\"password\" ng-model=\"user.password\" \n                placeholder=\"Enter your password\"> \n            </label> \n            <button ng-click=\"login()\" class=\"button button-positive \n            button-full\" ng-disabled=\"!user.email || !user.password\"> \n                Login \n            </button> \n        </div> \n    </ion-content> \n    <ion-footer-bar align- class=\"bar-positive\"> \n        <h1 class=\"title\">Your IP : {{ip}}</h1> \n    </ion-footer-bar> \n</ion-view>\n\n```", "```html\n// snipp \n.run(function($ionicPlatform, IP, $rootScope) { \n    $ionicPlatform.ready(function() { \n        if (window.cordova && window.cordova.plugins.Keyboard) { \n            cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true); \n            cordova.plugins.Keyboard.disableScroll(true); \n        } \n        if (window.StatusBar) { \n            StatusBar.styleDefault(); \n        } \n\n        IP.get().then(function(resp) { \n            // console.log(resp.data); \n            $rootScope.ip = resp.data.ip; \n        }); \n    }); \n}) \n// snipp\n\n```", "```html\n<ion-view view-> \n    <ion-nav-bar class=\"bar-default\"> \n        <ion-nav-buttons side=\"right\"> \n            <button class=\"button button-assertive\" ng-click=\" \n            logout()\"> \n                Logout \n            </button> \n        </ion-nav-buttons> \n    </ion-nav-bar> \n    <ion-content> \n        <ion-list can-swipe=\"true\"> \n            <ion-item> \n                <button class=\"button button-full button-positive\" ng-\n                click=\"add()\"> \n                    Add Todo \n                </button> \n            </ion-item> \n            <ion-item ng-repeat=\"todo in todos\"> \n                <h2 ng-class=\"{ 'strike' : todo.isCompleted}\">\n                {{todo.text}}</h2> \n                <ion-option-button class=\"button-assertive icon ion-\n                trash-a\" ng-click=\"delete($index, todo)\">\n                </ion-option-button> \n                <ion-option-button class=\"button-positive icon\" ng-               \n                class=\"{'ion-checkmark-round' : \n                !todo.isCompleted, 'ion-close-round' :\n                todo.isCompleted}\" ng-click=\"update(todo)\">\n                </ion-option-button> \n            </ion-item> \n            <ion-item ng-if=\"todos.length > 0\"> \n                <p class=\"text-center\">Swipe left for options</p> \n            </ion-item> \n            <ion-item ng-if=\"todos.length === 0\"> \n                <h2 class=\"text-center\">No Todos</h2> \n            </ion-item> \n        </ion-list> \n    </ion-content> \n    <ion-footer-bar align- class=\"bar-positive\"> \n        <h1 class=\"title\">Your IP : {{ip}}</h1> \n    </ion-footer-bar> \n</ion-view>\n\n```", "```html\n.strike{ \n  text-decoration: line-through; \n  color: #999; \n}\n\n```", "```html\nbower install ngCordova --save\n\n```", "```html\n<script src=\"img/ng-cordova.js\"></script> before <script src=\"img/cordova.js\"></script>.\n\n```", "```html\n<script src=\"img/services.js\"></script> \n<script src=\"img/controllers.js\"></script>\n\n```", "```html\n<ion-pane> \n        <ion-nav-bar class=\"bar-positive\"> \n        </ion-nav-bar> \n        <ion-nav-view></ion-nav-view> \n</ion-pane>\n\n```", "```html\nionic platform add android or ionic platform add ios\n\n```", "```html\nionic run android or ionic run ios\n\n```", "```html\nionic start -a \"TodoApp-v2\" -i app.example.todoapp_v2 todoapp_v2  blank --v2\n\n```", "```html\n ionic generate page login\n\n```", "```html\nionic generate provider auth \nionic generate provider todos \nionic generate provider IP\n\n```", "```html\n// snipp \nimport { LoginPage } from '../pages/login/login'; \n\nimport { Auth } from '../providers/auth'; \nimport { Todos } from '../providers/todos'; \nimport { IP } from '../providers/ip'; \n\nimport { IonicStorageModule } from '@ionic/storage'; \nimport { LocalNotifications } from '@ionic-native/local-notifications';\n\n```", "```html\n@NgModule({ \n  declarations: [ \n    MyApp, \n    HomePage, \n    LoginPage \n  ], \n  imports: [ \n    IonicModule.forRoot(MyApp), \n    IonicStorageModule.forRoot() \n  ], \n  bootstrap: [IonicApp], \n  entryComponents: [ \n    MyApp, \n    HomePage, \n    LoginPage \n  ], \n  providers: [ \n    StatusBar, \n    SplashScreen, \n    {provide: ErrorHandler, useClass: IonicErrorHandler}, \n    Auth, \n    Todos, \n    IP, \n    LocalNotifications \n  ] \n})\n\n```", "```html\nimport { Injectable } from '@angular/core'; \nimport { Http, Response } from '@angular/http'; \nimport { Observable } from 'rxjs/Observable'; \n\n@Injectable() \nexport class IP { \n  constructor(private http: Http) {} \n\n  get() : Observable <Response>{ \n    return this.http.get('https://api.ipify.org/?format=json'); \n  } \n}\n\n```", "```html\nimport { Injectable } from '@angular/core'; \nimport { Storage } from '@ionic/storage'; \n\n@Injectable() \nexport class Todos { \n  private LS_TODOS_KEY = 'todos'; \n\n  constructor(private storage: Storage) { } \n\n  set(todos): void { \n    this.storage.set(this.LS_TODOS_KEY, todos); \n  } \n\n  get(): Promise<any> { \n    return this.storage.get(this.LS_TODOS_KEY); \n  } \n}\n\n```", "```html\nimport { Injectable } from '@angular/core'; \nimport { Storage } from '@ionic/storage'; \n\n@Injectable() \nexport class Auth { \n  private LS_AUTH_KEY = 'auth'; \n\n  constructor(private storage: Storage) { } \n\n  login(user: any): Boolean { \n    if (user.email === 'a@a.com', user.password === 'a') { \n      this.storage.set(this.LS_AUTH_KEY, true) \n      return true; \n    } else { \n      return false; \n    } \n  } \n\n  isAuthenticated(): Promise<Storage> { \n    return this.storage.get(this.LS_AUTH_KEY); \n  } \n\n  logout(): void { \n    this.storage.set(this.LS_AUTH_KEY, undefined); \n  } \n}\n\n```", "```html\nimport { Component } from '@angular/core'; \nimport { NavController, AlertController } from 'ionic-angular'; \nimport { HomePage } from '../home/home'; \nimport { Auth } from '../../providers/auth'; \nimport { IP } from '../../providers/ip'; \n\n@Component({ \n  selector: 'page-login', \n  templateUrl: 'login.html' \n}) \nexport class LoginPage { \n  userIp = ''; \n  user = { \n    email: 'a@a.com', \n    password: 'a' \n  } \n\n  constructor( \n    public navCtrl: NavController, \n    public alertCtrl: AlertController, \n    private auth: Auth, \n    private ip: IP) { \n\n    // check if the user is already  \n    // authenticated \n    auth.isAuthenticated().then((isAuth) => { \n      if (isAuth) { \n        navCtrl.setRoot(HomePage); \n      } \n    }); \n\n    // Get the user's IP \n    ip.get().subscribe((data) => { \n      this.userIp = data.json().ip; \n    }); \n  } \n\n  login() { \n    if (this.auth.login(this.user)) { \n      this.navCtrl.setRoot(HomePage); \n    } else { \n      let alert = this.alertCtrl.create({ \n        title: 'LOGIN FAILED', \n        subTitle: 'Either the email or password is invalid.', \n        buttons: ['OK'] \n      }); \n      alert.present(); \n    } \n  } \n}\n\n```", "```html\n<ion-header class=\"positive\"> \n    <ion-navbar> \n        <ion-title>Todo App (v2)</ion-title> \n    </ion-navbar> \n</ion-header> \n<ion-content> \n    <ion-list> \n        <ion-item> \n            <ion-label fixed>Username</ion-label> \n            <ion-input type=\"email\" placeholder=\"Enter your email\" \n            [(ngModel)]=\"user.email\"></ion-input> \n        </ion-item> \n        <ion-item> \n            <ion-label fixed>Password</ion-label> \n            <ion-input type=\"password\" placeholder=\"Enter your \n            password\" [(ngModel)]=\"user.password\"></ion-input> \n        </ion-item> \n    </ion-list> \n    <button ion-button full (click)=\"login()\" [disabled]=\"!user.email || !user.password\">Login</button> \n</ion-content> \n<ion-footer>\n  <h3>Your IP : {{userIp}}</h3>\n</ion-footer>\n\n```", "```html\nimport { Component } from '@angular/core'; \nimport { LocalNotifications } from '@ionic-native/local-notifications'; \nimport { NavController, AlertController } from 'ionic-angular'; \nimport { LoginPage } from '../login/login'; \nimport { Auth } from '../../providers/auth'; \nimport { IP } from '../../providers/ip'; \nimport { Todos } from '../../providers/todos'; \n\n@Component({ \n  selector: 'page-home', \n  templateUrl: 'home.html' \n}) \nexport class HomePage { \n  private i = 1; // ID for notifications \n  userIp = ''; \n  userTodos = []; \n\n  constructor( \n    public navCtrl: NavController, \n    public alertCtrl: AlertController, \n    private localNotifications: LocalNotifications, \n    private auth: Auth, \n    private ip: IP, \n    private todos: Todos) { \n\n    // check if the user is authenticated \n    auth.isAuthenticated().then((isAuth) => { \n      if (!isAuth) { \n        navCtrl.setRoot(LoginPage); \n      } \n    }); \n\n    // fetch todos on load \n    this.todos.get().then((_todos) => { \n      this.userTodos = _todos || []; \n    }); \n\n    // Get the user's IP \n    ip.get().subscribe((data) => { \n      this.userIp = data.json().ip; \n    }); \n  } \n\n  add() { \n    let addTodoPopup = this.alertCtrl.create({ \n      title: 'Add Todo', \n      inputs: [ \n        { \n          name: 'text', \n          placeholder: 'Enter a Todo To Do' \n        } \n      ], \n      buttons: [ \n        { \n          text: 'Cancel', \n          role: 'cancel', \n          handler: (data) => { \n            // console.log('Cancel clicked'); \n          } \n        }, \n        { \n          text: 'Save', \n          handler: (data) => { \n            if (data.text) { \n              let todo = { \n                text: data.text, \n                isCompleted: false \n              }; \n              this.userTodos.push(todo); \n              // store the todos \n              this.todos.set(this.userTodos); \n              this.notify('Todo Created'); \n\n            } else { \n              return false; \n            } \n          } \n        } \n\n      ] \n    }); \n    addTodoPopup.present(); \n  } \n\n  update(todo, slidingItem) { \n    todo.isCompleted = !todo.isCompleted; \n    // store the todos \n    this.todos.set(this.userTodos); \n    slidingItem.close(); \n    this.notify('Todo Updated'); \n  } \n\n  delete(todo, index) { \n    let alert = this.alertCtrl.create({ \n      title: 'Delete Todo', \n      message: 'Are you sure you want to delete \"' + todo.text + '\"? ', \n      buttons: [ \n        { \n          text: 'No', \n          role: 'cancel', \n          handler: () => { \n            // console.log('Cancel clicked'); \n          } \n        }, \n        { \n          text: 'Yes', \n          handler: () => { \n            this.userTodos.splice(index, 1); \n            this.todos.set(this.userTodos); \n            this.notify('Todo Deleted'); \n          } \n        } \n      ] \n    }); \n    alert.present(); \n\n  } \n\n  logout() { \n    this.auth.logout(); \n    this.navCtrl.setRoot(LoginPage); \n  } \n\n  private notify(text) { \n    this.localNotifications.schedule({ \n      id: this.i++, \n      title: 'Todo App', \n      text: text, \n    }); \n  } \n}\n\n```", "```html\n<ion-header> \n    <ion-navbar> \n        <ion-title>Todo App (v2)</ion-title> \n        <ion-buttons end> \n            <button ion-button color=\"danger\" (click)=\"logout()\"> \n                Logout \n            </button> \n        </ion-buttons> \n    </ion-navbar> \n</ion-header> \n<ion-content> \n    <button ion-button full (click)=\"add()\"> \n        Add Todo \n    </button> \n    <ion-list can-swipe=\"true\"> \n        <ion-item-sliding *ngFor=\"let todo of userTodos\" #slidingItem> \n            <ion-item [class.strike]=\"todo.isCompleted\"> \n                {{todo.text}} \n            </ion-item> \n            <ion-item-options side=\"right\"> \n                <button ion-button icon-only (click)=\"update(todo, \n                slidingItem)\"> \n                    <ion-icon [name]=\"todo.isCompleted ? 'close' : \n                    'checkmark'\"></ion-icon> \n                </button> \n                <button ion-button icon-only color=\"danger\" \n                (click)=\"delete(todo, index)\"> \n                    <ion-icon name=\"trash\"></ion-icon> \n                </button> \n            </ion-item-options> \n        </ion-item-sliding> \n        <ion-item *ngIf=\"userTodos.length > 0\"> \n            <p text-center>Swipe left for options</p> \n        </ion-item> \n        <ion-item *ngIf=\"userTodos.length === 0\"> \n            <h2 class=\"text-center\">No Todos</h2> \n        </ion-item> \n    </ion-list> \n</ion-content> \n<ion-footer> \n    <h3>Your IP : {{userIp}}</h3> \n</ion-footer>\n\n```", "```html\nion-header.positive ion-navbar .toolbar-background, \nion-footer, \n{ \n    background-color: #387ef5; \n} \n\nion-header.positive .toolbar-title, \nion-footer { \n    color: #fff; \n} \n\n.toolbar-title, \nion-footer { \n    text-align: center; \n} \n\nion-navbar button[color=danger]{ \n    background: #f53d3d; \n    color: #fff; \n    border-radius: 4px \n} \n\n.strike { \n    text-decoration: line-through; \n    color:#999; \n}\n\n```", "```html\nionic plugin add cordova-sqlite-storage -save \nnpm install --save @ionic/storage\n\n```", "```html\nionic plugin add de.appplant.cordova.plugin.local-notification \nnpm install --save @ionic-native/local-notifications\n\n```", "```html\nionic platform add android or ionic platform add ios\n\n```", "```html\nionic run android or ionic run ios\n\n```"]