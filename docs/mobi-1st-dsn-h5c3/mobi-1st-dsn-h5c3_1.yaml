- en: Chapter 1. Mobile First – How and Why?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 移动优先 - 如何以及为什么？
- en: If you are in the business of building/maintaining a company's website or building
    web properties for an agency, you can and should be using mobile first strategies.
    Why? Because it is of value to your end product. You will end up with a website
    that is used by most of the people on all the devices and browsers possible.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从事为公司建立/维护网站或为代理机构建立网页属性的业务，你可以并且应该使用移动优先策略。为什么？因为这对你的最终产品有价值。你最终会得到一个被大多数人在所有可能的设备和浏览器上使用的网站。
- en: This book is targeted at both beginner and intermediate developers as well as
    designers. It is also intended to be for those in business and management who
    want to gain a deeper understanding of what is possible (and, by extension, what
    may not be practical) with modern tools and strategies on the web. The code examples
    in this book, when used step-by-step, should help anyone with even basic development
    skills to get a deeper understanding of what is possible as well as how it is
    possible. Of course I love building things and I do it every day, but for those
    of us who also have to strategize and educate clients and coworkers, having procedural
    knowledge of how to make a mobile first website is qualitatively better than only
    having the knowledge of theory and concepts.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书面向初学者和中级开发人员以及设计师。它还面向那些希望更深入了解现代工具和网页策略可能性（以及由此可能不切实际的内容）的商业和管理人员。本书中的代码示例，按步骤使用，应该帮助任何具有基本开发技能的人更深入地了解可能性以及如何实现可能性。当然，我喜欢每天都建造东西，但对于我们这些还必须制定策略并教育客户和同事的人来说，掌握如何制作移动优先网站的程序知识比仅掌握理论和概念知识更有价值。
- en: What is Responsive Web Design?
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是响应式网页设计？
- en: '**Responsive Web Design** (**RWD**) is a set of strategies used to display
    web pages on screens of varying sizes. These strategies leverage, among other
    things, features available in modern browsers as well as a strategy of progressive
    enhancement (rather than graceful degradation). What''s with all the buzzwords?
    Well, again, once we dig into the procedures and the code, it will all get a lot
    more meaningful. But here is a quick example to illustrate a two-way progressive
    enhancement that is used in RWD.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**响应式网页设计**（**RWD**）是一组用于在不同尺寸屏幕上显示网页的策略。这些策略利用了现代浏览器中可用的功能，以及渐进增强策略（而不是优雅降级）。这些术语是什么意思？好吧，一旦我们深入了解程序和代码，它们就会变得更有意义。但这里有一个快速示例，用来说明RWD中使用的双向渐进增强。'
- en: 'Let''s say you want to make a nice button that is a large target and can be
    reliably pressed with big, fat clumsy thumbs on a wide array of mobile devices.
    In fact, you want that button to pretty much run the full spectrum of every mobile
    device known to humans. This is not a problem. The following code is how your
    (greatly simplified) HTML will look:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想要制作一个漂亮的按钮，它是一个大目标，可以可靠地被大而笨拙的拇指按下，在各种移动设备上都可以。事实上，你希望这个按钮几乎可以在人类所知的每一种移动设备上运行。这不是问题。以下代码是你（大大简化的）HTML的样子：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following code is how your CSS will look:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码是你的CSS的样子：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.PacktPub.com](http://www.PacktPub.com). If you
    purchased this book elsewhere, you can visit [http://www.PacktPub.com/support](http://www.PacktPub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从你在[http://www.PacktPub.com](http://www.PacktPub.com)账户中购买的所有Packt图书中下载示例代码文件。如果你在其他地方购买了这本书，你可以访问[http://www.PacktPub.com/support](http://www.PacktPub.com/support)并注册，将文件直接发送到你的邮箱。
- en: So this gets you a button that stretches the width of the document's body. It's
    also hot pink with a dotted purple border and thick black drop shadow (don't judge
    my design choices).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这会让你得到一个可以延伸到文档主体宽度的按钮。它还是热粉色的，带有点状紫色边框和厚重的黑色阴影（不要评判我的设计选择）。
- en: 'Here is what is nice about this code. Let''s break down the CSS with some imaginary
    devices/browsers to illustrate some of the buzzwords in the first paragraph of
    this section:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码的好处在于什么。让我们用一些想象中的设备/浏览器来解释一下第一段中的一些术语：
- en: 'Device one (code name: Goldilocks): This device has a modern browser, with
    screen dimensions of 320 x 480 px. It is regularly updated, so is highly likely
    to have all the cool browser features you read about in your favorite blogs.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备一（代号：Goldilocks）：这个设备有一个现代浏览器，屏幕尺寸为320 x 480像素。它经常更新，所以很可能拥有你在喜爱的博客中读到的所有酷炫的浏览器功能。
- en: 'Device two (code name: Baby Bear): This device has a browser that partially
    supports CSS2 and is poorly documented, so much so that you can only figure out
    which styles are supported through trial and error or forums. The screen is 320
    x 240 px. This describes a device that predated the modern adoption levels of
    browsing the web on a mobile but your use case may require you to support it anyway.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备二（代号：小熊宝宝）：这个设备有一个部分支持CSS2并且文档不完善的浏览器，以至于你只能通过试错或论坛来确定支持哪些样式。屏幕尺寸为320 x 240像素。这描述了一个在移动设备上浏览网页的现代采用水平之前的设备，但你的使用情况可能需要你支持它。
- en: 'Device three (code name: Papa Bear): This is a laptop computer with a modern
    browser but you will never know the screen dimensions since the viewport size
    is controlled by the user.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设备三（代号：Papa Bear）：这是一台带有现代浏览器的笔记本电脑，但你永远不会知道屏幕尺寸，因为视口大小由用户控制。
- en: 'Thus, Goldilocks gets the following display:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Goldilocks得到以下显示：
- en: '![What is Responsive Web Design?](img/6463_01_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![什么是响应式网页设计？](img/6463_01_01.jpg)'
- en: Because it is all tricked out with full CSS3 feature, it will render the rounded
    corners and drop shadow.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 因为它装饰了完整的CSS3功能，它将呈现圆角和阴影。
- en: '![What is Responsive Web Design?](img/6463_01_02.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![什么是响应式网页设计？](img/6463_01_02.jpg)'
- en: Baby Bear, on the other hand, will only get square corners and no drop shadow
    (as seen in the previous screenshot) because its browser can't make sense of those
    style declarations and will just do nothing with them. It's not a huge deal, though,
    as you still get the important features of the button; it stretches the full width
    of the screen, making it a big target for all the thumbs in the world (also, it's
    still pink).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，小熊宝宝只会得到方形边角，没有阴影（如前面的屏幕截图中所示），因为它的浏览器无法理解这些样式声明，也不会对其进行任何操作。不过，这并不是什么大问题，因为你仍然可以得到按钮的重要功能；它可以延伸到屏幕的整个宽度，成为全世界所有拇指的大目标（而且它仍然是粉色的）。
- en: Papa Bear gets the button with all the CSS3 goodies too.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 大熊宝宝也得到了所有CSS3的好东西。
- en: '![What is Responsive Web Design?](img/6463_01_03.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![什么是响应式网页设计？](img/6463_01_03.jpg)'
- en: 'That said, it stretches the full width of the browser no matter how absurdly
    wide a user makes his/her browser. We only need it to be about 480 px wide to
    make it big enough for a user to click and look reasonable within whatever design
    we are imagining. So in order to make that happen, we will take advantage of a
    nifty CSS3 feature called `@media` queries. We will use these extensively throughout
    this book and make your stylesheet look like this:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，无论用户将浏览器调整到多宽，它都会延伸到整个浏览器的宽度。我们只需要它宽约480像素，这样用户就可以点击它，并且在我们想象的任何设计中看起来合理。因此，为了实现这一点，我们将利用一个称为`@media`查询的巧妙的CSS3功能。我们将在本书中广泛使用这些功能，并使您的样式表看起来像这样：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now if you were coding along with me and have a modern browser (meaning a browser
    that supports most, if not all, features in the HTML5 specification, more on this
    later), you could do something fun. You can resize the width of your browser to
    see the start button respond to the `@media` queries. Start off with the browser
    really narrow and the button will get wider until the screen is 768 px wide; beyond
    that the button will snap to being only 480 px. If start off with your browser
    wider than 768 px, the button will stay 480 px wide until your browser width is
    under 768 px. Once it is under this threshold, the button snaps to being full
    width.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您正在和我一起编码，并且有一个现代浏览器（意思是浏览器支持HTML5规范中的大多数，如果不是全部功能，稍后会详细介绍），您可以做一些有趣的事情。您可以调整浏览器的宽度，看看开始按钮如何响应`@media`查询。从浏览器非常窄的情况开始，按钮会变宽，直到屏幕宽度达到768像素；超过这个宽度，按钮将会变为只有480像素。如果您的浏览器宽度超过768像素，按钮将保持480像素宽，直到浏览器宽度小于768像素。一旦低于这个阈值，按钮就会变为全宽。
- en: This happens because of the media query. This query essentially asks the browser
    a couple of questions. The first part of the query is about what type of medium
    it is (print or screen). The second part of the query asks what the screen's minimum
    width is. When the browser replies yes to both `screen` and `min-width 768px`,
    the conditions are met for applying the styles within that media query. To say
    these styles are applied is a little misleading. In fact, the approach actually
    takes advantage of the fact that the styles provided in the media query can override
    other styles set previously in the stylesheet. In our case, the only style applied
    is an explicit width for the button that overrides the percentage width that was
    set previously.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为媒体查询的原因。这个查询基本上是在问浏览器几个问题。查询的第一部分是关于媒介类型是什么（打印还是屏幕）。查询的第二部分是询问屏幕的最小宽度是多少。当浏览器对`screen`和`min-width
    768px`都回答是时，就满足了应用媒体查询内样式的条件。说这些样式被应用了有点误导。事实上，这种方法实际上利用了媒体查询中提供的样式可以覆盖样式表中先前设置的其他样式的事实。在我们的情况下，唯一应用的样式是一个显式宽度的按钮，它覆盖了先前设置的百分比宽度。
- en: So, the nice thing about this is, we can make one website that will display
    appropriately for lots of screen sizes. This approach re-uses a lot of code, only
    applying styles as needed for various screen widths. Other approaches for getting
    usable sites to mobile devices require maintaining multiple codebases and having
    to resort to device detection, which only works if you can actually detect what
    device is requesting your website. These other approaches can be fragile and also
    break the **Don't Repeat Yourself** (**DRY**) commandment of programming.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这种方法的好处是，我们可以制作一个网站，可以适应很多屏幕尺寸。这种方法可以重复使用很多代码，只在需要时应用不同屏幕宽度的样式。其他让可用网站适应移动设备的方法需要维护多个代码库，并且必须识别设备，这只有在实际检测到请求网站的设备时才有效。这些其他方法可能很脆弱，也违反了编程中的“不要重复自己”（DRY）原则。
- en: This book is going to go over a specific way of approaching RWD, though. We
    will use the **320 and Up** framework to facilitate a mobile first strategy. In
    short, this strategy assumes that a device requesting the site has a small screen
    and doesn't necessarily have a lot of processing power. 320 and Up also has a
    lot of great helpers to make it fast and easy to produce features that many clients
    require on their sites. But we will get into these details as we build a simple
    site together.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，本书将介绍一种特定的RWD方法。我们将使用**320 and Up**框架来实现移动优先策略。简而言之，这种策略假设请求网站的设备具有小屏幕，并且不一定具有很强的处理能力。320
    and Up还有很多很好的辅助功能，可以快速轻松地为客户的网站提供许多所需的功能。但是，当我们一起建立一个简单的网站时，我们将详细介绍这些细节。
- en: Note
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Take note, there are lots of frameworks out there that will help you build responsive
    sites, and there are even some that will help you build a responsive, mobile first
    site. One thing that distinguishes 320 and Up is that it is a tad less opinionated
    than most frameworks. I like it because it is simple and eliminates the busy work
    of setting up things one is likely to use for many sites. I also like that it
    is open source and can be used with static sites as well as any server-side language.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，有很多框架可以帮助您构建响应式网站，甚至有一些可以帮助您构建响应式的移动优先网站。320 and Up的一个特点是它比大多数框架更少地表达观点。我喜欢它，因为它简单，消除了为许多网站设置可能使用的繁琐工作。我还喜欢它是开源的，可以与静态网站以及任何服务器端语言一起使用。
- en: Prerequisites
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 先决条件
- en: Before we can start building, you need to download the code associated with
    this book. It will have all the components that you will need and is structured
    properly for you. If you want 320 and Up for your own projects, you can get it
    from the website of *Andy Clarke* (he's the fellow responsible for 320 and Up)
    or his GitHub account. I also maintain a fork in my own GitHub repo.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始构建之前，您需要下载与本书相关的代码。它将包含您所需的所有组件，并且已经为您正确地进行了结构化。如果您想要为自己的项目使用320 and Up，您可以从*Andy
    Clarke*的网站（他是320 and Up的负责人）或他的GitHub账户上获取。我也在我的GitHub仓库中维护了一个分支。
- en: Andy Clarke's site
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安迪·克拉克的网站
- en: '[http://stuffandnonsense.co.uk/projects/320andup/](http://stuffandnonsense.co.uk/projects/320andup/)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://stuffandnonsense.co.uk/projects/320andup/](http://stuffandnonsense.co.uk/projects/320andup/)'
- en: GitHub
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: GitHub
- en: '[https://github.com/malarkey/320andup](https://github.com/malarkey/320andup)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/malarkey/320andup](https://github.com/malarkey/320andup)'
- en: My GitHub Fork
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我的GitHub分支
- en: '[https://github.com/jasongonzales23/320andup](https://github.com/jasongonzales23/320andup)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/jasongonzales23/320andup](https://github.com/jasongonzales23/320andup)'
- en: 'That said, the simplest route to follow along with this book is to get the
    code I''ve wrapped up for you from: [https://github.com/jasongonzales23/mobilefirst_book](https://github.com/jasongonzales23/mobilefirst_book)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，跟随本书的最简单方法是从这里获取我为您打包好的代码：[https://github.com/jasongonzales23/mobilefirst_book](https://github.com/jasongonzales23/mobilefirst_book)
- en: Summary
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at a simple example of how responsive web design
    strategies can serve up the same content to screens of many sizes and have the
    layout adjust to the screen it is displayed on. We wrote a simple example of that
    for a pink button and got a link to 320 and Up, so we can get started building
    an entire mobile first-responsive website.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看了一个简单的例子，展示了响应式网页设计策略如何为许多不同尺寸的屏幕提供相同的内容，并使布局根据显示屏进行调整。我们为一个粉色按钮写了一个简单的例子，并获得了一个指向320
    and Up的链接，因此我们可以开始构建一个完整的移动优先响应式网站。
