["```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- SVG Data Visualization</title>\n  <link rel=\"stylesheet\" \n   href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.\n    min.css\" integrity=\"sha384-\n    Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n    crossorigin=\"anonymous\">\n  <link href=\"https://fonts.googleapis.com/css?family=Raleway\" \n    rel=\"stylesheet\">\n  <style type=\"text/css\">\n    body {\n      font-family: Raleway, sans-serif;\n    }\n    svg.canvas {\n     background: #0C2340;\n    }\n    text {\n      font-family: Raleway, sans-serif;\n      font-size: .75em;\n      fill: #fff;\n    }\n    text.large {\n      font-size: 1.5em;\n    }\n  </style>\n</head>\n\n<body>\n\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <svg  viewBox=\"0 0 1000 450\" \n          width=\"1000\" height=\"450\" version=\"1.1\" id=\"canvas\" \n            class=\"canvas\">\n        </svg>\n      </div>\n    </div>\n  </div>\n  <script src=\"img/scripts.js\"></script>\n</body>\n\n</html>\n```", "```xml\nfunction viz() {\n  /*\n    ES6\n  */\n  const data = [\n    {\n      \"year\": 2003,\n      \"hrs\": 31\n    },\n    {\n      \"year\": 2004,\n      \"hrs\": 41\n    },\n    {\n      \"year\": 2005,\n      \"hrs\": 47\n    },\n    {\n      \"year\": 2006,\n      \"hrs\": 54\n    },\n    {\n      \"year\": 2007,\n      \"hrs\": 35\n    },\n    {\n      \"year\": 2008,\n      \"hrs\": 23\n    },\n    {\n      \"year\": 2009,\n      \"hrs\": 28\n    },\n    {\n      \"year\": 2010,\n      \"hrs\": 32\n    },\n    {\n      \"year\": 2011,\n      \"hrs\": 29\n    },\n    {\n      \"year\": 2012,\n      \"hrs\": 23\n    },\n    {\n      \"year\": 2013,\n      \"hrs\": 30\n    },\n    {\n      \"year\": 2014,\n      \"hrs\": 35\n    },\n    {\n      \"year\": 2015,\n      \"hrs\": 37\n    },\n    {\n      \"year\": 2016,\n      \"hrs\": 38\n    }\n  ];\n```", "```xml\n  const doc = document;\n  const canvas = doc.getElementById(\"canvas\");\n  const NS = canvas.getAttribute('xmlns');\n  let elem;\n```", "```xml\n  function addText(coords, text, cssClass) {\n    elem = doc.createElementNS(NS, \"text\");\n    elem.setAttribute(\"x\", coords.x);\n    elem.setAttribute(\"y\", coords.y);\n    elem.textContent = text;\n    if (cssClass){\n      elem.classList.add(cssClass);\n    }\n    canvas.appendChild(elem);\n  }\n  function addLine(coords, stroke = \"#ff8000\") {\n    elem = doc.createElementNS(NS, \"line\");\n    elem.setAttribute(\"x1\", coords.x1);\n    elem.setAttribute(\"y1\", coords.y1);\n    elem.setAttribute(\"x2\", coords.x2);\n    elem.setAttribute(\"y2\", coords.y2);\n    elem.setAttribute(\"stroke\", stroke);\n    canvas.appendChild(elem);\n  }\n  function addRect(coords, fill = \"#ff8000\", stroke = \"#ffffff\") {\n    elem = doc.createElementNS(NS, \"rect\");\n    elem.setAttribute(\"x\", coords.x);\n    elem.setAttribute(\"y\", coords.y);\n    elem.setAttribute(\"width\", coords.width);\n    elem.setAttribute(\"height\", coords.height);\n    elem.setAttribute(\"fill\", fill);\n    elem.setAttribute(\"stroke\", stroke);\n    canvas.appendChild(elem);\n  }\n  function maxDiffer(arr) {\n    let maxDiff = arr[1] - arr[0];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = i + 1; j < arr.length; j++) {\n        if (arr[j] - arr[i] > maxDiff) {\n          maxDiff = arr[j] - arr[i];\n        }\n      }\n    }\n    return maxDiff;\n  }\n\n```", "```xml\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    const viewBox = canvas.viewBox.baseVal;\n    const width = viewBox.width;\n    const height = viewBox.height;\n    const x = viewBox.x;\n    const y = viewBox.y;\n    const padding = width / 200;\n    const vizWidth = width - padding;\n    const years = data.length;\n    const total = data.reduce((total, item) => {\n      return total + item.hrs;\n    }, 0);\n    const avg = total / years;\n    const verticalMidPoint = (y + height) / 2;\n    const diffs = data.map((item) => {\n      return item.hrs - avg;\n    });\n    const maxDiff = maxDiffer(diffs);\n    const yIntervals = verticalMidPoint / maxDiff;\n    const xInterval = (vizWidth / years);\n```", "```xml\nfor (const i in diffs) {\n      const newX = xInterval * i;\n      const newY = diffs[i] * yInterval;\n      if (diffs[i] < 0) {\n        addRect({\n          \"x\": newX + padding,\n          \"y\": verticalMidPoint,\n          \"width\": xInterval - padding,\n          \"height\": Math.abs(newY),\n        }, \"#C8102E\", \"#ffffff\");\n        addText({\n          \"x\": newX + padding,\n          \"y\": verticalMidPoint + Math.abs(newY) + (padding * 3)\n        }, `${data[i].hrs} in ${data[i].year}`);\n      }\n      else if (diffs[i] > 0) {\n        addRect({\n          \"x\": newX + padding,\n          \"y\": verticalMidPoint - newY,\n          \"width\": xInterval - padding,\n          \"height\": newY,\n        }, \"#4A777A\", \"#ffffff\");\n        addText({\n          \"x\": newX + padding,\n          \"y\": verticalMidPoint - newY - (padding * 2)\n        }, `${data[i].hrs} in ${data[i].year}`);\n      }\n      addLine({\n        x1: x,\n        y1: verticalMidPoint,\n        x2: width,\n        y2: verticalMidPoint\n      }, \"#ffffff\");\n      addText({\n        \"x\": x + padding,\n        \"y\": height - (padding * 3)\n      }, `Based on an average of ${avg} home runs over ${years} years`,\n            \"large\");\n    }\n  });\n\n}\nviz();\n```", "```xml\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <svg  viewBox=\"0 0 1000 450\" \n          width=\"1000\" height=\"450\" version=\"1.1\" id=\"canvas\" \n           class=\"canvas\">\n          <circle cx=\"75\" cy=\"225\" r=\"50\" fill=\"blue\" id=\"circle\">\n        </circle>\n        </svg>\n      </div>\n    </div>\n  </div>\n```", "```xml\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n const doc = document;\n const canvas = doc.getElementById(\"canvas\");\n const circle = doc.getElementById('circle');\n const viewBox = canvas.viewBox.baseVal;\n const width = viewBox.width;\n const height = viewBox.height;\n const x = viewBox.x;\n const padding = width / 200;\n const seconds = 3;\n const fps = 60;\n let currX = circle.cx.baseVal.value;\n let newX = width - (circle.r.baseVal.value * 3);\n let diffX = newX - currX;\n let intervalX = diffX / (fps * seconds);\n let animX = currX;\n function animate() {\n    if (animX < newX) {\n        animX = animX + intervalX;\n        circle.setAttribute(\"cx\", animX);\n        window.requestAnimationFrame(animate);\n     }\n }\n animate();\n });\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- SVG Animation with CSS</title>\n  <link rel=\"stylesheet\" \n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.m\n    in.css\" integrity=\"sha384-\n    Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n    crossorigin=\"anonymous\">\n  <style type=\"text/css\">\n    #circle {\n      transition: cx 3s;\n      cx: 75px;\n    }\n    svg:hover #circle {\n      cx: 875px;\n    }\n  </style>\n\n</head>\n\n<body>\n\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <svg  viewBox=\"0 0 1000 450\"\n         width=\"1000\" height=\"450\" version=\"1.1\" id=\"canvas\" \n          class=\"canvas\">\n          <circle cy=\"225\" r=\"50\" fill=\"blue\" id=\"circle\"></circle>\n        </svg>\n      </div>\n    </div>\n  </div>\n\n</body>\n\n</html>\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- SVG CSS Animation</title>\n  <link rel=\"stylesheet\" \n   href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.\n    min.css\" integrity=\"sha384-\n    Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n    crossorigin=\"anonymous\">\n  <style type=\"text/css\">\n    @keyframes animate-circle {\n      0% {\n        transform: translateX(0)\n      }\n      100% {\n        transform: translateX(800px)\n      }\n    }\n\n    #circle {\n      animation: animate-circle 3s linear;\n      animation-fill-mode: forwards;\n    }\n  </style>\n\n</head>\n\n<body>\n\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <svg  viewBox=\"0 0 1000 450\" \n         width=\"1000\" height=\"450\" version=\"1.1\" id=\"canvas\" \n          class=\"canvas\">\n          <circle cx=\"75\" cy=\"225\" r=\"50\" fill=\"blue\" id=\"circle\">\n        </circle>\n        </svg>\n      </div>\n    </div>\n  </div>\n\n</body>\n\n</html>\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- SVG Data Visualization</title>\n  <link rel=\"stylesheet\" \n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.m\n  in.css\" integrity=\"sha384-\n  Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n    crossorigin=\"anonymous\">\n  <style type=\"text/css\">\n    #circle {\n      fill: red;\n      transition: fill 3s;\n    }\n    #circle:hover {\n      fill: blue;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <svg  viewBox=\"0 0 450 450\"\n         width=\"450\" height=\"450\" version=\"1.1\" id=\"canvas\" \n            class=\"canvas\">\n          <circle cx=\"225\" cy=\"225\" r=\"225\" fill=\"blue\" id=\"circle\">\n        </circle>\n        </svg>\n      </div>\n    </div>\n  </div>\n</body>\n</html>\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n <meta charset=\"utf-8\">\n <title>Mastering SVG- SVG Animation with SMIL</title>\n <link rel=\"stylesheet\" \n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.m\n    in.css\" integrity=\"sha384-\n    Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n    crossorigin=\"anonymous\">\n</head>\n\n<body>\n\n <div class=\"container-fluid\">\n <div class=\"row\">\n <div class=\"col-12\">\n <svg  viewBox=\"0 0 1000 450\" \n    width=\"1000\" height=\"450\" version=\"1.1\" id=\"canvas\" class=\"canvas\">\n    <circle cx=\"75\" cy=\"225\" r=\"50\" fill=\"blue\" id=\"circle\">\n <animate \n xlink:href=\"#circle\"\n attributeName=\"cx\"\n from=\"75\"\n to=\"900\" \n dur=\"3s\"\n begin=\"0s\"\n fill=\"freeze\" />\n </circle>\n </svg>\n </div>\n </div>\n </div>\n</body>\n\n</html>\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- SVG Animation with Vivus</title>\n  <style>\n  .stroke{\n    stroke-linejoin: round;\n  }\n  </style>\n</head>\n\n<body>\n\n <div class=\"container-fluid\">\n <div class=\"row\">\n <div class=\"col-12\">\n <svg id=\"loader\"  viewBox=\"0 0 \n    250.23 131.83\"><title>Logo</title><path fill=\"none\" stroke=\"#000\"\n     d=\"M160.9,26.9l-.37.25c6.81,8.24,10.62,17.49\"/>\n<path fill=\"none\" stroke=\"#000\" \n d=\"M28.14,92.59c1.43,1.56,2.81,3,4,4.45,3.56,4.31,6.05\"/>\n<path fill=\"none\" stroke=\"#000\" d=\"M80.3,57.58c.27,4.74.54,9.34.81,14l-\n 19.33,1v8.1a4.56,4.56,\"/>\n<path fill=\"none\" stroke=\"#000\" \n d=\"M160.9,26.9a5.89,5.89,0,0,1,1.08.74c11.41,\"/>\n<path fill=\"none\" stroke=\"#000\" d=\"M28.14,92.59c-3.72,5.21-7.28,\"/>\n<path fill=\"none\" stroke=\"#000\" \n d=\"M80.3,57.58,59.18,59.36V56.54h21C79.42,\"/>\n<path fill=\"none\" stroke=\"#000\" \n d=\"M43.87,73.26a5.31,5.31,0,0,1-.24,5.8c-1.51-.76-1.58-.91-1-2.4Z\"/><path fill=\"none\" stroke=\"#000\" d=\"M103.13,55.28,90\"/></svg>\n </div>\n </div>\n </div>\n<script src=\"img/vivus.js\"></script>\n<script>\n new Vivus('loader', {duration: 3000});\n</script>\n</body>\n\n</html>\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- SVG Animation with Vivus</title>\n  <style>\n  .stroke{\n    stroke-linejoin: round;\n  }\n  </style>\n</head>\n\n<body>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n          <svg id=\"loader\"  \n            viewBox=\"0 0 250.23 131.83\"><title>Logo</title><path\n             fill=\"none\" stroke=\"#000\" \n             d=\"M160.9,26.9l-.37.25c6.81,8.24,10.62,17.49\"/>\n<path fill=\"none\" stroke=\"#000\" d=\"M28.14,92.59c1.43,1.56,2.81,3,4,4.45,3.56,4.31,6.05\"/>\n<path fill=\"none\" stroke=\"#000\" d=\"M80.3,57.58c.27,4.74.54,9.34.81,14l-19.33,1v8.1a4.56,4.56,\"/>\n<path fill=\"none\" stroke=\"#000\" d=\"M160.9,26.9a5.89,5.89,0,0,1,1.08.74c11.41,\"/>\n<path fill=\"none\" stroke=\"#000\" d=\"M28.14,92.59c-3.72,5.21-7.28,\"/>\n<path fill=\"none\" stroke=\"#000\" d=\"M80.3,57.58,59.18,59.36V56.54h21C79.42,\"/>\n<path fill=\"none\" stroke=\"#000\" d=\"M43.87,73.26a5.31,5.31,0,0,1-.24,5.8c-1.51-.76-1.58-.91-1-2.4Z\"/><path fill=\"none\" stroke=\"#000\" d=\"M103.13,55.28,90\"/></svg>\n      </div>\n    </div>\n  </div>\n<script src=\"img/vivus.js\"></script>\n<script>\n  function callback(){\n    for (const element of document.getElementsByClassName(\"stroke\")){\n      element.style.stroke = \"#cc0033\";\n    };\n  }\n  new Vivus('loader', {duration: 500}, callback);\n</script>\n</body>\n\n</html>\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- SVG Animation with GSAP</title>\n\n</head>\n\n<body>\n\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <svg  viewBox=\"0 0 1000 450\" \n        width=\"1000\" height=\"450\" version=\"1.1\" id=\"canvas\" \n        class=\"canvas\">\n          <circle cx=\"75\" cy=\"225\" r=\"50\" fill=\"blue\" id=\"circle\">\n        </circle>\n        </svg>\n      </div>\n    </div>\n  </div>\n\n<script src=\"img/TweenMax.min.js\"></script>\n<script>\nconst doc = document;\nconst canvas = doc.getElementById(\"canvas\");\nconst circle = doc.getElementById('circle');\nconst viewBox = canvas.viewBox.baseVal;\nconst width = viewBox.width;\nconst newX = width - (circle.r.baseVal.value * 3);\nTweenMax.to(\"#circle\", 1, {attr:{cx:newX}, ease:Linear.easeNone});\n</script>\n</body>\n\n</html>\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- SVG Animation with GSAP</title>\n\n</head>\n\n<body>\n\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <svg  viewBox=\"0 0 1000 450\" \n         width=\"1000\" height=\"450\" version=\"1.1\" id=\"canvas\" \n         class=\"canvas\">\n          <circle cx=\"75\" cy=\"225\" r=\"50\" fill=\"blue\" id=\"circle\">\n        </circle>\n        </svg>\n      </div>\n    </div>\n  </div>\n\n<script src=\"img/TweenMax.min.js\"></script>\n<script>\nconst doc = document;\nconst canvas = doc.getElementById(\"canvas\");\nconst circle = doc.getElementById('circle');\nconst viewBox = canvas.viewBox.baseVal;\nconst width = viewBox.width;\nconst height= viewBox.height;\nTweenMax.to(\"#circle\", 1, {attr:{cx:width,cy:0,r:height,fill:\"red\"}, ease:Linear.easeNone}).duration(5);\n</script>\n</body>\n\n</html>\n```"]