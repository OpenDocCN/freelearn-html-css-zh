["```xml\nnpm install d3\n```", "```xml\n<script src=\"img/d3.min.js\"></script>\n```", "```xml\n<script src=\"img/d3.v5.js\"></script>\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n <meta charset=\"utf-8\">\n <title>Mastering SVG- D3 Bar Chart</title>\n <link rel=\"stylesheet\" \n   href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.\n    min.css\" integrity=\"sha384-\n    Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n    crossorigin=\"anonymous\">\n <link href=\"https://fonts.googleapis.com/css?family=Raleway\" \n    rel=\"stylesheet\">\n <style type=\"text/css\">\n  text {\n   font-family: Raleway;\n   font-size: 1em;\n  }\n </style>\n</head>\n\n<body>\n <div class=\"container\">\n  <div class=\"row\">\n   <div class=\"col-12\" id=\"target\">\n\n   </div>\n  </div>\n </div>\n <script src=\"img/d3.min.js\"></script>\n <script src=\"img/d3-fetch.min.js\"></script>\n <script src=\"img/bar.js\"></script>\n</body>\n</html>\n```", "```xml\nfunction bar() {\n  const width = 960,\n    height = 800,\n    chartHeight = 600,\n    margin = 30;\n```", "```xml\n let svg = d3.select(\"#target\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin},${margin})`);\n```", "```xml\n let x = d3.scaleBand()\n    .range([10, (width - margin.left - margin.right)])\n    .paddingInner(0.1);\n  let y = d3.scaleLinear()\n    .range([chartHeight, 0]);\n  let xAxis = d3.axisBottom()\n    .scale(x);\n  let yAxis = d3.axisLeft()\n    .scale(y);\n\n```", "```xml\n let color = d3.scaleOrdinal()\n    .range([\n      \"#1fb003\",\n      \"#1CA212\",\n      \"#199522\",\n      \"#178732\",\n      \"#147A41\",\n      \"#126C51\",\n      \"#0F5F61\",\n      \"#0C5170\",\n      \"#0A4480\",\n      \"#073690\"\n    ]);\n\n```", "```xml\n  d3.json(\"data/top-ten.json\").then((data) => {\n    x.domain(data.map((d) => {\n      return d.title;\n    }));\n    y.domain([0, d3.max(data,(d) => {\n      return d.price;\n    })]);\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", `translate(0, ${chartHeight})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"dx\", -10)\n      .attr(\"dy\", -5);\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n    svg.selectAll(\"rect\")\n      .data(data)\n      .enter().append(\"rect\")\n      .style(\"fill\", (d) => {\n        return color(d.price);\n      })\n      .attr(\"x\", (d) => {\n        return x(d.title); })\n      .attr(\"width\", () => {\n        return x.bandwidth();\n      })\n      .attr(\"y\", (d) => {\n        return y(d.price);\n      })\n      .attr(\"height\", (d) => {\n        return chartHeight - y(d.price);\n      });\n  });\n}\nbar();\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- D3 Enter</title>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12\" id=\"target\">\n\n      </div>\n    </div>\n  </div>\n  <script src=\"img/d3.min.js\"></script>\n  <script src=\"img/d3-fetch.min.js\"></script>\n  <script>\n    function enter() {\n      const data = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n      d3.select(\"#target\")\n        .selectAll(\"p\")\n        .data(data)\n        .enter().append(\"p\")\n        .text((d) => d);\n    }\n    enter();\n\n  </script>\n</body>\n\n</html>\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- D3 Enter with existing content</title>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12\" id=\"target\">\n        <p>This is an existing paragraph</p>\n\n      </div>\n    </div>\n  </div>\n  <script src=\"img/d3.min.js\"></script>\n  <script src=\"img/d3-fetch.min.js\"></script>\n  <script>\n    function enter() {\n      const data = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n      d3.select(\"#target\")\n        .selectAll(\"p\")\n        .data(data)\n        .enter()\n        .append(\"p\")\n        .text((d) => d);\n    }\n    enter();\n\n  </script>\n</body>\n\n</html>\n```", "```xml\n      const data = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n      d3.select(\"#target\")\n        .selectAll(\"p\")\n        .data(data)\n        .text((d) => d)\n        .enter()\n        .append(\"p\")\n        .text((d) => d);\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Mastering SVG- D3 Exit</title>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12\" id=\"target\">\n\n      </div>\n    </div>\n  </div>\n  <script src=\"img/d3.min.js\"></script>\n  <script>\n      const data = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n      function render(){\n        d3.select(\"#target\")\n          .selectAll(\"p\")\n          .data(data)\n          .enter()\n          .append(\"p\")\n          .text((d) => d );\n        d3.select(\"#target\")\n          .selectAll(\"p\")\n          .data(data)\n          .exit()\n          .remove();\n        if (data.length) {\n          setTimeout(()=>{\n            data.pop();\n            render();\n          }\n          ,1000);\n        }\n      }\n    render();\n  </script>\n</body>\n\n</html>\n```", "```xml\ntitle,numbers\n\"Action Comics #1\",18\n\"All Star #8\", 1\n\"Amazing Fantasy #15\",4\n\"Batman #1\",2\n\"Captain America Comics #1\", 1\n\"Detective Comics #27\",13\n\"Flash Comics #1\", 2\n\"Incredible Hulk #1\", 2\n\"Marvel Comics #1\", 1\n\"Sensation Comics #1\", 1\n\"Tales of Suspense #39\", 1\n\"X-Men #1\", 3\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>Mastering SVG- D3 Chord Diagram</title>\n    <link rel=\"stylesheet\" \nhref=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n        crossorigin=\"anonymous\">\n    <link href=\"https://fonts.googleapis.com/css?family=Raleway\" \n     rel=\"stylesheet\">\n    <style type=\"text/css\">\n        text {\n            font-family: Raleway;\n            font-size: .8em;\n            text-anchor: middle;\n            fill: #fff;\n        }\n        text.legend{\n            font-size: 1.25em;\n            fill: #000;\n        }\n    </style>\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-12\" id=\"target\">\n\n            </div>\n        </div>\n    </div>\n\n    <script src=\"img/d3.min.js\"></script>\n    <script src=\"img/d3-fetch.min.js\"></script>\n    <script src=\"img/donut.js\"></script>\n\n</body>\n\n</html>\n```", "```xml\nconst width = 1000,\n  height = 1000,\n  radius = Math.min(width, height) / 2;\n\nconst color = d3.scaleOrdinal()\n  .domain(d3.range(13))\n  .range([\n    \"#1fb003\",\n    \"#1CA212\",\n    \"#199522\",\n    \"#178732\",\n    \"#147A41\",\n    \"#126C51\",\n    \"#0F5F61\",\n    \"#0C5170\",\n    \"#0A4480\",\n    \"#073690\",\n    \"#05299F\",\n    \"#021BAF\",\n    \"#000EBF\"\n  ]);\n```", "```xml\nconst arc = d3.arc()\n  .outerRadius(radius - 10)\n  .innerRadius(radius - 200);\n\nconst pie = d3.pie()\n  .value((d) => {\n    return d.numbers;\n  });\n```", "```xml\nlet svg = d3.select(\"#target\").append(\"svg\")\n  .attr(\"width\", width)\n  .attr(\"height\", height)\n  .append(\"g\")\n  .attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\nsvg.append(\"text\")\n  .text(\"Distribution of comic book titles in top 50 sales of all time.\")\n  .attr(\"class\",\"legend\");\n\n```", "```xml\nd3.csv(\"data/top-fifty-comics-data.csv\").then((data) => {\n  let g = svg.selectAll(\".arc\")\n    .data(pie(data))\n    .enter()\n    .append(\"g\");\n\n  g.append(\"path\")\n    .attr(\"d\", arc)\n    .style(\"fill\", (d) => {\n      return color(d.index);\n    });\n\n  svg.selectAll(\".label\")\n    .data(pie(data))\n    .enter()\n    .append(\"text\")\n    .attr(\"class\", \"text\")\n    .attr(\"transform\", (d) => {\n      return `translate(${arc.centroid(d)})`;\n    })\n    .attr(\"dy\", (d) => {\n      if (d.startAngle > 6.0 && d.startAngle < 6.125) {\n        return \"-.6em\";\n      } else if (d.startAngle > 6.125) {\n        return \"-1.5em\";\n      }\n    })\n    .text((d) => {\n      return d.data.title;\n    });\n\n});\n```", "```xml\n<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>Mastering SVG- D3 Chord Diagram</title>\n    <link rel=\"stylesheet\" \nhref=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\n        crossorigin=\"anonymous\">\n    <link href=\"https://fonts.googleapis.com/css?family=Raleway\" rel=\"stylesheet\">\n    <style type=\"text/css\">\n    h1 {\n        font-family: Raleway;\n    }\n    text {\n        font-family: Raleway;\n        font-size: 1em;\n    }\n    text.tick {\n        font-size: .8em;\n        fill: #999;\n    }\n    .group-tick line {\n        stroke: #999;\n    }\n    </style>\n</head>\n\n<body>\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-12\" id=\"target\">\n                <h1>Trip connections between the top 10 Hubway \n                    departure stations. Data from the\n                    <a href=\"http://hubwaydatachallenge.org/\">Hubway \n                     Data Visualization Challenge</a>\n                </h1>\n\n            </div>\n        </div>\n    </div>\n\n    <script src=\"img/d3.min.js\"></script>\n    <script src=\"img/chord.js\"></script>\n\n</body>\n\n</html>\n```", "```xml\nfunction drawChord() {\n  const names = [\n    \"South Station\",\n    \"TD Garden\",\n    \"Boston Public Library\",\n    \"Boylston St. at Arlington St\",\n    \"Back Bay / South End Station\",\n    \"Charles Circle\",\n    \"Kenmore Sq / Comm Av\",\n    \"Beacon St / Mass Av\",\n    \"Lewis Wharf\",\n    \"Newbury St / Hereford S\"\n  ];\n  const matrix = [\n    [2689, 508, 1170, 189, 1007, 187, 745, 248, 263, 2311],\n    [1064, 121, 830, 323, 2473, 393, 453, 312, 533, 599],\n    [506, 296, 813, 530, 988, 540, 1936, 578, 747, 268],\n    [706, 311, 1568, 526, 1273, 371, 618, 694, 481, 227],\n    [178, 701, 277, 176, 663, 227, 379, 284, 330, 111],\n    [550, 270, 548, 445, 196, 769, 868, 317, 1477, 195],\n    [344, 141, 468, 955, 172, 346, 502, 388, 415, 97],\n    [333, 207, 455, 545, 196, 1322, 618, 254, 659, 62],\n    [655, 120, 301, 90, 2368, 108, 226, 99, 229, 875],\n    [270, 221, 625, 436, 239, 278, 548, 1158, 320, 90]\n  ];\n```", "```xml\nconst width = 1200,\n    height = 1200,\n    radius = Math.min(width, height) / 2,\n    padding = 200,\n    outerRadius = radius - padding,\n    innerRadius = outerRadius - 25;\n\n  const chord = d3.chord()\n    .padAngle(0.025)\n    .sortSubgroups(d3.descending);\n\n  const arc = d3.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n  const ribbon = d3.ribbon()\n    .radius(innerRadius);\n\n  const color = d3.scaleOrdinal()\n    .domain(d3.range(9))\n    .range([\n      \"#e6194b\",\n      \"#ffe119\",\n      \"#0082c8\",\n      \"#f58231\",\n      \"#911eb4\",\n      \"#46f0f0\",\n      \"#f032e6\",\n      \"#d2f53c\",\n      \"#808000\",\n      \"#008080\"\n    ]);\n```", "```xml\n  const svg = d3.select(\"#target\")\n    .append(\"svg\")\n    .attr(\"height\", height)\n    .attr(\"width\", width);\n\n  const g = svg.append(\"g\")\n    .attr(\"transform\", `translate(${width / 2},${height / 2})`)\n    .datum(chord(matrix));\n\n  const group = g.append(\"g\")\n    .attr(\"class\", \"groups\")\n    .selectAll(\"g\")\n    .data((chords) => chords.groups)\n    .enter()\n    .append(\"g\");\n```", "```xml\n  group.append(\"path\")\n    .attr(\"d\", arc)\n    .style(\"fill\", (d) => color(d.index))\n    .style(\"stroke\", (d) => d3.color(color(d.index)).darker())\n    .on(\"mouseover\", fade(.1))\n    .on(\"mouseout\", fade(1));\n\n  g.append(\"g\")\n    .attr(\"class\", \"ribbons\")\n    .selectAll(\"path\")\n    .data((chords) => chords)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", ribbon)\n    .style(\"fill\", (d) => color(d.source.index))\n        .style(\"stroke\", (d) => {\n      return d3.color(color(d.source.index)).darker();\n    });\n```", "```xml\ngroup.append(\"text\")\n    .each((d) => d.angle = (d.startAngle + d.endAngle) / 2)\n    .attr(\"text-anchor\", (d) => {\n      if (d.angle > Math.PI) {\n        return \"end\";\n      }\n    })\n    .attr(\"transform\", (d) => {\n      const y = Math.sin(d.angle) * (outerRadius + 10),\n        x = Math.cos(d.angle) * (outerRadius + 20);\n      return `translate(${y},${(-x)})`;\n    })\n    .text((d) => {\n      return names[d.index];\n    });\n```", "```xml\n  const groupTick = group.selectAll(\".group-tick\")\n    .data((d) => groupTicks(d, 1000))\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"group-tick\")\n    .attr(\"transform\", (d) => {\n      return `rotate(${(d.angle * 180 / Math.PI - 90)}) translate(${outerRadius},0)`;\n    });\n\n  groupTick.append(\"line\")\n    .attr(\"x2\", 6);\n\n  groupTick\n    .filter((d) => d.value && !(d.value % 5000))\n    .append(\"text\")\n    .attr(\"x\", 8)\n    .attr(\"dy\", \".35em\")\n    .attr(\"transform\", (d) => {\n      if (d.angle > Math.PI) {\n        return \"rotate(180) translate(-16)\";\n      }\n    })\n    .style(\"text-anchor\", (d) => {\n      if (d.angle > Math.PI) {\n        return \"end\";\n      }\n    })\n    .attr(\"class\", \"tick\")\n    .text((d) => d3.formatPrefix(\",.0\", 1000)(d.value));\n\n  function groupTicks(d, step) {\n    let k = (d.endAngle - d.startAngle) / d.value;\n    return d3.range(0, d.value, step).map((value) => {\n      return {\n        value: value,\n        angle: value * k + d.startAngle\n      };\n    });\n  }\n```", "```xml\n  function fade(opacity) {\n    return function(g, i) {\n      svg.selectAll(\".ribbons path\")\n        .filter((d)=> {\n          return d.source.index !== i && d.target.index !== i;\n        })\n        .transition()\n        .style(\"opacity\", opacity);\n    };\n  }\n```"]