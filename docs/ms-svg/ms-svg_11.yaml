- en: Tools to Optimize Your SVG
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化SVG的工具
- en: Now that you've learned all about SVG in this book — everything from the basics
    of pure SVG markup to the dynamic, JavaScript-based SVG work you've done over
    the past few chapters — you're ready to take advantage of everything that SVG
    offers.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经在本书中学习了关于SVG的一切，从纯SVG标记的基础知识到过去几章中您所做的基于动态JavaScript的SVG工作，您已经准备好充分利用SVG所提供的一切。
- en: One final aspect of SVG that we should look at is how to make sure the work
    you do is presented in the best possible way when you serve it to your users.
    SVG should be optimized for performance, both in terms of performance over the
    wire and in terms of complexity.  Keeping your SVG files as lean as they can be
    and serving them efficiently is going to make for a much better experience for
    your users.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该看一下SVG的最后一个方面，即确保您提供给用户的工作以最佳方式呈现。SVG应该针对性能进行优化，无论是在传输过程中的性能还是在复杂性方面。保持SVG文件尽可能精简并有效地提供它们将为用户带来更好的体验。
- en: This chapter will serve as a high-level introduction to the many ways that you
    can optimize your SVG images. Some of what follows is pure, performance-related
    engineering. Others are pure SVG tooling.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将作为一个高层次的介绍，向您展示优化SVG图像的许多方法。接下来的内容有些是纯粹与性能相关的工程。其他则是纯SVG工具。
- en: 'In this chapter, you''ll learn about the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，您将了解以下内容：
- en: Compressing SVG on the server in three popular server platforms (IIS, Apache,
    and nginx)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在三种流行的服务器平台（IIS、Apache和nginx）上对服务器上的SVG进行压缩
- en: SVGO and its associated suite of tools
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SVGO及其相关工具
- en: svgcleaner, an alternative to SVGO that offers lossless optimizations
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: svgcleaner，SVGO的替代方案，提供无损优化
- en: Serving compressed SVG
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供压缩的SVG
- en: One of the most straightforward performance enhancements you can do when working
    with SVG is to compress `gzip` files when you serve them. While text files generally
    benefit from being gzipped when served to the browser, SVG is an especially important
    target because of the way that SVG images are used (often for the core interface)
    and because of the potential size of some of the files. You want your images to
    load fast, and SVG is no exception.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理SVG时，最直接的性能增强之一就是在提供文件时对`gzip`文件进行压缩。虽然文本文件通常在提供给浏览器时受益于被gzipped，但SVG是一个特别重要的目标，因为SVG图像的使用方式（通常用于核心界面）以及一些文件的潜在大小。您希望您的图像加载速度快，SVG也不例外。
- en: Depending on what your platform is, this may be as easy as adding a few lines
    of code or checking a box in a dialog box. The next few sections show you how
    to implement this action on three common web servers.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 根据您的平台，这可能只需添加几行代码或在对话框中勾选一个框。接下来的几节将向您展示如何在三种常见的Web服务器上实现此操作。
- en: gzipping SVG on Apache
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Apache上对SVG进行gzip压缩
- en: 'Where to place the following code depends on how your Apache instance is set
    up and what access you have to the server. Most people on shared hosting will
    be doing this in their `.htaccess` file. `.htaccess` is a special file in the
    server root that allows you to configure Apache behavior without having to have
    access your main configuration file (`httpd.conf`). Assuming your server allows
    you to access this functionality (some hosts do not allow you to turn on compression,
    since it uses more server resources), gzipping text content is as easy as adding
    the following to your `.htaccess` file. Example code is drawn from the H5BP Apache
    server configs project ([https://github.com/h5bp/server-configs-apache/blob/master/dist/.htaccess#L795](https://github.com/h5bp/server-configs-apache/blob/master/dist/.htaccess#L795)).
    There are three sections:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 放置以下代码的位置取决于您的Apache实例设置以及您对服务器的访问权限。大多数共享主机的用户将在他们的`.htaccess`文件中执行此操作。`.htaccess`是服务器根目录中的一个特殊文件，允许您在不必访问主配置文件（`httpd.conf`）的情况下配置Apache行为。假设您的服务器允许您访问此功能（一些主机不允许您打开压缩，因为它会使用更多的服务器资源），则将文本内容进行gzip压缩就像在您的`.htaccess`文件中添加以下内容一样简单。示例代码来自H5BP
    Apache服务器配置项目（[https://github.com/h5bp/server-configs-apache/blob/master/dist/.htaccess#L795](https://github.com/h5bp/server-configs-apache/blob/master/dist/.htaccess#L795)）。有三个部分：
- en: The first fixes a problem where request headers are being mangled by proxy servers
    and assets are therefore not being served gzipped (this fixes more than just SVG)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一个修复了代理服务器搞乱请求标头导致资源无法被提供为gzipped的问题（这不仅修复了SVG）
- en: The second actually tells Apache to compress files of the listed MIME types
    (abbreviated here; there are normally dozens of different MIME types listed)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二个实际上告诉Apache压缩列出的MIME类型的文件（这里进行了缩写；通常会列出几十种不同的MIME类型）
- en: 'The third ensures that SVG files compressed and saved in a compressed format,
    `.svgz`, are served properly:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三个确保以压缩格式`.svgz`压缩并保存的SVG文件能够正确提供：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: SVG compression on nginx
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在nginx上对SVG进行压缩
- en: 'Similar to Apache, turning on `gzip` compression for SVG is just a matter of
    a few lines of configuration. This code block, sourced from the HTML5 boilerplate
    nginx server configs project ([https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf#L89](https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf#L89)),
    provides an example of how to do so. The code will turn `gzip` compression on,
    set the `gzip` compression level, stop compression for already small objects,
    set some values for proxies, and then add the SVG MIME type to the list of objects
    that should be compressed (again, abbreviated here; there are normally dozens
    of different MIME types listed):'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 与Apache类似，为SVG打开`gzip`压缩只是配置几行代码的问题。这段代码块来自HTML5锅炉板nginx服务器配置项目（[https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf#L89](https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf#L89)），提供了如何执行此操作的示例。该代码将打开`gzip`压缩，设置`gzip`压缩级别，停止对已经很小的对象进行压缩，为代理设置一些值，然后将SVG
    MIME类型添加到应该被压缩的对象列表中（这里进行了缩写；通常会列出几十种不同的MIME类型）：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: SVG compression on IIS
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IIS上的SVG压缩
- en: 'IIS doesn''t compress SVG files by default. Depending on how your server is
    configured, the following change needs to be made in your `applicationHost.config`
    (`C:\Windows\System32\inetsrv\config`) or `web.config` file. You simply need to
    add the SVG MIME type to the `staticTypes` and `dynamicTypes` elements in the
    `httpCompression` module and you''re ready to go:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: IIS默认情况下不会压缩SVG文件。根据服务器的配置方式，需要在`applicationHost.config`（`C:\Windows\System32\inetsrv\config`）或`web.config`文件中进行以下更改。您只需将SVG
    MIME类型添加到`httpCompression`模块中的`staticTypes`和`dynamicTypes`元素中，然后就可以开始了：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now that we've learned about serving SVG efficiently, it's time to look at some
    ways to optimize SVG before they get on the server.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学会了有效地提供SVG，是时候看看一些在将SVG放在服务器上之前对SVG进行优化的方法了。
- en: SVGO
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SVGO
- en: SVG Optimizer ([https://github.com/svg/svgo](https://github.com/svg/svgo)) is
    a Node.js utility for optimizing SVG files. SVG files, especially those generated
    by editors, can have a lot of cruft associated with them. SVGO can clean up the
    metadata, comments, hidden elements, and so on, without changing the rendering
    of the SVG element itself.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: SVG优化器（[https://github.com/svg/svgo](https://github.com/svg/svgo)）是用于优化SVG文件的Node.js实用程序。SVG文件，特别是由编辑器生成的文件，可能会有许多与之相关的垃圾。SVGO可以清理元数据、注释、隐藏元素等，而不会改变SVG元素本身的渲染。
- en: 'To install it, assuming you have Node.js installed, run the following on the
    command line:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装它，假设您已安装了Node.js，请在命令行上运行以下命令：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Usage is as simple as this:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用方法就是这么简单：
- en: '[PRE4]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Running that on a small file generated by Inkscape, reduces the file size by
    over 50 percent:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在Inkscape生成的小文件上运行，可以将文件大小减少50％以上：
- en: '![](img/9d8d598b-8a7f-42e7-bd50-6bedead62d96.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9d8d598b-8a7f-42e7-bd50-6bedead62d96.png)'
- en: The difference is apparent if you look at the change in the `svgo.svg` source
    code, before and after optimization.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您查看`svgo.svg`源代码在优化之前和之后的变化，差异是显而易见的。
- en: 'The following screenshot shows the metadata added by Inkscape during the authoring
    process:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在创作过程中Inkscape添加的元数据：
- en: '![](img/1869e97d-22ba-48bc-9ce5-0b2fed462670.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1869e97d-22ba-48bc-9ce5-0b2fed462670.png)'
- en: 'This screenshot shows the cleaned-up file after optimization:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 此截图显示了优化后的清理文件：
- en: '![](img/d05d9dbb-2867-40d7-be10-88de011cb70c.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d05d9dbb-2867-40d7-be10-88de011cb70c.png)'
- en: It's a great tool, with many configuration options ([https://github.com/svg/svgo#usage](https://github.com/svg/svgo#usage))
    and integrations with other tools ([https://github.com/svg/svgo#other-ways-to-use-svgo](https://github.com/svg/svgo#other-ways-to-use-svgo)).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很棒的工具，有许多配置选项（[https://github.com/svg/svgo#usage](https://github.com/svg/svgo#usage)）和与其他工具的集成（[https://github.com/svg/svgo#other-ways-to-use-svgo](https://github.com/svg/svgo#other-ways-to-use-svgo)）。
- en: SVGOMG
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SVGOMG
- en: 'One of the integrations listed in the preceding link is with a web frontend
    for SVGO, called SVGOMG ([https://jakearchibald.github.io/svgomg/](https://jakearchibald.github.io/svgomg/)).
    SVGOMG is a web frontend for SVGO. Having almost all of the options exposed in
    the UI allows you to dive deeper into the optimizations that SVGO offers without
    having to pore over all of the configuration options. Loading an SVG element into
    the interface presents you with the following view:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的链接中列出的集成之一是与SVGO的Web前端SVGOMG的集成（[https://jakearchibald.github.io/svgomg/](https://jakearchibald.github.io/svgomg/)）。SVGOMG是SVGO的Web前端。在UI中几乎暴露了所有选项，使您能够更深入地了解SVGO提供的优化，而无需研究所有配置选项。将SVG元素加载到界面中，会呈现以下视图：
- en: '![](img/1130e1ce-0b61-4d6c-90a2-151487bc445e.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1130e1ce-0b61-4d6c-90a2-151487bc445e.png)'
- en: The loaded SVG is on the left, shown in the optimized view. You can toggle the
    Show original button to see if there is any degradation of the visible image because
    of the optimizations.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 加载的SVG在左侧，显示为优化视图。您可以切换“显示原始”按钮，以查看由于优化而导致的可见图像是否有任何降级。
- en: Keep in mind that some of the optimizations that SVGO offers are potentially
    *lossy*. This means that the image itself might change in some visible way; the
    effective data of the image will be lost, because of the optimizations that are
    run.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，SVGO提供的一些优化可能会有*损失*。这意味着图像本身可能会以某种可见的方式发生变化；由于运行的优化，图像的有效数据将丢失。
- en: Then, along the right side are many of the options available to you to tweak
    your images. There's a preview of the savings and then a download button that
    will allow you to download your handiwork.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在右侧有许多可供您调整图像的选项。有一个节省的预览，然后有一个下载按钮，可以让您下载您的作品。
- en: While many people will automate this optimization as part of a build process,
    it's nice to know that you can have fine-grained control of this tool right on
    the web, with immediate feedback for your changes.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管许多人会将此优化作为构建过程的一部分自动化，但知道您可以在Web上对此工具进行精细控制，并立即获得更改的反馈是件好事。
- en: SVGO authoring plugins
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SVGO创作插件
- en: In addition to the command-line tools available and the web-based interface,
    there are a couple of authoring plugins available for you to integrate SVGO right
    into your authoring workflow. `SVG-NOW` is a plugin for Adobe Illustrator (although
    it appears to have been abandoned; it hasn't been updated since 2014) and SVGO
    Compressor is an actively developed plugin to the popular application, Sketch.
    If you've got a design team, you can save yourself time and then surprises by
    integrating these optimizations earlier into the production process. Since they'll
    be in control of the export process, they'll know precisely what the output of
    SVGO optimization will be.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 除了可用的命令行工具和基于Web的界面之外，还有一些创作插件可供您将SVGO直接集成到创作工作流程中。`SVG-NOW`是Adobe Illustrator的插件（尽管它似乎已被放弃；自2014年以来就没有更新过），而SVGO
    Compressor是流行应用Sketch的一个正在积极开发的插件。如果您有一个设计团队，您可以通过在生产过程中较早地集成这些优化来节省时间并避免出现意外。由于他们将控制导出过程，他们将准确知道SVGO优化的输出将是什么。
- en: svgcleaner
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: svgcleaner
- en: svgcleaner is an alternative to SVGO that offers *lossless optimizations* [(](https://github.com/RazrFalcon/svgcleaner)[https://github.com/RazrFalcon/svgcleaner](https://github.com/RazrFalcon/svgcleaner))*. *In
    comparison with SVGO, which has the potential to break things, svgcleaner promises
    to never break an SVG file. Browse their charts ([https://github.com/RazrFalcon/svgcleaner#charts](https://github.com/RazrFalcon/svgcleaner#charts))
    to see how they compare themselves to SVGO and scour (another alternative).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: svgcleaner是SVGO的替代品，提供*无损优化*（[https://github.com/RazrFalcon/svgcleaner](https://github.com/RazrFalcon/svgcleaner)）。与有可能破坏事物的SVGO相比，svgcleaner承诺永远不会破坏SVG文件。浏览他们的图表（[https://github.com/RazrFalcon/svgcleaner#charts](https://github.com/RazrFalcon/svgcleaner#charts)）以查看他们如何与SVGO和scour（另一种替代品）进行比较。
- en: 'What''s more, there''s also a downloadable GUI ([https://github.com/RazrFalcon/svgcleaner-gui/releases](https://github.com/RazrFalcon/svgcleaner-gui/releases))
    that you can run on your desktop. The following screenshot shows it in action.
    All that''s happened to get to this state is to load an SVG element and to hit
    the Play button, which runs the optimization:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个可下载的GUI（[https://github.com/RazrFalcon/svgcleaner-gui/releases](https://github.com/RazrFalcon/svgcleaner-gui/releases)），您可以在桌面上运行。以下截图显示了它的运行情况。要达到这种状态所发生的一切就是加载一个SVG元素并点击播放按钮，这将运行优化：
- en: '![](img/e270fb80-99f5-4bf9-84bb-0f11ed55588a.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e270fb80-99f5-4bf9-84bb-0f11ed55588a.png)'
- en: Since it's built-in Rust and isn't a native Node.js application, it doesn't
    play as nicely with the `npm/node` world, but it's still a great tool.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由于它是用Rust构建的，而不是原生的Node.js应用程序，它与`npm/node`世界的兼容性不是很好，但它仍然是一个很棒的工具。
- en: Summary
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This has been the lightest chapter in the book, but you still learned some things
    that will help you with SVG optimization. Keeping these factors and these tools
    in mind will ensure the best possible outcome for your users and will make sure
    your hard work with SVG will be seen in the best possible light.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书中最轻松的一章，但您仍然学到了一些有助于SVG优化的知识。牢记这些因素和这些工具将确保用户获得最佳的结果，并确保您对SVG的辛勤工作能够以最佳的方式展现出来。
- en: And with that, our journey through the world of SVG comes to an end. From the
    most basic SVG elements, through complicated JavaScript visualizations and CSS-based
    animations, you've experienced the full breadth of what SVG has to offer. Hopefully,
    you've enjoyed the journey and will continue to work with SVG in the future.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这一点，我们对SVG世界的旅程就结束了。从最基本的SVG元素，到复杂的JavaScript可视化和基于CSS的动画，您体验了SVG所能提供的全部广度。希望您享受了这段旅程，并将继续在未来与SVG一起工作。
