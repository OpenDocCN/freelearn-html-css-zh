- en: Learning HTML5
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习HTML5
- en: It's finally time to start building our website. First, you'll need to understand
    the basics of **Hypertext Markup Language** (**HTML**) and CSS. We'll start with
    HTML with an introduction of what HTML is. Following the structure of an HTML
    document, we will be filling the structures and will be adding some images and
    links along the way.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 终于是时候开始构建我们的网站了。首先，您需要了解**超文本标记语言**（**HTML**）和CSS的基础知识。我们将从HTML开始，介绍HTML是什么。按照HTML文档的结构，我们将填充结构，并在途中添加一些图像和链接。
- en: 'In this chapter, we will cover:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖：
- en: Atom, our text editor
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Atom，我们的文本编辑器
- en: HTML tags and attributes
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML标签和属性
- en: HTML structure
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML结构
- en: Images and links
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像和链接
- en: So, let's get started.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们开始吧。
- en: Our main tool
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们的主要工具
- en: Before we actually start coding, we need to download a text editor. It's a program
    to basically write all our code. In this course, we will use Atom; you can download
    the tool via this URL ([https://atom.io/](https://atom.io/)). The program is available
    for macOS, Windows, and Linux, and it is completely free!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们真正开始编码之前，我们需要下载一个文本编辑器。这是一个基本上用来编写我们所有代码的程序。在本课程中，我们将使用Atom；您可以通过此URL（[https://atom.io/](https://atom.io/)）下载该工具。该程序适用于macOS、Windows和Linux，而且完全免费！
- en: If you are familiar with another text editor, it's completely fine to use your
    one. A few other editors are also very nice and free, such as Sublime Text 3 ([https://www.sublimetext.com/](https://www.sublimetext.com/)), 
    Bracket ([http://brackets.io/](http://brackets.io/)), and Dreamweaver ([https://www.adobe.com/products/dreamweaver.html](https://www.adobe.com/products/dreamweaver.html)).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您熟悉其他文本编辑器，完全可以使用您自己的。还有一些其他非常好的免费编辑器，如Sublime Text 3（[https://www.sublimetext.com/](https://www.sublimetext.com/)）、Bracket（[http://brackets.io/](http://brackets.io/)）和Dreamweaver（[https://www.adobe.com/products/dreamweaver.html](https://www.adobe.com/products/dreamweaver.html)）。
- en: 'Once you have your text editor, we can start the course:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您有了文本编辑器，我们就可以开始课程了：
- en: '![](img/08310e57-09c8-4f8d-9086-851724993956.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/08310e57-09c8-4f8d-9086-851724993956.png)'
- en: The ATOM Text Editor
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ATOM文本编辑器
- en: 'First things first, we need to create a folder to put all our project files
    in there. Let''s create this folder and call it `Racing Club Website`. Once you''ve
    done that, open this folder as our project folder. Click on File | Add Project
    Folder…:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要创建一个文件夹来放置所有我们的项目文件。让我们创建这个文件夹并将其命名为`Racing Club Website`。完成后，将此文件夹打开为我们的项目文件夹。单击文件|添加项目文件夹...：
- en: '![](img/fbf980d9-7c88-412f-8f9a-3fbba4f97cfb.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fbf980d9-7c88-412f-8f9a-3fbba4f97cfb.png)'
- en: Now that we have our super text editor installed and our project folder set,
    let's talk about HTML.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经安装了超级文本编辑器并设置了项目文件夹，让我们谈谈HTML。
- en: What is HTML?
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是HTML？
- en: HTML is the standard markup language for creating web pages and web applications.
    Combined with CSS and JavaScript, you can create simple and complex websites.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: HTML是用于创建网页和Web应用程序的标准标记语言。结合CSS和JavaScript，您可以创建简单和复杂的网站。
- en: Every web page is actually an HTML file. Each HTML file is just a plain-text
    file, but with a `.html` file extension instead of `.txt`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 每个网页实际上都是一个HTML文件。每个HTML文件只是一个纯文本文件，但扩展名为`.html`而不是`.txt`。
- en: HTML tags
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML标签
- en: 'HTML tags are the hidden keywords that define how you order and display element
    and content. Most HTML tags have two parts, an opening, and a closing part:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: HTML标签是定义您如何对元素和内容进行排序和显示的隐藏关键字。大多数HTML标签都有两个部分，一个开放部分和一个关闭部分：
- en: '![](img/4c73cc9b-6edf-4afd-824d-79d822b5ac66.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4c73cc9b-6edf-4afd-824d-79d822b5ac66.png)'
- en: Note that the closing tag has the same text as the opening tag, but has an additional
    forward-slash ( `/` ) character.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，关闭标签与开放标签具有相同的文本，但有一个额外的斜杠（`/`）字符。
- en: 'There are some exceptions, such as the HTML tag `<img>` that does not have
    a closing tag:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 也有一些例外，比如HTML标签`<img>`没有闭合标签：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: To view an HTML document, you'll need a web browser such as Google Chrome, Mozilla
    Firefox, Internet Explorer, or Safari.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看HTML文档，您需要一个网页浏览器，如Google Chrome、Mozilla Firefox、Internet Explorer或Safari。
- en: HTML attributes
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML属性
- en: 'Attributes are what customize the tags, and they''re defined within the tags,
    for example:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 属性是用于自定义标签的内容，并且它们是在标签内定义的，例如：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Attributes are optional for most tags, usually to change the default state of
    a tag. However, some tags, such as the `<img>` tag, require attributes such as
    `src` and `alt`, which are needed for the browser to display the image properly.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数标签的属性是可选的，通常用于更改标签的默认状态。但是，某些标签，如`<img>`标签，需要`src`和`alt`等属性，这些属性对于浏览器正确显示图像是必需的。
- en: HTML structure
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML结构
- en: Every HTML follows a structure so that a browser is able to read the page. To
    summarize, it always starts with an `<html>` tag. This tag will contain the `<head>`
    tag and the `<body>`tag. Let's create our first page so you can understand.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 每个HTML都遵循一种结构，以便浏览器能够读取页面。总结一下，它总是以`<html>`标签开头。此标签将包含`<head>`标签和`<body>`标签。让我们创建我们的第一个页面，这样您就可以理解了。
- en: Creating our first page
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建我们的第一个页面
- en: To create our first page. Click on File | New File or *Command* + *N* (or *Ctrl*
    + *N* for Windows).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建我们的第一个页面。单击文件|新建文件或*Command* + *N*（或*Ctrl* + *N*适用于Windows）。
- en: You now have an untitled file. Let's quickly save and name it by clicking File
    | Save or *Command* + *S* (or *Ctrl* + *S* for Windows) and name it `index.html`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在有一个无标题文件。让我们快速保存并命名它，方法是单击文件|保存或*Command* + *S*（或*Ctrl* + *S*适用于Windows），然后将其命名为`index.html`。
- en: Why name it `index.html`? Because the `index.html` page is the common name used
    for the default page shown on a website by default when a visitor requests the
    site. In other words, `index.html` is basically the name used for the homepage
    of the website.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么要命名为`index.html`？因为`index.html`页面是在访客请求站点时默认显示的默认页面的常用名称。换句话说，`index.html`基本上是网站的主页名称。
- en: 'Now that we have our first HTML file, we have to put the essential tags in
    to make it work. The essential tags should be written as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了我们的第一个HTML文件，我们必须放入必要的标签才能使其工作。必要的标签应按以下方式编写：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Simply copy and paste the code into your HTML file and open your file with your
    internet browser (we will pick Google Chrome). Don't forget to save your document!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 只需将代码复制粘贴到你的HTML文件中，并用你的互联网浏览器打开文件（我们将选择Google Chrome）。不要忘记保存你的文档！
- en: 'Your web page should appear as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你的网页应该如下所示：
- en: '![](img/2b5ffab8-9591-4e92-81e1-b03e62689567.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2b5ffab8-9591-4e92-81e1-b03e62689567.png)'
- en: The web page opened in Google Chrome
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在Google Chrome中打开的网页
- en: Congratulations! You have just created your first web page!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你刚刚创建了你的第一个网页！
- en: Now let's add some other elements to our page.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们向我们的页面添加一些其他元素。
- en: HTML elements
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HTML元素
- en: There are many different elements in HTML and they are all for different purposes.
    It's not mandatory to know all of them, but some are essentials for a website.
    Here are a few essential elements in HTML.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: HTML中有许多不同的元素，它们都是为不同的目的而设计的。不是必须要了解所有的元素，但是一些对于网站来说是必不可少的。以下是HTML中的一些基本元素。
- en: Titles and paragraphs
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标题和段落
- en: To insert a title in HTML, there is a tag called `<h1>` that goes all the way
    to `<h6>`. The number is determined by the importance of the title.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要在HTML中插入标题，有一个名为`<h1>`的标签，一直到`<h6>`。数字由标题的重要性决定。
- en: 'Let''s put an `<h1>` element into our `<body>`:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把一个`<h1>`元素放到我们的`<body>`中：
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We now have our first title. Let''s add a paragraph. To add a paragraph, we
    can use the HTML tag `<p>`:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了我们的第一个标题。让我们添加一个段落。要添加一个段落，我们可以使用HTML标签`<p>`：
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: You learned earlier that for each HTML tag, we have an opening `<tagname>` tag
    and a closing `</tagname>` tag. This is to basically tell you when your element
    is ending. You can also add another tag inside a tag. For example, if we want
    to make some text **bold**.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你之前学到，对于每个HTML标签，我们有一个开放的`<tagname>`标签和一个关闭的`</tagname>`标签。这基本上是告诉你你的元素何时结束。你也可以在一个标签内添加另一个标签。例如，如果我们想要使一些文本**加粗**。
- en: 'Let''s use our `<p>` tag and add a `<b>` tag to our `amazing` word to make
    it bold:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用我们的`<p>`标签，并在`amazing`单词中添加一个`<b>`标签使其加粗：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This is what you should have in your browser:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你在浏览器中应该看到的：
- en: '![](img/d55513af-c3e3-4f79-af60-359b777c873a.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d55513af-c3e3-4f79-af60-359b777c873a.png)'
- en: Amazing! You just put text in bold! Let's add some forms now.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！你刚刚把文本加粗了！现在让我们添加一些表单。
- en: With forms, no matter what type of information you want from your users, to
    get it from them you'll need to use the `<input>` tag.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 使用表单，无论你想从用户那里获取什么类型的信息，你都需要使用`<input>`标签来获取它们。
- en: There are many different types of inputs, but, for now, we'll cover `email`
    and `submit`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同类型的输入，但是，现在我们将涵盖`email`和`submit`。
- en: 'The `input` tag is one of the exceptions that does not need a closing tag;
    let''s add it to our paragraph:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`input`标签是不需要闭合标签的例外之一；让我们把它添加到我们的段落中：'
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](img/ebf57f83-04d6-4698-9b73-9068aee54357.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ebf57f83-04d6-4698-9b73-9068aee54357.png)'
- en: HTML Attribute
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: HTML属性
- en: You can think of attributes as options for each tag
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以把属性看作是每个标签的选项
- en: 'But the `email` input won''t be any good without a Submit button! Let''s add
    another input type, `submit`:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 但是`email`输入如果没有提交按钮就不会有任何作用！让我们添加另一个输入类型，`submit`：
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let''s see what we have now:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看我们现在有什么：
- en: '![](img/d7941345-6943-42f8-82f6-726032dabbb7.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d7941345-6943-42f8-82f6-726032dabbb7.png)'
- en: This is what you should have in your browser. Save your HTML document with *Ctrl*
    (or *Cmd*) + *S* and refresh your browser.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你在浏览器中应该看到的。用*Ctrl*（或*Cmd*）+ *S*保存你的HTML文档，然后刷新你的浏览器。
- en: 'Awesome! But we may have a little problem. We don''t actually say what users
    are supposed to type into the input `email`. Luckily, there is an attribute called
    `placeholder` that lets us add a default text to our input, so users know what
    to type:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！但是我们可能会有一点问题。我们实际上没有说用户应该在`email`输入中输入什么。幸运的是，有一个名为`placeholder`的属性，让我们可以向我们的输入添加默认文本，这样用户就知道应该输入什么：
- en: '[PRE8]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Excellent! Now you can see our placeholder in our email's input.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在你可以在我们的电子邮件输入中看到我们的占位符。
- en: '![](img/696a0ad2-9ca5-4f2c-b3dc-7dbbaaa6577a.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/696a0ad2-9ca5-4f2c-b3dc-7dbbaaa6577a.png)'
- en: This is what you should have in your browser. Save your HTML document with *Ctrl*
    (or *Cmd*) + *S* and refresh your browser.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你在浏览器中应该看到的。用*Ctrl*（或*Cmd*）+ *S*保存你的HTML文档，然后刷新你的浏览器。
- en: Links and images
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 链接和图片
- en: Our last part will be to add images and links.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的最后一部分将是添加图片和链接。
- en: 'Web pages will be boring without images. To add an image, you need to add a
    tag, `<img>`:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 网页如果没有图片会很无聊。要添加一张图片，你需要添加一个`<img>`标签：
- en: '![](img/5d96c311-989e-4f6a-ae7f-8183b2635d5c.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5d96c311-989e-4f6a-ae7f-8183b2635d5c.png)'
- en: img tag structure
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: img标签结构
- en: You'll need to add the `src` attribute to put the location of your image.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要添加`src`属性来放置你的图片位置。
- en: But first, let's create a folder to put all our images inside. Go back to your
    main folder, `Racing Club Website`, which we created earlier. Inside, let's create
    a folder named `images`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先，让我们创建一个文件夹来放置我们所有的图片。回到你之前创建的主文件夹`Racing Club Website`。在里面，让我们创建一个名为`images`的文件夹。
- en: In the `Images` folder in code bundle on GitHub, you can see an image called
    `designer.jpg`; let's copy and paste this image into our folder `images`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在GitHub上的代码包中的`Images`文件夹中，你可以看到一个名为`designer.jpg`的图片；让我们把这张图片复制粘贴到我们的`images`文件夹中。
- en: 'Now that we have the image in your `images` folder, we can link it to our `img`
    tag. To do so, add the following:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们在`images`文件夹中有了图片，我们可以将它链接到我们的`img`标签。为此，添加以下内容：
- en: '[PRE9]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: You can put two different types of URL in the `src` attribute. A relative URL,
    such as the one we put, only works if you're linking to a file on the same domain
    as the current page. Since we're doing it locally, it's considered the same domain.
    And an absolute URL, a URL that includes `http://`, directs you to the image directory,
    for example, `http://philippehong.com/img/image-example.jpg`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在`src`属性中放置两种不同类型的URL。相对URL，比如我们放置的这个，只有在链接到与当前页面相同域的文件时才有效。因为我们是在本地进行操作，所以被视为相同域。绝对URL，包括`http://`的URL，会将你引导到图片目录，例如`http://philippehong.com/img/image-example.jpg`。
- en: Let's now add a link. Links are added with the tag `<a>` and with attribute
    `href`.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们添加一个链接。链接使用`<a>`标签和`href`属性添加。
- en: 'You can put two different types of URL in the `href` attribute, just as you
    can for the image. Let''s put an absolute URL this time, by adding our Twitter
    page:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`href`属性中放入两种不同类型的URL，就像您可以为图像一样。这次让我们放入一个绝对URL，添加我们的Twitter页面：
- en: '[PRE10]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: But we still need to add some text inside the `<a>` tag to make it visible.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 但我们仍然需要在`<a>`标签内添加一些文本才能使其可见。
- en: 'Your HTML document should look as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 您的HTML文档应如下所示：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Note that you can see that the code is ready. Let''s save our HTML document
    and see how it looks in our internet browser:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您可以看到代码已经准备就绪。让我们保存我们的HTML文档，看看它在我们的互联网浏览器中的效果：
- en: '![](img/8e7fe83a-ed2a-4580-88a7-ef88046201a9.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8e7fe83a-ed2a-4580-88a7-ef88046201a9.png)'
- en: This is what you should have in your browser. Save your HTML document with *Ctrl*
    (or *Cmd*) + *S* and refresh your browser.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您在浏览器中应该看到的内容。使用*Ctrl*（或*Cmd*）+ *S*保存您的HTML文档，然后刷新您的浏览器。
- en: It does look very plain, but this is because we didn't add any CSS.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 它看起来非常简单，但这是因为我们没有添加任何CSS。
- en: Summary
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we went through all the basics of HTML. We learned about HTML
    tags, attributes, and also the overall structure of an HTML page.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了HTML的所有基础知识。我们了解了HTML标签、属性，以及HTML页面的整体结构。
- en: Before we head over to our next chapter, the tags we learned in this chapter
    are not the only tags available. There are plenty of tags in HTML, and you can
    check them out in the glossary at the end of this book. We will also use some
    new ones when we create our own project! Let's add some styling to our page now!
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进入下一章之前，我们在本章学习的标签并不是HTML中唯一可用的标签。HTML中有很多标签，您可以在本书末尾的术语表中查看它们。当我们创建自己的项目时，我们还将使用一些新的标签！现在让我们给我们的页面添加一些样式！
