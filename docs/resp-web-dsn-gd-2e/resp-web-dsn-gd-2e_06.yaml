- en: Chapter 6. Polishing the Responsive Portfolio Website with LESS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。使用LESS完善响应式作品集网站
- en: '*In the preceding chapter, we constructed the portfolio website structure with
    HTML5 and a couple of Bootstrap drop-in classes. The website as you might have
    seen isn''t yet decorated. We haven''t yet composed our very own styles or linked
    the style sheet to the page. So, this chapter''s focus will be on website decoration.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在前一章中，我们使用HTML5和一些Bootstrap插入类构建了作品集网站的结构。你可能已经看到，网站还没有装饰。我们还没有编写自己的样式或将样式表链接到页面上。因此，本章的重点将放在网站装饰上。*'
- en: '*Bootstrap primarily uses LESS to generate the styles of its components. Following
    suit, we will also use LESS to style the portfolio website. LESS brings a number
    of features, such as variables and mixins, that would allow us to write leaner
    and more efficient style rules. At the end of the day, you will also find customizing
    and maintaining website styles with LESS is easier than with plain CSS.*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*Bootstrap主要使用LESS来生成其组件的样式。我们将遵循其步伐，也使用LESS来为作品集网站设计样式。LESS带来了许多功能，如变量和混合，这将使我们能够编写更精简和高效的样式规则。最终，你会发现使用LESS来定制和维护网站样式比纯CSS更容易。*'
- en: '*Furthermore, we''ve also used a Bootstrap extension called Jasny Bootstrap
    to include off-canvas navigation into the portfolio website. At this stage, nothing
    will happen to the off-canvas navigation; we only set out the HTML structure.
    So, in this chapter, apart from compiling the website styles, we will also compile
    the JavaScript library of both Bootstrap and Jasny Bootstrap to make the off-canvas
    navigation function.*'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*此外，我们还使用了一个名为Jasny Bootstrap的Bootstrap扩展来将侧栏导航包含到作品集网站中。在这个阶段，侧栏导航不会发生任何变化；我们只是设置了HTML结构。因此，在本章中，除了编译网站样式，我们还将编译Bootstrap和Jasny
    Bootstrap的JavaScript库，以使侧栏导航功能正常。*'
- en: 'In this chapter, we will discuss many things, including the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论许多内容，包括以下主题：
- en: Learn the basic LESS syntax, such as variables and mixins
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习基本的LESS语法，如变量和混合
- en: Organize the style sheet references with LESS `@import` directive
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用LESS的`@import`指令整理样式表引用
- en: Configure Koala to compile LESS into regular CSS
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Koala以将LESS编译为常规CSS
- en: Look into the source map to debug LESS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看源映射以调试LESS
- en: Compose the website custom styles with LESS
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用LESS编写网站自定义样式
- en: Compile JavaScript to activate off-canvas navigation
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将JavaScript编译为静态CSS以激活侧栏导航
- en: Basic LESS syntax
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本LESS语法
- en: LESS ([http://lesscss.org/](http://lesscss.org/)) is a JavaScript-based CSS
    preprocessor developed by Alexis Sellier ([http://cloudhead.io/](http://cloudhead.io/)),
    also known as CloudHead. As mentioned, Bootstrap uses LESS to compose its component
    styles—though it only recently released the Sass version officially. As mentioned,
    we will follow Bootstrap to use LESS to compose our own style rules and manage
    style sheets.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: LESS（[http://lesscss.org/](http://lesscss.org/)）是由Alexis Sellier（[http://cloudhead.io/](http://cloudhead.io/)）开发的基于JavaScript的CSS预处理器，也被称为CloudHead。如前所述，Bootstrap使用LESS来组合其组件样式，尽管它最近才正式发布了Sass版本。我们将遵循Bootstrap使用LESS来组合我们自己的样式规则和管理样式表。
- en: In a nutshell, LESS extends CSS by bringing some programming features, such
    as variable, function, and operation. CSS is a straightforward language and fundamentally
    very easy to learn. However, maintaining static CSS is practically exhaustive,
    particularly when we have to deal with a thousand lines of style rules and multiple
    style sheets. The capabilities that LESS offers, such as variable, mixins, function,
    and operation (which we are going to take a look at shortly) will allow us to
    develop style rules that will be easier to maintain and organize.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，LESS通过引入一些编程特性（如变量、函数和操作）扩展了CSS。CSS是一种简单直接的语言，基本上很容易学习。然而，维护静态CSS实际上是非常繁琐的，特别是当我们需要处理成千上万行的样式规则和多个样式表时。LESS提供的功能，如变量、混合、函数和操作（我们很快将会看到）将使我们能够开发更易于维护和组织的样式规则。
- en: Variables
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变量
- en: 'A variable is the most fundamental feature in LESS. A variable in LESS, as
    in other programming languages, is used to store a constant or a value that can
    be reused later limitlessly within the entire style sheet. In LESS, a variable
    is declared with an `@` sign and is followed by the variable name. The variable
    name can be a combination of numbers and letters. In the following example, we
    will create a couple of LESS variables to store some colors in the HEX format
    and assign them in the succeeding style rules to pass the colors, as shown in
    the following code:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 变量是LESS中最基本的特性。在LESS中，变量与其他编程语言一样，用于存储常量或值，可以在整个样式表中无限制地重复使用。在LESS中，变量用`@`符号声明，后面跟着变量名。变量名可以是数字和字母的组合。在下面的示例中，我们将创建一些LESS变量来存储一些十六进制格式的颜色，并在接下来的样式规则中分配它们以传递颜色，如下所示：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Using a LESS compiler, such as Koala, the preceding codes will be compiled
    into static CSS, as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用LESS编译器（如Koala），上述代码将被编译为静态CSS，如下所示：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Using variables is not only limited to storing colors as we just demonstrated.
    We can use variables for any type of values, for example:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 使用变量不仅仅局限于存储颜色，我们可以用变量来存储任何类型的值，例如：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: One of the advantages of using a variable is that, if we have to make a change,
    we will only need to change the value within the variable. The change we make
    will take place in every occurrence of that variable in the style sheet. This
    is certainly a time saver. Scanning through the style sheet and making the change
    singly or perhaps with the **search** and **replace** feature of the code editor
    might cause unintended changes if not done carefully.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用变量的一个优点是，如果我们需要进行更改，我们只需要更改变量中的值。我们所做的更改将在样式表中该变量的每次出现中生效。这无疑是一个时间节省者。仔细扫描样式表并逐个进行更改，或者使用代码编辑器的**搜索**和**替换**功能可能会导致意外的更改。
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You will find the term *compile* and *compiler* often. The word compile herein
    means that we convert the LESS into standard CSS format that can be rendered in
    the browser. Compiler is the tool used to do so. In this case, the tool we are
    using is Koala.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您会经常看到术语*compile*和*compiler*。这里的编译意味着我们将LESS转换为标准的CSS格式，可以在浏览器中呈现。编译器是用来做这件事的工具。在这种情况下，我们使用的工具是Koala。
- en: Nesting style rules
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 嵌套样式规则
- en: 'LESS lets us nest style rules into one another. Traditionally with plain CSS,
    when we want to apply style rules to elements, say, under a `<nav>` element, we
    can compose the style rules in the following way:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: LESS让我们可以将样式规则嵌套到彼此之中。传统的纯CSS中，当我们想要将样式规则应用于元素，比如在`<nav>`元素下，我们可以以以下方式组合样式规则：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As we can see from the preceding example, we repeat the `nav` selector each
    time we apply styles to a particular element nested under the `<nav>` element.
    By using LESS, we are able to eliminate this repetition and simplify it by nesting
    the style rules, as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的例子中可以看出，每次我们对`<nav>`元素下的特定元素应用样式时，都要重复`nav`选择器。通过使用LESS，我们能够消除这种重复，并通过嵌套样式规则来简化它，如下所示：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Eventually, the preceding style rules will return the same result—only we write
    the style rules more efficiently this time.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，前面的样式规则将返回相同的结果——只是这次我们更有效地编写了样式规则。
- en: Mixins
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: mixin
- en: 'Mixins are one of the most powerful features in LESS. Mixins simplify style
    rules declaration by allowing us to create a group of CSS properties that can
    be included in other style rules in the style sheets. Let''s take a look at the
    following code snippet:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: mixin是LESS中最强大的功能之一。mixin通过允许我们创建一组CSS属性来简化样式规则的声明，并可以包含在样式表中的其他样式规则中。让我们看一下以下代码片段：
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the preceding example, we declared `border-radius` in three different style
    rules along with the vendor prefix to cover earlier versions of Firefox- and Webkit-based
    browsers. In LESS, we are able to simplify `border-radius` declaration by creating
    a mixin. A mixin in LESS is simply specified with a class selector. Given the
    preceding example, let''s create a mixin named `.border-radius` to contain the
    `border-radius` properties, as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们在三个不同的样式规则中声明了`border-radius`，并加上了供早期版本的Firefox和基于Webkit的浏览器使用的供应商前缀。在LESS中，我们可以通过创建mixin来简化`border-radius`的声明。在LESS中，mixin只需用一个类选择器来指定。根据上面的例子，让我们创建一个名为`.border-radius`的mixin来包含`border-radius`属性，如下所示：
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Afterwards, we include `.border-radius` into the succeeding style rules to
    pass the containing properties into them, as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将`.border-radius`包含到后续的样式规则中，将包含的属性传递给它们，如下所示：
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This code will produce exactly the same output as in the first code snippet
    of this section when compiled into static CSS.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当编译成静态CSS时，这段代码将产生与本节第一个代码片段完全相同的输出。
- en: Parametric mixins
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 参数化mixin
- en: 'Furthermore, we can also extend the mixins into so-called **parametric mixins**.
    This feature allows us to add arguments or variables and turn the mixins to be
    configurable. Let''s take the same example as in the preceding section. But, this
    time, we will not assign a fixed value; instead, we replace it with a variable,
    as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还可以将mixin扩展为所谓的**参数化mixin**。这个特性允许我们添加参数或变量，并使mixin可配置。让我们以前面一节中的相同例子为例。但是，这次我们不会分配一个固定的值；相反，我们将其替换为一个变量，如下所示：
- en: '[PRE8]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now, we can insert this mixin into other style rules and assign a different
    value to each:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以将这个mixin插入到其他样式规则中，并为每个规则分配不同的值：
- en: '[PRE9]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'When we compile it into regular CSS, each style rule is applied with a different
    `border-radius` value, as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将其编译成常规CSS时，每个样式规则都会应用不同的`border-radius`值，如下所示：
- en: '[PRE10]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Specify a default value in a parametric mixin
  id: totrans-45
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 在参数化mixin中指定默认值
- en: 'Furthermore, we can specify a default value in a parametric mixin, which will
    be useful in case a parameter is not passed. When we set a parameter in a mixin,
    as we did in the preceding example, LESS will take the parameter as a requirement.
    If we do not pass a parameter in it, LESS will return an error. So, let''s take
    the preceding example and extend it with a default value, say, `5px`, as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们可以在参数化mixin中指定默认值，这在没有传递参数的情况下会很有用。当我们在mixin中设置参数时，就像在前面的例子中所做的那样，LESS会将参数视为必需的。如果我们没有在其中传递参数，LESS会返回一个错误。因此，让我们以前面的例子为例，并用默认值，比如`5px`来扩展它，如下所示：
- en: '[PRE11]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The preceding parametric mixin will return the border radius of `5px` by default.
    The default value will be overwritten if we pass a custom value within brackets.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的参数化mixin将默认返回`5px`的边框半径。如果我们在括号内传递自定义值，将覆盖默认值。
- en: Merging mixins with extend syntax
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用extend语法合并mixin
- en: Extend syntax is the long-awaited feature to come into LESS. One main issue
    with LESS mixins is that it simply copies the containing CSS properties of a mixin,
    thus producing duplicate code. Again, if we are dealing with a large-scale website
    with a thousand lines of codes, the amount of duplicated code would make the style
    sheet size unnecessarily large.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: extend语法是LESS中期待已久的功能。LESS mixin的一个主要问题是它只是复制mixin的包含CSS属性，从而产生重复的代码。再次，如果我们处理一个有上千行代码的大型网站，重复的代码量会使样式表的大小变得不必要地大。
- en: In Version 1.4, LESS introduced extend syntax. The extend syntax comes in a
    form that is similar to a CSS pseudo-class, `:extend`. The extend syntax will
    group CSS selectors that inherit the properties set containing the mixin. Compare
    the following two examples.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在1.4版本中，LESS引入了extend语法。extend语法的形式类似于CSS伪类`:extend`。extend语法将继承包含mixin的属性集的CSS选择器分组。比较以下两个例子。
- en: 'To begin with, we include a mixin without the `:extend` syntax:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们在没有`:extend`语法的情况下包含一个mixin：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The preceding LESS code is short, but when it is compiled into CSS, the code
    extends to around 17 lines, as the `border-radius` properties are repeated or
    simply copied in every style rule, as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的LESS代码很短，但当它编译成CSS时，代码会扩展到大约17行，因为`border-radius`属性在每个样式规则中重复或简单复制，如下所示：
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'In this second example, we will put the :`extend` syntax into practice into
    the same mixin:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个第二个例子中，我们将把`:extend`语法应用到同一个mixin中：
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The following is how the code turns into plain CSS; it becomes even shorter
    than the initial uncompiled LESS codes.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是代码转换为普通CSS的方式；它甚至比初始未编译的LESS代码更短。
- en: '[PRE15]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Generating value with mathematical operations
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用数学运算生成值
- en: We can also perform math operations with LESS-like addition, subtraction, division,
    and multiplication. Operations could be pretty useful to determine a length, such
    as the element's width and height. In the following example, we will calculate
    the proper box width by subtracting it with the padding so that it can be fit
    into the parent container.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以使用LESS进行数学运算，如加法、减法、除法和乘法。运算可以非常有用，用于确定长度，比如元素的宽度和高度。在下面的例子中，我们将通过减去填充来计算适当的框宽，以便它适合父容器。
- en: 'First, we will define the variable for the padding with the `@padding` variable:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用`@padding`变量定义填充变量：
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Then, we specify the box width and subtract it with the `@padding` variable:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们指定框宽并减去`@padding`变量：
- en: '[PRE17]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Remember that the padding takes two sides of the box, whether it is right and
    left or top and bottom, so that is why we multiply `@padding` in the width property
    by two. Finally when we compile this LESS operation into the regular CSS, this
    code will look as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，填充占据框的两侧，无论是右和左还是上和下，这就是为什么我们在宽度属性中将`@padding`乘以2。最后，当我们将这个LESS操作编译成常规CSS时，这段代码将如下所示：
- en: '[PRE18]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In other cases, we can do the same to the height property, as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他情况下，我们也可以对高度属性进行相同操作，如下所示：
- en: '[PRE19]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Generating color with mathematical operations and LESS functions
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用数学运算和LESS函数生成颜色
- en: 'Believe it or not, in LESS, we can alter colors with math operations. It''s
    like mixing paint colors, except we do it by addition, subtraction, division,
    and multiplication. For instance:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 信不信由你，在LESS中，我们可以通过数学运算改变颜色。就像混合颜色一样，只是我们是通过加法、减法、除法和乘法来做的。例如：
- en: '[PRE20]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'When compiled, the color turns into the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 编译后，颜色变成了以下样子：
- en: '[PRE21]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Furthermore, LESS also provides a handful of functions that allow us to turn
    colors darker or lighter to a certain extent. The following example will lighten
    the color in the `@color` variable by `50%`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，LESS还提供了一些函数，允许我们将颜色变暗或变亮到一定程度。下面的例子将通过`50%`使`@color`变量中的颜色变亮。
- en: '[PRE22]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Alternatively, to darken the color, use the `darken()` function, as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，要使颜色变暗，可以使用`darken()`函数，如下所示：
- en: '[PRE23]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Note
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A complete list of the LESS color function can be found in the following page
    of LESS's official website ([http://lesscss.org/functions/#color-operations](http://lesscss.org/functions/#color-operations)).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: LESS颜色函数的完整列表可以在LESS官方网站的以下页面中找到（[http://lesscss.org/functions/#color-operations](http://lesscss.org/functions/#color-operations)）。
- en: Referential import
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引用式导入
- en: This is one of my favorite features in LESS. The referential import, as the
    name implies, allows us to import an external style sheet merely as reference.
    Prior to the emerging of this feature, all style rules in the style sheet imported
    with the `@import` directive will be appended, which is more often than not unnecessary.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在LESS中最喜欢的功能之一。引用式导入，顾名思义，允许我们仅作为引用导入外部样式表。在此功能出现之前，使用`@import`指令导入的样式表中的所有样式规则都将被追加，这通常是不必要的。
- en: 'Since Version 1.5, LESS introduced the `(reference)` option that marks `@import`
    as reference, thus preventing the external style rules from being appended. Add
    the `(reference)` mark after `@import`, as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 自从1.5版本以来，LESS引入了`(reference)`选项，将`@import`标记为引用，从而防止外部样式规则被追加。在`@import`后添加`(reference)`标记，如下所示：
- en: '[PRE24]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Using a variable in an import statement
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在导入语句中使用变量
- en: One of the constraints that LESS used to encounter was when using a variable
    within the `@import` directive ([https://github.com/less/less.js/issues/410](https://github.com/less/less.js/issues/410)).
    It is one of the most requested features to present in LESS and finally has been
    resolved since LESS 1.4\. We are now able to declare a variable in an `@import`
    statement by naming the variable within curly braces, for example, `@{variable-name}`.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: LESS曾经遇到的一个限制是在`@import`指令中使用变量时（[https://github.com/less/less.js/issues/410](https://github.com/less/less.js/issues/410)）。这是LESS中最常请求的功能之一，终于在LESS
    1.4中得到解决。现在我们可以通过在花括号中命名变量来在`@import`语句中声明变量，例如，`@{variable-name}`。
- en: 'The use of a variable along with `@import` will allow us to define the style
    sheet path once, through a variable. Then, call the path using the variable, as
    follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 使用变量和`@import`将允许我们通过变量一次性定义样式表路径。然后，使用变量调用路径，如下所示：
- en: '[PRE25]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'This approach is visibly neater and more efficient than having to add the full
    path every time we import a new style sheet, as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法明显比每次导入新样式表时都要添加完整路径更整洁和高效，如下所示：
- en: '[PRE26]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Note
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Refer to the **Import Directive** section of the LESS official website ([http://lesscss.org/features/#import-directives-feature](http://lesscss.org/features/#import-directives-feature))
    for further assistance on importing an external style sheet with LESS.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考LESS官方网站的**导入指令**部分（[http://lesscss.org/features/#import-directives-feature](http://lesscss.org/features/#import-directives-feature)）以获取有关使用LESS导入外部样式表的进一步帮助。
- en: Using source map for easier style debugging
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用源映射进行更轻松的样式调试
- en: While CSS preprocessors like LESS allows us to write style rules more efficiently,
    the browsers are still only able to read plain CSS, which will cause a new problem
    particularly when debugging issues in the style sheet.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然CSS预处理器如LESS允许我们更高效地编写样式规则，但浏览器仍然只能读取普通的CSS，这将在调试样式表中出现新问题。
- en: 'Since the browser is referring to the generated CSS instead of the source file
    (LESS), we will likely be clueless of the exact lines where the style rules are
    actually declared in a source file. A source map addresses this issue by mapping
    the generated CSS back to the source files. In a browser that supports source
    map, you will find the browser refers directly to the source file. In the case
    of LESS, the browser will refer to the `.less` style sheet as shown in the following
    screenshot:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 由于浏览器引用生成的CSS而不是源文件（LESS），我们可能对样式规则实际在源文件中声明的确切行数一无所知。源映射通过将生成的CSS映射回源文件来解决此问题。在支持源映射的浏览器中，您将发现浏览器直接引用源文件。在LESS的情况下，浏览器将引用`.less`样式表，如下面的屏幕截图所示：
- en: '![Using source map for easier style debugging](img/image00318.jpeg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![使用源映射进行更轻松的样式调试](img/image00318.jpeg)'
- en: In this project, we will generate a source map of the generated CSS. So, if
    we encounter bugs, it is a lot easier to address it. We can immediately figure
    out exactly where the style rules reside.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在此项目中，我们将生成生成的CSS的源映射。因此，如果我们遇到错误，更容易解决。我们可以立即找出样式规则所在的确切位置。
- en: Note
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Head over to the following references for further information about the source
    map:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下参考资料，了解有关源映射的更多信息：
- en: Working with CSS preprocessors by Google ([https://developer.chrome.com/devtools/docs/css-preprocessors](https://developer.chrome.com/devtools/docs/css-preprocessors))
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Google使用CSS预处理器（[https://developer.chrome.com/devtools/docs/css-preprocessors](https://developer.chrome.com/devtools/docs/css-preprocessors)）
- en: An Introduction to Source Map ([http://blog.teamtreehouse.com/introduction-source-maps](http://blog.teamtreehouse.com/introduction-source-maps))
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源映射简介（[http://blog.teamtreehouse.com/introduction-source-maps](http://blog.teamtreehouse.com/introduction-source-maps)）
- en: Using LESS Source Maps ([http://roots.io/using-less-source-maps/](http://roots.io/using-less-source-maps/))
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用LESS源映射（[http://roots.io/using-less-source-maps/](http://roots.io/using-less-source-maps/)）
- en: More on LESS
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多关于LESS的信息
- en: 'LESS has plenty of features and will only grow with more additions in the years
    to come. It''s impractical to include and discuss them all at once in this book.
    So, the following are a few references to dig in deeper:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: LESS有很多功能，并且将在未来不断增加更多功能。在本书中一次性包含并讨论所有这些功能是不切实际的。因此，以下是一些深入了解的参考资料：
- en: LESS's official website ([http://lesscss.org/](http://lesscss.org/)); the best
    source to be up-to-date with LESS
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LESS的官方网站（[http://lesscss.org/](http://lesscss.org/)）；了解LESS的最佳来源
- en: '*LESS Web Development Essentials*, *Bass Jobsen*, *Packt Publishing* ([https://www.packtpub.com/web-development/less-web-development-essentials](https://www.packtpub.com/web-development/less-web-development-essentials))'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*LESS Web Development Essentials*，*Bass Jobsen*，*Packt Publishing*（[https://www.packtpub.com/web-development/less-web-development-essentials](https://www.packtpub.com/web-development/less-web-development-essentials)）'
- en: Instant LESS CSS preprocessor ([https://www.packtpub.com/web-development/instant-less-css-preprocessor-how-instant](https://www.packtpub.com/web-development/instant-less-css-preprocessor-how-instant))
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即时LESS CSS预处理器（[https://www.packtpub.com/web-development/instant-less-css-preprocessor-how-instant](https://www.packtpub.com/web-development/instant-less-css-preprocessor-how-instant)）
- en: External style sheet references
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 外部样式表引用
- en: We walked through a big amount of basic syntax in LESS in the preceding section.
    Now, we will start to actually work with LESS, speaking of which, before we are
    able to write our own style rules as well as reuse variables, mixins, and functions
    that are shipped in Bootstrap and the Jasny Bootstrap package, we will have to
    import them into our own style sheet with the LESS `@import` directive.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，我们介绍了LESS的大量基本语法。现在，我们将开始实际使用LESS，说到这一点，在我们能够编写自己的样式规则以及重用Bootstrap和Jasny
    Bootstrap包中提供的变量、mixin和函数之前，我们必须使用LESS的`@import`指令将它们导入到我们自己的样式表中。
- en: Time for action – creating style sheets and organizing external style sheet
    references
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间-创建样式表和组织外部样式表引用
- en: 'Perform the following steps to manage the style sheet references:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤来管理样式表引用：
- en: Go to the project directory and create a new style sheet named `var-bootstrap.less`
    in `assets/less` directory. This style sheet contains the copy of Bootstrap's
    predefined variables. This copy will allow us to customize the variables without
    affecting the initial specifications.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到项目目录，并在`assets/less`目录中创建一个名为`var-bootstrap.less`的新样式表。此样式表包含Bootstrap预定义变量的副本。此副本将允许我们自定义变量，而不影响初始规范。
- en: Hence, copy the Bootstrap variables in the `variables.less` style sheet of the
    `/bootstrap/less` directory. Paste the complete variables into `var-bootstrap.less`
    that we only created in step 1.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，在`/bootstrap/less`目录的`variables.less`样式表中复制Bootstrap变量。将所有变量粘贴到我们在步骤1中创建的`var-bootstrap.less`中。
- en: Tip
  id: totrans-114
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: For your convenience, you may also copy Bootstrap variables directly from the
    Github repository ([http://git.io/7LmzGA](http://git.io/7LmzGA)).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便起见，您还可以直接从Github存储库中复制Bootstrap变量（[http://git.io/7LmzGA](http://git.io/7LmzGA)）。
- en: Create a new style sheet named `var-jasny.less`. Similar to `var-bootstrap.less`,
    this style sheet will contain the copy of the Jasny Bootstrap variables.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`var-jasny.less`的新样式表。与`var-bootstrap.less`类似，此样式表将包含Jasny Bootstrap变量的副本。
- en: Obtain the Jasny Bootstrap variables in `variables.less` of the `jasny-bootstrap/less`
    directory. Paste all the variables in the `var-jasny.less` style sheet we just
    created in step 3.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取`jasny-bootstrap/less`目录中的`variables.less`中的Jasny Bootstrap变量。将所有变量粘贴到我们在步骤3中刚创建的`var-jasny.less`样式表中。
- en: Tip
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Alternatively, copy the variables directly from the Jasny Bootstrap repository
    ([http://git.io/SK1ccg](http://git.io/SK1ccg)).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，直接从Jasny Bootstrap存储库中复制变量（[http://git.io/SK1ccg](http://git.io/SK1ccg)）。
- en: Create a new style sheet named `frameworks.less`.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`frameworks.less`的新样式表。
- en: We are going to use this style sheet to import the Bootstrap and Jasny Bootstrap
    style sheets residing in the `bower_component` folder.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用此样式表来导入`bower_component`文件夹中的Bootstrap和Jasny Bootstrap样式表。
- en: 'In `frameworks.less`, create a variable named `@path-bootstrap` to define the
    path, pointing to the folder named `less`, where all the LESS style sheets of
    Bootstrap reside:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`frameworks.less`中，创建一个名为`@path-bootstrap`的变量来定义路径，指向名为`less`的文件夹，其中包含Bootstrap的所有LESS样式表：
- en: '[PRE27]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Similarly, create a variable that defines the path, pointing to the Jasny Bootstrap
    `less` folder, as follows:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样地，创建一个定义路径的变量，指向Jasny Bootstrap的`less`文件夹，如下所示：
- en: '[PRE28]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Also create one to define the Ionicons path:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还创建一个变量来定义Ionicons路径：
- en: '[PRE29]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Import the style sheets that contain variables using the following code:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码导入包含变量的样式表：
- en: '[PRE30]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Import the Bootstrap and Jasny Bootstrap style sheets, which are only required
    to build the portfolio website. Specify the paths using the variables we created
    in steps 6 to 8, as follows:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入Bootstrap和Jasny Bootstrap样式表，这些只是构建投资组合网站所需的。使用我们在步骤6到8中创建的变量指定路径，如下所示：
- en: '[PRE31]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Tip
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can also copy the preceding code from Gist ([http://git.io/WpBVAA](http://git.io/WpBVAA)).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从Gist ([http://git.io/WpBVAA](http://git.io/WpBVAA))中复制上述代码。
- en: Note
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To minimize extraneous style rules, which really are not needed for the website,
    we excluded a number of Bootstrap and Jasny Bootstrap style sheets from `frameworks.less`
    as you can see previously.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 为了最小化不需要的额外样式规则，我们从`frameworks.less`中排除了许多Bootstrap和Jasny Bootstrap样式表，如之前所示。
- en: Create a new style sheet named `style.less`. This is the style sheet where we
    are going to compose our very own style rules.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`style.less`的新样式表。这是我们将要编写自己的样式规则的样式表。
- en: 'Import the Bootstrap variables and the mixins within `style.less`:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`style.less`中导入Bootstrap变量和混合：
- en: '[PRE32]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '*What just happened?*'
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: To sum up, we just created style sheets and put them in order. At first, we
    created two style sheets named `var-bootstrap.less` and `var-jasny.less` to store
    the Bootstrap and Jasny Bootstrap variables. As mentioned, we made these copies
    to avoid directly altering the originals. We have also created a style sheet named
    `frameworks.less`, containing references to the Bootstrap and Jasny Bootstrap
    style sheets.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，我们刚刚创建了样式表并对其进行了排序。首先，我们创建了两个名为`var-bootstrap.less`和`var-jasny.less`的样式表，用于存储Bootstrap和Jasny
    Bootstrap的变量。正如前面提到的，我们制作了这些副本以避免直接更改原始文件。我们还创建了一个名为`frameworks.less`的样式表，其中包含对Bootstrap和Jasny
    Bootstrap样式表的引用。
- en: Finally, we created the website primary style sheet named `style.less` and imported
    the variables and mixins so that they are reusable inside the `style.less`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们创建了名为`style.less`的网站主样式表，并导入了变量和混合，以便它们可以在`style.less`中重复使用。
- en: Have a go hero – name and organize the style sheets
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试一下 - 命名和组织样式表
- en: In the preceding steps, we organized and named the folders as well as the files
    to my personal preferences. Even so, you don't have to follow the naming conventions
    absolutely. Do organize and name them in your own way.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的步骤中，我们根据个人喜好组织和命名了文件夹和文件。即使如此，您也不必完全遵循命名约定。请以您自己的方式组织和命名它们。
- en: Note
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The most important thing to note is that the `@import` statement refers to the
    correct file name.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 最重要的是要注意`@import`语句引用了正确的文件名。
- en: 'The following are a few ideas:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些想法：
- en: Rename `var-bootstrap.less` to simply `vars.less`.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`var-bootstrap.less`重命名为简单的`vars.less`。
- en: Alternatively, create a new folder name `vars` or `configs` to put the `var-bootstrap.less`
    and `var-jasny.less` style sheet in it.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 或者，创建一个名为`vars`或`configs`的新文件夹，将`var-bootstrap.less`和`var-jasny.less`样式表放在其中。
- en: 'Did you know that you can also import the LESS style sheet without declaring
    the `.less` extension. For the sake of simplicity, you can omit the extensions,
    for example:'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您知道您也可以导入LESS样式表而不声明`.less`扩展名。为了简单起见，您可以省略扩展名，例如：
- en: '[PRE33]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Pop quiz – which of the following option is not LESS Import option?
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小测验 - 以下哪个选项不是LESS导入选项？
- en: Q1\. In one of the section of this chapter, we discussed `(reference)`, which
    imports yet treats external LESS style sheets only as a reference. In addition
    to `(reference)`, LESS also provides more options to import a style sheet. So,
    which of the following is not the LESS import option?
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Q1. 在本章的某一部分中，我们讨论了`(reference)`，它只导入外部LESS样式表，但将其视为引用。除了`(reference)`之外，LESS还提供了更多导入样式表的选项。那么，以下哪个不是LESS导入选项？
- en: '`(less)`'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`(less)`'
- en: '`(css)`'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`(css)`'
- en: '`(multiple)`'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`(multiple)`'
- en: '`(once)`'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`(once)`'
- en: '`(default)`'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`(default)`'
- en: Q2\. How do you use variable within an `@import` statement?
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: Q2. 如何在`@import`语句中使用变量？
- en: '`@import ''@{variable}style.less'';`'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`@import ''@{variable}style.less'';`'
- en: '`@import ''@[variable]style.less'';`'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`@import ''@[variable]style.less'';`'
- en: '`@import ''@(variable)style.less'';`'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`@import ''@(variable)style.less'';`'
- en: Working with Koala
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Koala
- en: The HTML and the style sheets have been prepared. It's now time to put them
    together to shape a solid portfolio website. We will compose the website styles
    using LESS syntax. Herein, we will also use Koala as in the first project. This
    time, we will compile LESS into plain CSS.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: HTML和样式表已经准备好了。现在是时候将它们放在一起，打造一个坚实的投资组合网站了。我们将使用LESS语法来编写网站样式。在这里，我们还将像第一个项目一样使用Koala。这一次，我们将把LESS编译成普通的CSS。
- en: Time for action – compiling LESS into CSS using Koala
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 使用Koala将LESS编译为CSS
- en: 'Perform the following steps to compile LESS into CSS using Koala:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤，使用Koala将LESS编译为CSS：
- en: Add the project directory in the Koala sidebar, as follows:![Time for action
    – compiling LESS into CSS using Koala](img/image00319.jpeg)
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Koala侧边栏中添加项目目录，如下所示：![执行时间 - 使用Koala将LESS编译为CSS](img/image00319.jpeg)
- en: Select all the style sheets except `frameworks.less` and `style.less`. Right-click
    and select **Toggle Auto Compile**. Have a look at the following screenshot:![Time
    for action – compiling LESS into CSS using Koala](img/image00320.jpeg)
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择除了`frameworks.less`和`style.less`之外的所有样式表。右键单击并选择**切换自动编译**。查看以下截图：![执行时间 -
    使用Koala将LESS编译为CSS](img/image00320.jpeg)
- en: This will turn off the **Auto Compile** option on the selected style sheets
    and prevent Koala from compiling these style sheet unintentionally.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 这将关闭所选样式表上的**自动编译**选项，并防止Koala意外编译这些样式表。
- en: On the other hand, ensure that **Auto Compile** is checked for the two remaining
    style sheets, `frameworks.less` and `style.less`:![Time for action – compiling
    LESS into CSS using Koala](img/image00321.jpeg)
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另外，确保为剩下的两个样式表`frameworks.less`和`style.less`勾选**自动编译**：![采取行动-使用Koala将LESS编译为CSS](img/image00321.jpeg)
- en: Make sure that the `frameworks.less` and `style.less` output is set to `/assets/css`
    directory, as shown in the following screenshot:![Time for action – compiling
    LESS into CSS using Koala](img/image00322.jpeg)
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保`frameworks.less`和`style.less`的输出设置为`/assets/css`目录，如下面的截图所示：![采取行动-使用Koala将LESS编译为CSS](img/image00322.jpeg)
- en: Check the **Source Map** option for both style sheets to generate the source
    map files, which will help us when debugging:![Time for action – compiling LESS
    into CSS using Koala](img/image00323.jpeg)
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查两个样式表的**源映射**选项，以生成源映射文件，在调试时会对我们有所帮助：![采取行动-使用Koala将LESS编译为CSS](img/image00323.jpeg)
- en: Select the output styles for the two style sheets, `frameworks.less` and `style.less`,
    to **compress**:![Time for action – compiling LESS into CSS using Koala](img/image00324.jpeg)
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择两个样式表`frameworks.less`和`style.less`的输出样式进行**压缩**：![采取行动-使用Koala将LESS编译为CSS](img/image00324.jpeg)
- en: This option will generate a small-sized CSS style sheet, as the codes within
    the style sheet will be compressed into a single line. Hence, the style sheet
    will load faster in the browser and also save bandwidth consumption on the user's
    side.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 此选项将生成一个体积较小的CSS样式表，因为样式表中的代码将被压缩成一行。因此，样式表将在浏览器中加载得更快，也会节省用户端的带宽消耗。
- en: Select `frameworks.less` and click on the **Compile** button to compile it into
    CSS:![Time for action – compiling LESS into CSS using Koala](img/image00325.jpeg)
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`frameworks.less`并单击**编译**按钮将其编译为CSS：![采取行动-使用Koala将LESS编译为CSS](img/image00325.jpeg)
- en: 'Do the same for `style.less`. Select it and click on the **Compile** button
    to compile it into CSS. Open `index.html` in the code editor, and link both of
    the style sheets inside `<head>`, as follows:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对`style.less`执行相同操作。选择它并单击**编译**按钮将其编译为CSS。在代码编辑器中打开`index.html`，并在`<head>`内链接这两个样式表，如下所示：
- en: '[PRE34]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '*What just happened?*'
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发生了什么？
- en: 'In the preceding steps, we compiled the website primary style sheets, `frameworks.less`
    and `style.less`, from LESS to CSS. You should now have them along with the source
    maps in the `assets/css/` directory. The code is compressed, thus resulting in
    a relatively small file size, as shown in the following screenshot:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的步骤中，我们将网站的主要样式表`frameworks.less`和`style.less`从LESS编译为CSS。现在，你应该将它们与源映射一起放在`assets/css/`目录中。代码已经压缩，因此文件大小相对较小，如下面的截图所示：
- en: '![What just happened?](img/image00326.jpeg)'
  id: totrans-179
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/image00326.jpeg)'
- en: The style sheets are relatively small in size. As shown, frameworks.css is 92
    kb, while style.css is only 2 kb
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 样式表的大小相对较小。如图所示，frameworks.css为92 kb，而style.css仅为2 kb
- en: 'Additionally, we also linked these CSS style sheets in `index.html`. However,
    since we have not yet written our own styles, the websites are decorated with
    the default Bootstrap styles, as shown in the following screenshot:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还在`index.html`中链接了这些CSS样式表。但是，由于我们尚未编写自己的样式，网站仍然使用默认的Bootstrap样式，如下面的截图所示：
- en: '![What just happened?](img/image00327.jpeg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![发生了什么？](img/image00327.jpeg)'
- en: Polishing the portfolio website with LESS
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用LESS优化投资组合网站
- en: This is the section you might be waiting for, to style the portfolio website.
    It is apparently a pleasing experience to see the website start to have shapes,
    colors, and look. In this section, we will customize the default styles and compose
    our style rules using the LESS syntax that we have covered earlier in this chapter.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这是你可能在等待的部分，为投资组合网站设置样式。看到网站开始有形状、颜色和外观显然是一种愉快的体验。在本节中，我们将通过使用本章前面介绍的LESS语法自定义默认样式并组合我们的样式规则。
- en: Time for action – composing the website styles with LESS syntax
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 采取行动-使用LESS语法组合网站样式
- en: 'Perform the following steps to style the website:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤来为网站设置样式：
- en: 'Add a new font family from Google Font. Herein, I opted for Varela Round ([http://www.google.com/fonts/specimen/Varela+Round](http://www.google.com/fonts/specimen/Varela+Round)).
    Place the following Google Font link before any other style sheets:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Google Font中添加一个新的字体系列。在这里，我选择了Varela Round ([http://www.google.com/fonts/specimen/Varela+Round](http://www.google.com/fonts/specimen/Varela+Round))。在任何其他样式表之前放置以下Google
    Font链接：
- en: '[PRE35]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: We will customize the default styles by changing some variables. Open `var-bootstrap.less`
    in Sublime Text. First, we change the `@brand-primary` variable that defines the
    Bootstrap primary color; change it from `#428bca` to `#46acb8`:![Time for action
    – composing the website styles with LESS syntax](img/image00328.jpeg)
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将通过更改一些变量来自定义默认样式。在Sublime Text中打开`var-bootstrap.less`。首先，我们将更改定义Bootstrap主色的`@brand-primary`变量；将其从`#428bca`更改为`#46acb8`：![采取行动-使用LESS语法组合网站样式](img/image00328.jpeg)
- en: Also, change the color in the `@brand-success` variable from `#5cb85c` to `#7ba47c`:![Time
    for action – composing the website styles with LESS syntax](img/image00329.jpeg)
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，将`@brand-success`变量中的颜色从`#5cb85c`更改为`#7ba47c`：![采取行动-使用LESS语法组合网站样式](img/image00329.jpeg)
- en: 'Change the `@headings-font-family` variable, which defines the font family
    used in the headings, from `inherit` to `"Varela Round"`, as follows:'
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改`@headings-font-family`变量，该变量定义了标题中使用的字体系列，将其从`inherit`更改为`"Varela Round"`，如下所示：
- en: '[PRE36]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: The Bootstrap default style shows a glowing effect when the user focusses on
    a form field. The color of this effect is specified in `@input-border-focus`.
    Change the color from `#66afe9` to `#89c6cb`:![Time for action – composing the
    website styles with LESS syntax](img/image00330.jpeg)
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户聚焦在表单字段上时，Bootstrap默认样式会显示发光效果。此效果的颜色在`@input-border-focus`中指定。将颜色从`#66afe9`更改为`#89c6cb`：![采取行动-使用LESS语法组合网站样式](img/image00330.jpeg)
- en: In the top section of the website, you can see that the navbar still has the
    Bootstrap default style with the gray background and border color, as shown in
    the following screenshot:![Time for action – composing the website styles with
    LESS syntax](img/image00331.jpeg)
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网站的顶部部分，您可以看到导航栏仍然具有Bootstrap默认样式，灰色背景和边框颜色，如下截图所示：![采用LESS语法编写网站样式的时间](img/image00331.jpeg)
- en: 'These two colors are specified in `@navbar-default-bg` and `@navbar-default-border`,
    respectively. Change both of these variable values to transparent, as follows:'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这两种颜色分别在`@navbar-default-bg`和`@navbar-default-border`中指定。将这两个变量的值都更改为transparent，如下所示：
- en: '[PRE37]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Similarly, the default style of the Jumbotron section is set with a gray background
    color. To remove this color, set the `@jumbotron-bg` variable to `transparent`,
    as follows:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，Jumbotron部分的默认样式设置为灰色背景色。要删除这种颜色，将`@jumbotron-bg`变量设置为`transparent`，如下所示：
- en: '[PRE38]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'We will be back editing a few more Bootstrap variables later on. For the meantime,
    let''s write our own style rules. To begin with, we will show the navbar toggle
    button, which is hidden by the Bootstrap default styles. In our case, this button
    will be used to slide the off-canvas navigation on and off. Let''s force this
    button to be visible with the following style rules:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 稍后我们将继续编辑一些Bootstrap变量。与此同时，让我们编写自己的样式规则。首先，我们将显示被Bootstrap默认样式隐藏的导航栏切换按钮。在我们的情况下，此按钮将用于打开和关闭侧栏导航。让我们使用以下样式规则强制使此按钮可见：
- en: '[PRE39]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: As you can see from the following screenshot, the toggle button with the so-called
    hamburger icon ([http://gizmodo.com/who-designed-the-iconic-hamburger-icon-1555438787](http://gizmodo.com/who-designed-the-iconic-hamburger-icon-1555438787))
    is now visible:![Time for action – composing the website styles with LESS syntax](img/image00332.jpeg)
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下截图所示，带有所谓的汉堡图标（[http://gizmodo.com/who-designed-the-iconic-hamburger-icon-1555438787](http://gizmodo.com/who-designed-the-iconic-hamburger-icon-1555438787)）的切换按钮现在可见：![采用LESS语法编写网站样式的时间](img/image00332.jpeg)
- en: 'Currently, this button is positioned on the right-hand side. Referring to the
    website blueprint, it should be on the left. Add `float:left` to put it on the
    left-hand side and `margin-left:15px` to add a little whitespace to the button''s
    left, as follows:'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目前，此按钮位于右侧。参考网站蓝图，它应该在左侧。添加`float:left`将其放在左侧，`margin-left:15px`添加一点空白到按钮的左侧，如下所示：
- en: '[PRE40]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Herein, I want to customize the toggle button's default styles, which are also
    specified through a couple of variables in `var-bootstrap.less`. Hence, open `var-bootstrap.less`
    in Sublime Text.
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我想自定义切换按钮的默认样式，这也是通过`var-bootstrap.less`中的一些变量指定的。因此，在Sublime Text中打开`var-bootstrap.less`。
- en: 'First of all, we will remove the button borders by changing the value of the
    `@navbar-default-toggle-border-color` variable from `#ddd` to `transparent`, as
    follows:'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将通过将`@navbar-default-toggle-border-color`变量的值从`#ddd`更改为`transparent`来删除按钮边框，如下所示：
- en: '[PRE41]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'We will also remove the gray background color that appears when we hover over
    the button. Remove the gray background color out of it by changing the `@navbar-default-toggle-hover-bg`
    variable from `#ddd` to `transparent`, as follows:'
  id: totrans-207
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还将删除悬停在按钮上时出现的灰色背景颜色。通过将`@navbar-default-toggle-hover-bg`变量从`#ddd`更改为`transparent`来将灰色背景颜色移出，如下所示：
- en: '[PRE42]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'I want the hamburger icon to look bolder and strong. So, herein, we want to
    change the colors to black. Change the value of `@navbar-default-toggle-icon-bar-bg`
    from `#888` to `#000`:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我希望汉堡图标看起来更加粗体和强烈。因此，在这里，我们希望将颜色改为黑色。将`@navbar-default-toggle-icon-bar-bg`的值从`#888`更改为`#000`：
- en: '[PRE43]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'At this stage, the website content is aligned to the left-hand side, which
    is the default browser alignment for any content. Following the website blueprint,
    the website content should be centered. Use `text-align: center`, as follows,
    to align the content to the center:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在这个阶段，网站内容被对齐到左侧，这是任何内容的默认浏览器对齐方式。根据网站蓝图，网站内容应该居中。使用`text-align: center`，如下所示，将内容对齐到中心：'
- en: '[PRE44]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Add the following to turn the website name to all-caps (all capital letters),
    making it bigger and bolder:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下内容将网站名称转换为大写（全部大写字母），使其更大更粗：
- en: '[PRE45]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'On the other hand, make the catchphrase line subtler by specifying the text
    color to gray light. Herein, we can simply use Bootstrap''s predefined variable
    named `@gray-light` to apply the gray color, as follows:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一方面，通过将文本颜色指定为灰色浅色，使标语行更加微妙。在这里，我们可以简单地使用Bootstrap的预定义变量`@gray-light`来应用灰色，如下所示：
- en: '[PRE46]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: In the portfolio section, specify the background color with gray light, which
    is lighter than the color in `@gray-lighter` variable. The addition of the background
    color aims to lay a bit of emphasis on the portfolio section.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在投资组合部分，使用灰色浅色指定背景颜色，比`@gray-lighter`变量中的颜色更浅。添加背景颜色的目的是为了在投资组合部分加强一点重点。
- en: 'In this project, we opt to use the LESS `darken()` function to slightly darken
    the white color, as follows:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个项目中，我们选择使用LESS的`darken()`函数轻微加深白色，如下所示：
- en: '[PRE47]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Note
  id: totrans-220
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'The background color may alternatively be achieved by lightening the black
    color by 99 percent using the LESS `lighten()` function as `background-color:
    lighten(#000, 99%);`.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '可以通过使用LESS的`lighten()`函数将黑色颜色减轻99%来替代地实现背景颜色，如`background-color: lighten(#000,
    99%);`。'
- en: At this stage, if we take a look at the portfolio section, it seems there are
    merely little spaces at the top and the bottom, as pointed out in the following
    screenshot:![Time for action – composing the website styles with LESS syntax](img/image00333.jpeg)
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个阶段，如果我们看一下投资组合部分，似乎顶部和底部只有很少的空间，如下截图所示：![采用LESS语法编写网站样式的时间](img/image00333.jpeg)
- en: 'Give the portfolio section more space to breathe at the top and bottom by adding
    `padding-top` and `padding-bottom`, as follows:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过添加`padding-top`和`padding-bottom`，为投资组合部分提供更多空间，如下所示：
- en: '[PRE48]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: To sum up, we added two headings in the website, including one in the portfolio
    section, to explicitly display the section name. These headings will share the
    same style rules. So, in that case, we better create a mixin that specifically
    defines the heading styles.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 总之，我们在网站中添加了两个标题，包括作品集部分中的一个，以明确显示部分名称。这些标题将共享相同的样式规则。因此，在这种情况下，最好创建一个专门定义标题样式的mixin。
- en: 'Define the mixin as well as the CSS properties to apply the heading styles,
    as follows:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义mixin以及应用标题样式的CSS属性，如下所示：
- en: '[PRE49]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Add the following style rules for the section heading, which will make it look
    subtler and in tune with the background color of the portfolio section:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为部分标题添加以下样式规则，使其看起来更加柔和，并与作品集部分的背景颜色协调：
- en: '[PRE50]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: As shown in the following screenshot, there is only very little space in between
    each row; the rows are too close to each other, as follows:![Time for action –
    composing the website styles with LESS syntax](img/image00334.jpeg)
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如下截图所示，每行之间的间距非常小；行之间的距离太近了，如下所示：![采用LESS语法编写网站样式的时间到了](img/image00334.jpeg)
- en: 'So, put more space by specifying `margin-bottom` for each portfolio item, as
    follows:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，通过为每个作品集项目指定`margin-bottom`来增加更多空间，如下所示：
- en: '[PRE51]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Add styles for the portfolio image, as follows:'
  id: totrans-233
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为作品集图片添加样式，如下所示：
- en: '[PRE52]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Also, add the styles for the caption, as follows:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还要为说明添加样式，如下所示：
- en: '[PRE53]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: What do you think about showing a transition effect when we hover over the portfolio
    image? That will look nice, won't it? In this case, I would like to show a shadow
    surrounding the portfolio image upon hover.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们悬停在作品集图片上时，你觉得显示过渡效果怎么样？那看起来会很好，不是吗？在这种情况下，我想在悬停时显示围绕作品集图片的阴影。
- en: 'Add the effect using Bootstrap''s predefined mixins,`.transition()` and `.box-shadow()`,
    as follows:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Bootstrap预定义的mixin`.transition()`和`.box-shadow()`添加效果，如下所示：
- en: '[PRE54]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Below the portfolio section, we have the website contact form, which has already
    been applied with the Bootstrap default styling. So, let's customize it with our
    own style rules.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在作品集部分下面，我们有网站联系表单，已经应用了Bootstrap的默认样式。因此，让我们用我们自己的样式规则自定义它。
- en: First, we will add more spaces at the top and the bottom of the contact form
    section with `padding`.
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将使用`padding`在联系表单部分的顶部和底部添加更多空间。
- en: 'Add the styles for the heading with the `.heading` mixin we created in step
    18:'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们在第18步中创建的`.heading` mixin为标题添加样式：
- en: '[PRE55]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The form currently spans the container fully. So, add the following style rules
    to set the maximum width, yet still display the form in the middle of the container,
    as follows:'
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目前表格完全跨越整个容器。因此，请添加以下样式规则以设置最大宽度，但仍然在容器中间显示表单，如下所示：
- en: '[PRE56]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Add the following style rules to make the form elements—`<input>`, `<textarea>`,
    `<button>`—look flatter. These style rules remove the shadow and lower the border
    radius. Have a look at the following code:'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下样式规则使表单元素—`<input>`、`<textarea>`、`<button>`—看起来更加扁平。这些样式规则去除了阴影并降低了边框半径。看一下以下代码：
- en: '[PRE57]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Add the following lines to style the button and make it live with a transition
    effect, as follows:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下行以为按钮添加样式，并使用过渡效果使其生动起来，如下所示：
- en: '[PRE58]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: Starting this step, we will add style rules for the footer, the last section
    of the website. The footer contains the social media links, Dribbble and Twitter,
    and a copyright statement at the very bottom.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这一步开始，我们将为网站的最后一个部分——页脚添加样式规则。页脚包含社交媒体链接Dribbble和Twitter，以及底部的版权声明。
- en: 'First, as in the preceding sections, we put more whitespace at the top and
    bottom of the section with padding:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，与前面的步骤一样，我们使用`padding`在部分的顶部和底部添加更多空白空间：
- en: '[PRE59]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Then, we put more spaces between the social media links and the copyright statement
    with `margin-bottom`:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，通过指定`margin-bottom`在社交媒体链接和版权声明之间增加更多空间：
- en: '[PRE60]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Add the following lines to remove the `<ul>` element `padding` derived from
    default browser styles:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下行以删除从默认浏览器样式中派生的`<ul>`元素的`padding`：
- en: '[PRE61]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Add the highlighted lines in the following code to display the social media
    links beside each other:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在以下代码中添加突出显示的行以将社交媒体链接并排显示：
- en: '[PRE62]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'Give the social media links the color of their respective social media brands,
    as follows:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给社交媒体链接赋予其各自社交媒体品牌的颜色，如下所示：
- en: '[PRE63]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: Tip
  id: totrans-261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Get more colors of popular websites in BrandColors ([http://brandcolors.net/](http://brandcolors.net/)).
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 在BrandColors（[http://brandcolors.net/](http://brandcolors.net/)）中获取更多热门网站的颜色。
- en: 'Finally, make the copyright statement color subtler with the gray color:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，用灰色使版权声明颜色更加柔和：
- en: '[PRE64]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '*What just happened?*'
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: In the preceding steps, we just styled the website by customizing a number of
    Bootstrap variables as well as composing our own style rules. Compile `style.less`
    to generate the CSS. Additionally, you can obtain all the style rules we applied
    from this Gist ([http://git.io/-FWuiQ](http://git.io/-FWuiQ)).
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的步骤中，我们通过自定义一些Bootstrap变量以及组合我们自己的样式规则来为网站添加样式。编译`style.less`以生成CSS。此外，你可以从这个Gist（[http://git.io/-FWuiQ](http://git.io/-FWuiQ)）获取我们应用的所有样式规则。
- en: 'The website should now be presentable. The following screenshot shows how the
    website looks in the desktop view:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 网站现在应该是可以展示的。以下截图显示了网站在桌面视图中的外观：
- en: '![What just happened?](img/image00335.jpeg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![刚刚发生了什么？](img/image00335.jpeg)'
- en: 'The website is also responsive; the layout will adapt to the viewport width
    size, as shown in the following screenshot:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 网站也是响应式的；布局将根据视口宽度大小进行调整，如下截图所示：
- en: '![What just happened?](img/image00336.jpeg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![刚刚发生了什么？](img/image00336.jpeg)'
- en: Have a go hero – being more creative
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试更有创意
- en: 'Many of the style rules that we have just applied in the preceding section
    are merely decorative. Feel free to add more creativity and customization, as
    follows:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚在前面的部分应用的许多样式规则仅仅是装饰性的。请随意添加更多创意和自定义，如下所示：
- en: Explore the website's new color schemes. Use handy tools, such as Kuler, ([https://kuler.adobe.com/](https://kuler.adobe.com/))
    to generate color scheme
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索网站的新配色方案。使用Kuler等方便的工具（[https://kuler.adobe.com/](https://kuler.adobe.com/)）生成配色方案
- en: Apply different font families
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用不同的字体系列
- en: Present more awesome transition effects with CSS3
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用CSS3展示更多令人惊叹的过渡效果
- en: Pop quiz — using LESS function and extend syntax
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 快速测验-使用LESS函数和扩展语法
- en: Q1\. How do you make a color lighter with LESS?
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: Q1\. 如何使用LESS使颜色变浅？
- en: '`lighter(#000, 30%);`'
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`lighter(#000, 30%);`'
- en: '`lighten(#000, 30%);`'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`lighten(#000, 30%);`'
- en: '`lightening(#000, 30%);`'
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`lightening(#000, 30%);`'
- en: Q2\. How do you make a color transparent?
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: Q2\. 如何使颜色透明？
- en: '`fadeout(#000, 10%);`'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`fadeout(#000, 10%);`'
- en: '`transparentize(#000, 10%);`'
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`transparentize(#000, 10%);`'
- en: '`fade-out(#000, 10%);`'
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`fade-out(#000, 10%);`'
- en: Q3\. Which one of the following is an incorrect way to extend a mixin in LESS?
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: Q3\. 以下哪一种方式是在LESS中扩展mixin的不正确方式？
- en: '`.class:extend(.another-class);`'
  id: totrans-286
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.class:extend(.another-class);`'
- en: '`.class::extend(.another-class);`'
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.class::extend(.another-class);`'
- en: '`.class {`'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`.class {`'
- en: '`:extend(.another-class);`'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '`:extend(.another-class);`'
- en: '`}`'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '`}`'
- en: Improve and make the website functioning with JavaScript
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 改进并使用JavaScript使网站正常运行
- en: The off-canvas navigation has not yet been activated. If you click on the toggle
    button, the off-canvas navigation will not slide in. Furthermore, if you view
    the portfolio website in Internet Explorer 8, you will find that a number of style
    rules are not applied. This is because Internet Explorer 8 does not recognize
    the HTML5 elements that are used in the website. To sort these issues out, we
    will have to make use of some JavaScript libraries..
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 侧栏导航尚未激活。如果您点击切换按钮，侧栏导航将不会滑入。此外，如果您在Internet Explorer 8中查看作品集网站，您会发现许多样式规则没有被应用。这是因为Internet
    Explorer 8不识别网站中使用的HTML5元素。为了解决这些问题，我们将不得不使用一些JavaScript库。
- en: Time for action – compiling JavaScript with Koala
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进行操作-使用Koala编译JavaScript
- en: Create a new JavaScript file named `html5shiv.js` in `assets/js` directory.
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`assets/js`目录中创建一个名为`html5shiv.js`的新JavaScript文件。
- en: 'Import `html5shiv.js` from the HTML5Shiv package we downloaded through Bower
    into this file:'
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我们通过Bower下载的HTML5Shiv包中导入`html5shiv.js`到这个文件中：
- en: '[PRE65]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Create a new JavaScript file named `bootstrap.js`.
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`bootstrap.js`的新JavaScript文件。
- en: 'In `bootstrap.js`, import the JavaScript libraries that are required to turn
    the off-canvas navigation functionality on, as follows:'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`bootstrap.js`中，导入所需的JavaScript库以打开侧栏导航功能，如下所示：
- en: '[PRE66]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Open Koala and ensure that the **Auto Compile** option for `html5shiv.js` and
    `bootstrap.js` is checked, as shown in the following screenshot:![Time for action
    – compiling JavaScript with Koala](img/image00337.jpeg)
  id: totrans-300
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Koala，并确保`html5shiv.js`和`bootstrap.js`的**自动编译**选项已经被选中，如下图所示：![进行操作-使用Koala编译JavaScript](img/image00337.jpeg)
- en: Also, make sure that the output path of these two JavaScript files is set to
    the `/assets/js` directory, as shown in the following screenshot:![Time for action
    – compiling JavaScript with Koala](img/image00338.jpeg)
  id: totrans-301
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，确保这两个JavaScript文件的输出路径设置为`/assets/js`目录，如下图所示：![进行操作-使用Koala编译JavaScript](img/image00338.jpeg)
- en: Compile both these JavaScript files by clicking on the **Compile** button in
    Koala, as follows:![Time for action – compiling JavaScript with Koala](img/image00339.jpeg)
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击Koala中的**编译**按钮编译这两个JavaScript文件，如下所示：![进行操作-使用Koala编译JavaScript](img/image00339.jpeg)
- en: 'Once these JavaScript files are compiled, you should find the minified version
    of these files, `html5shiv.min.js` and `bootstrap.min.js`, as shown in the following
    screenshot:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦这些JavaScript文件被编译，你应该会发现这些文件的压缩版本`html5shiv.min.js`和`bootstrap.min.js`，如下图所示：
- en: '![Time for action – compiling JavaScript with Koala](img/image00340.jpeg)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![进行操作-使用Koala编译JavaScript](img/image00340.jpeg)'
- en: 'Open `index.html` in Sublime Text, and link `html5shiv.js` within the `<head>`
    section using the Internet Explorer conditional comment tag, as follows:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Sublime Text中打开`index.html`，并在`<head>`部分使用Internet Explorer条件注释标签链接`html5shiv.js`，如下所示：
- en: '[PRE67]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'Link `bootstrap.min.js` at the bottom of `index.html`, as follows:'
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`index.html`的底部链接`bootstrap.min.js`，如下所示：
- en: '[PRE68]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '*What just happened?*'
  id: totrans-309
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚刚发生了什么？*'
- en: We just compiled jQuery and Bootstrap JavaScript libraries to enable the off-canvas
    functionality. We also enabled HTML5 elements in Internet Explorer 8 using HTML5Shiv.
    By now, the website is fully functional.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚编译了jQuery和Bootstrap JavaScript库，以启用侧栏功能。我们还使用HTML5Shiv在Internet Explorer
    8中启用了HTML5元素。到目前为止，网站已经完全可用。
- en: Tip
  id: totrans-311
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can view the website through this Github page ([http://tfirdaus.github.io/rwd-portfolio/](http://tfirdaus.github.io/rwd-portfolio/)).
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过这个Github页面查看网站([http://tfirdaus.github.io/rwd-portfolio/](http://tfirdaus.github.io/rwd-portfolio/))。
- en: 'You should be able to slide in and out the off-canvas navigation, and the styles
    should now be visible in Internet Explorer 8\. Take a look at the following screenshot:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能够滑动进出侧栏导航，并且样式现在应该在Internet Explorer 8中可见。看一下以下的截图：
- en: '![What just happened?](img/image00341.jpeg)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![刚刚发生了什么？](img/image00341.jpeg)'
- en: The off-canvas navigation menu is slid in.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 侧栏导航菜单已经滑入。
- en: Summary
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We just accomplished the second project of this book. In this project, we built
    a portfolio website using Bootstrap. Bootstrap makes it easy and quick to build
    a responsive website along with the website components using the drop-in classes
    provided.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚完成了本书的第二个项目。在这个项目中，我们使用Bootstrap构建了一个作品集网站。Bootstrap使得使用提供的快速插入类来构建响应式网站和网站组件变得简单快捷。
- en: At the top of that, we also used a Bootstrap extension called Jasny Bootstrap
    to include off-canvas navigation, which is one of the missing popular responsive
    design patterns in the original Bootstrap. When it comes styling the website,
    we used LESS, a CSS preprocessor that allows us to write the style rules more
    efficiently.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们还使用了一个名为Jasny Bootstrap的Bootstrap扩展，以包括侧栏导航，这是原始Bootstrap中缺少的流行响应式设计模式之一。在网站样式方面，我们使用了LESS，这是一种CSS预处理器，可以让我们更有效地编写样式规则。
- en: To sum up, we did many things in this project to get the website up and running.
    I hope you've learned many things along the way.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，在这个项目中我们做了很多事情来让网站正常运行。希望你在这个过程中学到了很多东西。
- en: In the next chapter, we will start off the third project of this book using
    the Foundation framework. Stay tuned!
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用Foundation框架开始本书的第三个项目。敬请关注！
