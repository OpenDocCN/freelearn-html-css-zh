- en: Chapter 1. Introducing Responsive Web Design
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 介绍响应式网页设计
- en: The concept of web design used to be simple—designers would develop content
    for a popular desktop screen, using a layout which works for most devices to produce
    well laid-out and cohesive pages.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 网页设计的概念曾经很简单——设计师会为流行的桌面屏幕开发内容，使用适用于大多数设备的布局，以产生布局良好、连贯的页面。
- en: With changes in technologies and the introduction of mobile devices, the whole
    experience changed—gone are the days when a static layout would suffice. In its
    place came a need for content that responded to the available screen real estate,
    with elements automatically resized or hidden, according to the device being used.
    This forms the basis for a technique popularized by Ethan Marcotte, which we now
    know as **responsive web design** (**RWD**). Throughout the course of this chapter,
    we will begin to explore what this means, and understand some of the principles
    that are key to this concept.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 随着技术的变化和移动设备的引入，整个体验发生了变化——静态布局的时代已经过去。取而代之的是需要对可用屏幕房地产做出响应的内容，元素会根据所使用的设备自动调整大小或隐藏。这构成了Ethan
    Marcotte所推广的一种技术的基础，我们现在称之为**响应式网页设计**（**RWD**）。在本章的课程中，我们将开始探索这意味着什么，并了解一些对这个概念至关重要的原则。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Getting started with RWD
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用RWD
- en: Understanding the elements of RWD
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解RWD的元素
- en: Understanding the importance of RWD
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解RWD的重要性
- en: Exploring how RWD works
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索RWD的工作原理
- en: Setting up a development workflow
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立开发工作流程
- en: Exploring best practice and common errors
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索最佳实践和常见错误
- en: Curious? Let's get started!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 好奇吗？让我们开始吧！
- en: Getting started with RWD
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用RWD
- en: If one had to describe RWD in a sentence, then responsive design describes how
    the content is displayed across various screens and devices such as mobiles, tablets,
    phablets, or desktops. To understand what this means, let's use water as an example.
    The property of water is that it takes the shape of the container in which it
    is poured. It is an approach in which a website or a webpage adjusts its layout
    according to the size or resolution of the screen dynamically. This ensures that
    users get the best experience while using the website.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要用一句话描述RWD，那么响应式设计描述了内容如何在各种屏幕和设备上显示，如手机、平板电脑、大屏手机或台式电脑。要理解这意味着什么，让我们以水为例。水的性质是它会取决于被倒入的容器的形状。这是一种方法，即网站或网页根据屏幕的大小或分辨率动态调整其布局。这确保用户在使用网站时获得最佳体验。
- en: We develop a single website that uses a single code base. This will contain
    fluid, flexible images, proportion-based grids, fluid images, or videos and CSS3
    media queries to work across multiple devices and device resolutions. The key
    to making them work is the use of percentage values, in place of fixed units such
    as pixels or ems-based sizes.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们开发一个单一的网站，使用单一的代码库。这将包含流体、灵活的图像，比例为基础的网格，流体图像或视频和CSS3媒体查询，以适应多个设备和设备分辨率。使它们工作的关键是使用百分比值，而不是像素或基于ems的固定单位大小。
- en: 'The best part of this is that we can use this technique without the knowledge
    or need of server based/backend solutions; to see it in action, we can use Packt''s
    website as an example. Go ahead and browse [https://www.packtpub.com/web-development/mastering-html5-forms](https://www.packtpub.com/web-development/mastering-html5-forms);
    this is what we will see as a desktop view:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的部分是，我们可以在不需要服务器端/后端解决方案的知识或需求下使用这种技术；要看它的效果，我们可以使用Packt的网站作为例子。继续浏览[https://www.packtpub.com/web-development/mastering-html5-forms](https://www.packtpub.com/web-development/mastering-html5-forms)；这是我们将在桌面视图中看到的内容：
- en: '![Getting started with RWD](img/image_01_001.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用RWD](img/image_01_001.jpg)'
- en: 'The mobile view for the same website shows this, if viewed on a smaller device:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在较小的设备上查看同一网站的移动视图如下所示：
- en: '![Getting started with RWD](img/image_01_002.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用RWD](img/image_01_002.jpg)'
- en: We can clearly see the same core content is being displayed (that is, an image
    of the book, the buy button, pricing details, and information about the book),
    but elements such as the menu have been transformed into a single drop-down located
    in the top-left corner. This is what RWD is all about—producing a flexible design
    that adapts according to which device we choose to use, in a format that suits
    the device being used.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以清楚地看到相同的核心内容被显示出来（即书的图片、购买按钮、定价详情和关于书的信息），但菜单等元素已经转变为位于左上角的单个下拉菜单。这就是RWD的全部意义——产生一个灵活的设计，根据我们选择使用的设备进行调整，以适应所使用设备的格式。
- en: 'Let''s try it with another technology site; I am sure some of you are familiar
    with the A List Apart site (hosted at [http://alistapart.com](http://alistapart.com/)
    and founded by the well-known Jeffery Zeldman):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试另一个技术网站；我相信你们中的一些人熟悉A List Apart网站（托管在[http://alistapart.com](http://alistapart.com/)，由著名的Jeffery
    Zeldman创立）：
- en: '![Getting started with RWD](img/image_01_003.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用RWD](img/image_01_003.jpg)'
- en: 'Try resizing your browser window. This is a perfect example of how a simple
    text site can reflow content with minimal changes; in place of the text menu,
    we now have the hamburger icon (which we will cover later in this chapter):'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试调整浏览器窗口大小。这是一个完美的例子，说明一个简单的文本网站如何在最小的改变下重新排列内容；在文本菜单的位置，我们现在有了汉堡图标（我们将在本章后面介绍）：
- en: '![Getting started with RWD](img/image_01_004.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![开始使用RWD](img/image_01_004.jpg)'
- en: While the text in this site realigns with minimal difficulty, it seems that
    the top image doesn't work so well—it hasn't resized as part of the change, so
    will appear cut off on smaller devices.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个网站的文本重新排列起来并不困难，但似乎顶部的图像效果不太好——它没有随着变化而调整大小，因此在较小的设备上会显得被切掉。
- en: Although this may seem a complex task to achieve, in reality it boils down to
    following some simple principles; how these are implemented will ultimately determine
    the success of our site. We've seen some in use as part of viewing Packt's and
    A List Apart's sites at various sizes—let's take a moment to explore the principles
    of how responsive design works, and why it is an important part of creating a
    site for the modern Internet.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这可能看起来是一个复杂的任务，但实际上归结为遵循一些简单的原则；这些原则的实施最终将决定我们网站的成功。我们已经看到一些在Packt和A List
    Apart网站上以不同尺寸使用的原则——让我们花点时间来探讨响应式设计的原则，以及为什么它是创建现代互联网网站的重要部分。
- en: Exploring how RWD works
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索RWD的工作原理
- en: For some, the creation of what we now know as RWD is often associated with Ethan
    Marcotte, although its true origins date from earlier when the site Audi.com was
    first created, which had an adaptive viewport area as a result of limitations
    within IE at the time.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些人来说，我们现在所知的RWD的创作通常与Ethan Marcotte有关，尽管它的真正起源可以追溯到更早的时候，当时Audi.com网站首次创建时，由于当时IE的限制，它具有自适应的视口区域。
- en: 'If one had to describe what RWD is, then Ethan sums it up perfectly:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果必须描述RWD是什么，那么Ethan完美地总结了它：
- en: '*Rather than tailoring disconnected designs to each of an ever-increasing number
    of web devices, we can treat them as facets of the same experience. We can design
    for an optimal viewing experience, but embed standards-based technologies into
    our designs to make them not only more flexible, but more adaptive to the media
    that renders them. In short, we need to practice responsive web design.*'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*与将不同的设计分别适应不断增加的网络设备不同，我们可以将它们视为同一体验的不同方面。我们可以设计出最佳的观看体验，但将基于标准的技术嵌入到我们的设计中，使其不仅更灵活，而且更适应呈现它们的媒体。简而言之，我们需要实践响应式网页设计。*'
- en: In a nutshell, RWD is about presenting an experience for customers on different
    devices that allows them to interact with your business. It is important to note
    though that the experience does not have to use the same process; it is more important
    that the customer can achieve the same result, even though they may arrive using
    a different route. So, how does RWD work?
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，RWD是关于在不同设备上为客户呈现一种允许他们与您的业务互动的体验。但需要注意的是，体验不必使用相同的流程；更重要的是客户能够达到相同的结果，即使他们可能是通过不同的途径到达的。那么，RWD是如何工作的呢？
- en: RWD is a set of principles we should follow, but the overriding philosophy is
    about making content fluid. Gone are fixed values, at least for elements on the
    page; in their place, we use percentage values or em/rem units. Our page layout
    will use a fluid grid, which resizes automatically depending on the available
    viewport space.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: RWD是我们应该遵循的一套原则，但最重要的理念是使内容流动起来。固定值已经消失，至少对于页面上的元素来说；取而代之的是使用百分比值或em/rem单位。我们的页面布局将使用流动网格，根据可用的视口空间自动调整大小。
- en: 'One key concept that will help determine the success of our site is not one
    we might automatically associate with responsive design, but nevertheless will
    help: divine proportion.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 将有助于确定我们网站成功的一个关键概念并不是我们自动与响应式设计联系在一起的，但它仍然会有所帮助：神圣比例。
- en: 'Divine proportion, or the Golden Ratio as it is often known, is a way of defining
    proportions that are aesthetically pleasing—it is perfect for setting the right
    proportions for a responsive layout. The trick behind it is to use this formula:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 神圣比例，或者通常所说的黄金比例，是一种定义美学上令人愉悦的比例的方法——它非常适合设置响应式布局的正确比例。其中的诀窍是使用这个公式：
- en: '![Exploring how RWD works](img/image_01_005.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![探索RWD的工作原理](img/image_01_005.jpg)'
- en: Imagine we have a layout that is 960px wide, which we want to split into two
    parts, called **a** and **b**. Divine proportion states that the size of **a**
    must be **1.618** times the size of **b**.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，我们有一个宽度为960px的布局，我们想将其分成两部分，称为**a**和**b**。神圣比例规定**a**的大小必须是**b**的1.618倍。
- en: 'To arrive at our column widths, we must complete the following calculations:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 为了得到我们的列宽，我们必须完成以下计算：
- en: Divide the width of our site (960px) by 1.618\. This gives 593px (rounded to
    the nearest integer).
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将我们网站的宽度（960px）除以1.618。这给出了593px（四舍五入到最接近的整数）。
- en: Subtract 593px from 960px. This gives 367px.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从960px中减去593px。这给出了367px。
- en: It's a simple formula, but one that will help improve the communication of content
    for your site—we're not forced to have to use it though; sites are available on
    the Internet that don't follow this principle. It does mean that they must ensure
    that the content is still equally balanced, to give that pleasing effect—this
    isn't so easy!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的公式，但它将有助于改善您网站上内容的传达——我们并不一定非要使用它；互联网上有一些不遵循这一原则的网站。这意味着他们必须确保内容仍然平衡，以产生令人愉悦的效果——这并不容易！
- en: The important point here though is that we shouldn't be using fixed pixel values
    for a responsive site; instead, we can use rem units (which resize better) or
    ideally percentage values.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这里重要的一点是，我们不应该为响应式网站使用固定像素值；相反，我们可以使用rem单位（它们可以更好地调整大小），或者理想情况下使用百分比值。
- en: 'To translate this into something more meaningful, we can simply work out the
    resulting column widths as percentages of the original size. In this instance,
    593px equates to 62% and 367px is 38%. That would give us something like this:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将这个转化为更有意义的东西，我们可以简单地计算出结果列宽占原始尺寸的百分比。在这种情况下，593px相当于62%，367px相当于38%。这将给我们类似这样的东西：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Okay, a little theoretical, but hopefully you get the idea! It's a simple formula,
    but a great way to ensure that we arrive at a layout which is properly balanced;
    using percentage values (or at the very least rem units), will help make our site
    responsive at the same time.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，有点理论，但希望你能理解！这是一个简单的公式，但是确保我们得到一个平衡的布局的好方法；使用百分比值（或至少是rem单位）将有助于使我们的网站同时具有响应性。
- en: Understanding the elements of RWD
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解RWD的要素
- en: Now that we've been introduced to RWD, it's important to understand some of
    the elements that make up the philosophy of what we know as flexible design. A
    key part of this is understanding the viewport or visible screen estate available
    to us; in addition to viewports, we must also consider flexible media, responsive
    text and grids, and media queries. We will cover each in more detail later in
    the book, but to start with, let's take a quick overview of the elements that
    make up RWD.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了RWD，重要的是要理解一些构成我们所知的灵活设计哲学的元素。其中一个关键部分是理解视口或可见屏幕空间；除了视口，我们还必须考虑灵活的媒体、响应式文本和网格以及媒体查询。我们将在本书的后面更详细地涵盖每个部分，但首先让我们快速概述一下构成RWD的元素。
- en: Controlling the viewport
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 控制视口
- en: A key part of RWD is working with the viewport or visible content area on a
    device. If we're working with desktops, then it is usually the resolution; this
    is not the case for mobile devices.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: RWD的一个关键部分是处理设备上的视口或可见内容区域。如果我们在处理台式电脑，通常是分辨率；但对于移动设备来说就不是这样了。
- en: 'There is a temptation to reach for JavaScript (or a library such as jQuery)
    to set values such as viewport width or height, but there is no need, as we can
    do this using CSS:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种诱惑，想要使用JavaScript（或类库如jQuery）来设置视口宽度或高度的值，但其实没有必要，因为我们可以使用CSS来做到这一点：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'or using this directive:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 或者使用这个指令：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This means that the browser should render the width of the page to the same
    width as the browser window—if for example the latter is 480px, then the width
    of the page will be 480px. To see what a difference that not setting a viewport
    can have, take a look at this example screenshot:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着浏览器应该将页面的宽度渲染为与浏览器窗口相同的宽度——例如，如果后者是480px，那么页面的宽度将是480px。要看看不设置视口会有什么影响，看一下这个例子的截图：
- en: '![Controlling the viewport](img/image_01_006.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![控制视口](img/image_01_006.jpg)'
- en: 'This example was created from displaying some text in Chrome, in iPhone 6 Plus
    emulation mode, but without a viewport. Now, let''s view the same text, but this
    time with a viewport directive set:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子是在Chrome中显示一些文本，使用iPhone 6 Plus仿真模式，但没有视口。现在，让我们查看相同的文本，但这次设置了视口指令：
- en: '![Controlling the viewport](img/image_01_007.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![控制视口](img/image_01_007.jpg)'
- en: Even though this is a simple example, do you notice any difference? Yes, the
    title color has changed, but more importantly the width of our display has increased.
    This is all part of setting a viewport—browsers frequently assume we want to view
    content as if we're on a desktop PC. If we don't tell it that the viewport area
    has been shrunk in size (and that we have not set the scaling correctly), it will
    try to shoehorn all of the content into a smaller size. This will result in a
    page that will appear to be zoomed out, which doesn't work very well!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这只是一个简单的例子，你注意到了什么不同吗？是的，标题颜色已经改变，但更重要的是我们的显示宽度已经增加了。这都是设置视口的一部分——浏览器经常假设我们想要查看内容就像在台式电脑上一样。如果我们不告诉它视口区域已经缩小（并且我们没有正确设置缩放），它会试图把所有内容塞进更小的空间。这将导致页面看起来被缩小了，这样做效果不是很好！
- en: It's critical, therefore, that we set the right viewport for our design, and
    that we allow it to scale up or down in size, irrespective of the device. We will
    explore this in more detail, in [Chapter 2](ch02.html "Chapter 2. Creating Fluid
    Layouts"), *Creating Fluid Layouts*.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对于我们的设计来说，设置正确的视口并允许其根据设备的大小进行缩放是至关重要的。我们将在[第2章](ch02.html "第2章 创建流体布局")中更详细地探讨这一点，*创建流体布局*。
- en: Creating flexible grids
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建灵活的网格
- en: When designing responsive sites, we can either create our own layout or use
    a grid system already created for use, such as Bootstrap. The key here though
    is ensuring that the mechanics of our layout sizes and spacing are set according
    to the content we want to display for our users, and that when the browser is
    resized in width, it realigns itself correctly.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计响应式网站时，我们可以创建自己的布局，也可以使用已经创建好的网格系统，比如Bootstrap。关键在于确保我们的布局大小和间距的机制是根据我们想要为用户显示的内容设置的，并且当浏览器的宽度调整时，它能够正确地重新排列自己。
- en: For many developers, the standard unit of measure has been pixel values; a key
    part of responsive design is to make the switch to using percentage and em (or
    preferably rem) units. The latter scales better than standard pixels, although
    there is a certain leap of faith needed to get accustomed to working with the
    replacements!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 对于许多开发人员来说，标准的度量单位一直是像素值；响应式设计的一个关键部分是转而使用百分比和em（或者最好是rem）单位。后者比标准像素更好地进行了缩放，尽管需要一定的信任来习惯使用这些替代单位！
- en: Making media responsive
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 媒体响应式设计
- en: Two key parts of our layout are of course images and text—the former though
    can give designers a bit of a headache, as it is not enough to simply use large
    images and set overflow—hidden to hide the parts that are not visible!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 布局的两个关键部分当然是图像和文本——前者可能会让设计师头疼，因为简单地使用大图像并设置overflow:hidden来隐藏不可见部分是不够的！
- en: 'Images in a responsive site must be as flexible as the grid used to host them—for
    some, this may be a big issue if the site is very content heavy; now is a good
    time to consider if some of that content is no longer needed, and can be removed
    from the site. We can of course simply apply `display: none` to any image which
    shouldn''t be displayed, according to the viewport set. However, this isn''t a
    good idea though, as content still has to be downloaded before styles can be applied;
    it means we''re downloading more than is necessary! Instead, we should assess
    the level of content, make sure it is fully optimized and then apply percentage
    values so it can be resized automatically to a suitable size when the browser
    viewport changes.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '响应式网站中的图像必须与用于托管它们的网格一样灵活——对于一些人来说，如果网站内容非常丰富，这可能是一个大问题；现在是一个好时机来考虑一下是否不再需要一些内容，并且可以从网站中删除。当然，我们当然可以简单地对任何不应显示的图像应用`display:
    none`，根据设置的视口。但是，这并不是一个好主意，因为在应用样式之前仍然必须下载内容；这意味着我们下载了比必要的更多的内容！相反，我们应该评估内容的水平，确保它完全优化，然后应用百分比值，以便在浏览器视口更改时可以自动调整大小。'
- en: Constructing suitable breakpoints
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建适当的断点
- en: With content and media in place, we must turn our attention to media queries—there
    is a temptation to create queries that suit specific devices, but this can become
    a maintenance headache.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有了内容和媒体，我们必须把注意力转向媒体查询——有一种诱惑是创建适合特定设备的查询，但这可能会成为一个维护头疼的问题。
- en: 'We can avoid the headache by designing queries based on where the content breaks
    rather than for specific devices—the trick to this is to start small and gradually
    enhance the experience, with the use of media queries:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过根据内容断点而不是针对特定设备来设计查询来避免头疼的问题——这个技巧是从小处着手，逐渐增强体验，使用媒体查询：
- en: '[PRE3]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We should aim for around 75 characters per line, to maintain an optimal length
    for our content.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该以每行约75个字符的长度为目标，以保持内容的最佳长度。
- en: Appreciating the importance of RWD
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 欣赏RWD的重要性
- en: 'So - we''ve explored how RWD works, and some of the key elements that make
    up this philosophy; question is, why is it so important to consider using it?
    There are several benefits to incorporating a responsive capability to our sites,
    which include the following:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经探讨了RWD的工作原理，以及构成这一理念的一些关键元素；问题是，为什么考虑使用它如此重要？将响应能力纳入我们的网站中有几个好处，包括以下几点：
- en: It is easier for users to interact with your site, if it is designed to work
    with multiple devices.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户与您的网站进行交互会更容易，如果它被设计为适用于多个设备。
- en: Creating a single site that caters to multiple devices may in itself require
    more effort, but the flip side of this is that we're only developing one site,
    not multiple versions.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个适用于多个设备的单一网站本身可能需要更多的努力，但这样做的好处是我们只开发一个网站，而不是多个版本。
- en: Constructing a site that works based on how much can be displayed in a specific
    viewport is a more effective way to render content on screen than relying on browser
    agent strings, which can be falsified and error prone.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建一个基于特定视口中可以显示多少内容的网站，比依赖可以被伪造和容易出错的浏览器代理字符串更有效地在屏幕上呈现内容。
- en: RWD is able to cater to future changes. If we plan our site carefully, we can
    construct media queries that cater for devices already in use and ones yet to
    be released for sale.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RWD能够适应未来的变化。如果我们仔细规划我们的网站，我们可以构建适用于已经在使用和尚未上市的设备的媒体查询。
- en: Making our site accessible and intuitive
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使我们的网站易于访问和直观
- en: Accessibility plays a key role in responsive design. Our content should be as
    intuitive as possible, with every single piece of information easy to access.
    Responsive design places great emphasis on making our design self-explanatory;
    there shouldn't be any doubt as to how to access information on the site.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 可访问性在响应式设计中起着关键作用。我们的内容应尽可能直观，每一条信息都易于访问。响应式设计非常强调使我们的设计不言自明；在网站上访问信息的方式不应该有任何疑问。
- en: Note
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In this context, accessibility refers to making our site available on a wide
    variety of devices; this should not be confused with the need to cater for individuals
    with disabilities. Making sites accessible for them is equally important, but
    is not a primary role in RWD.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，可访问性是指使我们的网站在各种设备上可用；这不应与满足残疾人士的需求混淆。为他们提供网站的可访问性同样重要，但不是RWD的主要角色。
- en: Even though our mobile version may not contain the same information (which is
    perfectly accessible), it nonetheless must be engaging, with appealing colors,
    legible text (at all sizes), and a design that retains visual harmony and balance
    with our chosen color scheme.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 即使我们的移动版本可能不包含相同的信息（这些信息完全可以访问），它仍然必须是引人入胜的，具有吸引人的颜色，易读的文本（在所有尺寸下），并且设计保持视觉和谐与我们选择的配色方案。
- en: Organizing our content
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组织我们的内容
- en: The success of our site is determined by a host of factors, of which one of
    these will be how our content is organized in the layout. The content should be
    organized in such a way that its layout makes it easy to process, is simple and
    free of clutter, and that we're making full use of the available viewport space
    for the device we're targeting.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们网站的成功取决于一系列因素，其中之一将是我们的内容在布局中的组织方式。内容应该以使其易于处理的方式组织，简单且没有杂乱，并且我们充分利用了我们所针对的设备的可用视口空间。
- en: We must also ensure our content is concise—we should aim to get our point across
    in as few words as possible so that mobile users are not wasting time with downloading
    redundant content. Keeping our options simple is essential - if we make it too
    complicated, with lots of links or categories, then this will increase the time
    it takes for visitors to make decisions, and ultimately only serve to confuse
    them!
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还必须确保我们的内容简洁——我们应该尽量用尽可能少的词语来表达我们的观点，以便移动用户不会浪费时间下载多余的内容。保持我们的选择简单是至关重要的——如果我们使它过于复杂，有很多链接或类别，那么这将增加访问者做出决定所需的时间，并最终只会使他们感到困惑！
- en: At this point, it is worth pointing out something - over time, you may come
    across the phrase **adaptive design**, when talking about responsive design. There
    is a subtle but key difference between the two, and either can be used as a principle
    when constructing our site. Let's take a moment to explore what each means, and
    the differences that might affect how we go about constructing our sites.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，值得指出一些事情——随着时间的推移，当谈论响应式设计时，你可能会遇到短语“自适应设计”。两者之间有微妙但关键的区别，我们在构建网站时可以使用其中任何一个原则。让我们花一点时间来探讨每个原则的含义，以及可能影响我们构建网站方式的差异。
- en: Comparing RWD to adaptive design
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较RWD和自适应设计
- en: So, what is adaptive design, and how does it differ to responsive design?
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，什么是自适应设计，它与响应式设计有何不同？
- en: Responsive design is about making one design fit many devices—it requires us
    to create the optimal viewing solution for a site, no matter which device we care
    to use. This means that we should not have to resize, scroll, or pan more than
    is absolutely necessary; if for example our page width doesn't fit the screen
    we're using, then our design isn't right! Ultimately though, we can view responsive
    design as a ball that grows or shrinks in size automatically, to fit several sizes
    of hoops.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式设计是指使一个设计适应多种设备——这要求我们为网站创建最佳的视图解决方案，无论我们使用哪种设备。这意味着我们不应该不必要地调整大小、滚动或移动；例如，如果我们的页面宽度不适合我们使用的屏幕，那么我们的设计就不正确！不过，最终我们可以将响应式设计视为一个可以自动增大或缩小的球，以适应多种大小的篮圈。
- en: Staying with the hoop analogy, adaptive design works on the principle that we
    have multiple layouts that are available for use; the browser will select the
    right one to use, based on detecting which type of device is in use. In this instance,
    we would be putting several different balls through different sized hoops, depending
    on the size of hoop in use. The key difference though is that responsive design
    focuses on client-side development; adaptive design in the main uses server-side
    detection to display the best-fitting page, based on the device being used to
    browse the site.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 保持篮圈的类比，自适应设计的原理是我们有多个可用的布局；浏览器将根据检测到的设备类型选择要使用的正确布局。在这种情况下，我们将根据使用的篮圈大小将几个不同的球投入不同大小的篮圈。然而，关键的区别在于响应式设计侧重于客户端开发；自适应设计主要使用服务器端检测来显示最适合的页面，根据用于浏览网站的设备。
- en: Note
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For the purpose of this book, we will work on using responsive design throughout
    all of the examples used within the text.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将在文本中使用响应式设计来完成所有示例。
- en: Now that we understand the importance of using RWD and how it differs from adaptive
    design, let's really begin on our journey; our first step is to get our development
    environment prepared for use. At this point, you might be expecting to download
    lots of different plugins or be using libraries such as jQuery. You might be in
    for a little surprise!
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了使用RWD的重要性以及它与自适应设计的区别，让我们真正开始我们的旅程；我们的第一步是准备好我们的开发环境以供使用。在这一点上，你可能期待下载许多不同的插件或使用jQuery等库。你可能会有一点惊喜！
- en: Preparing our development environment
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备我们的开发环境
- en: Okay, we've covered enough general background; time to get more practical!
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，我们已经涵盖了足够的一般背景知识；是时候更加实际了！
- en: There are many tools available to help us, when constructing responsive sites;
    this of course includes tools such as JavaScript or jQuery, but also plugins such
    as FitVids (to manage videos, responsively) or ResponsiveSlides for creating responsive
    carousels.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建响应式网站时有许多可用的工具；当然包括JavaScript或jQuery等工具，还有像FitVids（用于管理响应式视频）或ResponsiveSlides（用于创建响应式走马灯）等插件。
- en: However, we're not going to use any of them. All we need is a text editor and
    a browser, and nothing more! We're not going to download anything as part of completing
    the exercises in this book.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，我们不会使用任何插件。我们只需要一个文本编辑器和一个浏览器，什么都不需要！在完成本书中的练习时，我们不会下载任何东西。
- en: 'Yes, I hear those exclamations of incredulity. I must have lost my marbles,
    I hear you say. There is a very good reason for this approach though; let me explain:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，我听到了那些难以置信的感叹。我一定是疯了，我听到你们说。不过，这种方法是有很好的原因的；让我解释一下：
- en: On too many occasions, I see instances where we simply reach for the latest
    plugin to help us achieve a result. Ordinarily, there is nothing wrong with this;
    after all, time pressures frequently mean that we can't afford the time to take
    a more considered approach.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，我看到我们只是简单地使用最新的插件来帮助我们实现结果。通常情况下，这没有什么问题；毕竟，时间压力经常意味着我们无法承担花更多时间来进行更深思熟虑的方法。
- en: However, I believe we've become lazy. There is no need for many of the tools
    that are available, when building responsive sites. It's time to go back to basics;
    throughout the course of this book, we're going to prove that we can build the
    basics of responsive functionality, with nothing more than a simple text editor
    and a browser for viewing.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，我认为我们变得懒惰了。在构建响应式网站时，并不需要许多可用的工具。是时候回归基础了；在本书的过程中，我们将证明我们可以仅仅使用简单的文本编辑器和浏览器来构建响应功能的基础。
- en: 'There are some caveats to this approach though, that we should bear in mind:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，这种方法也有一些注意事项：
- en: 'Much of what we construct won''t work in some older browsers—IE9 or below is
    a good case in point. The question you must ask yourself is: how many people use
    this for your site? If the percentage is very low, then you can consider dropping
    them; if not, then you will need to seek a different approach.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们构建的许多内容在一些旧版浏览器中无法正常工作——比如IE9或更低版本。你必须问自己的问题是：有多少人会在你的网站上使用这些浏览器？如果比例非常低，那么你可以考虑放弃它们；如果不是，那么你需要寻找另一种方法。
- en: 'Concentrating on using just HTML and CSS does not mean that we''re rejecting
    other tools outright; if we need to use them, then we need to use them. The question
    we must ask ourselves though is this: do we really need to use them? Or are we
    just too lazy to go *old school* and create things from the ground up?'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 专注于只使用HTML和CSS并不意味着我们完全拒绝其他工具；如果我们需要使用它们，那么我们就需要使用它们。然而，我们必须问自己的问题是：我们真的需要使用它们吗？还是我们只是太懒，不愿意从头开始创建东西？
- en: With that aside, there are a couple of administration tasks we need to complete
    first; we need a project area to store our content. I would recommend creating
    a folder somewhere on your PC or Mac to store files; I will for the purposes of
    this book assume you've called it `B03568`, and that it is stored on the `C:`
    drive. If you've stored it somewhere else, then adjust accordingly.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，我们需要先完成一些管理任务；我们需要一个项目区域来存储我们的内容。我建议在你的PC或Mac上的某个地方创建一个文件夹来存储文件；为了本书的目的，我假设你已经将其命名为`B03568`，并且它存储在`C:`驱动器上。如果你把它存储在其他地方，那就相应地调整。
- en: Next up, we will need a copy of the code download that accompanies this book—there
    will be instances where we won't cover some of the more mundane content, but focus
    on the really important content; we can get those less critical files from the
    code download.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要一份随附本书的代码下载副本——在某些情况下，我们不会涵盖一些更乏味的内容，而是专注于真正重要的内容；我们可以从代码下载中获取那些不太关键的文件。
- en: Finally, do you have a text editor that you like using? If not, then you might
    like to look at Sublime Text 3; it is our preferred editor of choice. The real
    benefit of using it means we can add plugins, such as the REM-PX (available from
    [https://packagecontrol.io/packages/REM%20PX](https://packagecontrol.io/packages/REM%20PX)),
    which is perfect for converting from pixel to rem-based values! (We will cover
    this more in later chapters).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你有喜欢使用的文本编辑器吗？如果没有，那么你可能会喜欢看看Sublime Text 3；这是我们首选的编辑器。使用它的真正好处在于我们可以添加插件，比如REM-PX（可从[https://packagecontrol.io/packages/REM%20PX](https://packagecontrol.io/packages/REM%20PX)获取），它非常适合将像素转换为rem单位的值！（我们将在后面的章节中更详细地介绍这个）。
- en: Okay, onwards we go; the next stage in our journey is to consider a suitable
    strategy for creating our responsive sites. There is nothing outrageously complex
    about this, it is more about making some sensible choices as to what approach
    we should use which bests fit our solution. Let's take a moment to explore what
    this means in practice.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我们继续前进；我们旅程的下一阶段是考虑创建响应式网站的合适策略。这并不是什么非常复杂的事情，更多的是关于做出一些明智的选择，决定我们应该使用哪种方法最适合我们的解决方案。让我们花点时间来探讨这在实践中意味着什么。
- en: Considering a suitable strategy
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 考虑一个合适的策略
- en: As a developer, I am sure you will be wanting to get stuck into creating your
    next masterpiece, right? Sounds familiar; after all, that is what helps to pay
    the bills…
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发者，我相信你一定想着着手创建你的下一个杰作，对吧？听起来很熟悉；毕竟，这就是帮助我们支付账单的方式…
- en: Before we can get into writing code, we must develop some form of strategy,
    this can be as simple or as complex as befits our requirements. Although there
    is something to be said for defining ground rules, I've never been one for rigid
    principles; instead, developing a set of guidelines and principles to follow means
    that we can be flexible about our approach, while still retaining a sense of consistency.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写代码之前，我们必须制定一些策略，这可以简单也可以复杂，取决于我们的需求。虽然定义基本规则很重要，但我从来不是一个坚持原则的人；相反，制定一套遵循的准则和原则意味着我们可以灵活地处理问题，同时保持一致性。
- en: 'There are a few guidelines that we should try to incorporate into our development
    process, these are more about helping to reduce any lack of clarity when developing
    responsive sites for the first time:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些指导方针我们应该尽量纳入到我们的开发过程中，这些更多是帮助我们在第一次开发响应式网站时减少任何不清晰的地方：
- en: '**Choosing mobile over desktop**: This is not a new idea; it has been around
    since before responsive design took off as a serious approach to creating sites.
    The mobile-first concept means that we should develop our content for smaller
    mobile devices first, before working up to tablets and desktops. At this stage,
    it is important to be aware of what visitors may be using for your current site;
    this will help determine which devices we should concentrate on as part of our
    design.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择移动端而非桌面端**：这并不是一个新概念；在响应式设计成为创建网站的一种严肃方法之前，它就已经存在了。移动优先的概念意味着我们应该先为较小的移动设备开发内容，然后再逐步扩展到平板电脑和桌面设备。在这个阶段，重要的是要意识到访问者可能在你当前的网站上使用什么设备；这将有助于确定我们应该集中关注哪些设备作为我们设计的一部分。'
- en: '**Breakpoints**: Getting these right will be essential to the success of any
    site we build; not only must we choose the right thresholds for the devices we
    want to support, but also ensure that the cut-off points do not overlap each other.
    A common misconception is to develop for standard breakpoints such as desktops
    or tablets; instead, we should set our breakpoints to kick in when our content
    breaks within our layout. This screenshot shows the type of thresholds we have
    to consider in our designs:'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**断点**：正确设置这些对于我们构建的任何网站的成功至关重要；我们不仅必须选择适合我们想要支持的设备的正确阈值，还必须确保切换点不会彼此重叠。一个常见的误解是开发标准的断点，比如桌面或平板电脑；相反，我们应该设置我们的断点，以便在我们的布局中内容发生断裂时启动。这个截图展示了我们在设计中必须考虑的阈值类型：'
- en: '![Considering a suitable strategy](img/image_01_008.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![考虑一个合适的策略](img/image_01_008.jpg)'
- en: '**The flow of content**: When we start designing for smaller screens, content
    will naturally be squeezed and begin to flow downwards. This may be tricky to
    grasp as a concept, if you''re used to pixels and points when designing, but it
    will make sense once you get used to how content will flow downwards in responsive
    design.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容的流动**：当我们开始为较小的屏幕设计时，内容自然会被挤压并向下流动。如果你习惯于在设计时使用像素和点，这可能是一个难以理解的概念，但一旦你习惯了内容在响应式设计中向下流动的方式，它就会变得合理起来。'
- en: '**Relative units**: This is an important concept in responsive design. It''s
    a case of learning how to make the switch from static values to relative units.
    Calculating values in percentages means that content will always fit, no matter
    what the viewport size; for example, the size of a `<div>` set to 50% means that
    it will only ever fill 50% of its parent container, no matter what the size of
    the viewport. It may be a case of building the initial design with static values,
    but we should try to get into the mindset of converting to use percentages as
    part of our design process.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**相对单位**：这是响应式设计中的一个重要概念。这是一个学习如何从静态值转换为相对单位的过程。用百分比计算数值意味着内容将始终适合，无论视口大小如何；例如，将`<div>`的大小设置为50%意味着它只会填充其父容器的50%，无论视口的大小如何。可能需要使用静态值构建初始设计，但我们应该尝试转换为使用百分比作为设计过程的一部分。'
- en: '**Max and min values**: A part of using relative values means that our browser
    won''t understand what the lower and upper size limits of each element will be.
    To work around this, we must set `min-width` or `max-width` values; these will
    ensure that no matter what width our elements are at, they won''t go past the
    limits set in code.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最大和最小值**：使用相对值的一部分意味着我们的浏览器不会理解每个元素的下限和上限大小。为了解决这个问题，我们必须设置`min-width`或`max-width`值；这将确保无论我们的元素宽度如何，它们都不会超出代码中设置的限制。'
- en: '**Web fonts or system fonts**: If you maintain a desktop version of your site
    already, and it uses one or more web fonts, then you have an important decision
    to make: should the mobile site use the same fonts? The reason for asking is because
    this requires additional content to be downloaded; it will consume extra bandwidth,
    which will be a concern for devices where this is limited. Bear in mind that anyone
    using a mobile device is likely to be under time pressure, they will want to do
    something quickly and with the minimum of fuss, so selecting a non-standard font
    won''t be a useful way forward.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络字体或系统字体**：如果您已经维护了网站的桌面版本，并且使用了一个或多个网络字体，那么您需要做出重要决定：移动网站是否应该使用相同的字体？问这个问题的原因是因为这需要下载额外的内容；这将消耗额外的带宽，这对于带宽有限的设备来说是一个问题。请记住，任何使用移动设备的人都可能面临时间压力，他们希望快速完成某些事情，而且尽量少麻烦，因此选择非标准字体不会是一个有用的方法。'
- en: '**Bitmaps or vector images**: When working with responsive designs, a key principle
    is scalability; we must have images that can easily be resized or swapped for
    larger or smaller as appropriate. Taking the latter approach on a mobile device
    isn''t wise; a better route would be to consider using vector images. These not
    only resize without loss of quality, but can also be manipulated using CSS if
    desired, which reduces the need for separate versions of the same image (provided
    the vector image has been optimized prior to editing with CSS).'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**位图或矢量图像**：在使用响应式设计时，一个关键原则是可伸缩性；我们必须拥有可以轻松调整大小或根据需要更换为更大或更小的图像。在移动设备上采用后一种方法是不明智的；更好的方法是考虑使用矢量图像。这些不仅可以在不损失质量的情况下调整大小，而且如果需要的话还可以使用CSS进行操作，这减少了需要相同图像的不同版本（前提是矢量图像在使用CSS之前已经进行了优化）。'
- en: '**Content strategy**: The aim of responsive design is to create the best possible
    experience, irrespective of the device used to view the site. Part of this centers
    around content; as a part of developing a strategy, content should always come
    first. We need to add enough to make our design a useful foundation; we can then
    add or develop this at a later date, when we add support for larger screens and
    resolutions.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容策略**：响应式设计的目标是无论使用何种设备查看网站，都能创造最佳的体验。其中一部分围绕内容展开；作为制定策略的一部分，内容应始终排在首位。我们需要添加足够的内容来使我们的设计成为一个有用的基础；然后我们可以在以后为更大的屏幕和分辨率添加支持时添加或开发这些内容。'
- en: '**Sketch and prototype**: Once we have worked out our content and a strategy
    for managing it, it''s time to develop the layout. A key part of this should incorporate
    sketching or wireframing; it will help turn the rough beginnings of a plan into
    something more solid. Many designers will use PhotoShop, but this is at the risk
    of wasting lots of billable hours that must be accounted for with the client.
    Sketching on paper is portable, and has a low visual and content fidelity, which
    means we can focus on how content interacts, rather than how it looks.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**草图和原型**：一旦我们确定了内容和管理内容的策略，就该是开发布局的时候了。其中一个关键部分应该包括草图或线框图；这将有助于将计划的粗糙开端转化为更加坚实的东西。许多设计师会使用PhotoShop，但这有浪费大量可计费时间的风险，这必须与客户核算。在纸上草图是便携的，并且具有较低的视觉和内容保真度，这意味着我们可以专注于内容的互动，而不是外观。'
- en: '**Frameworks**: Using a framework in our development can bring several benefits
    to our development process; it''s tried and tested code means that we can cut
    down on development time, and make use of the grid approach to build and refine
    our layout around our content. Frameworks will have already been tested across
    multiple devices, so the debugging time is reduced; we should concentrate on choosing
    the right framework, based on criteria such as the learning curve required, support,
    and documentation availability.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**框架**：在我们的开发中使用框架可以为我们的开发过程带来几个好处；它经过验证的代码意味着我们可以减少开发时间，并利用网格方法来构建和完善我们的布局。框架已经在多个设备上进行了测试，因此调试时间减少了；我们应该集中精力选择合适的框架，基于学习曲线、支持和文档可用性等标准。'
- en: Note
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A caveat with using frameworks though is their size; if we go down this route,
    we should choose carefully which one to use, as many are code heavy and adding
    extra unnecessary code will make our sites slower.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用框架的一个注意事项是它们的大小；如果我们选择这条路线，我们应该仔细选择要使用的框架，因为许多框架代码量很大，添加额外的不必要代码会使我们的网站变慢。
- en: '**Scalable media**: Images and videos are essential for any site; not only
    do they help add color, they can also convey more in a smaller space. All of our
    images must be scalable; it doesn''t matter if we swap images out as our resolution
    increases, or we use a scalable format such as SVG. We need to give consideration
    to sourcing both standard and hi-resolution versions of our images, to cater for
    those devices that support the latter; these can either be individual or in the
    form of image sprites. Our media strategy should also consider using icon fonts,
    which are perfect for small, repeatable elements such as social media logos.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可伸缩媒体**：图片和视频对于任何网站都是必不可少的；它们不仅可以增加色彩，还可以在较小的空间中传达更多信息。我们所有的图片必须是可伸缩的；无论我们在分辨率增加时是否更换图片，还是使用可伸缩格式如SVG。我们需要考虑获取标准和高分辨率版本的图片，以满足支持后者的设备；这些可以是单独的，也可以是图像精灵的形式。我们的媒体策略还应考虑使用图标字体，这对于小型、可重复的元素如社交媒体标志非常适合。'
- en: '**Minification**: If we''re building sites to work on devices where bandwidth
    constraints and limited resources may be a factor, then we must consider minifying
    our CSS and JavaScript content. Minifying should be a standard part of any development
    workflow. We can reduce the number of HTTP requests to the server and improve
    response times. When designing responsively, minification becomes more critical,
    as we are adding more CSS styles (such as media queries) to cater for different
    viewports. This will inflate the size of our style sheets even further so anything
    we can do to help reduce the size, will help encourage takeup of our newly developed
    responsive site on mobile devices.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最小化**：如果我们正在构建适用于带宽限制和资源有限的设备的网站，那么我们必须考虑最小化我们的CSS和JavaScript内容。最小化应该是任何开发工作流程的标准部分。我们可以减少向服务器的HTTP请求次数，并提高响应时间。在响应式设计时，最小化变得更加重要，因为我们正在添加更多的CSS样式（如媒体查询）以适应不同的视口。这将进一步增加我们样式表的大小，所以我们可以尽量减少大小，以鼓励移动设备上新开发的响应式网站的使用。'
- en: As developers, we should have some form of strategy in place when creating our
    sites; it should not be so rigid as to prevent us changing direction if our existing
    plans are not working. Whichever way we decide to go, we should always consider
    an element of best practice in our development workflow; there are a few tips
    we could use right about now, so let's take a look in more detail.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 作为开发人员，我们在创建网站时应该有一定的策略；它不应该太死板，以至于阻止我们改变方向，如果我们现有的计划不起作用。无论我们决定走哪条路，我们都应该在我们的开发工作流程中考虑最佳实践的元素；现在我们可以使用一些提示，让我们更详细地看一看。
- en: Exploring best practices
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索最佳实践
- en: Best practices...ugh...what a phrase!
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践...噢...多么糟糕的短语！
- en: 'This is a phrase that is used and abused to death; the irony is that when it
    is used, it isn''t always used correctly either! This said, there are some pointers
    we can use to help with designing our responsive sites; let''s take a look at
    a few:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个被滥用至死的短语；讽刺的是，当它被使用时，它也并不总是被正确使用！尽管如此，我们可以使用一些指针来帮助设计我们的响应式网站；让我们来看看其中一些：
- en: '**Use a minimalistic approach**: This is very popular at the moment and perfect
    for responsive design. It reduces the number of elements we have to realign when
    screen dimensions change; it also makes editing content and elements easier, if
    our page content is at a minimum.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**采用极简主义方法**：这在目前非常流行，非常适合响应式设计。它减少了屏幕尺寸变化时我们需要重新排列的元素数量；如果我们的页面内容较少，还可以更容易地编辑内容和元素。'
- en: '**Always go for a mobile-first strategy**: It is essential to consider what
    the user experience will be like on a mobile device. The proportion of those who
    own a mobile device or phone is higher than those who own their own PC; we must
    make sure that content is both viewable and legible on a smaller screen. Once
    we''ve nailed this, we can then extend our design for larger screens.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**始终采用移动优先策略**：必须考虑用户在移动设备上的体验。拥有移动设备或手机的比例高于拥有个人电脑的比例；我们必须确保内容在较小的屏幕上既可见又清晰。一旦我们掌握了这一点，我们就可以将我们的设计扩展到更大的屏幕上。'
- en: '**Understand the need for speed**: A slow site is a real turn off for customers;
    a good guideline to aim for when measuring load times is for around 4–5 seconds.
    There can be many reasons why a site is slow to load, from slow site feeds to
    poorly optimized hardware, but one of the easier to rectify is large images. Make
    sure that you''ve been through all of the media that is loaded, and checked to
    ensure it has been fully optimized for your site.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**理解速度的重要性**：网站加载慢会让顾客失去兴趣；在测量加载时间时，一个良好的指导是大约4-5秒。网站加载慢可能有很多原因，从网站提供源慢到硬件优化不佳，但其中一个较容易纠正的是大型图片。确保您已经检查过所有加载的媒体，并确保它已经完全优化适合您的网站。'
- en: '**Try to keep the site design as clean as possible**: Eliminate anything that
    is not needed to convey your message. It goes without saying, but why use 20 words,
    when we can get our message across in 10?'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽量保持网站设计尽可能简洁：消除任何不必要的东西来传达您的信息。毋庸置疑，但为什么要用20个词，当我们可以在10个词中传达我们的信息呢？
- en: '**Make use of the hamburger icon:** No, I''m not referring to food, irrespective
    of what size it is (sorry, bad joke!). Instead, make use of it as a consistent
    point of access to your site. Be mindful though that users may not want to have
    to keep tapping on it to access everything, so if you have menu items that are
    frequently used more often, then consider exposing these in your site, and hide
    anything less important under the hamburger icon.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用汉堡图标**：不，我不是在指食物，无论大小如何（抱歉，开了个玩笑！）。相反，将其用作访问您的网站的一个一致的访问点。但要注意，用户可能不想一直点击它来访问所有内容，所以如果您有经常使用的菜单项，那么考虑将这些暴露在您的网站上，并将不太重要的内容隐藏在汉堡图标下。'
- en: '**Don''t use small button sizes for anything**: Bear in mind that many users
    will use fingers to tap on icons, so any clickable icons should be large enough
    to allow accurate tapping and reduce any frustration with accidentally tapping
    the wrong link.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不要使用小按钮尺寸**：请记住，许多用户将使用手指点击图标，因此任何可点击的图标都应足够大，以便准确点击，并减少因意外点击错误链接而产生的任何挫败感。'
- en: '**Familiarize yourself with media queries**: As we''ll see later in [Chapter
    4](ch04.html "Chapter 4. Exploring Media Queries"), *Exploring Media Queries*,
    we can use media queries to control how content is displayed under certain conditions
    on different devices. These play a key role in responsive design; it''s up to
    us to get the right mix of queries based on what we need to support!'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**熟悉媒体查询**：正如我们将在[第4章](ch04.html "第4章。探索媒体查询")中看到的，*探索媒体查询*，我们可以使用媒体查询来控制在不同设备上的特定条件下显示内容。这在响应式设计中起着关键作用；我们需要根据我们需要支持的内容来获得正确的查询组合！'
- en: There are plenty more best practices we can follow, but we shouldn't simply
    follow them blindly; apart from the risk of our sites losing any *stand-out* appeal
    (that is, all being the same), not all best practice necessarily applies or is
    even accurate.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以遵循很多最佳实践，但我们不应该盲目地遵循它们；除了我们的网站失去任何*突出*吸引力的风险（即，都是一样的），并非所有最佳实践都适用，甚至准确。
- en: Instead, it is worth researching what others have done online; over time, you
    will begin to see common threads—these are the threads that should form the basis
    for any discussions you may have with regards to the design of your site.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，值得研究其他人在网上所做的事情；随着时间的推移，您将开始看到共同的主题-这些主题应该成为您在设计网站方面进行讨论的基础。
- en: There are some practices we should follow, not necessarily because they are
    best practices, but borne more out of common sense; a great example is touch.
    When we are designing for touch, there are some pointers which we should use that
    will influence our design, so let's take a look at these in more detail.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些实践我们应该遵循，不一定是因为它们是最佳实践，而更多是出于常识；触摸是一个很好的例子。当我们设计触摸时，有一些指针我们应该使用，这些指针将影响我们的设计，所以让我们更详细地看看这些。
- en: Designing for touch
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为触摸设计
- en: Although there are lots of tips and pointers we can use to help improve our
    responsive development, there is one subject that is worth exploring in more detail—touch.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有很多提示和指针可以帮助我们改进响应式开发，但有一个主题值得更详细地探讨-触摸。
- en: 'Why? The answer is simple—working responsively is not just about writing code;
    anyone can write code. The difference though, and that which separates great developers
    from the crowd, is the thought given to how that site looks and works. Care paid
    at this point will separate exceptional sites from the also-rans; to get a feel
    for the kind of decisions and thoughts one might go through, let''s take a look
    at what we might have to consider when designing for touch:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么？答案很简单-响应式工作不仅仅是写代码；任何人都可以写代码。然而，区别在于，以及将网站看起来和工作的方式。在这一点上付出的关怀将把优秀的网站与其他网站区分开来；为了了解一个人可能经历的决策和思考的种类，让我们看看在设计触摸时可能需要考虑的内容：
- en: Aim to use the corners. On small screens, the lower left corner is frequently
    the easiest to access; for tablets, the top corners work better. We must consider
    putting any call to action buttons in these locations, and adapt our designs to
    realign automatically if different devices are used.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标是使用角落。在小屏幕上，左下角通常是最容易访问的；对于平板电脑，上角更好。我们必须考虑将任何呼吁行动按钮放在这些位置，并根据实际情况调整我们的设计以自动重新对齐，如果使用不同的设备。
- en: Don't make the buttons too small. A good guideline for tap targets (including
    buttons) is usually around 44 points (or 3.68rem).
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要使按钮太小。通常，触摸目标（包括按钮）的一个很好的指导是大约44点（或3.68rem）。
- en: Avoid placing items too closely together to prevent someone accessing the wrong
    item by mistake. A good starting point for spacing to avoid interface errors is
    a minimum of 23pt (or 1.92rem).
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免将项目放置得太靠近，以防止某人错误地访问错误的项目。避免界面错误的间距的一个很好的起点是最少23pt（或1.92rem）。
- en: 'Use natural interactions and create navigation that works well with common
    hand gestures, such as swiping. This screenshot shows some of the example hand
    gestures we can use, and that we must allow for when constructing our sites:'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自然的交互，并创建与常见手势良好配合的导航，例如滑动。这个截图显示了我们可以使用的一些示例手势，以及在构建我们的网站时必须考虑的手势：
- en: '![Designing for touch](img/image_01_009.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![为触摸设计](img/image_01_009.jpg)'
- en: 'Source: The Next Web ([*http://www.thenextweb.com*)](http://www.thenextweb.com/)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：The Next Web ([*http://www.thenextweb.com*)](http://www.thenextweb.com/)
- en: Hover stages are a no-no in responsive design—these do not exist. Any calls
    to action should be based around tapping, so make sure your design takes this
    factor into consideration.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 悬停阶段在响应式设计中是不允许的-这些不存在。任何呼吁行动都应该基于轻触，因此确保您的设计考虑到这一因素。
- en: Phew, there are a few things to think of there! The key thing though is that
    while writing code is easy, creating an effective responsive design takes time
    and resources, and should always be a continuous affair, so our designs can stay
    fresh and up to date.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 哦，有一些事情需要考虑！关键是，虽然编写代码很容易，但创建有效的响应式设计需要时间和资源，并且应始终是一个持续的工作，这样我们的设计才能保持新鲜和更新。
- en: It's time for us to move on to a different subject, now that we've explored
    some of the guidelines and tips we can use to help with responsive development,
    it's time for us to consider our workflow. We may already have an established
    one for producing standard sites, making a shift to incorporate responsive design
    may require us making some changes to our processes, so let's go and explore what
    a typical workflow could look like when working with responsive design.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经探讨了一些指导方针和提示，可以帮助我们进行响应式开发，是时候考虑我们的工作流程了。我们可能已经有一个为制作标准网站而建立的工作流程，转向包括响应式设计可能需要我们对流程进行一些更改，所以让我们去探索一下在使用响应式设计时典型工作流程可能是什么样子。
- en: Setting up a development workflow
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 建立开发工作流程
- en: 'Before we start on our workflow, let me ask you a question:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始工作流程之前，让我问你一个问题：
- en: Does your workflow process consist of steps such as planning, creating static
    wireframes, building static designs, adding code then testing, and finally launching
    your site? Sounds familiar?
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 你的工作流程是否包括规划、创建静态线框图、构建静态设计、添加代码然后测试，最后启动你的网站？听起来耳熟吗？
- en: 'If so, then be prepared for a change; using the waterfall process (to which
    these steps align), doesn''t work so well when creating responsive sites; working
    responsively is all about being agile, as illustrated by the developer Viljami
    Salminen from 2012:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 如果是这样，那就做好改变的准备吧；使用瀑布流流程（与这些步骤相一致）在创建响应式网站时效果不佳；响应式工作完全是敏捷的，正如开发者Viljami Salminen在2012年所阐述的那样：
- en: '![Setting up a development workflow](img/image_01_010.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![建立开发工作流程](img/image_01_010.jpg)'
- en: 'Source: Viljami Salminen, 2012'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：Viljami Salminen，2012
- en: 'Although his design dates from 2012, it is still perfectly valid today; before
    you all put your hands up in horror, let me explain why a waterfall process doesn''t
    work for responsive design:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管他的设计可以追溯到2012年，但至今仍然完全有效；在你们都惊恐地举起双手之前，让我解释一下为什么瀑布流的流程对响应式设计不起作用：
- en: We cannot hope to get support for lots of different devices built into our site
    in one go. We must focus on a small viewport first, before gradually enlarging
    it to include support for larger devices and finally desktops.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们不能指望一次性为我们的网站构建到很多不同设备的支持。我们必须首先专注于小视口，然后逐渐扩大以支持更大的设备，最后是桌面设备。
- en: When working responsively, our focus must be on content first, and not the layout;
    the reason for this is that our media queries should be built around where content
    breaks if we change the width of our available viewport. This removes the dependency
    on building for specific devices, and means that we can build queries that can
    serve multiple devices.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在响应式工作时，我们的重点必须首先放在内容上，而不是布局；原因是我们的媒体查询应该围绕着内容在我们可用视口的宽度改变时断裂的位置构建。这消除了对为特定设备构建的依赖，意味着我们可以构建可以为多个设备提供服务的查询。
- en: Our development process needs to be iterative, and focus chiefly on text and
    media before constructing the layout. Throughout the process, we should keep in
    constant contact with our client, as part of each iteration; gone are the days
    of working towards the big reveal! With all of this in mind, let's go through
    Viljami's illustration in more detail.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的开发流程需要是迭代的，主要关注文本和媒体，然后再构建布局。在整个过程中，我们应该与客户保持密切联系，作为每个迭代的一部分；过去那种朝着大揭示的日子已经一去不复返了！考虑到所有这些，让我们更详细地看一下Viljami的插图。
- en: Discovering the requirements
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发现需求
- en: This initial stage is the same for any sites, but is particularly important
    for responsive design, given the different viewport sizes we have to support in
    our site. It's all about getting to know the client and their requirements. We
    must get an understanding of our client's business, their competitors, and what
    they are trying to achieve.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这个初始阶段对于任何网站都是一样的，但对于响应式设计来说尤为重要，因为我们必须支持网站中不同的视口尺寸。这一切都是为了更好地了解客户及其需求。我们必须了解客户的业务，他们的竞争对手，以及他们试图实现的目标。
- en: It's at this point we should be asking questions such as, "Why would people
    come to your site?", "What is the main goal you are trying to achieve?", and "Who
    are your main competitors?" The more we ask, the more we can understand and therefore
    better advise our clients on the best solution to fit their requirements.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们应该问一些问题，比如，“人们为什么会来到你的网站？”，“你试图实现的主要目标是什么？”，“你的主要竞争对手是谁？”我们问得越多，我们就能越多地理解，因此更好地为客户提供建议，以满足他们的需求。
- en: Planning our site
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 规划我们的网站
- en: When we've gathered all of the knowledge needed to construct our site, we now
    need to plan how it will look. We can start with the initial concept, but rather
    than work on the layout as we might have done before, we should concentrate on
    the content elements, and creating user stories and the information architecture.
    We can then put this together in a rudimentary HTML wireframe. At this stage,
    layout is less critical; it's key that we get the right view of information, before
    focusing on where it sits on the page.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们收集到构建我们的网站所需的所有知识后，现在我们需要规划它的外观。我们可以从最初的概念开始，但与其像以前那样专注于布局，我们应该集中精力放在内容元素上，并创建用户故事和信息架构。然后我们可以将这些放在一个基本的HTML线框中。在这个阶段，布局不那么关键；关键是我们在关注页面上的信息位置之前，获得正确的信息视图。
- en: Designing the text
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计文本
- en: At this point, we now need to focus on writing our content in textual form.
    This often under-rated step is probably the most important of the whole process;
    without it, people won't come to see the site, and there is no point in designing
    a layout if we don't know what will fill it! A useful tip is to keep styling to
    a minimum and to concentrate on the content; at least initially, we can see how
    it will display in a long, continuous format, and if it works for those who use
    screen readers. Don't worry though, we can always refine the text during the prototyping
    stage; at this point, we need something to start with, but it will be unlikely
    we get it right first time.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，我们现在需要专注于以文本形式编写我们的内容。这个经常被低估的步骤可能是整个过程中最重要的；没有它，人们就不会来看网站，如果我们不知道将填充其中的内容，设计布局也就没有意义！一个有用的提示是尽量保持样式的最小化，集中精力放在内容上；至少最初，我们可以看到它将以长格式连续显示，并且它是否适用于使用屏幕阅读器的人。不过，不要担心，我们总是可以在原型制作阶段对文本进行完善；在这一点上，我们需要一些东西作为起点，但第一次很难做到完美。
- en: Sketching our design
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 勾画我们的设计
- en: For our next step, forget using PhotoShop; it takes forever and is a real pain
    to make corrections quickly! The agile process is about making quick and easy
    changes and there is no better medium than traditional pen and paper. We can even
    print off the plain text content and sketch around, it if that helps, it will
    save us hours of development time, and can even help reduce those occasions when
    you hit the developer's block of...what now?
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下一步，忘掉使用PhotoShop；它太慢了，而且很难快速进行更正！敏捷过程是关于快速和轻松地进行更改，没有比传统的纸和笔更好的媒介了。我们甚至可以打印出纯文本内容并进行草图，如果有帮助的话，这将为我们节省数小时的开发时间，甚至有助于减少那些你遇到开发者瓶颈时的场合……现在怎么办？
- en: Prototyping and creating our design
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 原型设计和创建
- en: With the design sketched, it's time to create a prototype. This is when we can
    see how the layout will respond to different viewport sizes and allow us to highlight
    any potential challenges, or react to any issues that are reported by our client.
    It's good to be aware of the various breakpoints, but ultimately we should let
    our content determine where these breakpoints should be set in our design.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 设计草图完成后，现在是创建原型的时候了。这时我们可以看到布局如何响应不同的视口大小，并且可以突出任何潜在的挑战，或者对客户报告的任何问题做出反应。了解各种断点是很好的，但最终我们应该让我们的内容决定设计中应该设置这些断点的位置。
- en: We might be used to prototyping our design using PhotoShop, but a better alternative
    is to switch to using a browser. We can use a service such as Proto.io ([https://proto.io/](https://proto.io/))
    or Froont ([http://froont.com/](http://froont.com/)). This gives us extra time
    to get the harder elements right, such as typography; it also helps to remove
    any constraints that we might have with tools such as PhotoShop.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能习惯于使用PhotoShop来制作我们的设计原型，但更好的选择是切换到使用浏览器。我们可以使用Proto.io（[https://proto.io/](https://proto.io/)）或Froont（[http://froont.com/](http://froont.com/)）等服务。这给了我们更多时间来解决更难的元素，比如排版；它还有助于消除我们可能在使用PhotoShop等工具时遇到的任何限制。
- en: Testing our design
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试我们的设计
- en: Although we may still be at a prototype stage, it's important to introduce testing
    early on. The number of breakpoints we may end up having in our design means that
    testing on multiple devices will take time! As an alternative to running a big
    test and reveal, we can instead perform multiple tests and reveals. This has the
    benefit of reducing the impact of any rollbacks (if something doesn't fit requirements),
    but also helps to keep the client involved with the project, as they can see progress
    take place during development.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们可能仍处于原型阶段，但早期引入测试是很重要的。我们设计中可能会有很多断点，这意味着在多个设备上进行测试需要时间！作为一个替代方案，我们可以进行多次测试和揭示，而不是进行一次大规模的测试和揭示。这有助于减少任何回滚的影响（如果某些东西不符合要求），还有助于让客户参与项目，因为他们可以看到开发过程中的进展。
- en: The one thing we absolutely must do is to test over multiple devices. It's an
    expensive proposition to maintain a test suite with these devices, so it's worth
    asking colleagues, friends, and family to see if they can help test for you. They
    can at least browse the site and help pinpoint where things *don't look right*
    (to use customer parlance). It's up to us to work out where the root cause is,
    and implement a fix to help improve the user experience.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们绝对必须做的一件事是在多个设备上进行测试。维护这些设备的测试套件是一项昂贵的工作，所以值得向同事、朋友和家人询问是否可以帮助进行测试。他们至少可以浏览网站，并帮助确定哪些地方“看起来不对”（用客户的说法）。我们需要找出根本原因，并实施修复以改善用户体验。
- en: Exploring mistakes
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索错误
- en: 'With the best will in the world, we are only human; there will be times when
    we make a mistake! As the playwright Oscar Wilde once said, `"...to err once is
    human, to err twice is careless."` Well, in the hope that we don''t go that far,
    there are some common errors that are regularly made when working responsively;
    let''s take a look at the top five candidates:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们尽了最大努力，但我们只是人类；有时会犯错！正如剧作家奥斯卡·王尔德曾经说过，“……犯错一次是人性，犯错两次就是粗心大意。”希望我们不会犯错到那个地步，但在响应式工作中经常会犯一些常见的错误；让我们来看看前五名候选人：
- en: '**Failing to allow for touch input**: It might seem odd, but failing to allow
    for touch is surprisingly common! Some users expect a site to *simply work*, and
    to have a consistent approach across the board both for desktops and mobiles.
    This will include any mechanism for activating links (such as buttons). What might
    work on a desktop client will very likely fail on a mobile device. It is absolutely
    key that we include something to allow mobile users to navigate around a site
    using touch. This can be achieved (in the main) with CSS3 styling, so there is
    no excuse!'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**未考虑触摸输入**：这可能看起来很奇怪，但未考虑触摸输入是非常常见的！一些用户希望网站“简单地工作”，并且在桌面和移动设备上都有一致的方法。这将包括任何激活链接的机制（如按钮）。在桌面客户端上可能有效的东西，在移动设备上很可能会失败。我们绝对必须包含一些东西，以允许移动用户使用触摸在网站上导航。这可以（主要）通过CSS3样式来实现，所以没有借口！'
- en: '**Insisting on a consistent navigation**: A part of creating a successful site
    will be to have some form of navigation that retains a consistent look and feel
    across all pages; it does not mean to say that we have to carry this over to mobile
    devices though! Navigation on a mobile device will of course act differently;
    we have the added extra of touch input to cater for, as part of our design. At
    an absolute minimum, links and buttons, along with our choice of typeface and
    colors should remain consistent; the size of buttons, our visual layout, and how
    we click on buttons can change.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**坚持一致的导航**：创建成功的网站的一部分将是拥有一些保持在所有页面上一致外观和感觉的导航；但这并不意味着我们必须将这一点延续到移动设备上！移动设备上的导航当然会有不同的作用；我们还有额外的触摸输入要考虑，作为我们设计的一部分。至少，链接和按钮，以及我们选择的字体和颜色应该保持一致；按钮的大小，我们的视觉布局，以及我们点击按钮的方式可能会改变。'
- en: '**Building in links to non-mobile friendly content**: How many times have you
    accessed content via a mobile device, only to find it is a huge image or substantial
    document that has to be downloaded? I''ll bet that this irked you. Make sure your
    content is suitable for downloading on different devices. On a broadband connection
    for a desktop, we might think nothing of using 100Kb images; try loading these
    over a 3G connection, and it is easy to see why we need to reconsider what we''ve
    previously used on standard broadband connections.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**建立与非移动友好内容的链接**：你有多少次通过移动设备访问内容，结果发现是一个巨大的图片或大量的文件需要下载？我敢打赌这让你恼火。确保你的内容适合在不同设备上下载。在桌面宽带连接上，我们可能不会在意使用100Kb的图片；但在3G连接上加载这些图片，很容易看出为什么我们需要重新考虑我们之前在标准宽带连接上使用的内容。'
- en: '**Ignoring performance**: In an age of modern broadband connections, it is
    easy to be complacent about what is made available for download. If we think desktop
    first, then we will be building ourselves a real problem when it comes to designing
    our mobile site! We can''t compress a desktop environment into a mobile experience—it
    won''t be efficient, will offer poor user experience, and ultimately lead to a
    drop in conversions in sales. To avoid issues with performance, we should aim
    to use a minimalistic or *mobile-first* approach, as the basis for our site designs.'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**忽视性能**：在现代宽带连接的时代，我们很容易对可供下载的内容变得自满。如果我们首先考虑桌面，那么在设计我们的移动网站时就会给自己制造一个真正的问题！我们不能将桌面环境压缩成移动体验——这不会高效，会提供糟糕的用户体验，并最终导致销售转化率下降。为了避免性能问题，我们应该以极简或*移动优先*的方式作为我们网站设计的基础。'
- en: '**Testing**: A common error to make is not sufficiently testing our solutions
    on multiple devices, running them prior to release will uncover any UX issues
    that need to be resolved before making our solution available for general use.
    A sticking point is likely to be the question of how many devices we test for.
    If we have access to analytics for an existing desktop version of the site, then
    this should give us a starting point we can use to double check our design is
    working as expected. Failing this, we can make use of device emulators in browsers
    to run some basic checks. We can also use online testing services, such as MobileTest.me
    ([http://mobiletest.me](http://mobiletest.me)), to ensure our design is working
    sufficiently to release for wider use.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试**：一个常见的错误是我们没有充分地在多个设备上测试我们的解决方案，在发布之前运行它们将揭示任何需要在我们的解决方案可供普遍使用之前解决的用户体验问题。一个难点可能是我们要测试多少设备的问题。如果我们可以访问网站现有桌面版本的分析数据，那么这应该给我们一个起点，我们可以用来双重检查我们的设计是否按预期工作。如果没有，我们可以利用浏览器中的设备模拟器进行一些基本检查。我们还可以使用在线测试服务，比如MobileTest.me
    ([http://mobiletest.me](http://mobiletest.me))，以确保我们的设计足够地适合更广泛的使用。'
- en: These common issues can easily be solved with some simple changes to our development
    workflow process, building at least some of these steps to avoid the grief we
    may get from these errors, early on, will save a lot of heartache later during
    development!
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这些常见问题可以通过对我们的开发工作流程进行一些简单的更改来轻松解决，至少在一开始就避免这些错误，将会在开发过程中节省很多烦恼！
- en: Summary
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: The philosophy that is RWD opens up lots of opportunities for us as designers.
    With the advent of mobile and other internet-capable devices, it is important
    to not only make the switch, but also understand how to get it right. We've covered
    a number of useful topics around RWD, so let's take a moment to reflect on what
    you've learned in this chapter.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: RWD的理念为我们作为设计师开辟了许多机会。随着移动和其他互联网设备的出现，重要的不仅是转变，还要了解如何做到正确。我们已经涵盖了关于RWD的许多有用的主题，所以让我们花一点时间来反思一下你在本章学到了什么。
- en: We kicked off with a gentle introduction to RWD, before exploring the basic
    principles behind making our sites responsive and understanding some of the key
    elements that make up RWD.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们以对RWD的温和介绍开始，然后探讨了使我们的网站响应式的基本原则，并理解了组成RWD的一些关键元素。
- en: We then moved on to explore the importance of RWD as a set of guiding principles
    we can follow; we explored how this compares to adaptive design, and that while
    responsive design can be harder to implement, it is worth the effort over time.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们继续探讨了RWD作为一套我们可以遵循的指导原则的重要性；我们探讨了这与自适应设计的比较，以及响应式设计可能更难实施，但随着时间的推移是值得的努力。
- en: Next up came a look at strategy—we covered the importance of getting this right,
    along with the different elements that should be considered when making the move
    toward working responsively. We took a look at some of the best practices that
    we can follow and called out designing for touch as a key part of these guidelines,
    to illustrate some of the decisions we need to make during development.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来我们来看一下策略——我们涵盖了正确理解的重要性，以及在朝着响应式工作的过程中应该考虑的不同元素。我们看了一些我们可以遵循的最佳实践，并强调了为触摸设计是这些准则的一个关键部分，以阐明我们在开发过程中需要做出的一些决定。
- en: We then rounded out the chapter with an extensive look at creating a development
    workflow. We explored how we may have to make changes to our existing processes,
    and some of the topics that have to be incorporated into our development, before
    discussing some of the points where we might trip us up, if we don't take care
    over our designs!
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们用一个广泛的视角来结束这一章，创建一个开发工作流程。我们探讨了我们可能需要对现有流程进行更改，以及必须纳入我们的开发的一些主题，然后讨论了一些可能会让我们失误的地方！
- en: Phew, there's a lot of detail there! The great thing though is that we've covered
    a lot of the strategic considerations we need to make; it's time to put some of
    this into practice and start building content and layouts. Let's move on and start
    looking at how we can build flexible grid layouts. This will be the subject of
    the next chapter in our journey.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 哇，这里有很多细节！不过好在我们已经涵盖了许多我们需要考虑的战略问题；现在是时候将其中一些付诸实践，开始建立内容和布局了。让我们继续，开始看看我们如何构建灵活的网格布局。这将是我们旅程中下一章的主题。
